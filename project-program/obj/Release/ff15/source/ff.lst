                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module ff
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _get_fattime
                                     12 	.globl _disk_ioctl
                                     13 	.globl _disk_write
                                     14 	.globl _disk_read
                                     15 	.globl _disk_status
                                     16 	.globl _disk_initialize
                                     17 	.globl ___memcpy
                                     18 	.globl _memset
                                     19 	.globl _strchr
                                     20 	.globl _memcmp
                                     21 	.globl _f_rename_PARM_2
                                     22 	.globl _f_getfree_PARM_3
                                     23 	.globl _f_getfree_PARM_2
                                     24 	.globl _f_stat_PARM_2
                                     25 	.globl _f_readdir_PARM_2
                                     26 	.globl _f_opendir_PARM_2
                                     27 	.globl _f_lseek_PARM_2
                                     28 	.globl _f_write_PARM_4
                                     29 	.globl _f_write_PARM_3
                                     30 	.globl _f_write_PARM_2
                                     31 	.globl _f_read_PARM_4
                                     32 	.globl _f_read_PARM_3
                                     33 	.globl _f_read_PARM_2
                                     34 	.globl _f_open_PARM_3
                                     35 	.globl _f_open_PARM_2
                                     36 	.globl _f_mount_PARM_3
                                     37 	.globl _f_mount_PARM_2
                                     38 	.globl _f_mount
                                     39 	.globl _f_open
                                     40 	.globl _f_read
                                     41 	.globl _f_write
                                     42 	.globl _f_sync
                                     43 	.globl _f_close
                                     44 	.globl _f_lseek
                                     45 	.globl _f_opendir
                                     46 	.globl _f_closedir
                                     47 	.globl _f_readdir
                                     48 	.globl _f_stat
                                     49 	.globl _f_getfree
                                     50 	.globl _f_truncate
                                     51 	.globl _f_unlink
                                     52 	.globl _f_mkdir
                                     53 	.globl _f_rename
                                     54 ;--------------------------------------------------------
                                     55 ; special function registers
                                     56 ;--------------------------------------------------------
                                     57 	.area RSEG    (ABS,DATA)
      000000                         58 	.org 0x0000
                                     59 ;--------------------------------------------------------
                                     60 ; special function bits
                                     61 ;--------------------------------------------------------
                                     62 	.area RSEG    (ABS,DATA)
      000000                         63 	.org 0x0000
                                     64 ;--------------------------------------------------------
                                     65 ; overlayable register banks
                                     66 ;--------------------------------------------------------
                                     67 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         68 	.ds 8
                                     69 ;--------------------------------------------------------
                                     70 ; internal ram data
                                     71 ;--------------------------------------------------------
                                     72 	.area DSEG    (DATA)
      000000                         73 _sync_window_sloc0_1_0:
      000000                         74 	.ds 3
      000003                         75 _sync_window_sloc1_1_0:
      000003                         76 	.ds 3
      000006                         77 _sync_window_sloc2_1_0:
      000006                         78 	.ds 1
      000007                         79 _sync_window_sloc3_1_0:
      000007                         80 	.ds 3
      00000A                         81 _sync_window_sloc4_1_0:
      00000A                         82 	.ds 4
      00000E                         83 _sync_window_sloc5_1_0:
      00000E                         84 	.ds 4
      000012                         85 _move_window_sloc0_1_0:
      000012                         86 	.ds 4
      000016                         87 _sync_fs_sloc0_1_0:
      000016                         88 	.ds 3
      000019                         89 _sync_fs_sloc1_1_0:
      000019                         90 	.ds 3
      00001C                         91 _sync_fs_sloc2_1_0:
      00001C                         92 	.ds 4
      000020                         93 _clst2sect_sloc0_1_0:
      000020                         94 	.ds 4
      000024                         95 _get_fat_sloc0_1_0:
      000024                         96 	.ds 4
      000028                         97 _get_fat_sloc1_1_0:
      000028                         98 	.ds 2
      00002A                         99 _get_fat_sloc2_1_0:
      00002A                        100 	.ds 4
      00002E                        101 _get_fat_sloc3_1_0:
      00002E                        102 	.ds 2
      000030                        103 _get_fat_sloc4_1_0:
      000030                        104 	.ds 4
      000034                        105 _put_fat_sloc0_1_0:
      000034                        106 	.ds 3
      000037                        107 _put_fat_sloc1_1_0:
      000037                        108 	.ds 4
      00003B                        109 _put_fat_sloc2_1_0:
      00003B                        110 	.ds 2
      00003D                        111 _put_fat_sloc3_1_0:
      00003D                        112 	.ds 3
      000040                        113 _put_fat_sloc4_1_0:
      000040                        114 	.ds 4
      000044                        115 _remove_chain_sloc0_1_0:
      000044                        116 	.ds 4
      000048                        117 _remove_chain_sloc1_1_0:
      000048                        118 	.ds 4
      00004C                        119 _remove_chain_sloc2_1_0:
      00004C                        120 	.ds 4
      000050                        121 _create_chain_sloc0_1_0:
      000050                        122 	.ds 4
      000054                        123 _create_chain_sloc1_1_0:
      000054                        124 	.ds 3
      000057                        125 _create_chain_sloc2_1_0:
      000057                        126 	.ds 4
      00005B                        127 _create_chain_sloc3_1_0:
      00005B                        128 	.ds 4
      00005F                        129 _create_chain_sloc4_1_0:
      00005F                        130 	.ds 4
      000063                        131 _dir_clear_sloc0_1_0:
      000063                        132 	.ds 3
      000066                        133 _dir_clear_sloc1_1_0:
      000066                        134 	.ds 3
      000069                        135 _dir_clear_sloc2_1_0:
      000069                        136 	.ds 2
      00006B                        137 _dir_clear_sloc3_1_0:
      00006B                        138 	.ds 3
      00006E                        139 _dir_clear_sloc4_1_0:
      00006E                        140 	.ds 1
      00006F                        141 _dir_sdi_sloc0_1_0:
      00006F                        142 	.ds 4
      000073                        143 _dir_sdi_sloc1_1_0:
      000073                        144 	.ds 4
      000077                        145 _dir_sdi_sloc2_1_0:
      000077                        146 	.ds 3
      00007A                        147 _dir_sdi_sloc3_1_0:
      00007A                        148 	.ds 4
      00007E                        149 _dir_next_sloc0_1_0:
      00007E                        150 	.ds 3
      000081                        151 _dir_next_sloc1_1_0:
      000081                        152 	.ds 4
      000085                        153 _dir_next_sloc2_1_0:
      000085                        154 	.ds 4
      000089                        155 _dir_next_sloc3_1_0:
      000089                        156 	.ds 4
      00008D                        157 _dir_next_sloc4_1_0:
      00008D                        158 	.ds 3
      000090                        159 _dir_next_sloc5_1_0:
      000090                        160 	.ds 4
      000094                        161 _dir_alloc_sloc0_1_0:
      000094                        162 	.ds 3
      000097                        163 _dir_alloc_sloc1_1_0:
      000097                        164 	.ds 3
      00009A                        165 _ld_clust_sloc0_1_0:
      00009A                        166 	.ds 3
      00009D                        167 _st_clust_sloc0_1_0:
      00009D                        168 	.ds 4
      0000A1                        169 _dir_read_sloc0_1_0:
      0000A1                        170 	.ds 3
      0000A4                        171 _dir_read_sloc1_1_0:
      0000A4                        172 	.ds 4
      0000A8                        173 _dir_read_sloc2_1_0:
      0000A8                        174 	.ds 2
      0000AA                        175 _dir_read_sloc3_1_0:
      0000AA                        176 	.ds 1
      0000AB                        177 _dir_read_sloc4_1_0:
      0000AB                        178 	.ds 3
      0000AE                        179 _dir_find_sloc0_1_0:
      0000AE                        180 	.ds 3
      0000B1                        181 _dir_find_sloc1_1_0:
      0000B1                        182 	.ds 3
      0000B4                        183 _dir_find_sloc2_1_0:
      0000B4                        184 	.ds 3
      0000B7                        185 _dir_find_sloc3_1_0:
      0000B7                        186 	.ds 3
      0000BA                        187 _dir_register_sloc0_1_0:
      0000BA                        188 	.ds 3
      0000BD                        189 _dir_register_sloc1_1_0:
      0000BD                        190 	.ds 3
      0000C0                        191 _dir_remove_sloc0_1_0:
      0000C0                        192 	.ds 3
      0000C3                        193 _get_fileinfo_sloc0_1_0:
      0000C3                        194 	.ds 3
      0000C6                        195 _get_fileinfo_sloc1_1_0:
      0000C6                        196 	.ds 3
      0000C9                        197 _get_fileinfo_sloc2_1_0:
      0000C9                        198 	.ds 1
      0000CA                        199 _get_fileinfo_sloc3_1_0:
      0000CA                        200 	.ds 3
      0000CD                        201 _create_name_sloc0_1_0:
      0000CD                        202 	.ds 3
      0000D0                        203 _create_name_sloc1_1_0:
      0000D0                        204 	.ds 3
      0000D3                        205 _create_name_sloc2_1_0:
      0000D3                        206 	.ds 1
      0000D4                        207 _create_name_sloc3_1_0:
      0000D4                        208 	.ds 2
      0000D6                        209 _create_name_sloc4_1_0:
      0000D6                        210 	.ds 3
      0000D9                        211 _follow_path_sloc0_1_0:
      0000D9                        212 	.ds 3
      0000DC                        213 _follow_path_sloc1_1_0:
      0000DC                        214 	.ds 3
      0000DF                        215 _check_fs_sloc0_1_0:
      0000DF                        216 	.ds 1
      0000E0                        217 _check_fs_sloc1_1_0:
      0000E0                        218 	.ds 2
      0000E2                        219 _find_volume_sloc0_1_0:
      0000E2                        220 	.ds 2
      0000E4                        221 _find_volume_sloc1_1_0:
      0000E4                        222 	.ds 3
      0000E7                        223 _find_volume_sloc2_1_0:
      0000E7                        224 	.ds 4
      0000EB                        225 _mount_volume_sloc0_1_0:
      0000EB                        226 	.ds 4
      0000EF                        227 _mount_volume_sloc1_1_0:
      0000EF                        228 	.ds 3
      0000F2                        229 _mount_volume_sloc2_1_0:
      0000F2                        230 	.ds 3
      0000F5                        231 _mount_volume_sloc3_1_0:
      0000F5                        232 	.ds 3
      0000F8                        233 _mount_volume_sloc4_1_0:
      0000F8                        234 	.ds 4
      0000FC                        235 _mount_volume_sloc5_1_0:
      0000FC                        236 	.ds 4
      000100                        237 _mount_volume_sloc6_1_0:
      000100                        238 	.ds 4
      000104                        239 _mount_volume_sloc7_1_0:
      000104                        240 	.ds 3
      000107                        241 _f_open_sloc0_1_0:
      000107                        242 	.ds 3
      00010A                        243 _f_open_sloc1_1_0:
      00010A                        244 	.ds 4
      00010E                        245 _f_open_sloc2_1_0:
      00010E                        246 	.ds 3
      000111                        247 _f_open_sloc3_1_0:
      000111                        248 	.ds 4
      000115                        249 _f_read_sloc0_1_0:
      000115                        250 	.ds 4
      000119                        251 _f_read_sloc1_1_0:
      000119                        252 	.ds 3
      00011C                        253 _f_read_sloc2_1_0:
      00011C                        254 	.ds 3
      00011F                        255 _f_read_sloc3_1_0:
      00011F                        256 	.ds 3
      000122                        257 _f_read_sloc4_1_0:
      000122                        258 	.ds 3
      000125                        259 _f_read_sloc5_1_0:
      000125                        260 	.ds 3
      000128                        261 _f_read_sloc6_1_0:
      000128                        262 	.ds 3
      00012B                        263 _f_read_sloc7_1_0:
      00012B                        264 	.ds 3
      00012E                        265 _f_read_sloc8_1_0:
      00012E                        266 	.ds 3
      000131                        267 _f_read_sloc9_1_0:
      000131                        268 	.ds 4
      000135                        269 _f_read_sloc10_1_0:
      000135                        270 	.ds 4
      000139                        271 _f_read_sloc11_1_0:
      000139                        272 	.ds 3
      00013C                        273 _f_read_sloc12_1_0:
      00013C                        274 	.ds 2
      00013E                        275 _f_read_sloc13_1_0:
      00013E                        276 	.ds 4
      000142                        277 _f_write_sloc0_1_0:
      000142                        278 	.ds 3
      000145                        279 _f_write_sloc1_1_0:
      000145                        280 	.ds 3
      000148                        281 _f_write_sloc2_1_0:
      000148                        282 	.ds 3
      00014B                        283 _f_write_sloc3_1_0:
      00014B                        284 	.ds 3
      00014E                        285 _f_write_sloc4_1_0:
      00014E                        286 	.ds 3
      000151                        287 _f_write_sloc5_1_0:
      000151                        288 	.ds 3
      000154                        289 _f_write_sloc6_1_0:
      000154                        290 	.ds 3
      000157                        291 _f_write_sloc7_1_0:
      000157                        292 	.ds 3
      00015A                        293 _f_write_sloc8_1_0:
      00015A                        294 	.ds 3
      00015D                        295 _f_write_sloc9_1_0:
      00015D                        296 	.ds 3
      000160                        297 _f_write_sloc10_1_0:
      000160                        298 	.ds 4
      000164                        299 _f_write_sloc11_1_0:
      000164                        300 	.ds 3
      000167                        301 _f_write_sloc12_1_0:
      000167                        302 	.ds 1
      000168                        303 _f_write_sloc13_1_0:
      000168                        304 	.ds 3
      00016B                        305 _f_write_sloc14_1_0:
      00016B                        306 	.ds 2
      00016D                        307 _f_write_sloc15_1_0:
      00016D                        308 	.ds 4
      000171                        309 _f_write_sloc16_1_0:
      000171                        310 	.ds 4
      000175                        311 _f_write_sloc17_1_0:
      000175                        312 	.ds 3
      000178                        313 _f_sync_sloc0_1_0:
      000178                        314 	.ds 3
      00017B                        315 _f_sync_sloc1_1_0:
      00017B                        316 	.ds 3
      00017E                        317 _f_sync_sloc2_1_0:
      00017E                        318 	.ds 4
      000182                        319 _f_lseek_sloc0_1_0:
      000182                        320 	.ds 3
      000185                        321 _f_lseek_sloc1_1_0:
      000185                        322 	.ds 4
      000189                        323 _f_lseek_sloc2_1_0:
      000189                        324 	.ds 4
      00018D                        325 _f_lseek_sloc3_1_0:
      00018D                        326 	.ds 4
      000191                        327 _f_lseek_sloc4_1_0:
      000191                        328 	.ds 4
      000195                        329 _f_opendir_sloc0_1_0:
      000195                        330 	.ds 3
      000198                        331 _f_getfree_sloc0_1_0:
      000198                        332 	.ds 4
      00019C                        333 _f_getfree_sloc1_1_0:
      00019C                        334 	.ds 4
      0001A0                        335 _f_getfree_sloc2_1_0:
      0001A0                        336 	.ds 4
      0001A4                        337 _f_getfree_sloc3_1_0:
      0001A4                        338 	.ds 3
      0001A7                        339 _f_truncate_sloc0_1_0:
      0001A7                        340 	.ds 4
      0001AB                        341 _f_mkdir_sloc0_1_0:
      0001AB                        342 	.ds 4
      0001AF                        343 _f_mkdir_sloc1_1_0:
      0001AF                        344 	.ds 1
      0001B0                        345 _f_rename_sloc0_1_0:
      0001B0                        346 	.ds 3
                                    347 ;--------------------------------------------------------
                                    348 ; overlayable items in internal ram
                                    349 ;--------------------------------------------------------
                                    350 	.area	OSEG    (OVR,DATA)
      000000                        351 _ld_dword_sloc0_1_0:
      000000                        352 	.ds 4
                                    353 ;--------------------------------------------------------
                                    354 ; indirectly addressable internal ram data
                                    355 ;--------------------------------------------------------
                                    356 	.area ISEG    (DATA)
                                    357 ;--------------------------------------------------------
                                    358 ; absolute internal ram data
                                    359 ;--------------------------------------------------------
                                    360 	.area IABS    (ABS,DATA)
                                    361 	.area IABS    (ABS,DATA)
                                    362 ;--------------------------------------------------------
                                    363 ; bit data
                                    364 ;--------------------------------------------------------
                                    365 	.area BSEG    (BIT)
      000000                        366 _create_name_sloc5_1_0:
      000000                        367 	.ds 1
                                    368 ;--------------------------------------------------------
                                    369 ; paged external ram data
                                    370 ;--------------------------------------------------------
                                    371 	.area PSEG    (PAG,XDATA)
                                    372 ;--------------------------------------------------------
                                    373 ; external ram data
                                    374 ;--------------------------------------------------------
                                    375 	.area XSEG    (XDATA)
      000000                        376 _FatFs:
      000000                        377 	.ds 3
      000003                        378 _Fsid:
      000003                        379 	.ds 2
      000005                        380 _ld_word_ptr_65536_73:
      000005                        381 	.ds 3
      000008                        382 _ld_dword_ptr_65536_75:
      000008                        383 	.ds 3
      00000B                        384 _st_word_PARM_2:
      00000B                        385 	.ds 2
      00000D                        386 _st_word_ptr_65536_77:
      00000D                        387 	.ds 3
      000010                        388 _st_dword_PARM_2:
      000010                        389 	.ds 4
      000014                        390 _st_dword_ptr_65536_79:
      000014                        391 	.ds 3
      000017                        392 _dbc_1st_c_65536_81:
      000017                        393 	.ds 1
      000018                        394 _dbc_2nd_c_65536_84:
      000018                        395 	.ds 1
      000019                        396 _sync_window_fs_65536_87:
      000019                        397 	.ds 3
      00001C                        398 _sync_window_res_65536_88:
      00001C                        399 	.ds 1
      00001D                        400 _move_window_PARM_2:
      00001D                        401 	.ds 4
      000021                        402 _move_window_fs_65536_93:
      000021                        403 	.ds 3
      000024                        404 _move_window_res_65536_94:
      000024                        405 	.ds 1
      000025                        406 _sync_fs_fs_65536_98:
      000025                        407 	.ds 3
      000028                        408 _sync_fs_res_65536_99:
      000028                        409 	.ds 1
      000029                        410 _clst2sect_PARM_2:
      000029                        411 	.ds 4
      00002D                        412 _clst2sect_fs_65536_102:
      00002D                        413 	.ds 3
      000030                        414 _get_fat_PARM_2:
      000030                        415 	.ds 4
      000034                        416 _get_fat_obj_65536_104:
      000034                        417 	.ds 3
      000037                        418 _get_fat_val_65536_105:
      000037                        419 	.ds 4
      00003B                        420 _put_fat_PARM_2:
      00003B                        421 	.ds 4
      00003F                        422 _put_fat_PARM_3:
      00003F                        423 	.ds 4
      000043                        424 _put_fat_fs_65536_109:
      000043                        425 	.ds 3
      000046                        426 _put_fat_res_65536_110:
      000046                        427 	.ds 1
      000047                        428 _remove_chain_PARM_2:
      000047                        429 	.ds 4
      00004B                        430 _remove_chain_PARM_3:
      00004B                        431 	.ds 4
      00004F                        432 _remove_chain_obj_65536_114:
      00004F                        433 	.ds 3
      000052                        434 _create_chain_PARM_2:
      000052                        435 	.ds 4
      000056                        436 _create_chain_obj_65536_120:
      000056                        437 	.ds 3
      000059                        438 _create_chain_ncl_65536_121:
      000059                        439 	.ds 4
      00005D                        440 _create_chain_scl_65536_121:
      00005D                        441 	.ds 4
      000061                        442 _create_chain_res_65536_121:
      000061                        443 	.ds 1
      000062                        444 _dir_clear_PARM_2:
      000062                        445 	.ds 4
      000066                        446 _dir_clear_fs_65536_134:
      000066                        447 	.ds 3
      000069                        448 _dir_sdi_PARM_2:
      000069                        449 	.ds 4
      00006D                        450 _dir_sdi_dp_65536_138:
      00006D                        451 	.ds 3
      000070                        452 _dir_sdi_clst_65536_139:
      000070                        453 	.ds 4
      000074                        454 _dir_next_PARM_2:
      000074                        455 	.ds 2
      000076                        456 _dir_next_dp_65536_145:
      000076                        457 	.ds 3
      000079                        458 _dir_next_clst_65536_146:
      000079                        459 	.ds 4
      00007D                        460 _dir_alloc_PARM_2:
      00007D                        461 	.ds 2
      00007F                        462 _dir_alloc_dp_65536_154:
      00007F                        463 	.ds 3
      000082                        464 _dir_alloc_res_65536_155:
      000082                        465 	.ds 1
      000083                        466 _dir_alloc_n_65536_155:
      000083                        467 	.ds 2
      000085                        468 _ld_clust_PARM_2:
      000085                        469 	.ds 3
      000088                        470 _ld_clust_fs_65536_160:
      000088                        471 	.ds 3
      00008B                        472 _ld_clust_cl_65536_161:
      00008B                        473 	.ds 4
      00008F                        474 _st_clust_PARM_2:
      00008F                        475 	.ds 3
      000092                        476 _st_clust_PARM_3:
      000092                        477 	.ds 4
      000096                        478 _st_clust_fs_65536_163:
      000096                        479 	.ds 3
      000099                        480 _dir_read_PARM_2:
      000099                        481 	.ds 2
      00009B                        482 _dir_read_dp_65536_166:
      00009B                        483 	.ds 3
      00009E                        484 _dir_read_res_65536_167:
      00009E                        485 	.ds 1
      00009F                        486 _dir_find_dp_65536_172:
      00009F                        487 	.ds 3
      0000A2                        488 _dir_find_res_65536_173:
      0000A2                        489 	.ds 1
      0000A3                        490 _dir_register_dp_65536_176:
      0000A3                        491 	.ds 3
      0000A6                        492 _dir_register_res_65536_177:
      0000A6                        493 	.ds 1
      0000A7                        494 _dir_remove_dp_65536_180:
      0000A7                        495 	.ds 3
      0000AA                        496 _get_fileinfo_PARM_2:
      0000AA                        497 	.ds 3
      0000AD                        498 _get_fileinfo_dp_65536_183:
      0000AD                        499 	.ds 3
      0000B0                        500 _get_fileinfo_di_65536_184:
      0000B0                        501 	.ds 2
      0000B2                        502 _get_fileinfo_c_65536_184:
      0000B2                        503 	.ds 1
      0000B3                        504 _create_name_PARM_2:
      0000B3                        505 	.ds 3
      0000B6                        506 _create_name_dp_65536_186:
      0000B6                        507 	.ds 3
      0000B9                        508 _create_name_c_65536_187:
      0000B9                        509 	.ds 1
      0000BA                        510 _create_name_ni_65536_187:
      0000BA                        511 	.ds 2
      0000BC                        512 _create_name_si_65536_187:
      0000BC                        513 	.ds 2
      0000BE                        514 _create_name_i_65536_187:
      0000BE                        515 	.ds 2
      0000C0                        516 _follow_path_PARM_2:
      0000C0                        517 	.ds 3
      0000C3                        518 _follow_path_dp_65536_194:
      0000C3                        519 	.ds 3
      0000C6                        520 _follow_path_res_65536_195:
      0000C6                        521 	.ds 1
      0000C7                        522 _get_ldnumber_path_65536_207:
      0000C7                        523 	.ds 3
      0000CA                        524 _get_ldnumber_i_65536_208:
      0000CA                        525 	.ds 2
      0000CC                        526 _get_ldnumber_vol_65536_208:
      0000CC                        527 	.ds 2
      0000CE                        528 _check_fs_PARM_2:
      0000CE                        529 	.ds 4
      0000D2                        530 _check_fs_fs_65536_213:
      0000D2                        531 	.ds 3
      0000D5                        532 _find_volume_PARM_2:
      0000D5                        533 	.ds 2
      0000D7                        534 _find_volume_fs_65536_218:
      0000D7                        535 	.ds 3
      0000DA                        536 _find_volume_mbr_pt_65536_219:
      0000DA                        537 	.ds 16
      0000EA                        538 _mount_volume_PARM_2:
      0000EA                        539 	.ds 3
      0000ED                        540 _mount_volume_PARM_3:
      0000ED                        541 	.ds 1
      0000EE                        542 _mount_volume_path_65536_223:
      0000EE                        543 	.ds 3
      0000F1                        544 _mount_volume_tsect_65536_224:
      0000F1                        545 	.ds 4
      0000F5                        546 _mount_volume_fasize_65536_224:
      0000F5                        547 	.ds 4
      0000F9                        548 _mount_volume_szbfat_65536_224:
      0000F9                        549 	.ds 4
      0000FD                        550 _mount_volume_fmt_65536_224:
      0000FD                        551 	.ds 2
      0000FF                        552 _validate_PARM_2:
      0000FF                        553 	.ds 3
      000102                        554 _validate_obj_65536_235:
      000102                        555 	.ds 3
      000105                        556 _validate_res_65536_236:
      000105                        557 	.ds 1
      000106                        558 _f_mount_PARM_2:
      000106                        559 	.ds 3
      000109                        560 _f_mount_PARM_3:
      000109                        561 	.ds 1
      00010A                        562 _f_mount_fs_65536_239:
      00010A                        563 	.ds 3
      00010D                        564 _f_mount_rp_65536_240:
      00010D                        565 	.ds 3
      000110                        566 _f_open_PARM_2:
      000110                        567 	.ds 3
      000113                        568 _f_open_PARM_3:
      000113                        569 	.ds 1
      000114                        570 _f_open_fp_65536_243:
      000114                        571 	.ds 3
      000117                        572 _f_open_res_65536_244:
      000117                        573 	.ds 1
      000118                        574 _f_open_dj_65536_244:
      000118                        575 	.ds 42
      000142                        576 _f_open_fs_65536_244:
      000142                        577 	.ds 3
      000145                        578 _f_open_clst_65536_244:
      000145                        579 	.ds 4
      000149                        580 _f_open_sc_65536_244:
      000149                        581 	.ds 4
      00014D                        582 _f_open_ofs_65536_244:
      00014D                        583 	.ds 4
      000151                        584 _f_read_PARM_2:
      000151                        585 	.ds 3
      000154                        586 _f_read_PARM_3:
      000154                        587 	.ds 2
      000156                        588 _f_read_PARM_4:
      000156                        589 	.ds 3
      000159                        590 _f_read_fp_65536_272:
      000159                        591 	.ds 3
      00015C                        592 _f_read_res_65536_273:
      00015C                        593 	.ds 1
      00015D                        594 _f_read_fs_65536_273:
      00015D                        595 	.ds 3
      000160                        596 _f_read_clst_65536_273:
      000160                        597 	.ds 4
      000164                        598 _f_read_rcnt_65536_273:
      000164                        599 	.ds 2
      000166                        600 _f_read_cc_65536_273:
      000166                        601 	.ds 2
      000168                        602 _f_read_csect_65536_273:
      000168                        603 	.ds 2
      00016A                        604 _f_read_rbuff_65536_273:
      00016A                        605 	.ds 3
      00016D                        606 _f_write_PARM_2:
      00016D                        607 	.ds 3
      000170                        608 _f_write_PARM_3:
      000170                        609 	.ds 2
      000172                        610 _f_write_PARM_4:
      000172                        611 	.ds 3
      000175                        612 _f_write_fp_65536_292:
      000175                        613 	.ds 3
      000178                        614 _f_write_res_65536_293:
      000178                        615 	.ds 1
      000179                        616 _f_write_fs_65536_293:
      000179                        617 	.ds 3
      00017C                        618 _f_write_clst_65536_293:
      00017C                        619 	.ds 4
      000180                        620 _f_write_wcnt_65536_293:
      000180                        621 	.ds 2
      000182                        622 _f_write_cc_65536_293:
      000182                        623 	.ds 2
      000184                        624 _f_write_csect_65536_293:
      000184                        625 	.ds 2
      000186                        626 _f_write_wbuff_65536_293:
      000186                        627 	.ds 3
      000189                        628 _f_sync_fp_65536_314:
      000189                        629 	.ds 3
      00018C                        630 _f_sync_res_65536_315:
      00018C                        631 	.ds 1
      00018D                        632 _f_sync_fs_65536_315:
      00018D                        633 	.ds 3
      000190                        634 _f_close_fp_65536_321:
      000190                        635 	.ds 3
      000193                        636 _f_close_res_65536_322:
      000193                        637 	.ds 1
      000194                        638 _f_close_fs_65536_322:
      000194                        639 	.ds 3
      000197                        640 _f_lseek_PARM_2:
      000197                        641 	.ds 4
      00019B                        642 _f_lseek_fp_65536_325:
      00019B                        643 	.ds 3
      00019E                        644 _f_lseek_res_65536_326:
      00019E                        645 	.ds 1
      00019F                        646 _f_lseek_fs_65536_326:
      00019F                        647 	.ds 3
      0001A2                        648 _f_lseek_clst_65536_326:
      0001A2                        649 	.ds 4
      0001A6                        650 _f_lseek_bcs_65536_326:
      0001A6                        651 	.ds 4
      0001AA                        652 _f_lseek_nsect_65536_326:
      0001AA                        653 	.ds 4
      0001AE                        654 _f_opendir_PARM_2:
      0001AE                        655 	.ds 3
      0001B1                        656 _f_opendir_dp_65536_350:
      0001B1                        657 	.ds 3
      0001B4                        658 _f_opendir_res_65536_351:
      0001B4                        659 	.ds 1
      0001B5                        660 _f_opendir_fs_65536_351:
      0001B5                        661 	.ds 3
      0001B8                        662 _f_closedir_dp_65536_359:
      0001B8                        663 	.ds 3
      0001BB                        664 _f_closedir_fs_65536_360:
      0001BB                        665 	.ds 3
      0001BE                        666 _f_readdir_PARM_2:
      0001BE                        667 	.ds 3
      0001C1                        668 _f_readdir_dp_65536_362:
      0001C1                        669 	.ds 3
      0001C4                        670 _f_readdir_res_65536_363:
      0001C4                        671 	.ds 1
      0001C5                        672 _f_readdir_fs_65536_363:
      0001C5                        673 	.ds 3
      0001C8                        674 _f_stat_PARM_2:
      0001C8                        675 	.ds 3
      0001CB                        676 _f_stat_path_65536_368:
      0001CB                        677 	.ds 3
      0001CE                        678 _f_stat_res_65536_369:
      0001CE                        679 	.ds 1
      0001CF                        680 _f_stat_dj_65536_369:
      0001CF                        681 	.ds 42
      0001F9                        682 _f_getfree_PARM_2:
      0001F9                        683 	.ds 3
      0001FC                        684 _f_getfree_PARM_3:
      0001FC                        685 	.ds 3
      0001FF                        686 _f_getfree_path_65536_374:
      0001FF                        687 	.ds 3
      000202                        688 _f_getfree_res_65536_375:
      000202                        689 	.ds 1
      000203                        690 _f_getfree_fs_65536_375:
      000203                        691 	.ds 3
      000206                        692 _f_getfree_nfree_65536_375:
      000206                        693 	.ds 4
      00020A                        694 _f_getfree_i_65536_375:
      00020A                        695 	.ds 2
      00020C                        696 _f_getfree_obj_65536_375:
      00020C                        697 	.ds 15
      00021B                        698 _f_truncate_fp_65536_390:
      00021B                        699 	.ds 3
      00021E                        700 _f_truncate_res_65536_391:
      00021E                        701 	.ds 1
      00021F                        702 _f_truncate_fs_65536_391:
      00021F                        703 	.ds 3
      000222                        704 _f_unlink_path_65536_400:
      000222                        705 	.ds 3
      000225                        706 _f_unlink_res_65536_401:
      000225                        707 	.ds 1
      000226                        708 _f_unlink_fs_65536_401:
      000226                        709 	.ds 3
      000229                        710 _f_unlink_dj_65536_401:
      000229                        711 	.ds 42
      000253                        712 _f_unlink_sdj_65536_401:
      000253                        713 	.ds 42
      00027D                        714 _f_unlink_dclst_65536_401:
      00027D                        715 	.ds 4
      000281                        716 _f_mkdir_path_65536_415:
      000281                        717 	.ds 3
      000284                        718 _f_mkdir_res_65536_416:
      000284                        719 	.ds 1
      000285                        720 _f_mkdir_fs_65536_416:
      000285                        721 	.ds 3
      000288                        722 _f_mkdir_dj_65536_416:
      000288                        723 	.ds 42
      0002B2                        724 _f_mkdir_sobj_65536_416:
      0002B2                        725 	.ds 15
      0002C1                        726 _f_rename_PARM_2:
      0002C1                        727 	.ds 3
      0002C4                        728 _f_rename_path_old_65536_427:
      0002C4                        729 	.ds 3
      0002C7                        730 _f_rename_res_65536_428:
      0002C7                        731 	.ds 1
      0002C8                        732 _f_rename_fs_65536_428:
      0002C8                        733 	.ds 3
      0002CB                        734 _f_rename_djo_65536_428:
      0002CB                        735 	.ds 42
      0002F5                        736 _f_rename_djn_65536_428:
      0002F5                        737 	.ds 42
      00031F                        738 _f_rename_buf_65536_428:
      00031F                        739 	.ds 32
                                    740 ;--------------------------------------------------------
                                    741 ; absolute external ram data
                                    742 ;--------------------------------------------------------
                                    743 	.area XABS    (ABS,XDATA)
                                    744 ;--------------------------------------------------------
                                    745 ; external initialized ram data
                                    746 ;--------------------------------------------------------
                                    747 	.area XISEG   (XDATA)
                                    748 	.area HOME    (CODE)
                                    749 	.area GSINIT0 (CODE)
                                    750 	.area GSINIT1 (CODE)
                                    751 	.area GSINIT2 (CODE)
                                    752 	.area GSINIT3 (CODE)
                                    753 	.area GSINIT4 (CODE)
                                    754 	.area GSINIT5 (CODE)
                                    755 	.area GSINIT  (CODE)
                                    756 	.area GSFINAL (CODE)
                                    757 	.area CSEG    (CODE)
                                    758 ;--------------------------------------------------------
                                    759 ; global & static initialisations
                                    760 ;--------------------------------------------------------
                                    761 	.area HOME    (CODE)
                                    762 	.area GSINIT  (CODE)
                                    763 	.area GSFINAL (CODE)
                                    764 	.area GSINIT  (CODE)
                                    765 ;--------------------------------------------------------
                                    766 ; Home
                                    767 ;--------------------------------------------------------
                                    768 	.area HOME    (CODE)
                                    769 	.area HOME    (CODE)
                                    770 ;--------------------------------------------------------
                                    771 ; code
                                    772 ;--------------------------------------------------------
                                    773 	.area CSEG    (CODE)
                                    774 ;------------------------------------------------------------
                                    775 ;Allocation info for local variables in function 'ld_word'
                                    776 ;------------------------------------------------------------
                                    777 ;ptr                       Allocated with name '_ld_word_ptr_65536_73'
                                    778 ;rv                        Allocated with name '_ld_word_rv_65536_74'
                                    779 ;------------------------------------------------------------
                                    780 ;	ff15\source\ff.c:618: static WORD ld_word (const BYTE* ptr)	/*	 Load a 2-byte little-endian word */
                                    781 ;	-----------------------------------------
                                    782 ;	 function ld_word
                                    783 ;	-----------------------------------------
      000000                        784 _ld_word:
                           000007   785 	ar7 = 0x07
                           000006   786 	ar6 = 0x06
                           000005   787 	ar5 = 0x05
                           000004   788 	ar4 = 0x04
                           000003   789 	ar3 = 0x03
                           000002   790 	ar2 = 0x02
                           000001   791 	ar1 = 0x01
                           000000   792 	ar0 = 0x00
      000000 AF F0            [24]  793 	mov	r7,b
      000002 AE 83            [24]  794 	mov	r6,dph
      000004 E5 82            [12]  795 	mov	a,dpl
      000006 90r00r05         [24]  796 	mov	dptr,#_ld_word_ptr_65536_73
      000009 F0               [24]  797 	movx	@dptr,a
      00000A EE               [12]  798 	mov	a,r6
      00000B A3               [24]  799 	inc	dptr
      00000C F0               [24]  800 	movx	@dptr,a
      00000D EF               [12]  801 	mov	a,r7
      00000E A3               [24]  802 	inc	dptr
      00000F F0               [24]  803 	movx	@dptr,a
                                    804 ;	ff15\source\ff.c:622: rv = ptr[1];
      000010 90r00r05         [24]  805 	mov	dptr,#_ld_word_ptr_65536_73
      000013 E0               [24]  806 	movx	a,@dptr
      000014 FD               [12]  807 	mov	r5,a
      000015 A3               [24]  808 	inc	dptr
      000016 E0               [24]  809 	movx	a,@dptr
      000017 FE               [12]  810 	mov	r6,a
      000018 A3               [24]  811 	inc	dptr
      000019 E0               [24]  812 	movx	a,@dptr
      00001A FF               [12]  813 	mov	r7,a
      00001B 74 01            [12]  814 	mov	a,#0x01
      00001D 2D               [12]  815 	add	a,r5
      00001E FA               [12]  816 	mov	r2,a
      00001F E4               [12]  817 	clr	a
      000020 3E               [12]  818 	addc	a,r6
      000021 FB               [12]  819 	mov	r3,a
      000022 8F 04            [24]  820 	mov	ar4,r7
      000024 8A 82            [24]  821 	mov	dpl,r2
      000026 8B 83            [24]  822 	mov	dph,r3
      000028 8C F0            [24]  823 	mov	b,r4
      00002A 12r00r00         [24]  824 	lcall	__gptrget
                                    825 ;	ff15\source\ff.c:623: rv = rv << 8 | ptr[0];
      00002D FC               [12]  826 	mov	r4,a
      00002E 7A 00            [12]  827 	mov	r2,#0x00
      000030 8D 82            [24]  828 	mov	dpl,r5
      000032 8E 83            [24]  829 	mov	dph,r6
      000034 8F F0            [24]  830 	mov	b,r7
      000036 12r00r00         [24]  831 	lcall	__gptrget
      000039 7F 00            [12]  832 	mov	r7,#0x00
      00003B 42 02            [12]  833 	orl	ar2,a
      00003D EF               [12]  834 	mov	a,r7
      00003E 42 04            [12]  835 	orl	ar4,a
                                    836 ;	ff15\source\ff.c:624: return rv;
      000040 8A 82            [24]  837 	mov	dpl,r2
      000042 8C 83            [24]  838 	mov	dph,r4
                                    839 ;	ff15\source\ff.c:625: }
      000044 22               [24]  840 	ret
                                    841 ;------------------------------------------------------------
                                    842 ;Allocation info for local variables in function 'ld_dword'
                                    843 ;------------------------------------------------------------
                                    844 ;ptr                       Allocated with name '_ld_dword_ptr_65536_75'
                                    845 ;rv                        Allocated with name '_ld_dword_rv_65536_76'
                                    846 ;sloc0                     Allocated with name '_ld_dword_sloc0_1_0'
                                    847 ;------------------------------------------------------------
                                    848 ;	ff15\source\ff.c:627: static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
                                    849 ;	-----------------------------------------
                                    850 ;	 function ld_dword
                                    851 ;	-----------------------------------------
      000045                        852 _ld_dword:
      000045 AF F0            [24]  853 	mov	r7,b
      000047 AE 83            [24]  854 	mov	r6,dph
      000049 E5 82            [12]  855 	mov	a,dpl
      00004B 90r00r08         [24]  856 	mov	dptr,#_ld_dword_ptr_65536_75
      00004E F0               [24]  857 	movx	@dptr,a
      00004F EE               [12]  858 	mov	a,r6
      000050 A3               [24]  859 	inc	dptr
      000051 F0               [24]  860 	movx	@dptr,a
      000052 EF               [12]  861 	mov	a,r7
      000053 A3               [24]  862 	inc	dptr
      000054 F0               [24]  863 	movx	@dptr,a
                                    864 ;	ff15\source\ff.c:631: rv = ptr[3];
      000055 90r00r08         [24]  865 	mov	dptr,#_ld_dword_ptr_65536_75
      000058 E0               [24]  866 	movx	a,@dptr
      000059 FD               [12]  867 	mov	r5,a
      00005A A3               [24]  868 	inc	dptr
      00005B E0               [24]  869 	movx	a,@dptr
      00005C FE               [12]  870 	mov	r6,a
      00005D A3               [24]  871 	inc	dptr
      00005E E0               [24]  872 	movx	a,@dptr
      00005F FF               [12]  873 	mov	r7,a
      000060 74 03            [12]  874 	mov	a,#0x03
      000062 2D               [12]  875 	add	a,r5
      000063 FA               [12]  876 	mov	r2,a
      000064 E4               [12]  877 	clr	a
      000065 3E               [12]  878 	addc	a,r6
      000066 FB               [12]  879 	mov	r3,a
      000067 8F 04            [24]  880 	mov	ar4,r7
      000069 8A 82            [24]  881 	mov	dpl,r2
      00006B 8B 83            [24]  882 	mov	dph,r3
      00006D 8C F0            [24]  883 	mov	b,r4
      00006F 12r00r00         [24]  884 	lcall	__gptrget
      000072 F9               [12]  885 	mov	r1,a
      000073 7A 00            [12]  886 	mov	r2,#0x00
      000075 7B 00            [12]  887 	mov	r3,#0x00
      000077 7C 00            [12]  888 	mov	r4,#0x00
                                    889 ;	ff15\source\ff.c:632: rv = rv << 8 | ptr[2];
      000079 8B*03            [24]  890 	mov	(_ld_dword_sloc0_1_0 + 3),r3
      00007B 8A*02            [24]  891 	mov	(_ld_dword_sloc0_1_0 + 2),r2
      00007D 89*01            [24]  892 	mov	(_ld_dword_sloc0_1_0 + 1),r1
                                    893 ;	1-genFromRTrack replaced	mov	_ld_dword_sloc0_1_0,#0x00
      00007F 8C*00            [24]  894 	mov	_ld_dword_sloc0_1_0,r4
      000081 74 02            [12]  895 	mov	a,#0x02
      000083 2D               [12]  896 	add	a,r5
      000084 F8               [12]  897 	mov	r0,a
      000085 E4               [12]  898 	clr	a
      000086 3E               [12]  899 	addc	a,r6
      000087 FB               [12]  900 	mov	r3,a
      000088 8F 04            [24]  901 	mov	ar4,r7
      00008A 88 82            [24]  902 	mov	dpl,r0
      00008C 8B 83            [24]  903 	mov	dph,r3
      00008E 8C F0            [24]  904 	mov	b,r4
      000090 12r00r00         [24]  905 	lcall	__gptrget
      000093 F8               [12]  906 	mov	r0,a
      000094 E4               [12]  907 	clr	a
      000095 FC               [12]  908 	mov	r4,a
      000096 FB               [12]  909 	mov	r3,a
      000097 FA               [12]  910 	mov	r2,a
      000098 E5*00            [12]  911 	mov	a,_ld_dword_sloc0_1_0
      00009A 42 00            [12]  912 	orl	ar0,a
      00009C E5*01            [12]  913 	mov	a,(_ld_dword_sloc0_1_0 + 1)
      00009E 42 04            [12]  914 	orl	ar4,a
      0000A0 E5*02            [12]  915 	mov	a,(_ld_dword_sloc0_1_0 + 2)
      0000A2 42 03            [12]  916 	orl	ar3,a
      0000A4 E5*03            [12]  917 	mov	a,(_ld_dword_sloc0_1_0 + 3)
      0000A6 42 02            [12]  918 	orl	ar2,a
                                    919 ;	ff15\source\ff.c:633: rv = rv << 8 | ptr[1];
      0000A8 8B*03            [24]  920 	mov	(_ld_dword_sloc0_1_0 + 3),r3
      0000AA 8C*02            [24]  921 	mov	(_ld_dword_sloc0_1_0 + 2),r4
      0000AC 88*01            [24]  922 	mov	(_ld_dword_sloc0_1_0 + 1),r0
      0000AE 75*00 00         [24]  923 	mov	_ld_dword_sloc0_1_0,#0x00
      0000B1 74 01            [12]  924 	mov	a,#0x01
      0000B3 2D               [12]  925 	add	a,r5
      0000B4 F9               [12]  926 	mov	r1,a
      0000B5 E4               [12]  927 	clr	a
      0000B6 3E               [12]  928 	addc	a,r6
      0000B7 FB               [12]  929 	mov	r3,a
      0000B8 8F 04            [24]  930 	mov	ar4,r7
      0000BA 89 82            [24]  931 	mov	dpl,r1
      0000BC 8B 83            [24]  932 	mov	dph,r3
      0000BE 8C F0            [24]  933 	mov	b,r4
      0000C0 12r00r00         [24]  934 	lcall	__gptrget
      0000C3 F9               [12]  935 	mov	r1,a
      0000C4 E4               [12]  936 	clr	a
      0000C5 FC               [12]  937 	mov	r4,a
      0000C6 FB               [12]  938 	mov	r3,a
      0000C7 FA               [12]  939 	mov	r2,a
      0000C8 E5*00            [12]  940 	mov	a,_ld_dword_sloc0_1_0
      0000CA 42 01            [12]  941 	orl	ar1,a
      0000CC E5*01            [12]  942 	mov	a,(_ld_dword_sloc0_1_0 + 1)
      0000CE 42 04            [12]  943 	orl	ar4,a
      0000D0 E5*02            [12]  944 	mov	a,(_ld_dword_sloc0_1_0 + 2)
      0000D2 42 03            [12]  945 	orl	ar3,a
      0000D4 E5*03            [12]  946 	mov	a,(_ld_dword_sloc0_1_0 + 3)
      0000D6 42 02            [12]  947 	orl	ar2,a
                                    948 ;	ff15\source\ff.c:634: rv = rv << 8 | ptr[0];
      0000D8 8B 02            [24]  949 	mov	ar2,r3
      0000DA 8C 03            [24]  950 	mov	ar3,r4
      0000DC 89 04            [24]  951 	mov	ar4,r1
      0000DE 79 00            [12]  952 	mov	r1,#0x00
      0000E0 8D 82            [24]  953 	mov	dpl,r5
      0000E2 8E 83            [24]  954 	mov	dph,r6
      0000E4 8F F0            [24]  955 	mov	b,r7
      0000E6 12r00r00         [24]  956 	lcall	__gptrget
      0000E9 F8               [12]  957 	mov	r0,a
      0000EA E4               [12]  958 	clr	a
      0000EB FD               [12]  959 	mov	r5,a
      0000EC FE               [12]  960 	mov	r6,a
      0000ED FF               [12]  961 	mov	r7,a
      0000EE E8               [12]  962 	mov	a,r0
      0000EF 42 01            [12]  963 	orl	ar1,a
      0000F1 ED               [12]  964 	mov	a,r5
      0000F2 42 04            [12]  965 	orl	ar4,a
      0000F4 EE               [12]  966 	mov	a,r6
      0000F5 42 03            [12]  967 	orl	ar3,a
      0000F7 EF               [12]  968 	mov	a,r7
      0000F8 42 02            [12]  969 	orl	ar2,a
                                    970 ;	ff15\source\ff.c:635: return rv;
      0000FA 89 82            [24]  971 	mov	dpl,r1
      0000FC 8C 83            [24]  972 	mov	dph,r4
      0000FE 8B F0            [24]  973 	mov	b,r3
      000100 EA               [12]  974 	mov	a,r2
                                    975 ;	ff15\source\ff.c:636: }
      000101 22               [24]  976 	ret
                                    977 ;------------------------------------------------------------
                                    978 ;Allocation info for local variables in function 'st_word'
                                    979 ;------------------------------------------------------------
                                    980 ;val                       Allocated with name '_st_word_PARM_2'
                                    981 ;ptr                       Allocated with name '_st_word_ptr_65536_77'
                                    982 ;------------------------------------------------------------
                                    983 ;	ff15\source\ff.c:656: static void st_word (BYTE* ptr, WORD val)	/* Store a 2-byte word in little-endian */
                                    984 ;	-----------------------------------------
                                    985 ;	 function st_word
                                    986 ;	-----------------------------------------
      000102                        987 _st_word:
      000102 AF F0            [24]  988 	mov	r7,b
      000104 AE 83            [24]  989 	mov	r6,dph
      000106 E5 82            [12]  990 	mov	a,dpl
      000108 90r00r0D         [24]  991 	mov	dptr,#_st_word_ptr_65536_77
      00010B F0               [24]  992 	movx	@dptr,a
      00010C EE               [12]  993 	mov	a,r6
      00010D A3               [24]  994 	inc	dptr
      00010E F0               [24]  995 	movx	@dptr,a
      00010F EF               [12]  996 	mov	a,r7
      000110 A3               [24]  997 	inc	dptr
      000111 F0               [24]  998 	movx	@dptr,a
                                    999 ;	ff15\source\ff.c:658: *ptr++ = (BYTE)val; val >>= 8;
      000112 90r00r0D         [24] 1000 	mov	dptr,#_st_word_ptr_65536_77
      000115 E0               [24] 1001 	movx	a,@dptr
      000116 FD               [12] 1002 	mov	r5,a
      000117 A3               [24] 1003 	inc	dptr
      000118 E0               [24] 1004 	movx	a,@dptr
      000119 FE               [12] 1005 	mov	r6,a
      00011A A3               [24] 1006 	inc	dptr
      00011B E0               [24] 1007 	movx	a,@dptr
      00011C FF               [12] 1008 	mov	r7,a
      00011D 90r00r0B         [24] 1009 	mov	dptr,#_st_word_PARM_2
      000120 E0               [24] 1010 	movx	a,@dptr
      000121 FB               [12] 1011 	mov	r3,a
      000122 A3               [24] 1012 	inc	dptr
      000123 E0               [24] 1013 	movx	a,@dptr
      000124 FC               [12] 1014 	mov	r4,a
      000125 8B 02            [24] 1015 	mov	ar2,r3
      000127 8D 82            [24] 1016 	mov	dpl,r5
      000129 8E 83            [24] 1017 	mov	dph,r6
      00012B 8F F0            [24] 1018 	mov	b,r7
      00012D EA               [12] 1019 	mov	a,r2
      00012E 12r00r00         [24] 1020 	lcall	__gptrput
      000131 90r00r0D         [24] 1021 	mov	dptr,#_st_word_ptr_65536_77
      000134 74 01            [12] 1022 	mov	a,#0x01
      000136 2D               [12] 1023 	add	a,r5
      000137 F0               [24] 1024 	movx	@dptr,a
      000138 E4               [12] 1025 	clr	a
      000139 3E               [12] 1026 	addc	a,r6
      00013A A3               [24] 1027 	inc	dptr
      00013B F0               [24] 1028 	movx	@dptr,a
      00013C EF               [12] 1029 	mov	a,r7
      00013D A3               [24] 1030 	inc	dptr
      00013E F0               [24] 1031 	movx	@dptr,a
      00013F 8C 03            [24] 1032 	mov	ar3,r4
      000141 7C 00            [12] 1033 	mov	r4,#0x00
      000143 90r00r0B         [24] 1034 	mov	dptr,#_st_word_PARM_2
      000146 EB               [12] 1035 	mov	a,r3
      000147 F0               [24] 1036 	movx	@dptr,a
      000148 EC               [12] 1037 	mov	a,r4
      000149 A3               [24] 1038 	inc	dptr
      00014A F0               [24] 1039 	movx	@dptr,a
                                   1040 ;	ff15\source\ff.c:659: *ptr++ = (BYTE)val;
      00014B 90r00r0D         [24] 1041 	mov	dptr,#_st_word_ptr_65536_77
      00014E E0               [24] 1042 	movx	a,@dptr
      00014F FD               [12] 1043 	mov	r5,a
      000150 A3               [24] 1044 	inc	dptr
      000151 E0               [24] 1045 	movx	a,@dptr
      000152 FE               [12] 1046 	mov	r6,a
      000153 A3               [24] 1047 	inc	dptr
      000154 E0               [24] 1048 	movx	a,@dptr
      000155 FF               [12] 1049 	mov	r7,a
      000156 90r00r0B         [24] 1050 	mov	dptr,#_st_word_PARM_2
      000159 E0               [24] 1051 	movx	a,@dptr
      00015A FB               [12] 1052 	mov	r3,a
      00015B A3               [24] 1053 	inc	dptr
      00015C E0               [24] 1054 	movx	a,@dptr
      00015D 8D 82            [24] 1055 	mov	dpl,r5
      00015F 8E 83            [24] 1056 	mov	dph,r6
      000161 8F F0            [24] 1057 	mov	b,r7
      000163 EB               [12] 1058 	mov	a,r3
      000164 12r00r00         [24] 1059 	lcall	__gptrput
      000167 90r00r0D         [24] 1060 	mov	dptr,#_st_word_ptr_65536_77
      00016A 74 01            [12] 1061 	mov	a,#0x01
      00016C 2D               [12] 1062 	add	a,r5
      00016D F0               [24] 1063 	movx	@dptr,a
      00016E E4               [12] 1064 	clr	a
      00016F 3E               [12] 1065 	addc	a,r6
      000170 A3               [24] 1066 	inc	dptr
      000171 F0               [24] 1067 	movx	@dptr,a
      000172 EF               [12] 1068 	mov	a,r7
      000173 A3               [24] 1069 	inc	dptr
      000174 F0               [24] 1070 	movx	@dptr,a
                                   1071 ;	ff15\source\ff.c:660: }
      000175 22               [24] 1072 	ret
                                   1073 ;------------------------------------------------------------
                                   1074 ;Allocation info for local variables in function 'st_dword'
                                   1075 ;------------------------------------------------------------
                                   1076 ;val                       Allocated with name '_st_dword_PARM_2'
                                   1077 ;ptr                       Allocated with name '_st_dword_ptr_65536_79'
                                   1078 ;------------------------------------------------------------
                                   1079 ;	ff15\source\ff.c:662: static void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
                                   1080 ;	-----------------------------------------
                                   1081 ;	 function st_dword
                                   1082 ;	-----------------------------------------
      000176                       1083 _st_dword:
      000176 AF F0            [24] 1084 	mov	r7,b
      000178 AE 83            [24] 1085 	mov	r6,dph
      00017A E5 82            [12] 1086 	mov	a,dpl
      00017C 90r00r14         [24] 1087 	mov	dptr,#_st_dword_ptr_65536_79
      00017F F0               [24] 1088 	movx	@dptr,a
      000180 EE               [12] 1089 	mov	a,r6
      000181 A3               [24] 1090 	inc	dptr
      000182 F0               [24] 1091 	movx	@dptr,a
      000183 EF               [12] 1092 	mov	a,r7
      000184 A3               [24] 1093 	inc	dptr
      000185 F0               [24] 1094 	movx	@dptr,a
                                   1095 ;	ff15\source\ff.c:664: *ptr++ = (BYTE)val; val >>= 8;
      000186 90r00r14         [24] 1096 	mov	dptr,#_st_dword_ptr_65536_79
      000189 E0               [24] 1097 	movx	a,@dptr
      00018A FD               [12] 1098 	mov	r5,a
      00018B A3               [24] 1099 	inc	dptr
      00018C E0               [24] 1100 	movx	a,@dptr
      00018D FE               [12] 1101 	mov	r6,a
      00018E A3               [24] 1102 	inc	dptr
      00018F E0               [24] 1103 	movx	a,@dptr
      000190 FF               [12] 1104 	mov	r7,a
      000191 90r00r10         [24] 1105 	mov	dptr,#_st_dword_PARM_2
      000194 E0               [24] 1106 	movx	a,@dptr
      000195 F9               [12] 1107 	mov	r1,a
      000196 A3               [24] 1108 	inc	dptr
      000197 E0               [24] 1109 	movx	a,@dptr
      000198 FA               [12] 1110 	mov	r2,a
      000199 A3               [24] 1111 	inc	dptr
      00019A E0               [24] 1112 	movx	a,@dptr
      00019B FB               [12] 1113 	mov	r3,a
      00019C A3               [24] 1114 	inc	dptr
      00019D E0               [24] 1115 	movx	a,@dptr
      00019E FC               [12] 1116 	mov	r4,a
      00019F 89 00            [24] 1117 	mov	ar0,r1
      0001A1 8D 82            [24] 1118 	mov	dpl,r5
      0001A3 8E 83            [24] 1119 	mov	dph,r6
      0001A5 8F F0            [24] 1120 	mov	b,r7
      0001A7 E8               [12] 1121 	mov	a,r0
      0001A8 12r00r00         [24] 1122 	lcall	__gptrput
      0001AB 90r00r14         [24] 1123 	mov	dptr,#_st_dword_ptr_65536_79
      0001AE 74 01            [12] 1124 	mov	a,#0x01
      0001B0 2D               [12] 1125 	add	a,r5
      0001B1 F0               [24] 1126 	movx	@dptr,a
      0001B2 E4               [12] 1127 	clr	a
      0001B3 3E               [12] 1128 	addc	a,r6
      0001B4 A3               [24] 1129 	inc	dptr
      0001B5 F0               [24] 1130 	movx	@dptr,a
      0001B6 EF               [12] 1131 	mov	a,r7
      0001B7 A3               [24] 1132 	inc	dptr
      0001B8 F0               [24] 1133 	movx	@dptr,a
      0001B9 8A 01            [24] 1134 	mov	ar1,r2
      0001BB 8B 02            [24] 1135 	mov	ar2,r3
      0001BD 8C 03            [24] 1136 	mov	ar3,r4
      0001BF 7C 00            [12] 1137 	mov	r4,#0x00
      0001C1 90r00r10         [24] 1138 	mov	dptr,#_st_dword_PARM_2
      0001C4 E9               [12] 1139 	mov	a,r1
      0001C5 F0               [24] 1140 	movx	@dptr,a
      0001C6 EA               [12] 1141 	mov	a,r2
      0001C7 A3               [24] 1142 	inc	dptr
      0001C8 F0               [24] 1143 	movx	@dptr,a
      0001C9 EB               [12] 1144 	mov	a,r3
      0001CA A3               [24] 1145 	inc	dptr
      0001CB F0               [24] 1146 	movx	@dptr,a
      0001CC EC               [12] 1147 	mov	a,r4
      0001CD A3               [24] 1148 	inc	dptr
      0001CE F0               [24] 1149 	movx	@dptr,a
                                   1150 ;	ff15\source\ff.c:665: *ptr++ = (BYTE)val; val >>= 8;
      0001CF 90r00r14         [24] 1151 	mov	dptr,#_st_dword_ptr_65536_79
      0001D2 E0               [24] 1152 	movx	a,@dptr
      0001D3 FD               [12] 1153 	mov	r5,a
      0001D4 A3               [24] 1154 	inc	dptr
      0001D5 E0               [24] 1155 	movx	a,@dptr
      0001D6 FE               [12] 1156 	mov	r6,a
      0001D7 A3               [24] 1157 	inc	dptr
      0001D8 E0               [24] 1158 	movx	a,@dptr
      0001D9 FF               [12] 1159 	mov	r7,a
      0001DA 90r00r10         [24] 1160 	mov	dptr,#_st_dword_PARM_2
      0001DD E0               [24] 1161 	movx	a,@dptr
      0001DE F9               [12] 1162 	mov	r1,a
      0001DF A3               [24] 1163 	inc	dptr
      0001E0 E0               [24] 1164 	movx	a,@dptr
      0001E1 FA               [12] 1165 	mov	r2,a
      0001E2 A3               [24] 1166 	inc	dptr
      0001E3 E0               [24] 1167 	movx	a,@dptr
      0001E4 FB               [12] 1168 	mov	r3,a
      0001E5 A3               [24] 1169 	inc	dptr
      0001E6 E0               [24] 1170 	movx	a,@dptr
      0001E7 FC               [12] 1171 	mov	r4,a
      0001E8 89 00            [24] 1172 	mov	ar0,r1
      0001EA 8D 82            [24] 1173 	mov	dpl,r5
      0001EC 8E 83            [24] 1174 	mov	dph,r6
      0001EE 8F F0            [24] 1175 	mov	b,r7
      0001F0 E8               [12] 1176 	mov	a,r0
      0001F1 12r00r00         [24] 1177 	lcall	__gptrput
      0001F4 90r00r14         [24] 1178 	mov	dptr,#_st_dword_ptr_65536_79
      0001F7 74 01            [12] 1179 	mov	a,#0x01
      0001F9 2D               [12] 1180 	add	a,r5
      0001FA F0               [24] 1181 	movx	@dptr,a
      0001FB E4               [12] 1182 	clr	a
      0001FC 3E               [12] 1183 	addc	a,r6
      0001FD A3               [24] 1184 	inc	dptr
      0001FE F0               [24] 1185 	movx	@dptr,a
      0001FF EF               [12] 1186 	mov	a,r7
      000200 A3               [24] 1187 	inc	dptr
      000201 F0               [24] 1188 	movx	@dptr,a
      000202 8A 01            [24] 1189 	mov	ar1,r2
      000204 8B 02            [24] 1190 	mov	ar2,r3
      000206 8C 03            [24] 1191 	mov	ar3,r4
      000208 7C 00            [12] 1192 	mov	r4,#0x00
      00020A 90r00r10         [24] 1193 	mov	dptr,#_st_dword_PARM_2
      00020D E9               [12] 1194 	mov	a,r1
      00020E F0               [24] 1195 	movx	@dptr,a
      00020F EA               [12] 1196 	mov	a,r2
      000210 A3               [24] 1197 	inc	dptr
      000211 F0               [24] 1198 	movx	@dptr,a
      000212 EB               [12] 1199 	mov	a,r3
      000213 A3               [24] 1200 	inc	dptr
      000214 F0               [24] 1201 	movx	@dptr,a
      000215 EC               [12] 1202 	mov	a,r4
      000216 A3               [24] 1203 	inc	dptr
      000217 F0               [24] 1204 	movx	@dptr,a
                                   1205 ;	ff15\source\ff.c:666: *ptr++ = (BYTE)val; val >>= 8;
      000218 90r00r14         [24] 1206 	mov	dptr,#_st_dword_ptr_65536_79
      00021B E0               [24] 1207 	movx	a,@dptr
      00021C FD               [12] 1208 	mov	r5,a
      00021D A3               [24] 1209 	inc	dptr
      00021E E0               [24] 1210 	movx	a,@dptr
      00021F FE               [12] 1211 	mov	r6,a
      000220 A3               [24] 1212 	inc	dptr
      000221 E0               [24] 1213 	movx	a,@dptr
      000222 FF               [12] 1214 	mov	r7,a
      000223 90r00r10         [24] 1215 	mov	dptr,#_st_dword_PARM_2
      000226 E0               [24] 1216 	movx	a,@dptr
      000227 F9               [12] 1217 	mov	r1,a
      000228 A3               [24] 1218 	inc	dptr
      000229 E0               [24] 1219 	movx	a,@dptr
      00022A FA               [12] 1220 	mov	r2,a
      00022B A3               [24] 1221 	inc	dptr
      00022C E0               [24] 1222 	movx	a,@dptr
      00022D FB               [12] 1223 	mov	r3,a
      00022E A3               [24] 1224 	inc	dptr
      00022F E0               [24] 1225 	movx	a,@dptr
      000230 FC               [12] 1226 	mov	r4,a
      000231 89 00            [24] 1227 	mov	ar0,r1
      000233 8D 82            [24] 1228 	mov	dpl,r5
      000235 8E 83            [24] 1229 	mov	dph,r6
      000237 8F F0            [24] 1230 	mov	b,r7
      000239 E8               [12] 1231 	mov	a,r0
      00023A 12r00r00         [24] 1232 	lcall	__gptrput
      00023D 90r00r14         [24] 1233 	mov	dptr,#_st_dword_ptr_65536_79
      000240 74 01            [12] 1234 	mov	a,#0x01
      000242 2D               [12] 1235 	add	a,r5
      000243 F0               [24] 1236 	movx	@dptr,a
      000244 E4               [12] 1237 	clr	a
      000245 3E               [12] 1238 	addc	a,r6
      000246 A3               [24] 1239 	inc	dptr
      000247 F0               [24] 1240 	movx	@dptr,a
      000248 EF               [12] 1241 	mov	a,r7
      000249 A3               [24] 1242 	inc	dptr
      00024A F0               [24] 1243 	movx	@dptr,a
      00024B 8A 01            [24] 1244 	mov	ar1,r2
      00024D 8B 02            [24] 1245 	mov	ar2,r3
      00024F 8C 03            [24] 1246 	mov	ar3,r4
      000251 7C 00            [12] 1247 	mov	r4,#0x00
      000253 90r00r10         [24] 1248 	mov	dptr,#_st_dword_PARM_2
      000256 E9               [12] 1249 	mov	a,r1
      000257 F0               [24] 1250 	movx	@dptr,a
      000258 EA               [12] 1251 	mov	a,r2
      000259 A3               [24] 1252 	inc	dptr
      00025A F0               [24] 1253 	movx	@dptr,a
      00025B EB               [12] 1254 	mov	a,r3
      00025C A3               [24] 1255 	inc	dptr
      00025D F0               [24] 1256 	movx	@dptr,a
      00025E EC               [12] 1257 	mov	a,r4
      00025F A3               [24] 1258 	inc	dptr
      000260 F0               [24] 1259 	movx	@dptr,a
                                   1260 ;	ff15\source\ff.c:667: *ptr++ = (BYTE)val;
      000261 90r00r14         [24] 1261 	mov	dptr,#_st_dword_ptr_65536_79
      000264 E0               [24] 1262 	movx	a,@dptr
      000265 FD               [12] 1263 	mov	r5,a
      000266 A3               [24] 1264 	inc	dptr
      000267 E0               [24] 1265 	movx	a,@dptr
      000268 FE               [12] 1266 	mov	r6,a
      000269 A3               [24] 1267 	inc	dptr
      00026A E0               [24] 1268 	movx	a,@dptr
      00026B FF               [12] 1269 	mov	r7,a
      00026C 90r00r10         [24] 1270 	mov	dptr,#_st_dword_PARM_2
      00026F E0               [24] 1271 	movx	a,@dptr
      000270 F9               [12] 1272 	mov	r1,a
      000271 A3               [24] 1273 	inc	dptr
      000272 E0               [24] 1274 	movx	a,@dptr
      000273 A3               [24] 1275 	inc	dptr
      000274 E0               [24] 1276 	movx	a,@dptr
      000275 A3               [24] 1277 	inc	dptr
      000276 E0               [24] 1278 	movx	a,@dptr
      000277 8D 82            [24] 1279 	mov	dpl,r5
      000279 8E 83            [24] 1280 	mov	dph,r6
      00027B 8F F0            [24] 1281 	mov	b,r7
      00027D E9               [12] 1282 	mov	a,r1
      00027E 12r00r00         [24] 1283 	lcall	__gptrput
      000281 90r00r14         [24] 1284 	mov	dptr,#_st_dword_ptr_65536_79
      000284 74 01            [12] 1285 	mov	a,#0x01
      000286 2D               [12] 1286 	add	a,r5
      000287 F0               [24] 1287 	movx	@dptr,a
      000288 E4               [12] 1288 	clr	a
      000289 3E               [12] 1289 	addc	a,r6
      00028A A3               [24] 1290 	inc	dptr
      00028B F0               [24] 1291 	movx	@dptr,a
      00028C EF               [12] 1292 	mov	a,r7
      00028D A3               [24] 1293 	inc	dptr
      00028E F0               [24] 1294 	movx	@dptr,a
                                   1295 ;	ff15\source\ff.c:668: }
      00028F 22               [24] 1296 	ret
                                   1297 ;------------------------------------------------------------
                                   1298 ;Allocation info for local variables in function 'dbc_1st'
                                   1299 ;------------------------------------------------------------
                                   1300 ;c                         Allocated with name '_dbc_1st_c_65536_81'
                                   1301 ;------------------------------------------------------------
                                   1302 ;	ff15\source\ff.c:692: static int dbc_1st (BYTE c)
                                   1303 ;	-----------------------------------------
                                   1304 ;	 function dbc_1st
                                   1305 ;	-----------------------------------------
      000290                       1306 _dbc_1st:
      000290 E5 82            [12] 1307 	mov	a,dpl
      000292 90r00r17         [24] 1308 	mov	dptr,#_dbc_1st_c_65536_81
      000295 F0               [24] 1309 	movx	@dptr,a
                                   1310 ;	ff15\source\ff.c:700: if (c >= DbcTbl[0]) {
      000296 90r00r00         [24] 1311 	mov	dptr,#_DbcTbl
      000299 E4               [12] 1312 	clr	a
      00029A 93               [24] 1313 	movc	a,@a+dptr
      00029B FF               [12] 1314 	mov	r7,a
      00029C 90r00r17         [24] 1315 	mov	dptr,#_dbc_1st_c_65536_81
      00029F E0               [24] 1316 	movx	a,@dptr
      0002A0 FE               [12] 1317 	mov	r6,a
      0002A1 C3               [12] 1318 	clr	c
      0002A2 9F               [12] 1319 	subb	a,r7
      0002A3 40 26            [24] 1320 	jc	00107$
                                   1321 ;	ff15\source\ff.c:701: if (c <= DbcTbl[1]) return 1;
      0002A5 90r00r01         [24] 1322 	mov	dptr,#(_DbcTbl + 0x0001)
      0002A8 E4               [12] 1323 	clr	a
      0002A9 93               [24] 1324 	movc	a,@a+dptr
      0002AA C3               [12] 1325 	clr	c
      0002AB 9E               [12] 1326 	subb	a,r6
      0002AC 40 04            [24] 1327 	jc	00102$
      0002AE 90 00 01         [24] 1328 	mov	dptr,#0x0001
      0002B1 22               [24] 1329 	ret
      0002B2                       1330 00102$:
                                   1331 ;	ff15\source\ff.c:702: if (c >= DbcTbl[2] && c <= DbcTbl[3]) return 1;
      0002B2 90r00r02         [24] 1332 	mov	dptr,#(_DbcTbl + 0x0002)
      0002B5 E4               [12] 1333 	clr	a
      0002B6 93               [24] 1334 	movc	a,@a+dptr
      0002B7 FF               [12] 1335 	mov	r7,a
      0002B8 C3               [12] 1336 	clr	c
      0002B9 EE               [12] 1337 	mov	a,r6
      0002BA 9F               [12] 1338 	subb	a,r7
      0002BB 40 0E            [24] 1339 	jc	00107$
      0002BD 90r00r03         [24] 1340 	mov	dptr,#(_DbcTbl + 0x0003)
      0002C0 E4               [12] 1341 	clr	a
      0002C1 93               [24] 1342 	movc	a,@a+dptr
      0002C2 FF               [12] 1343 	mov	r7,a
      0002C3 C3               [12] 1344 	clr	c
      0002C4 9E               [12] 1345 	subb	a,r6
      0002C5 40 04            [24] 1346 	jc	00107$
      0002C7 90 00 01         [24] 1347 	mov	dptr,#0x0001
      0002CA 22               [24] 1348 	ret
      0002CB                       1349 00107$:
                                   1350 ;	ff15\source\ff.c:707: return 0;
      0002CB 90 00 00         [24] 1351 	mov	dptr,#0x0000
                                   1352 ;	ff15\source\ff.c:708: }
      0002CE 22               [24] 1353 	ret
                                   1354 ;------------------------------------------------------------
                                   1355 ;Allocation info for local variables in function 'dbc_2nd'
                                   1356 ;------------------------------------------------------------
                                   1357 ;c                         Allocated with name '_dbc_2nd_c_65536_84'
                                   1358 ;------------------------------------------------------------
                                   1359 ;	ff15\source\ff.c:712: static int dbc_2nd (BYTE c)
                                   1360 ;	-----------------------------------------
                                   1361 ;	 function dbc_2nd
                                   1362 ;	-----------------------------------------
      0002CF                       1363 _dbc_2nd:
      0002CF E5 82            [12] 1364 	mov	a,dpl
      0002D1 90r00r18         [24] 1365 	mov	dptr,#_dbc_2nd_c_65536_84
      0002D4 F0               [24] 1366 	movx	@dptr,a
                                   1367 ;	ff15\source\ff.c:721: if (c >= DbcTbl[4]) {
      0002D5 90r00r04         [24] 1368 	mov	dptr,#(_DbcTbl + 0x0004)
      0002D8 E4               [12] 1369 	clr	a
      0002D9 93               [24] 1370 	movc	a,@a+dptr
      0002DA FF               [12] 1371 	mov	r7,a
      0002DB 90r00r18         [24] 1372 	mov	dptr,#_dbc_2nd_c_65536_84
      0002DE E0               [24] 1373 	movx	a,@dptr
      0002DF FE               [12] 1374 	mov	r6,a
      0002E0 C3               [12] 1375 	clr	c
      0002E1 9F               [12] 1376 	subb	a,r7
      0002E2 40 43            [24] 1377 	jc	00110$
                                   1378 ;	ff15\source\ff.c:722: if (c <= DbcTbl[5]) return 1;
      0002E4 90r00r05         [24] 1379 	mov	dptr,#(_DbcTbl + 0x0005)
      0002E7 E4               [12] 1380 	clr	a
      0002E8 93               [24] 1381 	movc	a,@a+dptr
      0002E9 C3               [12] 1382 	clr	c
      0002EA 9E               [12] 1383 	subb	a,r6
      0002EB 40 04            [24] 1384 	jc	00102$
      0002ED 90 00 01         [24] 1385 	mov	dptr,#0x0001
      0002F0 22               [24] 1386 	ret
      0002F1                       1387 00102$:
                                   1388 ;	ff15\source\ff.c:723: if (c >= DbcTbl[6] && c <= DbcTbl[7]) return 1;
      0002F1 90r00r06         [24] 1389 	mov	dptr,#(_DbcTbl + 0x0006)
      0002F4 E4               [12] 1390 	clr	a
      0002F5 93               [24] 1391 	movc	a,@a+dptr
      0002F6 FF               [12] 1392 	mov	r7,a
      0002F7 C3               [12] 1393 	clr	c
      0002F8 EE               [12] 1394 	mov	a,r6
      0002F9 9F               [12] 1395 	subb	a,r7
      0002FA 40 0E            [24] 1396 	jc	00104$
      0002FC 90r00r07         [24] 1397 	mov	dptr,#(_DbcTbl + 0x0007)
      0002FF E4               [12] 1398 	clr	a
      000300 93               [24] 1399 	movc	a,@a+dptr
      000301 FF               [12] 1400 	mov	r7,a
      000302 C3               [12] 1401 	clr	c
      000303 9E               [12] 1402 	subb	a,r6
      000304 40 04            [24] 1403 	jc	00104$
      000306 90 00 01         [24] 1404 	mov	dptr,#0x0001
      000309 22               [24] 1405 	ret
      00030A                       1406 00104$:
                                   1407 ;	ff15\source\ff.c:724: if (c >= DbcTbl[8] && c <= DbcTbl[9]) return 1;
      00030A 90r00r08         [24] 1408 	mov	dptr,#(_DbcTbl + 0x0008)
      00030D E4               [12] 1409 	clr	a
      00030E 93               [24] 1410 	movc	a,@a+dptr
      00030F FF               [12] 1411 	mov	r7,a
      000310 90r00r18         [24] 1412 	mov	dptr,#_dbc_2nd_c_65536_84
      000313 E0               [24] 1413 	movx	a,@dptr
      000314 FE               [12] 1414 	mov	r6,a
      000315 C3               [12] 1415 	clr	c
      000316 9F               [12] 1416 	subb	a,r7
      000317 40 0E            [24] 1417 	jc	00110$
      000319 90r00r09         [24] 1418 	mov	dptr,#(_DbcTbl + 0x0009)
      00031C E4               [12] 1419 	clr	a
      00031D 93               [24] 1420 	movc	a,@a+dptr
      00031E FF               [12] 1421 	mov	r7,a
      00031F C3               [12] 1422 	clr	c
      000320 9E               [12] 1423 	subb	a,r6
      000321 40 04            [24] 1424 	jc	00110$
      000323 90 00 01         [24] 1425 	mov	dptr,#0x0001
      000326 22               [24] 1426 	ret
      000327                       1427 00110$:
                                   1428 ;	ff15\source\ff.c:729: return 0;
      000327 90 00 00         [24] 1429 	mov	dptr,#0x0000
                                   1430 ;	ff15\source\ff.c:730: }
      00032A 22               [24] 1431 	ret
                                   1432 ;------------------------------------------------------------
                                   1433 ;Allocation info for local variables in function 'sync_window'
                                   1434 ;------------------------------------------------------------
                                   1435 ;sloc0                     Allocated with name '_sync_window_sloc0_1_0'
                                   1436 ;sloc1                     Allocated with name '_sync_window_sloc1_1_0'
                                   1437 ;sloc2                     Allocated with name '_sync_window_sloc2_1_0'
                                   1438 ;sloc3                     Allocated with name '_sync_window_sloc3_1_0'
                                   1439 ;sloc4                     Allocated with name '_sync_window_sloc4_1_0'
                                   1440 ;sloc5                     Allocated with name '_sync_window_sloc5_1_0'
                                   1441 ;fs                        Allocated with name '_sync_window_fs_65536_87'
                                   1442 ;res                       Allocated with name '_sync_window_res_65536_88'
                                   1443 ;------------------------------------------------------------
                                   1444 ;	ff15\source\ff.c:1055: static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
                                   1445 ;	-----------------------------------------
                                   1446 ;	 function sync_window
                                   1447 ;	-----------------------------------------
      00032B                       1448 _sync_window:
      00032B AF F0            [24] 1449 	mov	r7,b
      00032D AE 83            [24] 1450 	mov	r6,dph
      00032F E5 82            [12] 1451 	mov	a,dpl
      000331 90r00r19         [24] 1452 	mov	dptr,#_sync_window_fs_65536_87
      000334 F0               [24] 1453 	movx	@dptr,a
      000335 EE               [12] 1454 	mov	a,r6
      000336 A3               [24] 1455 	inc	dptr
      000337 F0               [24] 1456 	movx	@dptr,a
      000338 EF               [12] 1457 	mov	a,r7
      000339 A3               [24] 1458 	inc	dptr
      00033A F0               [24] 1459 	movx	@dptr,a
                                   1460 ;	ff15\source\ff.c:1059: FRESULT res = FR_OK;
      00033B 90r00r1C         [24] 1461 	mov	dptr,#_sync_window_res_65536_88
      00033E E4               [12] 1462 	clr	a
      00033F F0               [24] 1463 	movx	@dptr,a
                                   1464 ;	ff15\source\ff.c:1062: if (fs->wflag) {	/* Is the disk access window dirty? */
      000340 90r00r19         [24] 1465 	mov	dptr,#_sync_window_fs_65536_87
      000343 E0               [24] 1466 	movx	a,@dptr
      000344 FD               [12] 1467 	mov	r5,a
      000345 A3               [24] 1468 	inc	dptr
      000346 E0               [24] 1469 	movx	a,@dptr
      000347 FE               [12] 1470 	mov	r6,a
      000348 A3               [24] 1471 	inc	dptr
      000349 E0               [24] 1472 	movx	a,@dptr
      00034A FF               [12] 1473 	mov	r7,a
      00034B 74 04            [12] 1474 	mov	a,#0x04
      00034D 2D               [12] 1475 	add	a,r5
      00034E FA               [12] 1476 	mov	r2,a
      00034F E4               [12] 1477 	clr	a
      000350 3E               [12] 1478 	addc	a,r6
      000351 FB               [12] 1479 	mov	r3,a
      000352 8F 04            [24] 1480 	mov	ar4,r7
      000354 8A 82            [24] 1481 	mov	dpl,r2
      000356 8B 83            [24] 1482 	mov	dph,r3
      000358 8C F0            [24] 1483 	mov	b,r4
      00035A 12r00r00         [24] 1484 	lcall	__gptrget
      00035D 70 03            [24] 1485 	jnz	00128$
      00035F 02r05r11         [24] 1486 	ljmp	00109$
      000362                       1487 00128$:
                                   1488 ;	ff15\source\ff.c:1063: if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write it back into the volume */
      000362 C0 02            [24] 1489 	push	ar2
      000364 C0 03            [24] 1490 	push	ar3
      000366 C0 04            [24] 1491 	push	ar4
      000368 74 01            [12] 1492 	mov	a,#0x01
      00036A 2D               [12] 1493 	add	a,r5
      00036B F5*00            [12] 1494 	mov	_sync_window_sloc0_1_0,a
      00036D E4               [12] 1495 	clr	a
      00036E 3E               [12] 1496 	addc	a,r6
      00036F F5*01            [12] 1497 	mov	(_sync_window_sloc0_1_0 + 1),a
      000371 8F*02            [24] 1498 	mov	(_sync_window_sloc0_1_0 + 2),r7
      000373 85*00 82         [24] 1499 	mov	dpl,_sync_window_sloc0_1_0
      000376 85*01 83         [24] 1500 	mov	dph,(_sync_window_sloc0_1_0 + 1)
      000379 85*02 F0         [24] 1501 	mov	b,(_sync_window_sloc0_1_0 + 2)
      00037C 12r00r00         [24] 1502 	lcall	__gptrget
      00037F F5*06            [12] 1503 	mov	_sync_window_sloc2_1_0,a
      000381 74 30            [12] 1504 	mov	a,#0x30
      000383 2D               [12] 1505 	add	a,r5
      000384 F5*07            [12] 1506 	mov	_sync_window_sloc3_1_0,a
      000386 E4               [12] 1507 	clr	a
      000387 3E               [12] 1508 	addc	a,r6
      000388 F5*08            [12] 1509 	mov	(_sync_window_sloc3_1_0 + 1),a
      00038A 8F*09            [24] 1510 	mov	(_sync_window_sloc3_1_0 + 2),r7
      00038C 74 2C            [12] 1511 	mov	a,#0x2c
      00038E 2D               [12] 1512 	add	a,r5
      00038F F5*03            [12] 1513 	mov	_sync_window_sloc1_1_0,a
      000391 E4               [12] 1514 	clr	a
      000392 3E               [12] 1515 	addc	a,r6
      000393 F5*04            [12] 1516 	mov	(_sync_window_sloc1_1_0 + 1),a
      000395 8F*05            [24] 1517 	mov	(_sync_window_sloc1_1_0 + 2),r7
      000397 85*03 82         [24] 1518 	mov	dpl,_sync_window_sloc1_1_0
      00039A 85*04 83         [24] 1519 	mov	dph,(_sync_window_sloc1_1_0 + 1)
      00039D 85*05 F0         [24] 1520 	mov	b,(_sync_window_sloc1_1_0 + 2)
      0003A0 12r00r00         [24] 1521 	lcall	__gptrget
      0003A3 F9               [12] 1522 	mov	r1,a
      0003A4 A3               [24] 1523 	inc	dptr
      0003A5 12r00r00         [24] 1524 	lcall	__gptrget
      0003A8 FA               [12] 1525 	mov	r2,a
      0003A9 A3               [24] 1526 	inc	dptr
      0003AA 12r00r00         [24] 1527 	lcall	__gptrget
      0003AD FB               [12] 1528 	mov	r3,a
      0003AE A3               [24] 1529 	inc	dptr
      0003AF 12r00r00         [24] 1530 	lcall	__gptrget
      0003B2 FC               [12] 1531 	mov	r4,a
      0003B3 90r00r00         [24] 1532 	mov	dptr,#_disk_write_PARM_2
      0003B6 E5*07            [12] 1533 	mov	a,_sync_window_sloc3_1_0
      0003B8 F0               [24] 1534 	movx	@dptr,a
      0003B9 E5*08            [12] 1535 	mov	a,(_sync_window_sloc3_1_0 + 1)
      0003BB A3               [24] 1536 	inc	dptr
      0003BC F0               [24] 1537 	movx	@dptr,a
      0003BD E5*09            [12] 1538 	mov	a,(_sync_window_sloc3_1_0 + 2)
      0003BF A3               [24] 1539 	inc	dptr
      0003C0 F0               [24] 1540 	movx	@dptr,a
      0003C1 90r00r00         [24] 1541 	mov	dptr,#_disk_write_PARM_3
      0003C4 E9               [12] 1542 	mov	a,r1
      0003C5 F0               [24] 1543 	movx	@dptr,a
      0003C6 EA               [12] 1544 	mov	a,r2
      0003C7 A3               [24] 1545 	inc	dptr
      0003C8 F0               [24] 1546 	movx	@dptr,a
      0003C9 EB               [12] 1547 	mov	a,r3
      0003CA A3               [24] 1548 	inc	dptr
      0003CB F0               [24] 1549 	movx	@dptr,a
      0003CC EC               [12] 1550 	mov	a,r4
      0003CD A3               [24] 1551 	inc	dptr
      0003CE F0               [24] 1552 	movx	@dptr,a
      0003CF 90r00r00         [24] 1553 	mov	dptr,#_disk_write_PARM_4
      0003D2 74 01            [12] 1554 	mov	a,#0x01
      0003D4 F0               [24] 1555 	movx	@dptr,a
      0003D5 E4               [12] 1556 	clr	a
      0003D6 A3               [24] 1557 	inc	dptr
      0003D7 F0               [24] 1558 	movx	@dptr,a
      0003D8 85*06 82         [24] 1559 	mov	dpl,_sync_window_sloc2_1_0
      0003DB C0 07            [24] 1560 	push	ar7
      0003DD C0 06            [24] 1561 	push	ar6
      0003DF C0 05            [24] 1562 	push	ar5
      0003E1 C0 04            [24] 1563 	push	ar4
      0003E3 C0 03            [24] 1564 	push	ar3
      0003E5 C0 02            [24] 1565 	push	ar2
      0003E7 12r00r00         [24] 1566 	lcall	_disk_write
      0003EA E5 82            [12] 1567 	mov	a,dpl
      0003EC D0 02            [24] 1568 	pop	ar2
      0003EE D0 03            [24] 1569 	pop	ar3
      0003F0 D0 04            [24] 1570 	pop	ar4
      0003F2 D0 05            [24] 1571 	pop	ar5
      0003F4 D0 06            [24] 1572 	pop	ar6
      0003F6 D0 07            [24] 1573 	pop	ar7
      0003F8 D0 04            [24] 1574 	pop	ar4
      0003FA D0 03            [24] 1575 	pop	ar3
      0003FC D0 02            [24] 1576 	pop	ar2
      0003FE 60 03            [24] 1577 	jz	00129$
      000400 02r05r0B         [24] 1578 	ljmp	00106$
      000403                       1579 00129$:
                                   1580 ;	ff15\source\ff.c:1064: fs->wflag = 0;	/* Clear window dirty flag */
      000403 8A 82            [24] 1581 	mov	dpl,r2
      000405 8B 83            [24] 1582 	mov	dph,r3
      000407 8C F0            [24] 1583 	mov	b,r4
      000409 E4               [12] 1584 	clr	a
      00040A 12r00r00         [24] 1585 	lcall	__gptrput
                                   1586 ;	ff15\source\ff.c:1065: if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
      00040D 85*03 82         [24] 1587 	mov	dpl,_sync_window_sloc1_1_0
      000410 85*04 83         [24] 1588 	mov	dph,(_sync_window_sloc1_1_0 + 1)
      000413 85*05 F0         [24] 1589 	mov	b,(_sync_window_sloc1_1_0 + 2)
      000416 12r00r00         [24] 1590 	lcall	__gptrget
      000419 F5*0A            [12] 1591 	mov	_sync_window_sloc4_1_0,a
      00041B A3               [24] 1592 	inc	dptr
      00041C 12r00r00         [24] 1593 	lcall	__gptrget
      00041F F5*0B            [12] 1594 	mov	(_sync_window_sloc4_1_0 + 1),a
      000421 A3               [24] 1595 	inc	dptr
      000422 12r00r00         [24] 1596 	lcall	__gptrget
      000425 F5*0C            [12] 1597 	mov	(_sync_window_sloc4_1_0 + 2),a
      000427 A3               [24] 1598 	inc	dptr
      000428 12r00r00         [24] 1599 	lcall	__gptrget
      00042B F5*0D            [12] 1600 	mov	(_sync_window_sloc4_1_0 + 3),a
      00042D 74 20            [12] 1601 	mov	a,#0x20
      00042F 2D               [12] 1602 	add	a,r5
      000430 F8               [12] 1603 	mov	r0,a
      000431 E4               [12] 1604 	clr	a
      000432 3E               [12] 1605 	addc	a,r6
      000433 FB               [12] 1606 	mov	r3,a
      000434 8F 04            [24] 1607 	mov	ar4,r7
      000436 88 82            [24] 1608 	mov	dpl,r0
      000438 8B 83            [24] 1609 	mov	dph,r3
      00043A 8C F0            [24] 1610 	mov	b,r4
      00043C 12r00r00         [24] 1611 	lcall	__gptrget
      00043F F8               [12] 1612 	mov	r0,a
      000440 A3               [24] 1613 	inc	dptr
      000441 12r00r00         [24] 1614 	lcall	__gptrget
      000444 FB               [12] 1615 	mov	r3,a
      000445 A3               [24] 1616 	inc	dptr
      000446 12r00r00         [24] 1617 	lcall	__gptrget
      000449 FC               [12] 1618 	mov	r4,a
      00044A A3               [24] 1619 	inc	dptr
      00044B 12r00r00         [24] 1620 	lcall	__gptrget
      00044E FA               [12] 1621 	mov	r2,a
      00044F E5*0A            [12] 1622 	mov	a,_sync_window_sloc4_1_0
      000451 C3               [12] 1623 	clr	c
      000452 98               [12] 1624 	subb	a,r0
      000453 F5*0E            [12] 1625 	mov	_sync_window_sloc5_1_0,a
      000455 E5*0B            [12] 1626 	mov	a,(_sync_window_sloc4_1_0 + 1)
      000457 9B               [12] 1627 	subb	a,r3
      000458 F5*0F            [12] 1628 	mov	(_sync_window_sloc5_1_0 + 1),a
      00045A E5*0C            [12] 1629 	mov	a,(_sync_window_sloc4_1_0 + 2)
      00045C 9C               [12] 1630 	subb	a,r4
      00045D F5*10            [12] 1631 	mov	(_sync_window_sloc5_1_0 + 2),a
      00045F E5*0D            [12] 1632 	mov	a,(_sync_window_sloc4_1_0 + 3)
      000461 9A               [12] 1633 	subb	a,r2
      000462 F5*11            [12] 1634 	mov	(_sync_window_sloc5_1_0 + 3),a
      000464 74 18            [12] 1635 	mov	a,#0x18
      000466 2D               [12] 1636 	add	a,r5
      000467 F9               [12] 1637 	mov	r1,a
      000468 E4               [12] 1638 	clr	a
      000469 3E               [12] 1639 	addc	a,r6
      00046A FC               [12] 1640 	mov	r4,a
      00046B 8F 03            [24] 1641 	mov	ar3,r7
      00046D 89 82            [24] 1642 	mov	dpl,r1
      00046F 8C 83            [24] 1643 	mov	dph,r4
      000471 8B F0            [24] 1644 	mov	b,r3
      000473 12r00r00         [24] 1645 	lcall	__gptrget
      000476 F9               [12] 1646 	mov	r1,a
      000477 A3               [24] 1647 	inc	dptr
      000478 12r00r00         [24] 1648 	lcall	__gptrget
      00047B FA               [12] 1649 	mov	r2,a
      00047C A3               [24] 1650 	inc	dptr
      00047D 12r00r00         [24] 1651 	lcall	__gptrget
      000480 FB               [12] 1652 	mov	r3,a
      000481 A3               [24] 1653 	inc	dptr
      000482 12r00r00         [24] 1654 	lcall	__gptrget
      000485 FC               [12] 1655 	mov	r4,a
      000486 C3               [12] 1656 	clr	c
      000487 E5*0E            [12] 1657 	mov	a,_sync_window_sloc5_1_0
      000489 99               [12] 1658 	subb	a,r1
      00048A E5*0F            [12] 1659 	mov	a,(_sync_window_sloc5_1_0 + 1)
      00048C 9A               [12] 1660 	subb	a,r2
      00048D E5*10            [12] 1661 	mov	a,(_sync_window_sloc5_1_0 + 2)
      00048F 9B               [12] 1662 	subb	a,r3
      000490 E5*11            [12] 1663 	mov	a,(_sync_window_sloc5_1_0 + 3)
      000492 9C               [12] 1664 	subb	a,r4
      000493 40 03            [24] 1665 	jc	00130$
      000495 02r05r11         [24] 1666 	ljmp	00109$
      000498                       1667 00130$:
                                   1668 ;	ff15\source\ff.c:1066: if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it to 2nd FAT if needed */
      000498 C0 01            [24] 1669 	push	ar1
      00049A C0 02            [24] 1670 	push	ar2
      00049C C0 03            [24] 1671 	push	ar3
      00049E C0 04            [24] 1672 	push	ar4
      0004A0 74 03            [12] 1673 	mov	a,#0x03
      0004A2 2D               [12] 1674 	add	a,r5
      0004A3 F8               [12] 1675 	mov	r0,a
      0004A4 E4               [12] 1676 	clr	a
      0004A5 3E               [12] 1677 	addc	a,r6
      0004A6 FB               [12] 1678 	mov	r3,a
      0004A7 8F 04            [24] 1679 	mov	ar4,r7
      0004A9 88 82            [24] 1680 	mov	dpl,r0
      0004AB 8B 83            [24] 1681 	mov	dph,r3
      0004AD 8C F0            [24] 1682 	mov	b,r4
      0004AF 12r00r00         [24] 1683 	lcall	__gptrget
      0004B2 F8               [12] 1684 	mov	r0,a
      0004B3 B8 02 02         [24] 1685 	cjne	r0,#0x02,00131$
      0004B6 80 0A            [24] 1686 	sjmp	00132$
      0004B8                       1687 00131$:
      0004B8 D0 04            [24] 1688 	pop	ar4
      0004BA D0 03            [24] 1689 	pop	ar3
      0004BC D0 02            [24] 1690 	pop	ar2
      0004BE D0 01            [24] 1691 	pop	ar1
      0004C0 80 4F            [24] 1692 	sjmp	00109$
      0004C2                       1693 00132$:
      0004C2 D0 04            [24] 1694 	pop	ar4
      0004C4 D0 03            [24] 1695 	pop	ar3
      0004C6 D0 02            [24] 1696 	pop	ar2
      0004C8 D0 01            [24] 1697 	pop	ar1
      0004CA 85*00 82         [24] 1698 	mov	dpl,_sync_window_sloc0_1_0
      0004CD 85*01 83         [24] 1699 	mov	dph,(_sync_window_sloc0_1_0 + 1)
      0004D0 85*02 F0         [24] 1700 	mov	b,(_sync_window_sloc0_1_0 + 2)
      0004D3 12r00r00         [24] 1701 	lcall	__gptrget
      0004D6 F8               [12] 1702 	mov	r0,a
      0004D7 90r00r00         [24] 1703 	mov	dptr,#_disk_write_PARM_2
      0004DA 74 30            [12] 1704 	mov	a,#0x30
      0004DC 2D               [12] 1705 	add	a,r5
      0004DD F0               [24] 1706 	movx	@dptr,a
      0004DE E4               [12] 1707 	clr	a
      0004DF 3E               [12] 1708 	addc	a,r6
      0004E0 A3               [24] 1709 	inc	dptr
      0004E1 F0               [24] 1710 	movx	@dptr,a
      0004E2 EF               [12] 1711 	mov	a,r7
      0004E3 A3               [24] 1712 	inc	dptr
      0004E4 F0               [24] 1713 	movx	@dptr,a
      0004E5 90r00r00         [24] 1714 	mov	dptr,#_disk_write_PARM_3
      0004E8 E9               [12] 1715 	mov	a,r1
      0004E9 25*0A            [12] 1716 	add	a,_sync_window_sloc4_1_0
      0004EB F0               [24] 1717 	movx	@dptr,a
      0004EC EA               [12] 1718 	mov	a,r2
      0004ED 35*0B            [12] 1719 	addc	a,(_sync_window_sloc4_1_0 + 1)
      0004EF A3               [24] 1720 	inc	dptr
      0004F0 F0               [24] 1721 	movx	@dptr,a
      0004F1 EB               [12] 1722 	mov	a,r3
      0004F2 35*0C            [12] 1723 	addc	a,(_sync_window_sloc4_1_0 + 2)
      0004F4 A3               [24] 1724 	inc	dptr
      0004F5 F0               [24] 1725 	movx	@dptr,a
      0004F6 EC               [12] 1726 	mov	a,r4
      0004F7 35*0D            [12] 1727 	addc	a,(_sync_window_sloc4_1_0 + 3)
      0004F9 A3               [24] 1728 	inc	dptr
      0004FA F0               [24] 1729 	movx	@dptr,a
      0004FB 90r00r00         [24] 1730 	mov	dptr,#_disk_write_PARM_4
      0004FE 74 01            [12] 1731 	mov	a,#0x01
      000500 F0               [24] 1732 	movx	@dptr,a
      000501 E4               [12] 1733 	clr	a
      000502 A3               [24] 1734 	inc	dptr
      000503 F0               [24] 1735 	movx	@dptr,a
      000504 88 82            [24] 1736 	mov	dpl,r0
      000506 12r00r00         [24] 1737 	lcall	_disk_write
      000509 80 06            [24] 1738 	sjmp	00109$
      00050B                       1739 00106$:
                                   1740 ;	ff15\source\ff.c:1069: res = FR_DISK_ERR;
      00050B 90r00r1C         [24] 1741 	mov	dptr,#_sync_window_res_65536_88
      00050E 74 01            [12] 1742 	mov	a,#0x01
      000510 F0               [24] 1743 	movx	@dptr,a
      000511                       1744 00109$:
                                   1745 ;	ff15\source\ff.c:1072: return res;
      000511 90r00r1C         [24] 1746 	mov	dptr,#_sync_window_res_65536_88
      000514 E0               [24] 1747 	movx	a,@dptr
                                   1748 ;	ff15\source\ff.c:1073: }
      000515 F5 82            [12] 1749 	mov	dpl,a
      000517 22               [24] 1750 	ret
                                   1751 ;------------------------------------------------------------
                                   1752 ;Allocation info for local variables in function 'move_window'
                                   1753 ;------------------------------------------------------------
                                   1754 ;sloc0                     Allocated with name '_move_window_sloc0_1_0'
                                   1755 ;sect                      Allocated with name '_move_window_PARM_2'
                                   1756 ;fs                        Allocated with name '_move_window_fs_65536_93'
                                   1757 ;res                       Allocated with name '_move_window_res_65536_94'
                                   1758 ;------------------------------------------------------------
                                   1759 ;	ff15\source\ff.c:1077: static FRESULT move_window (	/* Returns FR_OK or FR_DISK_ERR */
                                   1760 ;	-----------------------------------------
                                   1761 ;	 function move_window
                                   1762 ;	-----------------------------------------
      000518                       1763 _move_window:
      000518 AF F0            [24] 1764 	mov	r7,b
      00051A AE 83            [24] 1765 	mov	r6,dph
      00051C E5 82            [12] 1766 	mov	a,dpl
      00051E 90r00r21         [24] 1767 	mov	dptr,#_move_window_fs_65536_93
      000521 F0               [24] 1768 	movx	@dptr,a
      000522 EE               [12] 1769 	mov	a,r6
      000523 A3               [24] 1770 	inc	dptr
      000524 F0               [24] 1771 	movx	@dptr,a
      000525 EF               [12] 1772 	mov	a,r7
      000526 A3               [24] 1773 	inc	dptr
      000527 F0               [24] 1774 	movx	@dptr,a
                                   1775 ;	ff15\source\ff.c:1082: FRESULT res = FR_OK;
      000528 90r00r24         [24] 1776 	mov	dptr,#_move_window_res_65536_94
      00052B E4               [12] 1777 	clr	a
      00052C F0               [24] 1778 	movx	@dptr,a
                                   1779 ;	ff15\source\ff.c:1085: if (sect != fs->winsect) {	/* Window offset changed? */
      00052D 90r00r21         [24] 1780 	mov	dptr,#_move_window_fs_65536_93
      000530 E0               [24] 1781 	movx	a,@dptr
      000531 FD               [12] 1782 	mov	r5,a
      000532 A3               [24] 1783 	inc	dptr
      000533 E0               [24] 1784 	movx	a,@dptr
      000534 FE               [12] 1785 	mov	r6,a
      000535 A3               [24] 1786 	inc	dptr
      000536 E0               [24] 1787 	movx	a,@dptr
      000537 FF               [12] 1788 	mov	r7,a
      000538 74 2C            [12] 1789 	mov	a,#0x2c
      00053A 2D               [12] 1790 	add	a,r5
      00053B FC               [12] 1791 	mov	r4,a
      00053C E4               [12] 1792 	clr	a
      00053D 3E               [12] 1793 	addc	a,r6
      00053E FA               [12] 1794 	mov	r2,a
      00053F 8F 03            [24] 1795 	mov	ar3,r7
      000541 8C 82            [24] 1796 	mov	dpl,r4
      000543 8A 83            [24] 1797 	mov	dph,r2
      000545 8B F0            [24] 1798 	mov	b,r3
      000547 12r00r00         [24] 1799 	lcall	__gptrget
      00054A F9               [12] 1800 	mov	r1,a
      00054B A3               [24] 1801 	inc	dptr
      00054C 12r00r00         [24] 1802 	lcall	__gptrget
      00054F FA               [12] 1803 	mov	r2,a
      000550 A3               [24] 1804 	inc	dptr
      000551 12r00r00         [24] 1805 	lcall	__gptrget
      000554 FB               [12] 1806 	mov	r3,a
      000555 A3               [24] 1807 	inc	dptr
      000556 12r00r00         [24] 1808 	lcall	__gptrget
      000559 FC               [12] 1809 	mov	r4,a
      00055A 90r00r1D         [24] 1810 	mov	dptr,#_move_window_PARM_2
      00055D E0               [24] 1811 	movx	a,@dptr
      00055E F5*12            [12] 1812 	mov	_move_window_sloc0_1_0,a
      000560 A3               [24] 1813 	inc	dptr
      000561 E0               [24] 1814 	movx	a,@dptr
      000562 F5*13            [12] 1815 	mov	(_move_window_sloc0_1_0 + 1),a
      000564 A3               [24] 1816 	inc	dptr
      000565 E0               [24] 1817 	movx	a,@dptr
      000566 F5*14            [12] 1818 	mov	(_move_window_sloc0_1_0 + 2),a
      000568 A3               [24] 1819 	inc	dptr
      000569 E0               [24] 1820 	movx	a,@dptr
      00056A F5*15            [12] 1821 	mov	(_move_window_sloc0_1_0 + 3),a
      00056C E9               [12] 1822 	mov	a,r1
      00056D B5*12 0F         [24] 1823 	cjne	a,_move_window_sloc0_1_0,00121$
      000570 EA               [12] 1824 	mov	a,r2
      000571 B5*13 0B         [24] 1825 	cjne	a,(_move_window_sloc0_1_0 + 1),00121$
      000574 EB               [12] 1826 	mov	a,r3
      000575 B5*14 07         [24] 1827 	cjne	a,(_move_window_sloc0_1_0 + 2),00121$
      000578 EC               [12] 1828 	mov	a,r4
      000579 B5*15 03         [24] 1829 	cjne	a,(_move_window_sloc0_1_0 + 3),00121$
      00057C 02r06r30         [24] 1830 	ljmp	00106$
      00057F                       1831 00121$:
                                   1832 ;	ff15\source\ff.c:1087: res = sync_window(fs);		/* Flush the window */
      00057F 8D 82            [24] 1833 	mov	dpl,r5
      000581 8E 83            [24] 1834 	mov	dph,r6
      000583 8F F0            [24] 1835 	mov	b,r7
      000585 12r03r2B         [24] 1836 	lcall	_sync_window
      000588 AF 82            [24] 1837 	mov	r7,dpl
      00058A 90r00r24         [24] 1838 	mov	dptr,#_move_window_res_65536_94
      00058D EF               [12] 1839 	mov	a,r7
      00058E F0               [24] 1840 	movx	@dptr,a
                                   1841 ;	ff15\source\ff.c:1089: if (res == FR_OK) {			/* Fill sector window with new data */
      00058F EF               [12] 1842 	mov	a,r7
      000590 60 03            [24] 1843 	jz	00122$
      000592 02r06r30         [24] 1844 	ljmp	00106$
      000595                       1845 00122$:
                                   1846 ;	ff15\source\ff.c:1090: if (disk_read(fs->pdrv, fs->win, sect, 1) != RES_OK) {
      000595 90r00r21         [24] 1847 	mov	dptr,#_move_window_fs_65536_93
      000598 E0               [24] 1848 	movx	a,@dptr
      000599 FD               [12] 1849 	mov	r5,a
      00059A A3               [24] 1850 	inc	dptr
      00059B E0               [24] 1851 	movx	a,@dptr
      00059C FE               [12] 1852 	mov	r6,a
      00059D A3               [24] 1853 	inc	dptr
      00059E E0               [24] 1854 	movx	a,@dptr
      00059F FF               [12] 1855 	mov	r7,a
      0005A0 74 01            [12] 1856 	mov	a,#0x01
      0005A2 2D               [12] 1857 	add	a,r5
      0005A3 FA               [12] 1858 	mov	r2,a
      0005A4 E4               [12] 1859 	clr	a
      0005A5 3E               [12] 1860 	addc	a,r6
      0005A6 FB               [12] 1861 	mov	r3,a
      0005A7 8F 04            [24] 1862 	mov	ar4,r7
      0005A9 8A 82            [24] 1863 	mov	dpl,r2
      0005AB 8B 83            [24] 1864 	mov	dph,r3
      0005AD 8C F0            [24] 1865 	mov	b,r4
      0005AF 12r00r00         [24] 1866 	lcall	__gptrget
      0005B2 FA               [12] 1867 	mov	r2,a
      0005B3 90r00r00         [24] 1868 	mov	dptr,#_disk_read_PARM_2
      0005B6 74 30            [12] 1869 	mov	a,#0x30
      0005B8 2D               [12] 1870 	add	a,r5
      0005B9 F0               [24] 1871 	movx	@dptr,a
      0005BA E4               [12] 1872 	clr	a
      0005BB 3E               [12] 1873 	addc	a,r6
      0005BC A3               [24] 1874 	inc	dptr
      0005BD F0               [24] 1875 	movx	@dptr,a
      0005BE EF               [12] 1876 	mov	a,r7
      0005BF A3               [24] 1877 	inc	dptr
      0005C0 F0               [24] 1878 	movx	@dptr,a
      0005C1 90r00r00         [24] 1879 	mov	dptr,#_disk_read_PARM_3
      0005C4 E5*12            [12] 1880 	mov	a,_move_window_sloc0_1_0
      0005C6 F0               [24] 1881 	movx	@dptr,a
      0005C7 E5*13            [12] 1882 	mov	a,(_move_window_sloc0_1_0 + 1)
      0005C9 A3               [24] 1883 	inc	dptr
      0005CA F0               [24] 1884 	movx	@dptr,a
      0005CB E5*14            [12] 1885 	mov	a,(_move_window_sloc0_1_0 + 2)
      0005CD A3               [24] 1886 	inc	dptr
      0005CE F0               [24] 1887 	movx	@dptr,a
      0005CF E5*15            [12] 1888 	mov	a,(_move_window_sloc0_1_0 + 3)
      0005D1 A3               [24] 1889 	inc	dptr
      0005D2 F0               [24] 1890 	movx	@dptr,a
      0005D3 90r00r00         [24] 1891 	mov	dptr,#_disk_read_PARM_4
      0005D6 74 01            [12] 1892 	mov	a,#0x01
      0005D8 F0               [24] 1893 	movx	@dptr,a
      0005D9 E4               [12] 1894 	clr	a
      0005DA A3               [24] 1895 	inc	dptr
      0005DB F0               [24] 1896 	movx	@dptr,a
      0005DC 8A 82            [24] 1897 	mov	dpl,r2
      0005DE 12r00r00         [24] 1898 	lcall	_disk_read
      0005E1 E5 82            [12] 1899 	mov	a,dpl
      0005E3 60 12            [24] 1900 	jz	00102$
                                   1901 ;	ff15\source\ff.c:1091: sect = (LBA_t)0 - 1;	/* Invalidate window if read data is not valid */
      0005E5 90r00r1D         [24] 1902 	mov	dptr,#_move_window_PARM_2
      0005E8 74 FF            [12] 1903 	mov	a,#0xff
      0005EA F0               [24] 1904 	movx	@dptr,a
      0005EB A3               [24] 1905 	inc	dptr
      0005EC F0               [24] 1906 	movx	@dptr,a
      0005ED A3               [24] 1907 	inc	dptr
      0005EE F0               [24] 1908 	movx	@dptr,a
      0005EF A3               [24] 1909 	inc	dptr
      0005F0 F0               [24] 1910 	movx	@dptr,a
                                   1911 ;	ff15\source\ff.c:1092: res = FR_DISK_ERR;
      0005F1 90r00r24         [24] 1912 	mov	dptr,#_move_window_res_65536_94
      0005F4 74 01            [12] 1913 	mov	a,#0x01
      0005F6 F0               [24] 1914 	movx	@dptr,a
      0005F7                       1915 00102$:
                                   1916 ;	ff15\source\ff.c:1094: fs->winsect = sect;
      0005F7 90r00r21         [24] 1917 	mov	dptr,#_move_window_fs_65536_93
      0005FA E0               [24] 1918 	movx	a,@dptr
      0005FB FD               [12] 1919 	mov	r5,a
      0005FC A3               [24] 1920 	inc	dptr
      0005FD E0               [24] 1921 	movx	a,@dptr
      0005FE FE               [12] 1922 	mov	r6,a
      0005FF A3               [24] 1923 	inc	dptr
      000600 E0               [24] 1924 	movx	a,@dptr
      000601 FF               [12] 1925 	mov	r7,a
      000602 74 2C            [12] 1926 	mov	a,#0x2c
      000604 2D               [12] 1927 	add	a,r5
      000605 FD               [12] 1928 	mov	r5,a
      000606 E4               [12] 1929 	clr	a
      000607 3E               [12] 1930 	addc	a,r6
      000608 FE               [12] 1931 	mov	r6,a
      000609 90r00r1D         [24] 1932 	mov	dptr,#_move_window_PARM_2
      00060C E0               [24] 1933 	movx	a,@dptr
      00060D F9               [12] 1934 	mov	r1,a
      00060E A3               [24] 1935 	inc	dptr
      00060F E0               [24] 1936 	movx	a,@dptr
      000610 FA               [12] 1937 	mov	r2,a
      000611 A3               [24] 1938 	inc	dptr
      000612 E0               [24] 1939 	movx	a,@dptr
      000613 FB               [12] 1940 	mov	r3,a
      000614 A3               [24] 1941 	inc	dptr
      000615 E0               [24] 1942 	movx	a,@dptr
      000616 FC               [12] 1943 	mov	r4,a
      000617 8D 82            [24] 1944 	mov	dpl,r5
      000619 8E 83            [24] 1945 	mov	dph,r6
      00061B 8F F0            [24] 1946 	mov	b,r7
      00061D E9               [12] 1947 	mov	a,r1
      00061E 12r00r00         [24] 1948 	lcall	__gptrput
      000621 A3               [24] 1949 	inc	dptr
      000622 EA               [12] 1950 	mov	a,r2
      000623 12r00r00         [24] 1951 	lcall	__gptrput
      000626 A3               [24] 1952 	inc	dptr
      000627 EB               [12] 1953 	mov	a,r3
      000628 12r00r00         [24] 1954 	lcall	__gptrput
      00062B A3               [24] 1955 	inc	dptr
      00062C EC               [12] 1956 	mov	a,r4
      00062D 12r00r00         [24] 1957 	lcall	__gptrput
      000630                       1958 00106$:
                                   1959 ;	ff15\source\ff.c:1097: return res;
      000630 90r00r24         [24] 1960 	mov	dptr,#_move_window_res_65536_94
      000633 E0               [24] 1961 	movx	a,@dptr
                                   1962 ;	ff15\source\ff.c:1098: }
      000634 F5 82            [12] 1963 	mov	dpl,a
      000636 22               [24] 1964 	ret
                                   1965 ;------------------------------------------------------------
                                   1966 ;Allocation info for local variables in function 'sync_fs'
                                   1967 ;------------------------------------------------------------
                                   1968 ;sloc0                     Allocated with name '_sync_fs_sloc0_1_0'
                                   1969 ;sloc1                     Allocated with name '_sync_fs_sloc1_1_0'
                                   1970 ;sloc2                     Allocated with name '_sync_fs_sloc2_1_0'
                                   1971 ;fs                        Allocated with name '_sync_fs_fs_65536_98'
                                   1972 ;res                       Allocated with name '_sync_fs_res_65536_99'
                                   1973 ;------------------------------------------------------------
                                   1974 ;	ff15\source\ff.c:1108: static FRESULT sync_fs (	/* Returns FR_OK or FR_DISK_ERR */
                                   1975 ;	-----------------------------------------
                                   1976 ;	 function sync_fs
                                   1977 ;	-----------------------------------------
      000637                       1978 _sync_fs:
      000637 AF F0            [24] 1979 	mov	r7,b
      000639 AE 83            [24] 1980 	mov	r6,dph
      00063B E5 82            [12] 1981 	mov	a,dpl
      00063D 90r00r25         [24] 1982 	mov	dptr,#_sync_fs_fs_65536_98
      000640 F0               [24] 1983 	movx	@dptr,a
      000641 EE               [12] 1984 	mov	a,r6
      000642 A3               [24] 1985 	inc	dptr
      000643 F0               [24] 1986 	movx	@dptr,a
      000644 EF               [12] 1987 	mov	a,r7
      000645 A3               [24] 1988 	inc	dptr
      000646 F0               [24] 1989 	movx	@dptr,a
                                   1990 ;	ff15\source\ff.c:1115: res = sync_window(fs);
      000647 90r00r25         [24] 1991 	mov	dptr,#_sync_fs_fs_65536_98
      00064A E0               [24] 1992 	movx	a,@dptr
      00064B FD               [12] 1993 	mov	r5,a
      00064C A3               [24] 1994 	inc	dptr
      00064D E0               [24] 1995 	movx	a,@dptr
      00064E FE               [12] 1996 	mov	r6,a
      00064F A3               [24] 1997 	inc	dptr
      000650 E0               [24] 1998 	movx	a,@dptr
      000651 FF               [12] 1999 	mov	r7,a
      000652 8D 82            [24] 2000 	mov	dpl,r5
      000654 8E 83            [24] 2001 	mov	dph,r6
      000656 8F F0            [24] 2002 	mov	b,r7
      000658 12r03r2B         [24] 2003 	lcall	_sync_window
      00065B AF 82            [24] 2004 	mov	r7,dpl
      00065D 90r00r28         [24] 2005 	mov	dptr,#_sync_fs_res_65536_99
      000660 EF               [12] 2006 	mov	a,r7
      000661 F0               [24] 2007 	movx	@dptr,a
                                   2008 ;	ff15\source\ff.c:1116: if (res == FR_OK) {
      000662 EF               [12] 2009 	mov	a,r7
      000663 60 03            [24] 2010 	jz	00126$
      000665 02r08rD5         [24] 2011 	ljmp	00107$
      000668                       2012 00126$:
                                   2013 ;	ff15\source\ff.c:1117: if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
      000668 90r00r25         [24] 2014 	mov	dptr,#_sync_fs_fs_65536_98
      00066B E0               [24] 2015 	movx	a,@dptr
      00066C FD               [12] 2016 	mov	r5,a
      00066D A3               [24] 2017 	inc	dptr
      00066E E0               [24] 2018 	movx	a,@dptr
      00066F FE               [12] 2019 	mov	r6,a
      000670 A3               [24] 2020 	inc	dptr
      000671 E0               [24] 2021 	movx	a,@dptr
      000672 FF               [12] 2022 	mov	r7,a
      000673 8D 82            [24] 2023 	mov	dpl,r5
      000675 8E 83            [24] 2024 	mov	dph,r6
      000677 8F F0            [24] 2025 	mov	b,r7
      000679 12r00r00         [24] 2026 	lcall	__gptrget
      00067C FC               [12] 2027 	mov	r4,a
      00067D BC 03 02         [24] 2028 	cjne	r4,#0x03,00127$
      000680 80 03            [24] 2029 	sjmp	00128$
      000682                       2030 00127$:
      000682 02r08r9F         [24] 2031 	ljmp	00102$
      000685                       2032 00128$:
      000685 74 05            [12] 2033 	mov	a,#0x05
      000687 2D               [12] 2034 	add	a,r5
      000688 F5*16            [12] 2035 	mov	_sync_fs_sloc0_1_0,a
      00068A E4               [12] 2036 	clr	a
      00068B 3E               [12] 2037 	addc	a,r6
      00068C F5*17            [12] 2038 	mov	(_sync_fs_sloc0_1_0 + 1),a
      00068E 8F*18            [24] 2039 	mov	(_sync_fs_sloc0_1_0 + 2),r7
      000690 85*16 82         [24] 2040 	mov	dpl,_sync_fs_sloc0_1_0
      000693 85*17 83         [24] 2041 	mov	dph,(_sync_fs_sloc0_1_0 + 1)
      000696 85*18 F0         [24] 2042 	mov	b,(_sync_fs_sloc0_1_0 + 2)
      000699 12r00r00         [24] 2043 	lcall	__gptrget
      00069C F9               [12] 2044 	mov	r1,a
      00069D B9 01 02         [24] 2045 	cjne	r1,#0x01,00129$
      0006A0 80 03            [24] 2046 	sjmp	00130$
      0006A2                       2047 00129$:
      0006A2 02r08r9F         [24] 2048 	ljmp	00102$
      0006A5                       2049 00130$:
                                   2050 ;	ff15\source\ff.c:1119: memset(fs->win, 0, sizeof fs->win);
      0006A5 74 30            [12] 2051 	mov	a,#0x30
      0006A7 2D               [12] 2052 	add	a,r5
      0006A8 F5*19            [12] 2053 	mov	_sync_fs_sloc1_1_0,a
      0006AA E4               [12] 2054 	clr	a
      0006AB 3E               [12] 2055 	addc	a,r6
      0006AC F5*1A            [12] 2056 	mov	(_sync_fs_sloc1_1_0 + 1),a
      0006AE 8F*1B            [24] 2057 	mov	(_sync_fs_sloc1_1_0 + 2),r7
      0006B0 AA*19            [24] 2058 	mov	r2,_sync_fs_sloc1_1_0
      0006B2 AB*1A            [24] 2059 	mov	r3,(_sync_fs_sloc1_1_0 + 1)
      0006B4 AC*1B            [24] 2060 	mov	r4,(_sync_fs_sloc1_1_0 + 2)
      0006B6 90r00r00         [24] 2061 	mov	dptr,#_memset_PARM_2
      0006B9 E4               [12] 2062 	clr	a
      0006BA F0               [24] 2063 	movx	@dptr,a
      0006BB 90r00r00         [24] 2064 	mov	dptr,#_memset_PARM_3
      0006BE F0               [24] 2065 	movx	@dptr,a
      0006BF 74 02            [12] 2066 	mov	a,#0x02
      0006C1 A3               [24] 2067 	inc	dptr
      0006C2 F0               [24] 2068 	movx	@dptr,a
      0006C3 8A 82            [24] 2069 	mov	dpl,r2
      0006C5 8B 83            [24] 2070 	mov	dph,r3
      0006C7 8C F0            [24] 2071 	mov	b,r4
      0006C9 C0 07            [24] 2072 	push	ar7
      0006CB C0 06            [24] 2073 	push	ar6
      0006CD C0 05            [24] 2074 	push	ar5
      0006CF 12r00r00         [24] 2075 	lcall	_memset
      0006D2 D0 05            [24] 2076 	pop	ar5
      0006D4 D0 06            [24] 2077 	pop	ar6
      0006D6 D0 07            [24] 2078 	pop	ar7
                                   2079 ;	ff15\source\ff.c:1120: st_word(fs->win + BS_55AA, 0xAA55);					/* Boot signature */
      0006D8 74 2E            [12] 2080 	mov	a,#0x2e
      0006DA 2D               [12] 2081 	add	a,r5
      0006DB FA               [12] 2082 	mov	r2,a
      0006DC 74 02            [12] 2083 	mov	a,#0x02
      0006DE 3E               [12] 2084 	addc	a,r6
      0006DF FB               [12] 2085 	mov	r3,a
      0006E0 8F 04            [24] 2086 	mov	ar4,r7
      0006E2 90r00r0B         [24] 2087 	mov	dptr,#_st_word_PARM_2
      0006E5 74 55            [12] 2088 	mov	a,#0x55
      0006E7 F0               [24] 2089 	movx	@dptr,a
      0006E8 F4               [12] 2090 	cpl	a
      0006E9 A3               [24] 2091 	inc	dptr
      0006EA F0               [24] 2092 	movx	@dptr,a
      0006EB 8A 82            [24] 2093 	mov	dpl,r2
      0006ED 8B 83            [24] 2094 	mov	dph,r3
      0006EF 8C F0            [24] 2095 	mov	b,r4
      0006F1 C0 07            [24] 2096 	push	ar7
      0006F3 C0 06            [24] 2097 	push	ar6
      0006F5 C0 05            [24] 2098 	push	ar5
      0006F7 12r01r02         [24] 2099 	lcall	_st_word
                                   2100 ;	ff15\source\ff.c:1121: st_dword(fs->win + FSI_LeadSig, 0x41615252);		/* Leading signature */
      0006FA 90r00r10         [24] 2101 	mov	dptr,#_st_dword_PARM_2
      0006FD 74 52            [12] 2102 	mov	a,#0x52
      0006FF F0               [24] 2103 	movx	@dptr,a
      000700 A3               [24] 2104 	inc	dptr
      000701 F0               [24] 2105 	movx	@dptr,a
      000702 74 61            [12] 2106 	mov	a,#0x61
      000704 A3               [24] 2107 	inc	dptr
      000705 F0               [24] 2108 	movx	@dptr,a
      000706 74 41            [12] 2109 	mov	a,#0x41
      000708 A3               [24] 2110 	inc	dptr
      000709 F0               [24] 2111 	movx	@dptr,a
      00070A 85*19 82         [24] 2112 	mov	dpl,_sync_fs_sloc1_1_0
      00070D 85*1A 83         [24] 2113 	mov	dph,(_sync_fs_sloc1_1_0 + 1)
      000710 85*1B F0         [24] 2114 	mov	b,(_sync_fs_sloc1_1_0 + 2)
      000713 12r01r76         [24] 2115 	lcall	_st_dword
      000716 D0 05            [24] 2116 	pop	ar5
      000718 D0 06            [24] 2117 	pop	ar6
      00071A D0 07            [24] 2118 	pop	ar7
                                   2119 ;	ff15\source\ff.c:1122: st_dword(fs->win + FSI_StrucSig, 0x61417272);		/* Structure signature */
      00071C 74 14            [12] 2120 	mov	a,#0x14
      00071E 2D               [12] 2121 	add	a,r5
      00071F FA               [12] 2122 	mov	r2,a
      000720 74 02            [12] 2123 	mov	a,#0x02
      000722 3E               [12] 2124 	addc	a,r6
      000723 FB               [12] 2125 	mov	r3,a
      000724 8F 04            [24] 2126 	mov	ar4,r7
      000726 90r00r10         [24] 2127 	mov	dptr,#_st_dword_PARM_2
      000729 74 72            [12] 2128 	mov	a,#0x72
      00072B F0               [24] 2129 	movx	@dptr,a
      00072C A3               [24] 2130 	inc	dptr
      00072D F0               [24] 2131 	movx	@dptr,a
      00072E 74 41            [12] 2132 	mov	a,#0x41
      000730 A3               [24] 2133 	inc	dptr
      000731 F0               [24] 2134 	movx	@dptr,a
      000732 74 61            [12] 2135 	mov	a,#0x61
      000734 A3               [24] 2136 	inc	dptr
      000735 F0               [24] 2137 	movx	@dptr,a
      000736 8A 82            [24] 2138 	mov	dpl,r2
      000738 8B 83            [24] 2139 	mov	dph,r3
      00073A 8C F0            [24] 2140 	mov	b,r4
      00073C C0 07            [24] 2141 	push	ar7
      00073E C0 06            [24] 2142 	push	ar6
      000740 C0 05            [24] 2143 	push	ar5
      000742 12r01r76         [24] 2144 	lcall	_st_dword
      000745 D0 05            [24] 2145 	pop	ar5
      000747 D0 06            [24] 2146 	pop	ar6
      000749 D0 07            [24] 2147 	pop	ar7
                                   2148 ;	ff15\source\ff.c:1123: st_dword(fs->win + FSI_Free_Count, fs->free_clst);	/* Number of free clusters */
      00074B 74 18            [12] 2149 	mov	a,#0x18
      00074D 2D               [12] 2150 	add	a,r5
      00074E F5*19            [12] 2151 	mov	_sync_fs_sloc1_1_0,a
      000750 74 02            [12] 2152 	mov	a,#0x02
      000752 3E               [12] 2153 	addc	a,r6
      000753 F5*1A            [12] 2154 	mov	(_sync_fs_sloc1_1_0 + 1),a
      000755 8F*1B            [24] 2155 	mov	(_sync_fs_sloc1_1_0 + 2),r7
      000757 74 10            [12] 2156 	mov	a,#0x10
      000759 2D               [12] 2157 	add	a,r5
      00075A F8               [12] 2158 	mov	r0,a
      00075B E4               [12] 2159 	clr	a
      00075C 3E               [12] 2160 	addc	a,r6
      00075D F9               [12] 2161 	mov	r1,a
      00075E 8F 04            [24] 2162 	mov	ar4,r7
      000760 88 82            [24] 2163 	mov	dpl,r0
      000762 89 83            [24] 2164 	mov	dph,r1
      000764 8C F0            [24] 2165 	mov	b,r4
      000766 12r00r00         [24] 2166 	lcall	__gptrget
      000769 F8               [12] 2167 	mov	r0,a
      00076A A3               [24] 2168 	inc	dptr
      00076B 12r00r00         [24] 2169 	lcall	__gptrget
      00076E F9               [12] 2170 	mov	r1,a
      00076F A3               [24] 2171 	inc	dptr
      000770 12r00r00         [24] 2172 	lcall	__gptrget
      000773 FC               [12] 2173 	mov	r4,a
      000774 A3               [24] 2174 	inc	dptr
      000775 12r00r00         [24] 2175 	lcall	__gptrget
      000778 FB               [12] 2176 	mov	r3,a
      000779 90r00r10         [24] 2177 	mov	dptr,#_st_dword_PARM_2
      00077C E8               [12] 2178 	mov	a,r0
      00077D F0               [24] 2179 	movx	@dptr,a
      00077E E9               [12] 2180 	mov	a,r1
      00077F A3               [24] 2181 	inc	dptr
      000780 F0               [24] 2182 	movx	@dptr,a
      000781 EC               [12] 2183 	mov	a,r4
      000782 A3               [24] 2184 	inc	dptr
      000783 F0               [24] 2185 	movx	@dptr,a
      000784 EB               [12] 2186 	mov	a,r3
      000785 A3               [24] 2187 	inc	dptr
      000786 F0               [24] 2188 	movx	@dptr,a
      000787 85*19 82         [24] 2189 	mov	dpl,_sync_fs_sloc1_1_0
      00078A 85*1A 83         [24] 2190 	mov	dph,(_sync_fs_sloc1_1_0 + 1)
      00078D 85*1B F0         [24] 2191 	mov	b,(_sync_fs_sloc1_1_0 + 2)
      000790 C0 07            [24] 2192 	push	ar7
      000792 C0 06            [24] 2193 	push	ar6
      000794 C0 05            [24] 2194 	push	ar5
      000796 12r01r76         [24] 2195 	lcall	_st_dword
      000799 D0 05            [24] 2196 	pop	ar5
      00079B D0 06            [24] 2197 	pop	ar6
      00079D D0 07            [24] 2198 	pop	ar7
                                   2199 ;	ff15\source\ff.c:1124: st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);	/* Last allocated culuster */
      00079F 74 1C            [12] 2200 	mov	a,#0x1c
      0007A1 2D               [12] 2201 	add	a,r5
      0007A2 F5*19            [12] 2202 	mov	_sync_fs_sloc1_1_0,a
      0007A4 74 02            [12] 2203 	mov	a,#0x02
      0007A6 3E               [12] 2204 	addc	a,r6
      0007A7 F5*1A            [12] 2205 	mov	(_sync_fs_sloc1_1_0 + 1),a
      0007A9 8F*1B            [24] 2206 	mov	(_sync_fs_sloc1_1_0 + 2),r7
      0007AB 74 0C            [12] 2207 	mov	a,#0x0c
      0007AD 2D               [12] 2208 	add	a,r5
      0007AE F8               [12] 2209 	mov	r0,a
      0007AF E4               [12] 2210 	clr	a
      0007B0 3E               [12] 2211 	addc	a,r6
      0007B1 F9               [12] 2212 	mov	r1,a
      0007B2 8F 04            [24] 2213 	mov	ar4,r7
      0007B4 88 82            [24] 2214 	mov	dpl,r0
      0007B6 89 83            [24] 2215 	mov	dph,r1
      0007B8 8C F0            [24] 2216 	mov	b,r4
      0007BA 12r00r00         [24] 2217 	lcall	__gptrget
      0007BD F8               [12] 2218 	mov	r0,a
      0007BE A3               [24] 2219 	inc	dptr
      0007BF 12r00r00         [24] 2220 	lcall	__gptrget
      0007C2 F9               [12] 2221 	mov	r1,a
      0007C3 A3               [24] 2222 	inc	dptr
      0007C4 12r00r00         [24] 2223 	lcall	__gptrget
      0007C7 FC               [12] 2224 	mov	r4,a
      0007C8 A3               [24] 2225 	inc	dptr
      0007C9 12r00r00         [24] 2226 	lcall	__gptrget
      0007CC FB               [12] 2227 	mov	r3,a
      0007CD 90r00r10         [24] 2228 	mov	dptr,#_st_dword_PARM_2
      0007D0 E8               [12] 2229 	mov	a,r0
      0007D1 F0               [24] 2230 	movx	@dptr,a
      0007D2 E9               [12] 2231 	mov	a,r1
      0007D3 A3               [24] 2232 	inc	dptr
      0007D4 F0               [24] 2233 	movx	@dptr,a
      0007D5 EC               [12] 2234 	mov	a,r4
      0007D6 A3               [24] 2235 	inc	dptr
      0007D7 F0               [24] 2236 	movx	@dptr,a
      0007D8 EB               [12] 2237 	mov	a,r3
      0007D9 A3               [24] 2238 	inc	dptr
      0007DA F0               [24] 2239 	movx	@dptr,a
      0007DB 85*19 82         [24] 2240 	mov	dpl,_sync_fs_sloc1_1_0
      0007DE 85*1A 83         [24] 2241 	mov	dph,(_sync_fs_sloc1_1_0 + 1)
      0007E1 85*1B F0         [24] 2242 	mov	b,(_sync_fs_sloc1_1_0 + 2)
      0007E4 C0 07            [24] 2243 	push	ar7
      0007E6 C0 06            [24] 2244 	push	ar6
      0007E8 C0 05            [24] 2245 	push	ar5
      0007EA 12r01r76         [24] 2246 	lcall	_st_dword
      0007ED D0 05            [24] 2247 	pop	ar5
      0007EF D0 06            [24] 2248 	pop	ar6
      0007F1 D0 07            [24] 2249 	pop	ar7
                                   2250 ;	ff15\source\ff.c:1125: fs->winsect = fs->volbase + 1;						/* Write it into the FSInfo sector (Next to VBR) */
      0007F3 74 2C            [12] 2251 	mov	a,#0x2c
      0007F5 2D               [12] 2252 	add	a,r5
      0007F6 F5*19            [12] 2253 	mov	_sync_fs_sloc1_1_0,a
      0007F8 E4               [12] 2254 	clr	a
      0007F9 3E               [12] 2255 	addc	a,r6
      0007FA F5*1A            [12] 2256 	mov	(_sync_fs_sloc1_1_0 + 1),a
      0007FC 8F*1B            [24] 2257 	mov	(_sync_fs_sloc1_1_0 + 2),r7
      0007FE 74 1C            [12] 2258 	mov	a,#0x1c
      000800 2D               [12] 2259 	add	a,r5
      000801 F8               [12] 2260 	mov	r0,a
      000802 E4               [12] 2261 	clr	a
      000803 3E               [12] 2262 	addc	a,r6
      000804 F9               [12] 2263 	mov	r1,a
      000805 8F 04            [24] 2264 	mov	ar4,r7
      000807 88 82            [24] 2265 	mov	dpl,r0
      000809 89 83            [24] 2266 	mov	dph,r1
      00080B 8C F0            [24] 2267 	mov	b,r4
      00080D 12r00r00         [24] 2268 	lcall	__gptrget
      000810 F8               [12] 2269 	mov	r0,a
      000811 A3               [24] 2270 	inc	dptr
      000812 12r00r00         [24] 2271 	lcall	__gptrget
      000815 F9               [12] 2272 	mov	r1,a
      000816 A3               [24] 2273 	inc	dptr
      000817 12r00r00         [24] 2274 	lcall	__gptrget
      00081A FC               [12] 2275 	mov	r4,a
      00081B A3               [24] 2276 	inc	dptr
      00081C 12r00r00         [24] 2277 	lcall	__gptrget
      00081F FB               [12] 2278 	mov	r3,a
      000820 74 01            [12] 2279 	mov	a,#0x01
      000822 28               [12] 2280 	add	a,r0
      000823 F5*1C            [12] 2281 	mov	_sync_fs_sloc2_1_0,a
      000825 E4               [12] 2282 	clr	a
      000826 39               [12] 2283 	addc	a,r1
      000827 F5*1D            [12] 2284 	mov	(_sync_fs_sloc2_1_0 + 1),a
      000829 E4               [12] 2285 	clr	a
      00082A 3C               [12] 2286 	addc	a,r4
      00082B F5*1E            [12] 2287 	mov	(_sync_fs_sloc2_1_0 + 2),a
      00082D E4               [12] 2288 	clr	a
      00082E 3B               [12] 2289 	addc	a,r3
      00082F F5*1F            [12] 2290 	mov	(_sync_fs_sloc2_1_0 + 3),a
      000831 85*19 82         [24] 2291 	mov	dpl,_sync_fs_sloc1_1_0
      000834 85*1A 83         [24] 2292 	mov	dph,(_sync_fs_sloc1_1_0 + 1)
      000837 85*1B F0         [24] 2293 	mov	b,(_sync_fs_sloc1_1_0 + 2)
      00083A E5*1C            [12] 2294 	mov	a,_sync_fs_sloc2_1_0
      00083C 12r00r00         [24] 2295 	lcall	__gptrput
      00083F A3               [24] 2296 	inc	dptr
      000840 E5*1D            [12] 2297 	mov	a,(_sync_fs_sloc2_1_0 + 1)
      000842 12r00r00         [24] 2298 	lcall	__gptrput
      000845 A3               [24] 2299 	inc	dptr
      000846 E5*1E            [12] 2300 	mov	a,(_sync_fs_sloc2_1_0 + 2)
      000848 12r00r00         [24] 2301 	lcall	__gptrput
      00084B A3               [24] 2302 	inc	dptr
      00084C E5*1F            [12] 2303 	mov	a,(_sync_fs_sloc2_1_0 + 3)
      00084E 12r00r00         [24] 2304 	lcall	__gptrput
                                   2305 ;	ff15\source\ff.c:1126: disk_write(fs->pdrv, fs->win, fs->winsect, 1);
      000851 74 01            [12] 2306 	mov	a,#0x01
      000853 2D               [12] 2307 	add	a,r5
      000854 FA               [12] 2308 	mov	r2,a
      000855 E4               [12] 2309 	clr	a
      000856 3E               [12] 2310 	addc	a,r6
      000857 FB               [12] 2311 	mov	r3,a
      000858 8F 04            [24] 2312 	mov	ar4,r7
      00085A 8A 82            [24] 2313 	mov	dpl,r2
      00085C 8B 83            [24] 2314 	mov	dph,r3
      00085E 8C F0            [24] 2315 	mov	b,r4
      000860 12r00r00         [24] 2316 	lcall	__gptrget
      000863 FA               [12] 2317 	mov	r2,a
      000864 90r00r00         [24] 2318 	mov	dptr,#_disk_write_PARM_2
      000867 74 30            [12] 2319 	mov	a,#0x30
      000869 2D               [12] 2320 	add	a,r5
      00086A F0               [24] 2321 	movx	@dptr,a
      00086B E4               [12] 2322 	clr	a
      00086C 3E               [12] 2323 	addc	a,r6
      00086D A3               [24] 2324 	inc	dptr
      00086E F0               [24] 2325 	movx	@dptr,a
      00086F EF               [12] 2326 	mov	a,r7
      000870 A3               [24] 2327 	inc	dptr
      000871 F0               [24] 2328 	movx	@dptr,a
      000872 90r00r00         [24] 2329 	mov	dptr,#_disk_write_PARM_3
      000875 E5*1C            [12] 2330 	mov	a,_sync_fs_sloc2_1_0
      000877 F0               [24] 2331 	movx	@dptr,a
      000878 E5*1D            [12] 2332 	mov	a,(_sync_fs_sloc2_1_0 + 1)
      00087A A3               [24] 2333 	inc	dptr
      00087B F0               [24] 2334 	movx	@dptr,a
      00087C E5*1E            [12] 2335 	mov	a,(_sync_fs_sloc2_1_0 + 2)
      00087E A3               [24] 2336 	inc	dptr
      00087F F0               [24] 2337 	movx	@dptr,a
      000880 E5*1F            [12] 2338 	mov	a,(_sync_fs_sloc2_1_0 + 3)
      000882 A3               [24] 2339 	inc	dptr
      000883 F0               [24] 2340 	movx	@dptr,a
      000884 90r00r00         [24] 2341 	mov	dptr,#_disk_write_PARM_4
      000887 74 01            [12] 2342 	mov	a,#0x01
      000889 F0               [24] 2343 	movx	@dptr,a
      00088A E4               [12] 2344 	clr	a
      00088B A3               [24] 2345 	inc	dptr
      00088C F0               [24] 2346 	movx	@dptr,a
      00088D 8A 82            [24] 2347 	mov	dpl,r2
      00088F 12r00r00         [24] 2348 	lcall	_disk_write
                                   2349 ;	ff15\source\ff.c:1127: fs->fsi_flag = 0;
      000892 85*16 82         [24] 2350 	mov	dpl,_sync_fs_sloc0_1_0
      000895 85*17 83         [24] 2351 	mov	dph,(_sync_fs_sloc0_1_0 + 1)
      000898 85*18 F0         [24] 2352 	mov	b,(_sync_fs_sloc0_1_0 + 2)
      00089B E4               [12] 2353 	clr	a
      00089C 12r00r00         [24] 2354 	lcall	__gptrput
      00089F                       2355 00102$:
                                   2356 ;	ff15\source\ff.c:1130: if (disk_ioctl(fs->pdrv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
      00089F 90r00r25         [24] 2357 	mov	dptr,#_sync_fs_fs_65536_98
      0008A2 E0               [24] 2358 	movx	a,@dptr
      0008A3 FD               [12] 2359 	mov	r5,a
      0008A4 A3               [24] 2360 	inc	dptr
      0008A5 E0               [24] 2361 	movx	a,@dptr
      0008A6 FE               [12] 2362 	mov	r6,a
      0008A7 A3               [24] 2363 	inc	dptr
      0008A8 E0               [24] 2364 	movx	a,@dptr
      0008A9 FF               [12] 2365 	mov	r7,a
      0008AA 0D               [12] 2366 	inc	r5
      0008AB BD 00 01         [24] 2367 	cjne	r5,#0x00,00131$
      0008AE 0E               [12] 2368 	inc	r6
      0008AF                       2369 00131$:
      0008AF 8D 82            [24] 2370 	mov	dpl,r5
      0008B1 8E 83            [24] 2371 	mov	dph,r6
      0008B3 8F F0            [24] 2372 	mov	b,r7
      0008B5 12r00r00         [24] 2373 	lcall	__gptrget
      0008B8 FD               [12] 2374 	mov	r5,a
      0008B9 90r00r00         [24] 2375 	mov	dptr,#_disk_ioctl_PARM_2
      0008BC E4               [12] 2376 	clr	a
      0008BD F0               [24] 2377 	movx	@dptr,a
      0008BE 90r00r00         [24] 2378 	mov	dptr,#_disk_ioctl_PARM_3
      0008C1 F0               [24] 2379 	movx	@dptr,a
      0008C2 A3               [24] 2380 	inc	dptr
      0008C3 F0               [24] 2381 	movx	@dptr,a
      0008C4 A3               [24] 2382 	inc	dptr
      0008C5 F0               [24] 2383 	movx	@dptr,a
      0008C6 8D 82            [24] 2384 	mov	dpl,r5
      0008C8 12r00r00         [24] 2385 	lcall	_disk_ioctl
      0008CB E5 82            [12] 2386 	mov	a,dpl
      0008CD 60 06            [24] 2387 	jz	00107$
      0008CF 90r00r28         [24] 2388 	mov	dptr,#_sync_fs_res_65536_99
      0008D2 74 01            [12] 2389 	mov	a,#0x01
      0008D4 F0               [24] 2390 	movx	@dptr,a
      0008D5                       2391 00107$:
                                   2392 ;	ff15\source\ff.c:1133: return res;
      0008D5 90r00r28         [24] 2393 	mov	dptr,#_sync_fs_res_65536_99
      0008D8 E0               [24] 2394 	movx	a,@dptr
                                   2395 ;	ff15\source\ff.c:1134: }
      0008D9 F5 82            [12] 2396 	mov	dpl,a
      0008DB 22               [24] 2397 	ret
                                   2398 ;------------------------------------------------------------
                                   2399 ;Allocation info for local variables in function 'clst2sect'
                                   2400 ;------------------------------------------------------------
                                   2401 ;sloc0                     Allocated with name '_clst2sect_sloc0_1_0'
                                   2402 ;clst                      Allocated with name '_clst2sect_PARM_2'
                                   2403 ;fs                        Allocated with name '_clst2sect_fs_65536_102'
                                   2404 ;------------------------------------------------------------
                                   2405 ;	ff15\source\ff.c:1144: static LBA_t clst2sect (	/* !=0:Sector number, 0:Failed (invalid cluster#) */
                                   2406 ;	-----------------------------------------
                                   2407 ;	 function clst2sect
                                   2408 ;	-----------------------------------------
      0008DC                       2409 _clst2sect:
      0008DC AF F0            [24] 2410 	mov	r7,b
      0008DE AE 83            [24] 2411 	mov	r6,dph
      0008E0 E5 82            [12] 2412 	mov	a,dpl
      0008E2 90r00r2D         [24] 2413 	mov	dptr,#_clst2sect_fs_65536_102
      0008E5 F0               [24] 2414 	movx	@dptr,a
      0008E6 EE               [12] 2415 	mov	a,r6
      0008E7 A3               [24] 2416 	inc	dptr
      0008E8 F0               [24] 2417 	movx	@dptr,a
      0008E9 EF               [12] 2418 	mov	a,r7
      0008EA A3               [24] 2419 	inc	dptr
      0008EB F0               [24] 2420 	movx	@dptr,a
                                   2421 ;	ff15\source\ff.c:1149: clst -= 2;		/* Cluster number is origin from 2 */
      0008EC 90r00r29         [24] 2422 	mov	dptr,#_clst2sect_PARM_2
      0008EF E0               [24] 2423 	movx	a,@dptr
      0008F0 FC               [12] 2424 	mov	r4,a
      0008F1 A3               [24] 2425 	inc	dptr
      0008F2 E0               [24] 2426 	movx	a,@dptr
      0008F3 FD               [12] 2427 	mov	r5,a
      0008F4 A3               [24] 2428 	inc	dptr
      0008F5 E0               [24] 2429 	movx	a,@dptr
      0008F6 FE               [12] 2430 	mov	r6,a
      0008F7 A3               [24] 2431 	inc	dptr
      0008F8 E0               [24] 2432 	movx	a,@dptr
      0008F9 FF               [12] 2433 	mov	r7,a
      0008FA EC               [12] 2434 	mov	a,r4
      0008FB 24 FE            [12] 2435 	add	a,#0xfe
      0008FD FC               [12] 2436 	mov	r4,a
      0008FE ED               [12] 2437 	mov	a,r5
      0008FF 34 FF            [12] 2438 	addc	a,#0xff
      000901 FD               [12] 2439 	mov	r5,a
      000902 EE               [12] 2440 	mov	a,r6
      000903 34 FF            [12] 2441 	addc	a,#0xff
      000905 FE               [12] 2442 	mov	r6,a
      000906 EF               [12] 2443 	mov	a,r7
      000907 34 FF            [12] 2444 	addc	a,#0xff
      000909 FF               [12] 2445 	mov	r7,a
      00090A 90r00r29         [24] 2446 	mov	dptr,#_clst2sect_PARM_2
      00090D EC               [12] 2447 	mov	a,r4
      00090E F0               [24] 2448 	movx	@dptr,a
      00090F ED               [12] 2449 	mov	a,r5
      000910 A3               [24] 2450 	inc	dptr
      000911 F0               [24] 2451 	movx	@dptr,a
      000912 EE               [12] 2452 	mov	a,r6
      000913 A3               [24] 2453 	inc	dptr
      000914 F0               [24] 2454 	movx	@dptr,a
      000915 EF               [12] 2455 	mov	a,r7
      000916 A3               [24] 2456 	inc	dptr
      000917 F0               [24] 2457 	movx	@dptr,a
                                   2458 ;	ff15\source\ff.c:1150: if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
      000918 90r00r2D         [24] 2459 	mov	dptr,#_clst2sect_fs_65536_102
      00091B E0               [24] 2460 	movx	a,@dptr
      00091C FD               [12] 2461 	mov	r5,a
      00091D A3               [24] 2462 	inc	dptr
      00091E E0               [24] 2463 	movx	a,@dptr
      00091F FE               [12] 2464 	mov	r6,a
      000920 A3               [24] 2465 	inc	dptr
      000921 E0               [24] 2466 	movx	a,@dptr
      000922 FF               [12] 2467 	mov	r7,a
      000923 74 14            [12] 2468 	mov	a,#0x14
      000925 2D               [12] 2469 	add	a,r5
      000926 FC               [12] 2470 	mov	r4,a
      000927 E4               [12] 2471 	clr	a
      000928 3E               [12] 2472 	addc	a,r6
      000929 FA               [12] 2473 	mov	r2,a
      00092A 8F 03            [24] 2474 	mov	ar3,r7
      00092C 8C 82            [24] 2475 	mov	dpl,r4
      00092E 8A 83            [24] 2476 	mov	dph,r2
      000930 8B F0            [24] 2477 	mov	b,r3
      000932 12r00r00         [24] 2478 	lcall	__gptrget
      000935 F9               [12] 2479 	mov	r1,a
      000936 A3               [24] 2480 	inc	dptr
      000937 12r00r00         [24] 2481 	lcall	__gptrget
      00093A FA               [12] 2482 	mov	r2,a
      00093B A3               [24] 2483 	inc	dptr
      00093C 12r00r00         [24] 2484 	lcall	__gptrget
      00093F FB               [12] 2485 	mov	r3,a
      000940 A3               [24] 2486 	inc	dptr
      000941 12r00r00         [24] 2487 	lcall	__gptrget
      000944 FC               [12] 2488 	mov	r4,a
      000945 E9               [12] 2489 	mov	a,r1
      000946 24 FE            [12] 2490 	add	a,#0xfe
      000948 F9               [12] 2491 	mov	r1,a
      000949 EA               [12] 2492 	mov	a,r2
      00094A 34 FF            [12] 2493 	addc	a,#0xff
      00094C FA               [12] 2494 	mov	r2,a
      00094D EB               [12] 2495 	mov	a,r3
      00094E 34 FF            [12] 2496 	addc	a,#0xff
      000950 FB               [12] 2497 	mov	r3,a
      000951 EC               [12] 2498 	mov	a,r4
      000952 34 FF            [12] 2499 	addc	a,#0xff
      000954 FC               [12] 2500 	mov	r4,a
      000955 90r00r29         [24] 2501 	mov	dptr,#_clst2sect_PARM_2
      000958 E0               [24] 2502 	movx	a,@dptr
      000959 F5*20            [12] 2503 	mov	_clst2sect_sloc0_1_0,a
      00095B A3               [24] 2504 	inc	dptr
      00095C E0               [24] 2505 	movx	a,@dptr
      00095D F5*21            [12] 2506 	mov	(_clst2sect_sloc0_1_0 + 1),a
      00095F A3               [24] 2507 	inc	dptr
      000960 E0               [24] 2508 	movx	a,@dptr
      000961 F5*22            [12] 2509 	mov	(_clst2sect_sloc0_1_0 + 2),a
      000963 A3               [24] 2510 	inc	dptr
      000964 E0               [24] 2511 	movx	a,@dptr
      000965 F5*23            [12] 2512 	mov	(_clst2sect_sloc0_1_0 + 3),a
      000967 C3               [12] 2513 	clr	c
      000968 E5*20            [12] 2514 	mov	a,_clst2sect_sloc0_1_0
      00096A 99               [12] 2515 	subb	a,r1
      00096B E5*21            [12] 2516 	mov	a,(_clst2sect_sloc0_1_0 + 1)
      00096D 9A               [12] 2517 	subb	a,r2
      00096E E5*22            [12] 2518 	mov	a,(_clst2sect_sloc0_1_0 + 2)
      000970 9B               [12] 2519 	subb	a,r3
      000971 E5*23            [12] 2520 	mov	a,(_clst2sect_sloc0_1_0 + 3)
      000973 9C               [12] 2521 	subb	a,r4
      000974 40 07            [24] 2522 	jc	00102$
      000976 90 00 00         [24] 2523 	mov	dptr,#(0x00&0x00ff)
      000979 E4               [12] 2524 	clr	a
      00097A F5 F0            [12] 2525 	mov	b,a
      00097C 22               [24] 2526 	ret
      00097D                       2527 00102$:
                                   2528 ;	ff15\source\ff.c:1151: return fs->database + (LBA_t)fs->csize * clst;	/* Start sector number of the cluster */
      00097D 74 28            [12] 2529 	mov	a,#0x28
      00097F 2D               [12] 2530 	add	a,r5
      000980 FC               [12] 2531 	mov	r4,a
      000981 E4               [12] 2532 	clr	a
      000982 3E               [12] 2533 	addc	a,r6
      000983 FA               [12] 2534 	mov	r2,a
      000984 8F 03            [24] 2535 	mov	ar3,r7
      000986 8C 82            [24] 2536 	mov	dpl,r4
      000988 8A 83            [24] 2537 	mov	dph,r2
      00098A 8B F0            [24] 2538 	mov	b,r3
      00098C 12r00r00         [24] 2539 	lcall	__gptrget
      00098F F9               [12] 2540 	mov	r1,a
      000990 A3               [24] 2541 	inc	dptr
      000991 12r00r00         [24] 2542 	lcall	__gptrget
      000994 FA               [12] 2543 	mov	r2,a
      000995 A3               [24] 2544 	inc	dptr
      000996 12r00r00         [24] 2545 	lcall	__gptrget
      000999 FB               [12] 2546 	mov	r3,a
      00099A A3               [24] 2547 	inc	dptr
      00099B 12r00r00         [24] 2548 	lcall	__gptrget
      00099E FC               [12] 2549 	mov	r4,a
      00099F 74 0A            [12] 2550 	mov	a,#0x0a
      0009A1 2D               [12] 2551 	add	a,r5
      0009A2 FD               [12] 2552 	mov	r5,a
      0009A3 E4               [12] 2553 	clr	a
      0009A4 3E               [12] 2554 	addc	a,r6
      0009A5 FE               [12] 2555 	mov	r6,a
      0009A6 8D 82            [24] 2556 	mov	dpl,r5
      0009A8 8E 83            [24] 2557 	mov	dph,r6
      0009AA 8F F0            [24] 2558 	mov	b,r7
      0009AC 12r00r00         [24] 2559 	lcall	__gptrget
      0009AF FD               [12] 2560 	mov	r5,a
      0009B0 A3               [24] 2561 	inc	dptr
      0009B1 12r00r00         [24] 2562 	lcall	__gptrget
      0009B4 F8               [12] 2563 	mov	r0,a
      0009B5 7E 00            [12] 2564 	mov	r6,#0x00
      0009B7 7F 00            [12] 2565 	mov	r7,#0x00
      0009B9 90r00r00         [24] 2566 	mov	dptr,#__mullong_PARM_2
      0009BC E5*20            [12] 2567 	mov	a,_clst2sect_sloc0_1_0
      0009BE F0               [24] 2568 	movx	@dptr,a
      0009BF E5*21            [12] 2569 	mov	a,(_clst2sect_sloc0_1_0 + 1)
      0009C1 A3               [24] 2570 	inc	dptr
      0009C2 F0               [24] 2571 	movx	@dptr,a
      0009C3 E5*22            [12] 2572 	mov	a,(_clst2sect_sloc0_1_0 + 2)
      0009C5 A3               [24] 2573 	inc	dptr
      0009C6 F0               [24] 2574 	movx	@dptr,a
      0009C7 E5*23            [12] 2575 	mov	a,(_clst2sect_sloc0_1_0 + 3)
      0009C9 A3               [24] 2576 	inc	dptr
      0009CA F0               [24] 2577 	movx	@dptr,a
      0009CB 8D 82            [24] 2578 	mov	dpl,r5
      0009CD 88 83            [24] 2579 	mov	dph,r0
      0009CF 8E F0            [24] 2580 	mov	b,r6
      0009D1 EF               [12] 2581 	mov	a,r7
      0009D2 C0 04            [24] 2582 	push	ar4
      0009D4 C0 03            [24] 2583 	push	ar3
      0009D6 C0 02            [24] 2584 	push	ar2
      0009D8 C0 01            [24] 2585 	push	ar1
      0009DA 12r00r00         [24] 2586 	lcall	__mullong
      0009DD A8 82            [24] 2587 	mov	r0,dpl
      0009DF AD 83            [24] 2588 	mov	r5,dph
      0009E1 AE F0            [24] 2589 	mov	r6,b
      0009E3 FF               [12] 2590 	mov	r7,a
      0009E4 D0 01            [24] 2591 	pop	ar1
      0009E6 D0 02            [24] 2592 	pop	ar2
      0009E8 D0 03            [24] 2593 	pop	ar3
      0009EA D0 04            [24] 2594 	pop	ar4
      0009EC E8               [12] 2595 	mov	a,r0
      0009ED 29               [12] 2596 	add	a,r1
      0009EE F9               [12] 2597 	mov	r1,a
      0009EF ED               [12] 2598 	mov	a,r5
      0009F0 3A               [12] 2599 	addc	a,r2
      0009F1 FA               [12] 2600 	mov	r2,a
      0009F2 EE               [12] 2601 	mov	a,r6
      0009F3 3B               [12] 2602 	addc	a,r3
      0009F4 FB               [12] 2603 	mov	r3,a
      0009F5 EF               [12] 2604 	mov	a,r7
      0009F6 3C               [12] 2605 	addc	a,r4
      0009F7 89 82            [24] 2606 	mov	dpl,r1
      0009F9 8A 83            [24] 2607 	mov	dph,r2
      0009FB 8B F0            [24] 2608 	mov	b,r3
                                   2609 ;	ff15\source\ff.c:1152: }
      0009FD 22               [24] 2610 	ret
                                   2611 ;------------------------------------------------------------
                                   2612 ;Allocation info for local variables in function 'get_fat'
                                   2613 ;------------------------------------------------------------
                                   2614 ;sloc0                     Allocated with name '_get_fat_sloc0_1_0'
                                   2615 ;sloc1                     Allocated with name '_get_fat_sloc1_1_0'
                                   2616 ;sloc2                     Allocated with name '_get_fat_sloc2_1_0'
                                   2617 ;sloc3                     Allocated with name '_get_fat_sloc3_1_0'
                                   2618 ;sloc4                     Allocated with name '_get_fat_sloc4_1_0'
                                   2619 ;clst                      Allocated with name '_get_fat_PARM_2'
                                   2620 ;obj                       Allocated with name '_get_fat_obj_65536_104'
                                   2621 ;wc                        Allocated with name '_get_fat_wc_65536_105'
                                   2622 ;bc                        Allocated with name '_get_fat_bc_65536_105'
                                   2623 ;val                       Allocated with name '_get_fat_val_65536_105'
                                   2624 ;fs                        Allocated with name '_get_fat_fs_65536_105'
                                   2625 ;------------------------------------------------------------
                                   2626 ;	ff15\source\ff.c:1161: static DWORD get_fat (		/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
                                   2627 ;	-----------------------------------------
                                   2628 ;	 function get_fat
                                   2629 ;	-----------------------------------------
      0009FE                       2630 _get_fat:
      0009FE AF F0            [24] 2631 	mov	r7,b
      000A00 AE 83            [24] 2632 	mov	r6,dph
      000A02 E5 82            [12] 2633 	mov	a,dpl
      000A04 90r00r34         [24] 2634 	mov	dptr,#_get_fat_obj_65536_104
      000A07 F0               [24] 2635 	movx	@dptr,a
      000A08 EE               [12] 2636 	mov	a,r6
      000A09 A3               [24] 2637 	inc	dptr
      000A0A F0               [24] 2638 	movx	@dptr,a
      000A0B EF               [12] 2639 	mov	a,r7
      000A0C A3               [24] 2640 	inc	dptr
      000A0D F0               [24] 2641 	movx	@dptr,a
                                   2642 ;	ff15\source\ff.c:1168: FATFS *fs = obj->fs;
      000A0E 90r00r34         [24] 2643 	mov	dptr,#_get_fat_obj_65536_104
      000A11 E0               [24] 2644 	movx	a,@dptr
      000A12 FD               [12] 2645 	mov	r5,a
      000A13 A3               [24] 2646 	inc	dptr
      000A14 E0               [24] 2647 	movx	a,@dptr
      000A15 FE               [12] 2648 	mov	r6,a
      000A16 A3               [24] 2649 	inc	dptr
      000A17 E0               [24] 2650 	movx	a,@dptr
      000A18 FF               [12] 2651 	mov	r7,a
      000A19 8D 82            [24] 2652 	mov	dpl,r5
      000A1B 8E 83            [24] 2653 	mov	dph,r6
      000A1D 8F F0            [24] 2654 	mov	b,r7
      000A1F 12r00r00         [24] 2655 	lcall	__gptrget
      000A22 FD               [12] 2656 	mov	r5,a
      000A23 A3               [24] 2657 	inc	dptr
      000A24 12r00r00         [24] 2658 	lcall	__gptrget
      000A27 FE               [12] 2659 	mov	r6,a
      000A28 A3               [24] 2660 	inc	dptr
      000A29 12r00r00         [24] 2661 	lcall	__gptrget
      000A2C FF               [12] 2662 	mov	r7,a
                                   2663 ;	ff15\source\ff.c:1171: if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
      000A2D 90r00r30         [24] 2664 	mov	dptr,#_get_fat_PARM_2
      000A30 E0               [24] 2665 	movx	a,@dptr
      000A31 F5*24            [12] 2666 	mov	_get_fat_sloc0_1_0,a
      000A33 A3               [24] 2667 	inc	dptr
      000A34 E0               [24] 2668 	movx	a,@dptr
      000A35 F5*25            [12] 2669 	mov	(_get_fat_sloc0_1_0 + 1),a
      000A37 A3               [24] 2670 	inc	dptr
      000A38 E0               [24] 2671 	movx	a,@dptr
      000A39 F5*26            [12] 2672 	mov	(_get_fat_sloc0_1_0 + 2),a
      000A3B A3               [24] 2673 	inc	dptr
      000A3C E0               [24] 2674 	movx	a,@dptr
      000A3D F5*27            [12] 2675 	mov	(_get_fat_sloc0_1_0 + 3),a
      000A3F C3               [12] 2676 	clr	c
      000A40 E5*24            [12] 2677 	mov	a,_get_fat_sloc0_1_0
      000A42 94 02            [12] 2678 	subb	a,#0x02
      000A44 E5*25            [12] 2679 	mov	a,(_get_fat_sloc0_1_0 + 1)
      000A46 94 00            [12] 2680 	subb	a,#0x00
      000A48 E5*26            [12] 2681 	mov	a,(_get_fat_sloc0_1_0 + 2)
      000A4A 94 00            [12] 2682 	subb	a,#0x00
      000A4C E5*27            [12] 2683 	mov	a,(_get_fat_sloc0_1_0 + 3)
      000A4E 94 00            [12] 2684 	subb	a,#0x00
      000A50 40 31            [24] 2685 	jc	00114$
      000A52 74 14            [12] 2686 	mov	a,#0x14
      000A54 2D               [12] 2687 	add	a,r5
      000A55 F8               [12] 2688 	mov	r0,a
      000A56 E4               [12] 2689 	clr	a
      000A57 3E               [12] 2690 	addc	a,r6
      000A58 FB               [12] 2691 	mov	r3,a
      000A59 8F 04            [24] 2692 	mov	ar4,r7
      000A5B 88 82            [24] 2693 	mov	dpl,r0
      000A5D 8B 83            [24] 2694 	mov	dph,r3
      000A5F 8C F0            [24] 2695 	mov	b,r4
      000A61 12r00r00         [24] 2696 	lcall	__gptrget
      000A64 F8               [12] 2697 	mov	r0,a
      000A65 A3               [24] 2698 	inc	dptr
      000A66 12r00r00         [24] 2699 	lcall	__gptrget
      000A69 FB               [12] 2700 	mov	r3,a
      000A6A A3               [24] 2701 	inc	dptr
      000A6B 12r00r00         [24] 2702 	lcall	__gptrget
      000A6E FC               [12] 2703 	mov	r4,a
      000A6F A3               [24] 2704 	inc	dptr
      000A70 12r00r00         [24] 2705 	lcall	__gptrget
      000A73 FA               [12] 2706 	mov	r2,a
      000A74 C3               [12] 2707 	clr	c
      000A75 E5*24            [12] 2708 	mov	a,_get_fat_sloc0_1_0
      000A77 98               [12] 2709 	subb	a,r0
      000A78 E5*25            [12] 2710 	mov	a,(_get_fat_sloc0_1_0 + 1)
      000A7A 9B               [12] 2711 	subb	a,r3
      000A7B E5*26            [12] 2712 	mov	a,(_get_fat_sloc0_1_0 + 2)
      000A7D 9C               [12] 2713 	subb	a,r4
      000A7E E5*27            [12] 2714 	mov	a,(_get_fat_sloc0_1_0 + 3)
      000A80 9A               [12] 2715 	subb	a,r2
      000A81 40 10            [24] 2716 	jc	00115$
      000A83                       2717 00114$:
                                   2718 ;	ff15\source\ff.c:1172: val = 1;	/* Internal error */
      000A83 90r00r37         [24] 2719 	mov	dptr,#_get_fat_val_65536_105
      000A86 74 01            [12] 2720 	mov	a,#0x01
      000A88 F0               [24] 2721 	movx	@dptr,a
      000A89 E4               [12] 2722 	clr	a
      000A8A A3               [24] 2723 	inc	dptr
      000A8B F0               [24] 2724 	movx	@dptr,a
      000A8C A3               [24] 2725 	inc	dptr
      000A8D F0               [24] 2726 	movx	@dptr,a
      000A8E A3               [24] 2727 	inc	dptr
      000A8F F0               [24] 2728 	movx	@dptr,a
      000A90 02r0Dr9E         [24] 2729 	ljmp	00116$
      000A93                       2730 00115$:
                                   2731 ;	ff15\source\ff.c:1175: val = 0xFFFFFFFF;	/* Default value falls on disk error */
      000A93 90r00r37         [24] 2732 	mov	dptr,#_get_fat_val_65536_105
      000A96 74 FF            [12] 2733 	mov	a,#0xff
      000A98 F0               [24] 2734 	movx	@dptr,a
      000A99 A3               [24] 2735 	inc	dptr
      000A9A F0               [24] 2736 	movx	@dptr,a
      000A9B A3               [24] 2737 	inc	dptr
      000A9C F0               [24] 2738 	movx	@dptr,a
      000A9D A3               [24] 2739 	inc	dptr
      000A9E F0               [24] 2740 	movx	@dptr,a
                                   2741 ;	ff15\source\ff.c:1177: switch (fs->fs_type) {
      000A9F 8D 82            [24] 2742 	mov	dpl,r5
      000AA1 8E 83            [24] 2743 	mov	dph,r6
      000AA3 8F F0            [24] 2744 	mov	b,r7
      000AA5 12r00r00         [24] 2745 	lcall	__gptrget
      000AA8 FC               [12] 2746 	mov	r4,a
      000AA9 BC 01 02         [24] 2747 	cjne	r4,#0x01,00160$
      000AAC 80 0F            [24] 2748 	sjmp	00101$
      000AAE                       2749 00160$:
      000AAE BC 02 03         [24] 2750 	cjne	r4,#0x02,00161$
      000AB1 02r0Cr27         [24] 2751 	ljmp	00106$
      000AB4                       2752 00161$:
      000AB4 BC 03 03         [24] 2753 	cjne	r4,#0x03,00162$
      000AB7 02r0CrCC         [24] 2754 	ljmp	00109$
      000ABA                       2755 00162$:
      000ABA 02r0Dr91         [24] 2756 	ljmp	00112$
                                   2757 ;	ff15\source\ff.c:1178: case FS_FAT12 :
      000ABD                       2758 00101$:
                                   2759 ;	ff15\source\ff.c:1179: bc = (UINT)clst; bc += bc / 2;
      000ABD A9*24            [24] 2760 	mov	r1,_get_fat_sloc0_1_0
      000ABF AA*25            [24] 2761 	mov	r2,(_get_fat_sloc0_1_0 + 1)
      000AC1 89 03            [24] 2762 	mov	ar3,r1
      000AC3 EA               [12] 2763 	mov	a,r2
      000AC4 C3               [12] 2764 	clr	c
      000AC5 13               [12] 2765 	rrc	a
      000AC6 CB               [12] 2766 	xch	a,r3
      000AC7 13               [12] 2767 	rrc	a
      000AC8 CB               [12] 2768 	xch	a,r3
      000AC9 FC               [12] 2769 	mov	r4,a
      000ACA EB               [12] 2770 	mov	a,r3
      000ACB 29               [12] 2771 	add	a,r1
      000ACC F5*28            [12] 2772 	mov	_get_fat_sloc1_1_0,a
      000ACE EC               [12] 2773 	mov	a,r4
      000ACF 3A               [12] 2774 	addc	a,r2
      000AD0 F5*29            [12] 2775 	mov	(_get_fat_sloc1_1_0 + 1),a
                                   2776 ;	ff15\source\ff.c:1180: if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
      000AD2 74 20            [12] 2777 	mov	a,#0x20
      000AD4 2D               [12] 2778 	add	a,r5
      000AD5 F8               [12] 2779 	mov	r0,a
      000AD6 E4               [12] 2780 	clr	a
      000AD7 3E               [12] 2781 	addc	a,r6
      000AD8 F9               [12] 2782 	mov	r1,a
      000AD9 8F 02            [24] 2783 	mov	ar2,r7
      000ADB 88 82            [24] 2784 	mov	dpl,r0
      000ADD 89 83            [24] 2785 	mov	dph,r1
      000ADF 8A F0            [24] 2786 	mov	b,r2
      000AE1 12r00r00         [24] 2787 	lcall	__gptrget
      000AE4 F5*2A            [12] 2788 	mov	_get_fat_sloc2_1_0,a
      000AE6 A3               [24] 2789 	inc	dptr
      000AE7 12r00r00         [24] 2790 	lcall	__gptrget
      000AEA F5*2B            [12] 2791 	mov	(_get_fat_sloc2_1_0 + 1),a
      000AEC A3               [24] 2792 	inc	dptr
      000AED 12r00r00         [24] 2793 	lcall	__gptrget
      000AF0 F5*2C            [12] 2794 	mov	(_get_fat_sloc2_1_0 + 2),a
      000AF2 A3               [24] 2795 	inc	dptr
      000AF3 12r00r00         [24] 2796 	lcall	__gptrget
      000AF6 F5*2D            [12] 2797 	mov	(_get_fat_sloc2_1_0 + 3),a
      000AF8 E5*29            [12] 2798 	mov	a,(_get_fat_sloc1_1_0 + 1)
      000AFA C3               [12] 2799 	clr	c
      000AFB 13               [12] 2800 	rrc	a
      000AFC FB               [12] 2801 	mov	r3,a
      000AFD 7C 00            [12] 2802 	mov	r4,#0x00
      000AFF 8B 01            [24] 2803 	mov	ar1,r3
      000B01 8C 02            [24] 2804 	mov	ar2,r4
      000B03 7B 00            [12] 2805 	mov	r3,#0x00
      000B05 7C 00            [12] 2806 	mov	r4,#0x00
      000B07 90r00r1D         [24] 2807 	mov	dptr,#_move_window_PARM_2
      000B0A E9               [12] 2808 	mov	a,r1
      000B0B 25*2A            [12] 2809 	add	a,_get_fat_sloc2_1_0
      000B0D F0               [24] 2810 	movx	@dptr,a
      000B0E EA               [12] 2811 	mov	a,r2
      000B0F 35*2B            [12] 2812 	addc	a,(_get_fat_sloc2_1_0 + 1)
      000B11 A3               [24] 2813 	inc	dptr
      000B12 F0               [24] 2814 	movx	@dptr,a
      000B13 EB               [12] 2815 	mov	a,r3
      000B14 35*2C            [12] 2816 	addc	a,(_get_fat_sloc2_1_0 + 2)
      000B16 A3               [24] 2817 	inc	dptr
      000B17 F0               [24] 2818 	movx	@dptr,a
      000B18 EC               [12] 2819 	mov	a,r4
      000B19 35*2D            [12] 2820 	addc	a,(_get_fat_sloc2_1_0 + 3)
      000B1B A3               [24] 2821 	inc	dptr
      000B1C F0               [24] 2822 	movx	@dptr,a
      000B1D 8D 82            [24] 2823 	mov	dpl,r5
      000B1F 8E 83            [24] 2824 	mov	dph,r6
      000B21 8F F0            [24] 2825 	mov	b,r7
      000B23 C0 07            [24] 2826 	push	ar7
      000B25 C0 06            [24] 2827 	push	ar6
      000B27 C0 05            [24] 2828 	push	ar5
      000B29 12r05r18         [24] 2829 	lcall	_move_window
      000B2C E5 82            [12] 2830 	mov	a,dpl
      000B2E D0 05            [24] 2831 	pop	ar5
      000B30 D0 06            [24] 2832 	pop	ar6
      000B32 D0 07            [24] 2833 	pop	ar7
      000B34 60 03            [24] 2834 	jz	00163$
      000B36 02r0Dr9E         [24] 2835 	ljmp	00116$
      000B39                       2836 00163$:
                                   2837 ;	ff15\source\ff.c:1181: wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
      000B39 74 30            [12] 2838 	mov	a,#0x30
      000B3B 2D               [12] 2839 	add	a,r5
      000B3C F5*2A            [12] 2840 	mov	_get_fat_sloc2_1_0,a
      000B3E E4               [12] 2841 	clr	a
      000B3F 3E               [12] 2842 	addc	a,r6
      000B40 F5*2B            [12] 2843 	mov	(_get_fat_sloc2_1_0 + 1),a
      000B42 8F*2C            [24] 2844 	mov	(_get_fat_sloc2_1_0 + 2),r7
      000B44 74 01            [12] 2845 	mov	a,#0x01
      000B46 25*28            [12] 2846 	add	a,_get_fat_sloc1_1_0
      000B48 F5*2E            [12] 2847 	mov	_get_fat_sloc3_1_0,a
      000B4A E4               [12] 2848 	clr	a
      000B4B 35*29            [12] 2849 	addc	a,(_get_fat_sloc1_1_0 + 1)
      000B4D F5*2F            [12] 2850 	mov	(_get_fat_sloc3_1_0 + 1),a
      000B4F AB*28            [24] 2851 	mov	r3,_get_fat_sloc1_1_0
      000B51 74 01            [12] 2852 	mov	a,#0x01
      000B53 55*29            [12] 2853 	anl	a,(_get_fat_sloc1_1_0 + 1)
      000B55 FC               [12] 2854 	mov	r4,a
      000B56 EB               [12] 2855 	mov	a,r3
      000B57 25*2A            [12] 2856 	add	a,_get_fat_sloc2_1_0
      000B59 FB               [12] 2857 	mov	r3,a
      000B5A EC               [12] 2858 	mov	a,r4
      000B5B 35*2B            [12] 2859 	addc	a,(_get_fat_sloc2_1_0 + 1)
      000B5D FC               [12] 2860 	mov	r4,a
      000B5E AA*2C            [24] 2861 	mov	r2,(_get_fat_sloc2_1_0 + 2)
      000B60 8B 82            [24] 2862 	mov	dpl,r3
      000B62 8C 83            [24] 2863 	mov	dph,r4
      000B64 8A F0            [24] 2864 	mov	b,r2
      000B66 12r00r00         [24] 2865 	lcall	__gptrget
      000B69 FB               [12] 2866 	mov	r3,a
      000B6A 8B*2A            [24] 2867 	mov	_get_fat_sloc2_1_0,r3
      000B6C 75*2B 00         [24] 2868 	mov	(_get_fat_sloc2_1_0 + 1),#0x00
                                   2869 ;	ff15\source\ff.c:1182: if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
      000B6F 74 20            [12] 2870 	mov	a,#0x20
      000B71 2D               [12] 2871 	add	a,r5
      000B72 FC               [12] 2872 	mov	r4,a
      000B73 E4               [12] 2873 	clr	a
      000B74 3E               [12] 2874 	addc	a,r6
      000B75 FA               [12] 2875 	mov	r2,a
      000B76 8F 03            [24] 2876 	mov	ar3,r7
      000B78 8C 82            [24] 2877 	mov	dpl,r4
      000B7A 8A 83            [24] 2878 	mov	dph,r2
      000B7C 8B F0            [24] 2879 	mov	b,r3
      000B7E 12r00r00         [24] 2880 	lcall	__gptrget
      000B81 F5*30            [12] 2881 	mov	_get_fat_sloc4_1_0,a
      000B83 A3               [24] 2882 	inc	dptr
      000B84 12r00r00         [24] 2883 	lcall	__gptrget
      000B87 F5*31            [12] 2884 	mov	(_get_fat_sloc4_1_0 + 1),a
      000B89 A3               [24] 2885 	inc	dptr
      000B8A 12r00r00         [24] 2886 	lcall	__gptrget
      000B8D F5*32            [12] 2887 	mov	(_get_fat_sloc4_1_0 + 2),a
      000B8F A3               [24] 2888 	inc	dptr
      000B90 12r00r00         [24] 2889 	lcall	__gptrget
      000B93 F5*33            [12] 2890 	mov	(_get_fat_sloc4_1_0 + 3),a
      000B95 E5*2F            [12] 2891 	mov	a,(_get_fat_sloc3_1_0 + 1)
      000B97 C3               [12] 2892 	clr	c
      000B98 13               [12] 2893 	rrc	a
      000B99 F8               [12] 2894 	mov	r0,a
      000B9A 7C 00            [12] 2895 	mov	r4,#0x00
      000B9C 7B 00            [12] 2896 	mov	r3,#0x00
      000B9E 7A 00            [12] 2897 	mov	r2,#0x00
      000BA0 90r00r1D         [24] 2898 	mov	dptr,#_move_window_PARM_2
      000BA3 E8               [12] 2899 	mov	a,r0
      000BA4 25*30            [12] 2900 	add	a,_get_fat_sloc4_1_0
      000BA6 F0               [24] 2901 	movx	@dptr,a
      000BA7 EC               [12] 2902 	mov	a,r4
      000BA8 35*31            [12] 2903 	addc	a,(_get_fat_sloc4_1_0 + 1)
      000BAA A3               [24] 2904 	inc	dptr
      000BAB F0               [24] 2905 	movx	@dptr,a
      000BAC EB               [12] 2906 	mov	a,r3
      000BAD 35*32            [12] 2907 	addc	a,(_get_fat_sloc4_1_0 + 2)
      000BAF A3               [24] 2908 	inc	dptr
      000BB0 F0               [24] 2909 	movx	@dptr,a
      000BB1 EA               [12] 2910 	mov	a,r2
      000BB2 35*33            [12] 2911 	addc	a,(_get_fat_sloc4_1_0 + 3)
      000BB4 A3               [24] 2912 	inc	dptr
      000BB5 F0               [24] 2913 	movx	@dptr,a
      000BB6 8D 82            [24] 2914 	mov	dpl,r5
      000BB8 8E 83            [24] 2915 	mov	dph,r6
      000BBA 8F F0            [24] 2916 	mov	b,r7
      000BBC C0 07            [24] 2917 	push	ar7
      000BBE C0 06            [24] 2918 	push	ar6
      000BC0 C0 05            [24] 2919 	push	ar5
      000BC2 12r05r18         [24] 2920 	lcall	_move_window
      000BC5 E5 82            [12] 2921 	mov	a,dpl
      000BC7 D0 05            [24] 2922 	pop	ar5
      000BC9 D0 06            [24] 2923 	pop	ar6
      000BCB D0 07            [24] 2924 	pop	ar7
      000BCD 60 03            [24] 2925 	jz	00164$
      000BCF 02r0Dr9E         [24] 2926 	ljmp	00116$
      000BD2                       2927 00164$:
                                   2928 ;	ff15\source\ff.c:1183: wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
      000BD2 74 30            [12] 2929 	mov	a,#0x30
      000BD4 2D               [12] 2930 	add	a,r5
      000BD5 FA               [12] 2931 	mov	r2,a
      000BD6 E4               [12] 2932 	clr	a
      000BD7 3E               [12] 2933 	addc	a,r6
      000BD8 FB               [12] 2934 	mov	r3,a
      000BD9 8F 04            [24] 2935 	mov	ar4,r7
      000BDB A8*2E            [24] 2936 	mov	r0,_get_fat_sloc3_1_0
      000BDD 74 01            [12] 2937 	mov	a,#0x01
      000BDF 55*2F            [12] 2938 	anl	a,(_get_fat_sloc3_1_0 + 1)
      000BE1 F9               [12] 2939 	mov	r1,a
      000BE2 E8               [12] 2940 	mov	a,r0
      000BE3 2A               [12] 2941 	add	a,r2
      000BE4 FA               [12] 2942 	mov	r2,a
      000BE5 E9               [12] 2943 	mov	a,r1
      000BE6 3B               [12] 2944 	addc	a,r3
      000BE7 FB               [12] 2945 	mov	r3,a
      000BE8 8A 82            [24] 2946 	mov	dpl,r2
      000BEA 8B 83            [24] 2947 	mov	dph,r3
      000BEC 8C F0            [24] 2948 	mov	b,r4
      000BEE 12r00r00         [24] 2949 	lcall	__gptrget
      000BF1 FC               [12] 2950 	mov	r4,a
      000BF2 E4               [12] 2951 	clr	a
      000BF3 45*2A            [12] 2952 	orl	a,_get_fat_sloc2_1_0
      000BF5 FB               [12] 2953 	mov	r3,a
      000BF6 EC               [12] 2954 	mov	a,r4
      000BF7 45*2B            [12] 2955 	orl	a,(_get_fat_sloc2_1_0 + 1)
      000BF9 FC               [12] 2956 	mov	r4,a
                                   2957 ;	ff15\source\ff.c:1184: val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
      000BFA E5*24            [12] 2958 	mov	a,_get_fat_sloc0_1_0
      000BFC 30 E0 12         [24] 2959 	jnb	acc.0,00120$
      000BFF 8B 01            [24] 2960 	mov	ar1,r3
      000C01 EC               [12] 2961 	mov	a,r4
      000C02 C4               [12] 2962 	swap	a
      000C03 C9               [12] 2963 	xch	a,r1
      000C04 C4               [12] 2964 	swap	a
      000C05 54 0F            [12] 2965 	anl	a,#0x0f
      000C07 69               [12] 2966 	xrl	a,r1
      000C08 C9               [12] 2967 	xch	a,r1
      000C09 54 0F            [12] 2968 	anl	a,#0x0f
      000C0B C9               [12] 2969 	xch	a,r1
      000C0C 69               [12] 2970 	xrl	a,r1
      000C0D C9               [12] 2971 	xch	a,r1
      000C0E FA               [12] 2972 	mov	r2,a
      000C0F 80 06            [24] 2973 	sjmp	00121$
      000C11                       2974 00120$:
      000C11 8B 01            [24] 2975 	mov	ar1,r3
      000C13 74 0F            [12] 2976 	mov	a,#0x0f
      000C15 5C               [12] 2977 	anl	a,r4
      000C16 FA               [12] 2978 	mov	r2,a
      000C17                       2979 00121$:
      000C17 90r00r37         [24] 2980 	mov	dptr,#_get_fat_val_65536_105
      000C1A E9               [12] 2981 	mov	a,r1
      000C1B F0               [24] 2982 	movx	@dptr,a
      000C1C EA               [12] 2983 	mov	a,r2
      000C1D A3               [24] 2984 	inc	dptr
      000C1E F0               [24] 2985 	movx	@dptr,a
      000C1F E4               [12] 2986 	clr	a
      000C20 A3               [24] 2987 	inc	dptr
      000C21 F0               [24] 2988 	movx	@dptr,a
      000C22 A3               [24] 2989 	inc	dptr
      000C23 F0               [24] 2990 	movx	@dptr,a
                                   2991 ;	ff15\source\ff.c:1185: break;
      000C24 02r0Dr9E         [24] 2992 	ljmp	00116$
                                   2993 ;	ff15\source\ff.c:1187: case FS_FAT16 :
      000C27                       2994 00106$:
                                   2995 ;	ff15\source\ff.c:1188: if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
      000C27 74 20            [12] 2996 	mov	a,#0x20
      000C29 2D               [12] 2997 	add	a,r5
      000C2A FC               [12] 2998 	mov	r4,a
      000C2B E4               [12] 2999 	clr	a
      000C2C 3E               [12] 3000 	addc	a,r6
      000C2D FA               [12] 3001 	mov	r2,a
      000C2E 8F 03            [24] 3002 	mov	ar3,r7
      000C30 8C 82            [24] 3003 	mov	dpl,r4
      000C32 8A 83            [24] 3004 	mov	dph,r2
      000C34 8B F0            [24] 3005 	mov	b,r3
      000C36 12r00r00         [24] 3006 	lcall	__gptrget
      000C39 F5*30            [12] 3007 	mov	_get_fat_sloc4_1_0,a
      000C3B A3               [24] 3008 	inc	dptr
      000C3C 12r00r00         [24] 3009 	lcall	__gptrget
      000C3F F5*31            [12] 3010 	mov	(_get_fat_sloc4_1_0 + 1),a
      000C41 A3               [24] 3011 	inc	dptr
      000C42 12r00r00         [24] 3012 	lcall	__gptrget
      000C45 F5*32            [12] 3013 	mov	(_get_fat_sloc4_1_0 + 2),a
      000C47 A3               [24] 3014 	inc	dptr
      000C48 12r00r00         [24] 3015 	lcall	__gptrget
      000C4B F5*33            [12] 3016 	mov	(_get_fat_sloc4_1_0 + 3),a
      000C4D A8*25            [24] 3017 	mov	r0,(_get_fat_sloc0_1_0 + 1)
      000C4F AA*26            [24] 3018 	mov	r2,(_get_fat_sloc0_1_0 + 2)
      000C51 AB*27            [24] 3019 	mov	r3,(_get_fat_sloc0_1_0 + 3)
      000C53 7C 00            [12] 3020 	mov	r4,#0x00
      000C55 90r00r1D         [24] 3021 	mov	dptr,#_move_window_PARM_2
      000C58 E8               [12] 3022 	mov	a,r0
      000C59 25*30            [12] 3023 	add	a,_get_fat_sloc4_1_0
      000C5B F0               [24] 3024 	movx	@dptr,a
      000C5C EA               [12] 3025 	mov	a,r2
      000C5D 35*31            [12] 3026 	addc	a,(_get_fat_sloc4_1_0 + 1)
      000C5F A3               [24] 3027 	inc	dptr
      000C60 F0               [24] 3028 	movx	@dptr,a
      000C61 EB               [12] 3029 	mov	a,r3
      000C62 35*32            [12] 3030 	addc	a,(_get_fat_sloc4_1_0 + 2)
      000C64 A3               [24] 3031 	inc	dptr
      000C65 F0               [24] 3032 	movx	@dptr,a
      000C66 EC               [12] 3033 	mov	a,r4
      000C67 35*33            [12] 3034 	addc	a,(_get_fat_sloc4_1_0 + 3)
      000C69 A3               [24] 3035 	inc	dptr
      000C6A F0               [24] 3036 	movx	@dptr,a
      000C6B 8D 82            [24] 3037 	mov	dpl,r5
      000C6D 8E 83            [24] 3038 	mov	dph,r6
      000C6F 8F F0            [24] 3039 	mov	b,r7
      000C71 C0 07            [24] 3040 	push	ar7
      000C73 C0 06            [24] 3041 	push	ar6
      000C75 C0 05            [24] 3042 	push	ar5
      000C77 12r05r18         [24] 3043 	lcall	_move_window
      000C7A E5 82            [12] 3044 	mov	a,dpl
      000C7C D0 05            [24] 3045 	pop	ar5
      000C7E D0 06            [24] 3046 	pop	ar6
      000C80 D0 07            [24] 3047 	pop	ar7
      000C82 60 03            [24] 3048 	jz	00166$
      000C84 02r0Dr9E         [24] 3049 	ljmp	00116$
      000C87                       3050 00166$:
                                   3051 ;	ff15\source\ff.c:1189: val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
      000C87 74 30            [12] 3052 	mov	a,#0x30
      000C89 2D               [12] 3053 	add	a,r5
      000C8A F5*30            [12] 3054 	mov	_get_fat_sloc4_1_0,a
      000C8C E4               [12] 3055 	clr	a
      000C8D 3E               [12] 3056 	addc	a,r6
      000C8E F5*31            [12] 3057 	mov	(_get_fat_sloc4_1_0 + 1),a
      000C90 8F*32            [24] 3058 	mov	(_get_fat_sloc4_1_0 + 2),r7
      000C92 E5*24            [12] 3059 	mov	a,_get_fat_sloc0_1_0
      000C94 25*24            [12] 3060 	add	a,_get_fat_sloc0_1_0
      000C96 F8               [12] 3061 	mov	r0,a
      000C97 E5*25            [12] 3062 	mov	a,(_get_fat_sloc0_1_0 + 1)
      000C99 33               [12] 3063 	rlc	a
      000C9A F9               [12] 3064 	mov	r1,a
      000C9B E5*26            [12] 3065 	mov	a,(_get_fat_sloc0_1_0 + 2)
      000C9D 33               [12] 3066 	rlc	a
      000C9E E5*27            [12] 3067 	mov	a,(_get_fat_sloc0_1_0 + 3)
      000CA0 33               [12] 3068 	rlc	a
      000CA1 53 01 01         [24] 3069 	anl	ar1,#0x01
      000CA4 E4               [12] 3070 	clr	a
      000CA5 E8               [12] 3071 	mov	a,r0
      000CA6 25*30            [12] 3072 	add	a,_get_fat_sloc4_1_0
      000CA8 F8               [12] 3073 	mov	r0,a
      000CA9 E9               [12] 3074 	mov	a,r1
      000CAA 35*31            [12] 3075 	addc	a,(_get_fat_sloc4_1_0 + 1)
      000CAC F9               [12] 3076 	mov	r1,a
      000CAD AB*32            [24] 3077 	mov	r3,(_get_fat_sloc4_1_0 + 2)
      000CAF 88 82            [24] 3078 	mov	dpl,r0
      000CB1 89 83            [24] 3079 	mov	dph,r1
      000CB3 8B F0            [24] 3080 	mov	b,r3
      000CB5 12r00r00         [24] 3081 	lcall	_ld_word
      000CB8 AB 82            [24] 3082 	mov	r3,dpl
      000CBA AC 83            [24] 3083 	mov	r4,dph
      000CBC 90r00r37         [24] 3084 	mov	dptr,#_get_fat_val_65536_105
      000CBF EB               [12] 3085 	mov	a,r3
      000CC0 F0               [24] 3086 	movx	@dptr,a
      000CC1 EC               [12] 3087 	mov	a,r4
      000CC2 A3               [24] 3088 	inc	dptr
      000CC3 F0               [24] 3089 	movx	@dptr,a
      000CC4 E4               [12] 3090 	clr	a
      000CC5 A3               [24] 3091 	inc	dptr
      000CC6 F0               [24] 3092 	movx	@dptr,a
      000CC7 A3               [24] 3093 	inc	dptr
      000CC8 F0               [24] 3094 	movx	@dptr,a
                                   3095 ;	ff15\source\ff.c:1190: break;
      000CC9 02r0Dr9E         [24] 3096 	ljmp	00116$
                                   3097 ;	ff15\source\ff.c:1192: case FS_FAT32 :
      000CCC                       3098 00109$:
                                   3099 ;	ff15\source\ff.c:1193: if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
      000CCC 74 20            [12] 3100 	mov	a,#0x20
      000CCE 2D               [12] 3101 	add	a,r5
      000CCF FC               [12] 3102 	mov	r4,a
      000CD0 E4               [12] 3103 	clr	a
      000CD1 3E               [12] 3104 	addc	a,r6
      000CD2 FA               [12] 3105 	mov	r2,a
      000CD3 8F 03            [24] 3106 	mov	ar3,r7
      000CD5 8C 82            [24] 3107 	mov	dpl,r4
      000CD7 8A 83            [24] 3108 	mov	dph,r2
      000CD9 8B F0            [24] 3109 	mov	b,r3
      000CDB 12r00r00         [24] 3110 	lcall	__gptrget
      000CDE F5*30            [12] 3111 	mov	_get_fat_sloc4_1_0,a
      000CE0 A3               [24] 3112 	inc	dptr
      000CE1 12r00r00         [24] 3113 	lcall	__gptrget
      000CE4 F5*31            [12] 3114 	mov	(_get_fat_sloc4_1_0 + 1),a
      000CE6 A3               [24] 3115 	inc	dptr
      000CE7 12r00r00         [24] 3116 	lcall	__gptrget
      000CEA F5*32            [12] 3117 	mov	(_get_fat_sloc4_1_0 + 2),a
      000CEC A3               [24] 3118 	inc	dptr
      000CED 12r00r00         [24] 3119 	lcall	__gptrget
      000CF0 F5*33            [12] 3120 	mov	(_get_fat_sloc4_1_0 + 3),a
      000CF2 A8*24            [24] 3121 	mov	r0,_get_fat_sloc0_1_0
      000CF4 E5*25            [12] 3122 	mov	a,(_get_fat_sloc0_1_0 + 1)
      000CF6 A2 E7            [12] 3123 	mov	c,acc.7
      000CF8 C8               [12] 3124 	xch	a,r0
      000CF9 33               [12] 3125 	rlc	a
      000CFA C8               [12] 3126 	xch	a,r0
      000CFB 33               [12] 3127 	rlc	a
      000CFC C8               [12] 3128 	xch	a,r0
      000CFD 54 01            [12] 3129 	anl	a,#0x01
      000CFF FA               [12] 3130 	mov	r2,a
      000D00 E5*26            [12] 3131 	mov	a,(_get_fat_sloc0_1_0 + 2)
      000D02 25*26            [12] 3132 	add	a,(_get_fat_sloc0_1_0 + 2)
      000D04 4A               [12] 3133 	orl	a,r2
      000D05 FA               [12] 3134 	mov	r2,a
      000D06 AB*26            [24] 3135 	mov	r3,(_get_fat_sloc0_1_0 + 2)
      000D08 E5*27            [12] 3136 	mov	a,(_get_fat_sloc0_1_0 + 3)
      000D0A A2 E7            [12] 3137 	mov	c,acc.7
      000D0C CB               [12] 3138 	xch	a,r3
      000D0D 33               [12] 3139 	rlc	a
      000D0E CB               [12] 3140 	xch	a,r3
      000D0F 33               [12] 3141 	rlc	a
      000D10 CB               [12] 3142 	xch	a,r3
      000D11 54 01            [12] 3143 	anl	a,#0x01
      000D13 FC               [12] 3144 	mov	r4,a
      000D14 90r00r1D         [24] 3145 	mov	dptr,#_move_window_PARM_2
      000D17 E8               [12] 3146 	mov	a,r0
      000D18 25*30            [12] 3147 	add	a,_get_fat_sloc4_1_0
      000D1A F0               [24] 3148 	movx	@dptr,a
      000D1B EA               [12] 3149 	mov	a,r2
      000D1C 35*31            [12] 3150 	addc	a,(_get_fat_sloc4_1_0 + 1)
      000D1E A3               [24] 3151 	inc	dptr
      000D1F F0               [24] 3152 	movx	@dptr,a
      000D20 EB               [12] 3153 	mov	a,r3
      000D21 35*32            [12] 3154 	addc	a,(_get_fat_sloc4_1_0 + 2)
      000D23 A3               [24] 3155 	inc	dptr
      000D24 F0               [24] 3156 	movx	@dptr,a
      000D25 EC               [12] 3157 	mov	a,r4
      000D26 35*33            [12] 3158 	addc	a,(_get_fat_sloc4_1_0 + 3)
      000D28 A3               [24] 3159 	inc	dptr
      000D29 F0               [24] 3160 	movx	@dptr,a
      000D2A 8D 82            [24] 3161 	mov	dpl,r5
      000D2C 8E 83            [24] 3162 	mov	dph,r6
      000D2E 8F F0            [24] 3163 	mov	b,r7
      000D30 C0 07            [24] 3164 	push	ar7
      000D32 C0 06            [24] 3165 	push	ar6
      000D34 C0 05            [24] 3166 	push	ar5
      000D36 12r05r18         [24] 3167 	lcall	_move_window
      000D39 E5 82            [12] 3168 	mov	a,dpl
      000D3B D0 05            [24] 3169 	pop	ar5
      000D3D D0 06            [24] 3170 	pop	ar6
      000D3F D0 07            [24] 3171 	pop	ar7
      000D41 70 5B            [24] 3172 	jnz	00116$
                                   3173 ;	ff15\source\ff.c:1194: val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upper 4 bits */
      000D43 74 30            [12] 3174 	mov	a,#0x30
      000D45 2D               [12] 3175 	add	a,r5
      000D46 FD               [12] 3176 	mov	r5,a
      000D47 E4               [12] 3177 	clr	a
      000D48 3E               [12] 3178 	addc	a,r6
      000D49 FE               [12] 3179 	mov	r6,a
      000D4A E5*24            [12] 3180 	mov	a,_get_fat_sloc0_1_0
      000D4C 25*24            [12] 3181 	add	a,_get_fat_sloc0_1_0
      000D4E F9               [12] 3182 	mov	r1,a
      000D4F E5*25            [12] 3183 	mov	a,(_get_fat_sloc0_1_0 + 1)
      000D51 33               [12] 3184 	rlc	a
      000D52 FA               [12] 3185 	mov	r2,a
      000D53 E5*26            [12] 3186 	mov	a,(_get_fat_sloc0_1_0 + 2)
      000D55 33               [12] 3187 	rlc	a
      000D56 FB               [12] 3188 	mov	r3,a
      000D57 E5*27            [12] 3189 	mov	a,(_get_fat_sloc0_1_0 + 3)
      000D59 33               [12] 3190 	rlc	a
      000D5A FC               [12] 3191 	mov	r4,a
      000D5B E9               [12] 3192 	mov	a,r1
      000D5C 29               [12] 3193 	add	a,r1
      000D5D F9               [12] 3194 	mov	r1,a
      000D5E EA               [12] 3195 	mov	a,r2
      000D5F 33               [12] 3196 	rlc	a
      000D60 FA               [12] 3197 	mov	r2,a
      000D61 EB               [12] 3198 	mov	a,r3
      000D62 33               [12] 3199 	rlc	a
      000D63 EC               [12] 3200 	mov	a,r4
      000D64 33               [12] 3201 	rlc	a
      000D65 53 02 01         [24] 3202 	anl	ar2,#0x01
      000D68 E4               [12] 3203 	clr	a
      000D69 E9               [12] 3204 	mov	a,r1
      000D6A 2D               [12] 3205 	add	a,r5
      000D6B FD               [12] 3206 	mov	r5,a
      000D6C EA               [12] 3207 	mov	a,r2
      000D6D 3E               [12] 3208 	addc	a,r6
      000D6E FE               [12] 3209 	mov	r6,a
      000D6F 8D 82            [24] 3210 	mov	dpl,r5
      000D71 8E 83            [24] 3211 	mov	dph,r6
      000D73 8F F0            [24] 3212 	mov	b,r7
      000D75 12r00r45         [24] 3213 	lcall	_ld_dword
      000D78 AC 82            [24] 3214 	mov	r4,dpl
      000D7A AD 83            [24] 3215 	mov	r5,dph
      000D7C AE F0            [24] 3216 	mov	r6,b
      000D7E FF               [12] 3217 	mov	r7,a
      000D7F 90r00r37         [24] 3218 	mov	dptr,#_get_fat_val_65536_105
      000D82 EC               [12] 3219 	mov	a,r4
      000D83 F0               [24] 3220 	movx	@dptr,a
      000D84 ED               [12] 3221 	mov	a,r5
      000D85 A3               [24] 3222 	inc	dptr
      000D86 F0               [24] 3223 	movx	@dptr,a
      000D87 EE               [12] 3224 	mov	a,r6
      000D88 A3               [24] 3225 	inc	dptr
      000D89 F0               [24] 3226 	movx	@dptr,a
      000D8A 74 0F            [12] 3227 	mov	a,#0x0f
      000D8C 5F               [12] 3228 	anl	a,r7
      000D8D A3               [24] 3229 	inc	dptr
      000D8E F0               [24] 3230 	movx	@dptr,a
                                   3231 ;	ff15\source\ff.c:1195: break;
                                   3232 ;	ff15\source\ff.c:1223: default:
      000D8F 80 0D            [24] 3233 	sjmp	00116$
      000D91                       3234 00112$:
                                   3235 ;	ff15\source\ff.c:1224: val = 1;	/* Internal error */
      000D91 90r00r37         [24] 3236 	mov	dptr,#_get_fat_val_65536_105
      000D94 74 01            [12] 3237 	mov	a,#0x01
      000D96 F0               [24] 3238 	movx	@dptr,a
      000D97 E4               [12] 3239 	clr	a
      000D98 A3               [24] 3240 	inc	dptr
      000D99 F0               [24] 3241 	movx	@dptr,a
      000D9A A3               [24] 3242 	inc	dptr
      000D9B F0               [24] 3243 	movx	@dptr,a
      000D9C A3               [24] 3244 	inc	dptr
      000D9D F0               [24] 3245 	movx	@dptr,a
                                   3246 ;	ff15\source\ff.c:1225: }
      000D9E                       3247 00116$:
                                   3248 ;	ff15\source\ff.c:1228: return val;
      000D9E 90r00r37         [24] 3249 	mov	dptr,#_get_fat_val_65536_105
      000DA1 E0               [24] 3250 	movx	a,@dptr
      000DA2 FC               [12] 3251 	mov	r4,a
      000DA3 A3               [24] 3252 	inc	dptr
      000DA4 E0               [24] 3253 	movx	a,@dptr
      000DA5 FD               [12] 3254 	mov	r5,a
      000DA6 A3               [24] 3255 	inc	dptr
      000DA7 E0               [24] 3256 	movx	a,@dptr
      000DA8 FE               [12] 3257 	mov	r6,a
      000DA9 A3               [24] 3258 	inc	dptr
      000DAA E0               [24] 3259 	movx	a,@dptr
      000DAB 8C 82            [24] 3260 	mov	dpl,r4
      000DAD 8D 83            [24] 3261 	mov	dph,r5
      000DAF 8E F0            [24] 3262 	mov	b,r6
                                   3263 ;	ff15\source\ff.c:1229: }
      000DB1 22               [24] 3264 	ret
                                   3265 ;------------------------------------------------------------
                                   3266 ;Allocation info for local variables in function 'put_fat'
                                   3267 ;------------------------------------------------------------
                                   3268 ;sloc0                     Allocated with name '_put_fat_sloc0_1_0'
                                   3269 ;sloc1                     Allocated with name '_put_fat_sloc1_1_0'
                                   3270 ;sloc2                     Allocated with name '_put_fat_sloc2_1_0'
                                   3271 ;sloc3                     Allocated with name '_put_fat_sloc3_1_0'
                                   3272 ;sloc4                     Allocated with name '_put_fat_sloc4_1_0'
                                   3273 ;clst                      Allocated with name '_put_fat_PARM_2'
                                   3274 ;val                       Allocated with name '_put_fat_PARM_3'
                                   3275 ;fs                        Allocated with name '_put_fat_fs_65536_109'
                                   3276 ;bc                        Allocated with name '_put_fat_bc_65536_110'
                                   3277 ;p                         Allocated with name '_put_fat_p_65536_110'
                                   3278 ;res                       Allocated with name '_put_fat_res_65536_110'
                                   3279 ;------------------------------------------------------------
                                   3280 ;	ff15\source\ff.c:1239: static FRESULT put_fat (	/* FR_OK(0):succeeded, !=0:error */
                                   3281 ;	-----------------------------------------
                                   3282 ;	 function put_fat
                                   3283 ;	-----------------------------------------
      000DB2                       3284 _put_fat:
      000DB2 AF F0            [24] 3285 	mov	r7,b
      000DB4 AE 83            [24] 3286 	mov	r6,dph
      000DB6 E5 82            [12] 3287 	mov	a,dpl
      000DB8 90r00r43         [24] 3288 	mov	dptr,#_put_fat_fs_65536_109
      000DBB F0               [24] 3289 	movx	@dptr,a
      000DBC EE               [12] 3290 	mov	a,r6
      000DBD A3               [24] 3291 	inc	dptr
      000DBE F0               [24] 3292 	movx	@dptr,a
      000DBF EF               [12] 3293 	mov	a,r7
      000DC0 A3               [24] 3294 	inc	dptr
      000DC1 F0               [24] 3295 	movx	@dptr,a
                                   3296 ;	ff15\source\ff.c:1247: FRESULT res = FR_INT_ERR;
      000DC2 90r00r46         [24] 3297 	mov	dptr,#_put_fat_res_65536_110
      000DC5 74 02            [12] 3298 	mov	a,#0x02
      000DC7 F0               [24] 3299 	movx	@dptr,a
                                   3300 ;	ff15\source\ff.c:1250: if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
      000DC8 90r00r3B         [24] 3301 	mov	dptr,#_put_fat_PARM_2
      000DCB E0               [24] 3302 	movx	a,@dptr
      000DCC FC               [12] 3303 	mov	r4,a
      000DCD A3               [24] 3304 	inc	dptr
      000DCE E0               [24] 3305 	movx	a,@dptr
      000DCF FD               [12] 3306 	mov	r5,a
      000DD0 A3               [24] 3307 	inc	dptr
      000DD1 E0               [24] 3308 	movx	a,@dptr
      000DD2 FE               [12] 3309 	mov	r6,a
      000DD3 A3               [24] 3310 	inc	dptr
      000DD4 E0               [24] 3311 	movx	a,@dptr
      000DD5 FF               [12] 3312 	mov	r7,a
      000DD6 C3               [12] 3313 	clr	c
      000DD7 EC               [12] 3314 	mov	a,r4
      000DD8 94 02            [12] 3315 	subb	a,#0x02
      000DDA ED               [12] 3316 	mov	a,r5
      000DDB 94 00            [12] 3317 	subb	a,#0x00
      000DDD EE               [12] 3318 	mov	a,r6
      000DDE 94 00            [12] 3319 	subb	a,#0x00
      000DE0 EF               [12] 3320 	mov	a,r7
      000DE1 94 00            [12] 3321 	subb	a,#0x00
      000DE3 50 03            [24] 3322 	jnc	00169$
      000DE5 02r13r0E         [24] 3323 	ljmp	00117$
      000DE8                       3324 00169$:
      000DE8 90r00r43         [24] 3325 	mov	dptr,#_put_fat_fs_65536_109
      000DEB E0               [24] 3326 	movx	a,@dptr
      000DEC F5*34            [12] 3327 	mov	_put_fat_sloc0_1_0,a
      000DEE A3               [24] 3328 	inc	dptr
      000DEF E0               [24] 3329 	movx	a,@dptr
      000DF0 F5*35            [12] 3330 	mov	(_put_fat_sloc0_1_0 + 1),a
      000DF2 A3               [24] 3331 	inc	dptr
      000DF3 E0               [24] 3332 	movx	a,@dptr
      000DF4 F5*36            [12] 3333 	mov	(_put_fat_sloc0_1_0 + 2),a
      000DF6 74 14            [12] 3334 	mov	a,#0x14
      000DF8 25*34            [12] 3335 	add	a,_put_fat_sloc0_1_0
      000DFA F8               [12] 3336 	mov	r0,a
      000DFB E4               [12] 3337 	clr	a
      000DFC 35*35            [12] 3338 	addc	a,(_put_fat_sloc0_1_0 + 1)
      000DFE FB               [12] 3339 	mov	r3,a
      000DFF AA*36            [24] 3340 	mov	r2,(_put_fat_sloc0_1_0 + 2)
      000E01 88 82            [24] 3341 	mov	dpl,r0
      000E03 8B 83            [24] 3342 	mov	dph,r3
      000E05 8A F0            [24] 3343 	mov	b,r2
      000E07 12r00r00         [24] 3344 	lcall	__gptrget
      000E0A F8               [12] 3345 	mov	r0,a
      000E0B A3               [24] 3346 	inc	dptr
      000E0C 12r00r00         [24] 3347 	lcall	__gptrget
      000E0F F9               [12] 3348 	mov	r1,a
      000E10 A3               [24] 3349 	inc	dptr
      000E11 12r00r00         [24] 3350 	lcall	__gptrget
      000E14 FA               [12] 3351 	mov	r2,a
      000E15 A3               [24] 3352 	inc	dptr
      000E16 12r00r00         [24] 3353 	lcall	__gptrget
      000E19 FB               [12] 3354 	mov	r3,a
      000E1A C3               [12] 3355 	clr	c
      000E1B EC               [12] 3356 	mov	a,r4
      000E1C 98               [12] 3357 	subb	a,r0
      000E1D ED               [12] 3358 	mov	a,r5
      000E1E 99               [12] 3359 	subb	a,r1
      000E1F EE               [12] 3360 	mov	a,r6
      000E20 9A               [12] 3361 	subb	a,r2
      000E21 EF               [12] 3362 	mov	a,r7
      000E22 9B               [12] 3363 	subb	a,r3
      000E23 40 03            [24] 3364 	jc	00170$
      000E25 02r13r0E         [24] 3365 	ljmp	00117$
      000E28                       3366 00170$:
                                   3367 ;	ff15\source\ff.c:1251: switch (fs->fs_type) {
      000E28 85*34 82         [24] 3368 	mov	dpl,_put_fat_sloc0_1_0
      000E2B 85*35 83         [24] 3369 	mov	dph,(_put_fat_sloc0_1_0 + 1)
      000E2E 85*36 F0         [24] 3370 	mov	b,(_put_fat_sloc0_1_0 + 2)
      000E31 12r00r00         [24] 3371 	lcall	__gptrget
      000E34 FB               [12] 3372 	mov	r3,a
      000E35 BB 01 02         [24] 3373 	cjne	r3,#0x01,00171$
      000E38 80 0F            [24] 3374 	sjmp	00101$
      000E3A                       3375 00171$:
      000E3A BB 02 03         [24] 3376 	cjne	r3,#0x02,00172$
      000E3D 02r10rD4         [24] 3377 	ljmp	00106$
      000E40                       3378 00172$:
      000E40 BB 03 03         [24] 3379 	cjne	r3,#0x03,00173$
      000E43 02r11rB0         [24] 3380 	ljmp	00109$
      000E46                       3381 00173$:
      000E46 02r13r0E         [24] 3382 	ljmp	00117$
                                   3383 ;	ff15\source\ff.c:1252: case FS_FAT12:
      000E49                       3384 00101$:
                                   3385 ;	ff15\source\ff.c:1253: bc = (UINT)clst; bc += bc / 2;	/* bc: byte offset of the entry */
      000E49 8C 02            [24] 3386 	mov	ar2,r4
      000E4B 8D 03            [24] 3387 	mov	ar3,r5
      000E4D 8A 00            [24] 3388 	mov	ar0,r2
      000E4F EB               [12] 3389 	mov	a,r3
      000E50 C3               [12] 3390 	clr	c
      000E51 13               [12] 3391 	rrc	a
      000E52 C8               [12] 3392 	xch	a,r0
      000E53 13               [12] 3393 	rrc	a
      000E54 C8               [12] 3394 	xch	a,r0
      000E55 F9               [12] 3395 	mov	r1,a
      000E56 E8               [12] 3396 	mov	a,r0
      000E57 2A               [12] 3397 	add	a,r2
      000E58 F5*3B            [12] 3398 	mov	_put_fat_sloc2_1_0,a
      000E5A E9               [12] 3399 	mov	a,r1
      000E5B 3B               [12] 3400 	addc	a,r3
      000E5C F5*3C            [12] 3401 	mov	(_put_fat_sloc2_1_0 + 1),a
                                   3402 ;	ff15\source\ff.c:1254: res = move_window(fs, fs->fatbase + (bc / SS(fs)));
      000E5E C0 04            [24] 3403 	push	ar4
      000E60 C0 05            [24] 3404 	push	ar5
      000E62 C0 06            [24] 3405 	push	ar6
      000E64 C0 07            [24] 3406 	push	ar7
      000E66 74 20            [12] 3407 	mov	a,#0x20
      000E68 25*34            [12] 3408 	add	a,_put_fat_sloc0_1_0
      000E6A F8               [12] 3409 	mov	r0,a
      000E6B E4               [12] 3410 	clr	a
      000E6C 35*35            [12] 3411 	addc	a,(_put_fat_sloc0_1_0 + 1)
      000E6E F9               [12] 3412 	mov	r1,a
      000E6F AF*36            [24] 3413 	mov	r7,(_put_fat_sloc0_1_0 + 2)
      000E71 88 82            [24] 3414 	mov	dpl,r0
      000E73 89 83            [24] 3415 	mov	dph,r1
      000E75 8F F0            [24] 3416 	mov	b,r7
      000E77 12r00r00         [24] 3417 	lcall	__gptrget
      000E7A F5*37            [12] 3418 	mov	_put_fat_sloc1_1_0,a
      000E7C A3               [24] 3419 	inc	dptr
      000E7D 12r00r00         [24] 3420 	lcall	__gptrget
      000E80 F5*38            [12] 3421 	mov	(_put_fat_sloc1_1_0 + 1),a
      000E82 A3               [24] 3422 	inc	dptr
      000E83 12r00r00         [24] 3423 	lcall	__gptrget
      000E86 F5*39            [12] 3424 	mov	(_put_fat_sloc1_1_0 + 2),a
      000E88 A3               [24] 3425 	inc	dptr
      000E89 12r00r00         [24] 3426 	lcall	__gptrget
      000E8C F5*3A            [12] 3427 	mov	(_put_fat_sloc1_1_0 + 3),a
      000E8E E5*3C            [12] 3428 	mov	a,(_put_fat_sloc2_1_0 + 1)
      000E90 C3               [12] 3429 	clr	c
      000E91 13               [12] 3430 	rrc	a
      000E92 FC               [12] 3431 	mov	r4,a
      000E93 7D 00            [12] 3432 	mov	r5,#0x00
      000E95 7E 00            [12] 3433 	mov	r6,#0x00
      000E97 7F 00            [12] 3434 	mov	r7,#0x00
      000E99 90r00r1D         [24] 3435 	mov	dptr,#_move_window_PARM_2
      000E9C EC               [12] 3436 	mov	a,r4
      000E9D 25*37            [12] 3437 	add	a,_put_fat_sloc1_1_0
      000E9F F0               [24] 3438 	movx	@dptr,a
      000EA0 ED               [12] 3439 	mov	a,r5
      000EA1 35*38            [12] 3440 	addc	a,(_put_fat_sloc1_1_0 + 1)
      000EA3 A3               [24] 3441 	inc	dptr
      000EA4 F0               [24] 3442 	movx	@dptr,a
      000EA5 EE               [12] 3443 	mov	a,r6
      000EA6 35*39            [12] 3444 	addc	a,(_put_fat_sloc1_1_0 + 2)
      000EA8 A3               [24] 3445 	inc	dptr
      000EA9 F0               [24] 3446 	movx	@dptr,a
      000EAA EF               [12] 3447 	mov	a,r7
      000EAB 35*3A            [12] 3448 	addc	a,(_put_fat_sloc1_1_0 + 3)
      000EAD A3               [24] 3449 	inc	dptr
      000EAE F0               [24] 3450 	movx	@dptr,a
      000EAF 85*34 82         [24] 3451 	mov	dpl,_put_fat_sloc0_1_0
      000EB2 85*35 83         [24] 3452 	mov	dph,(_put_fat_sloc0_1_0 + 1)
      000EB5 85*36 F0         [24] 3453 	mov	b,(_put_fat_sloc0_1_0 + 2)
      000EB8 C0 06            [24] 3454 	push	ar6
      000EBA C0 05            [24] 3455 	push	ar5
      000EBC C0 04            [24] 3456 	push	ar4
      000EBE 12r05r18         [24] 3457 	lcall	_move_window
      000EC1 AF 82            [24] 3458 	mov	r7,dpl
      000EC3 D0 04            [24] 3459 	pop	ar4
      000EC5 D0 05            [24] 3460 	pop	ar5
      000EC7 D0 06            [24] 3461 	pop	ar6
      000EC9 90r00r46         [24] 3462 	mov	dptr,#_put_fat_res_65536_110
      000ECC EF               [12] 3463 	mov	a,r7
      000ECD F0               [24] 3464 	movx	@dptr,a
                                   3465 ;	ff15\source\ff.c:1255: if (res != FR_OK) break;
      000ECE EF               [12] 3466 	mov	a,r7
      000ECF D0 07            [24] 3467 	pop	ar7
      000ED1 D0 06            [24] 3468 	pop	ar6
      000ED3 D0 05            [24] 3469 	pop	ar5
      000ED5 D0 04            [24] 3470 	pop	ar4
      000ED7 60 03            [24] 3471 	jz	00174$
      000ED9 02r13r0E         [24] 3472 	ljmp	00117$
      000EDC                       3473 00174$:
                                   3474 ;	ff15\source\ff.c:1256: p = fs->win + bc++ % SS(fs);
      000EDC 90r00r43         [24] 3475 	mov	dptr,#_put_fat_fs_65536_109
      000EDF E0               [24] 3476 	movx	a,@dptr
      000EE0 F8               [12] 3477 	mov	r0,a
      000EE1 A3               [24] 3478 	inc	dptr
      000EE2 E0               [24] 3479 	movx	a,@dptr
      000EE3 F9               [12] 3480 	mov	r1,a
      000EE4 A3               [24] 3481 	inc	dptr
      000EE5 E0               [24] 3482 	movx	a,@dptr
      000EE6 FB               [12] 3483 	mov	r3,a
      000EE7 74 30            [12] 3484 	mov	a,#0x30
      000EE9 28               [12] 3485 	add	a,r0
      000EEA F5*3D            [12] 3486 	mov	_put_fat_sloc3_1_0,a
      000EEC E4               [12] 3487 	clr	a
      000EED 39               [12] 3488 	addc	a,r1
      000EEE F5*3E            [12] 3489 	mov	(_put_fat_sloc3_1_0 + 1),a
      000EF0 8B*3F            [24] 3490 	mov	(_put_fat_sloc3_1_0 + 2),r3
      000EF2 74 01            [12] 3491 	mov	a,#0x01
      000EF4 25*3B            [12] 3492 	add	a,_put_fat_sloc2_1_0
      000EF6 F5*37            [12] 3493 	mov	_put_fat_sloc1_1_0,a
      000EF8 E4               [12] 3494 	clr	a
      000EF9 35*3C            [12] 3495 	addc	a,(_put_fat_sloc2_1_0 + 1)
      000EFB F5*38            [12] 3496 	mov	(_put_fat_sloc1_1_0 + 1),a
      000EFD AA*3B            [24] 3497 	mov	r2,_put_fat_sloc2_1_0
      000EFF 74 01            [12] 3498 	mov	a,#0x01
      000F01 55*3C            [12] 3499 	anl	a,(_put_fat_sloc2_1_0 + 1)
      000F03 FB               [12] 3500 	mov	r3,a
      000F04 EA               [12] 3501 	mov	a,r2
      000F05 25*3D            [12] 3502 	add	a,_put_fat_sloc3_1_0
      000F07 FA               [12] 3503 	mov	r2,a
      000F08 EB               [12] 3504 	mov	a,r3
      000F09 35*3E            [12] 3505 	addc	a,(_put_fat_sloc3_1_0 + 1)
      000F0B F9               [12] 3506 	mov	r1,a
      000F0C AB*3F            [24] 3507 	mov	r3,(_put_fat_sloc3_1_0 + 2)
                                   3508 ;	ff15\source\ff.c:1257: *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;	/* Update 1st byte */
      000F0E 8A*3D            [24] 3509 	mov	_put_fat_sloc3_1_0,r2
      000F10 89*3E            [24] 3510 	mov	(_put_fat_sloc3_1_0 + 1),r1
      000F12 8B*3F            [24] 3511 	mov	(_put_fat_sloc3_1_0 + 2),r3
      000F14 EC               [12] 3512 	mov	a,r4
      000F15 30 E0 3E         [24] 3513 	jnb	acc.0,00121$
      000F18 C0 04            [24] 3514 	push	ar4
      000F1A C0 05            [24] 3515 	push	ar5
      000F1C C0 06            [24] 3516 	push	ar6
      000F1E C0 07            [24] 3517 	push	ar7
      000F20 8A 82            [24] 3518 	mov	dpl,r2
      000F22 89 83            [24] 3519 	mov	dph,r1
      000F24 8B F0            [24] 3520 	mov	b,r3
      000F26 12r00r00         [24] 3521 	lcall	__gptrget
      000F29 FA               [12] 3522 	mov	r2,a
      000F2A 53 02 0F         [24] 3523 	anl	ar2,#0x0f
      000F2D 7B 00            [12] 3524 	mov	r3,#0x00
      000F2F 90r00r3F         [24] 3525 	mov	dptr,#_put_fat_PARM_3
      000F32 E0               [24] 3526 	movx	a,@dptr
      000F33 F8               [12] 3527 	mov	r0,a
      000F34 A3               [24] 3528 	inc	dptr
      000F35 E0               [24] 3529 	movx	a,@dptr
      000F36 F9               [12] 3530 	mov	r1,a
      000F37 A3               [24] 3531 	inc	dptr
      000F38 E0               [24] 3532 	movx	a,@dptr
      000F39 A3               [24] 3533 	inc	dptr
      000F3A E0               [24] 3534 	movx	a,@dptr
      000F3B E8               [12] 3535 	mov	a,r0
      000F3C C4               [12] 3536 	swap	a
      000F3D 54 F0            [12] 3537 	anl	a,#0xf0
      000F3F F8               [12] 3538 	mov	r0,a
      000F40 33               [12] 3539 	rlc	a
      000F41 95 E0            [12] 3540 	subb	a,acc
      000F43 FF               [12] 3541 	mov	r7,a
      000F44 E8               [12] 3542 	mov	a,r0
      000F45 4A               [12] 3543 	orl	a,r2
      000F46 F5*3B            [12] 3544 	mov	_put_fat_sloc2_1_0,a
      000F48 EF               [12] 3545 	mov	a,r7
      000F49 4B               [12] 3546 	orl	a,r3
      000F4A F5*3C            [12] 3547 	mov	(_put_fat_sloc2_1_0 + 1),a
      000F4C D0 07            [24] 3548 	pop	ar7
      000F4E D0 06            [24] 3549 	pop	ar6
      000F50 D0 05            [24] 3550 	pop	ar5
      000F52 D0 04            [24] 3551 	pop	ar4
      000F54 80 13            [24] 3552 	sjmp	00122$
      000F56                       3553 00121$:
      000F56 90r00r3F         [24] 3554 	mov	dptr,#_put_fat_PARM_3
      000F59 E0               [24] 3555 	movx	a,@dptr
      000F5A F8               [12] 3556 	mov	r0,a
      000F5B A3               [24] 3557 	inc	dptr
      000F5C E0               [24] 3558 	movx	a,@dptr
      000F5D F9               [12] 3559 	mov	r1,a
      000F5E A3               [24] 3560 	inc	dptr
      000F5F E0               [24] 3561 	movx	a,@dptr
      000F60 FA               [12] 3562 	mov	r2,a
      000F61 A3               [24] 3563 	inc	dptr
      000F62 E0               [24] 3564 	movx	a,@dptr
      000F63 FB               [12] 3565 	mov	r3,a
      000F64 88*3B            [24] 3566 	mov	_put_fat_sloc2_1_0,r0
      000F66 75*3C 00         [24] 3567 	mov	(_put_fat_sloc2_1_0 + 1),#0x00
      000F69                       3568 00122$:
      000F69 C0 04            [24] 3569 	push	ar4
      000F6B C0 05            [24] 3570 	push	ar5
      000F6D C0 06            [24] 3571 	push	ar6
      000F6F C0 07            [24] 3572 	push	ar7
      000F71 AB*3B            [24] 3573 	mov	r3,_put_fat_sloc2_1_0
      000F73 85*3D 82         [24] 3574 	mov	dpl,_put_fat_sloc3_1_0
      000F76 85*3E 83         [24] 3575 	mov	dph,(_put_fat_sloc3_1_0 + 1)
      000F79 85*3F F0         [24] 3576 	mov	b,(_put_fat_sloc3_1_0 + 2)
      000F7C EB               [12] 3577 	mov	a,r3
      000F7D 12r00r00         [24] 3578 	lcall	__gptrput
                                   3579 ;	ff15\source\ff.c:1258: fs->wflag = 1;
      000F80 90r00r43         [24] 3580 	mov	dptr,#_put_fat_fs_65536_109
      000F83 E0               [24] 3581 	movx	a,@dptr
      000F84 F9               [12] 3582 	mov	r1,a
      000F85 A3               [24] 3583 	inc	dptr
      000F86 E0               [24] 3584 	movx	a,@dptr
      000F87 FA               [12] 3585 	mov	r2,a
      000F88 A3               [24] 3586 	inc	dptr
      000F89 E0               [24] 3587 	movx	a,@dptr
      000F8A FB               [12] 3588 	mov	r3,a
      000F8B 74 04            [12] 3589 	mov	a,#0x04
      000F8D 29               [12] 3590 	add	a,r1
      000F8E F8               [12] 3591 	mov	r0,a
      000F8F E4               [12] 3592 	clr	a
      000F90 3A               [12] 3593 	addc	a,r2
      000F91 FE               [12] 3594 	mov	r6,a
      000F92 8B 07            [24] 3595 	mov	ar7,r3
      000F94 88 82            [24] 3596 	mov	dpl,r0
      000F96 8E 83            [24] 3597 	mov	dph,r6
      000F98 8F F0            [24] 3598 	mov	b,r7
      000F9A 74 01            [12] 3599 	mov	a,#0x01
      000F9C 12r00r00         [24] 3600 	lcall	__gptrput
                                   3601 ;	ff15\source\ff.c:1259: res = move_window(fs, fs->fatbase + (bc / SS(fs)));
      000F9F 74 20            [12] 3602 	mov	a,#0x20
      000FA1 29               [12] 3603 	add	a,r1
      000FA2 FD               [12] 3604 	mov	r5,a
      000FA3 E4               [12] 3605 	clr	a
      000FA4 3A               [12] 3606 	addc	a,r2
      000FA5 FE               [12] 3607 	mov	r6,a
      000FA6 8B 07            [24] 3608 	mov	ar7,r3
      000FA8 8D 82            [24] 3609 	mov	dpl,r5
      000FAA 8E 83            [24] 3610 	mov	dph,r6
      000FAC 8F F0            [24] 3611 	mov	b,r7
      000FAE 12r00r00         [24] 3612 	lcall	__gptrget
      000FB1 F5*40            [12] 3613 	mov	_put_fat_sloc4_1_0,a
      000FB3 A3               [24] 3614 	inc	dptr
      000FB4 12r00r00         [24] 3615 	lcall	__gptrget
      000FB7 F5*41            [12] 3616 	mov	(_put_fat_sloc4_1_0 + 1),a
      000FB9 A3               [24] 3617 	inc	dptr
      000FBA 12r00r00         [24] 3618 	lcall	__gptrget
      000FBD F5*42            [12] 3619 	mov	(_put_fat_sloc4_1_0 + 2),a
      000FBF A3               [24] 3620 	inc	dptr
      000FC0 12r00r00         [24] 3621 	lcall	__gptrget
      000FC3 F5*43            [12] 3622 	mov	(_put_fat_sloc4_1_0 + 3),a
      000FC5 E5*38            [12] 3623 	mov	a,(_put_fat_sloc1_1_0 + 1)
      000FC7 C3               [12] 3624 	clr	c
      000FC8 13               [12] 3625 	rrc	a
      000FC9 F8               [12] 3626 	mov	r0,a
      000FCA 7F 00            [12] 3627 	mov	r7,#0x00
      000FCC 7E 00            [12] 3628 	mov	r6,#0x00
      000FCE 7D 00            [12] 3629 	mov	r5,#0x00
      000FD0 90r00r1D         [24] 3630 	mov	dptr,#_move_window_PARM_2
      000FD3 E8               [12] 3631 	mov	a,r0
      000FD4 25*40            [12] 3632 	add	a,_put_fat_sloc4_1_0
      000FD6 F0               [24] 3633 	movx	@dptr,a
      000FD7 EF               [12] 3634 	mov	a,r7
      000FD8 35*41            [12] 3635 	addc	a,(_put_fat_sloc4_1_0 + 1)
      000FDA A3               [24] 3636 	inc	dptr
      000FDB F0               [24] 3637 	movx	@dptr,a
      000FDC EE               [12] 3638 	mov	a,r6
      000FDD 35*42            [12] 3639 	addc	a,(_put_fat_sloc4_1_0 + 2)
      000FDF A3               [24] 3640 	inc	dptr
      000FE0 F0               [24] 3641 	movx	@dptr,a
      000FE1 ED               [12] 3642 	mov	a,r5
      000FE2 35*43            [12] 3643 	addc	a,(_put_fat_sloc4_1_0 + 3)
      000FE4 A3               [24] 3644 	inc	dptr
      000FE5 F0               [24] 3645 	movx	@dptr,a
      000FE6 89 82            [24] 3646 	mov	dpl,r1
      000FE8 8A 83            [24] 3647 	mov	dph,r2
      000FEA 8B F0            [24] 3648 	mov	b,r3
      000FEC C0 06            [24] 3649 	push	ar6
      000FEE C0 05            [24] 3650 	push	ar5
      000FF0 C0 04            [24] 3651 	push	ar4
      000FF2 12r05r18         [24] 3652 	lcall	_move_window
      000FF5 AF 82            [24] 3653 	mov	r7,dpl
      000FF7 D0 04            [24] 3654 	pop	ar4
      000FF9 D0 05            [24] 3655 	pop	ar5
      000FFB D0 06            [24] 3656 	pop	ar6
      000FFD 90r00r46         [24] 3657 	mov	dptr,#_put_fat_res_65536_110
      001000 EF               [12] 3658 	mov	a,r7
      001001 F0               [24] 3659 	movx	@dptr,a
                                   3660 ;	ff15\source\ff.c:1260: if (res != FR_OK) break;
      001002 EF               [12] 3661 	mov	a,r7
      001003 D0 07            [24] 3662 	pop	ar7
      001005 D0 06            [24] 3663 	pop	ar6
      001007 D0 05            [24] 3664 	pop	ar5
      001009 D0 04            [24] 3665 	pop	ar4
      00100B 60 03            [24] 3666 	jz	00176$
      00100D 02r13r0E         [24] 3667 	ljmp	00117$
      001010                       3668 00176$:
                                   3669 ;	ff15\source\ff.c:1261: p = fs->win + bc % SS(fs);
      001010 90r00r43         [24] 3670 	mov	dptr,#_put_fat_fs_65536_109
      001013 E0               [24] 3671 	movx	a,@dptr
      001014 F9               [12] 3672 	mov	r1,a
      001015 A3               [24] 3673 	inc	dptr
      001016 E0               [24] 3674 	movx	a,@dptr
      001017 FA               [12] 3675 	mov	r2,a
      001018 A3               [24] 3676 	inc	dptr
      001019 E0               [24] 3677 	movx	a,@dptr
      00101A FB               [12] 3678 	mov	r3,a
      00101B 74 30            [12] 3679 	mov	a,#0x30
      00101D 29               [12] 3680 	add	a,r1
      00101E F5*40            [12] 3681 	mov	_put_fat_sloc4_1_0,a
      001020 E4               [12] 3682 	clr	a
      001021 3A               [12] 3683 	addc	a,r2
      001022 F5*41            [12] 3684 	mov	(_put_fat_sloc4_1_0 + 1),a
      001024 8B*42            [24] 3685 	mov	(_put_fat_sloc4_1_0 + 2),r3
      001026 A8*37            [24] 3686 	mov	r0,_put_fat_sloc1_1_0
      001028 74 01            [12] 3687 	mov	a,#0x01
      00102A 55*38            [12] 3688 	anl	a,(_put_fat_sloc1_1_0 + 1)
      00102C FB               [12] 3689 	mov	r3,a
      00102D E8               [12] 3690 	mov	a,r0
      00102E 25*40            [12] 3691 	add	a,_put_fat_sloc4_1_0
      001030 F9               [12] 3692 	mov	r1,a
      001031 EB               [12] 3693 	mov	a,r3
      001032 35*41            [12] 3694 	addc	a,(_put_fat_sloc4_1_0 + 1)
      001034 FA               [12] 3695 	mov	r2,a
      001035 AB*42            [24] 3696 	mov	r3,(_put_fat_sloc4_1_0 + 2)
                                   3697 ;	ff15\source\ff.c:1262: *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Update 2nd byte */
      001037 89*40            [24] 3698 	mov	_put_fat_sloc4_1_0,r1
      001039 8A*41            [24] 3699 	mov	(_put_fat_sloc4_1_0 + 1),r2
      00103B 8B*42            [24] 3700 	mov	(_put_fat_sloc4_1_0 + 2),r3
      00103D EC               [12] 3701 	mov	a,r4
      00103E 30 E0 34         [24] 3702 	jnb	acc.0,00123$
      001041 90r00r3F         [24] 3703 	mov	dptr,#_put_fat_PARM_3
      001044 E0               [24] 3704 	movx	a,@dptr
      001045 F5*37            [12] 3705 	mov	_put_fat_sloc1_1_0,a
      001047 A3               [24] 3706 	inc	dptr
      001048 E0               [24] 3707 	movx	a,@dptr
      001049 F5*38            [12] 3708 	mov	(_put_fat_sloc1_1_0 + 1),a
      00104B A3               [24] 3709 	inc	dptr
      00104C E0               [24] 3710 	movx	a,@dptr
      00104D F5*39            [12] 3711 	mov	(_put_fat_sloc1_1_0 + 2),a
      00104F A3               [24] 3712 	inc	dptr
      001050 E0               [24] 3713 	movx	a,@dptr
      001051 F5*3A            [12] 3714 	mov	(_put_fat_sloc1_1_0 + 3),a
      001053 85*37*3D         [24] 3715 	mov	_put_fat_sloc3_1_0,_put_fat_sloc1_1_0
      001056 E5*38            [12] 3716 	mov	a,(_put_fat_sloc1_1_0 + 1)
      001058 F5*3E            [12] 3717 	mov	(_put_fat_sloc3_1_0 + 1),a
      00105A C4               [12] 3718 	swap	a
      00105B C5*3D            [12] 3719 	xch	a,_put_fat_sloc3_1_0
      00105D C4               [12] 3720 	swap	a
      00105E 54 0F            [12] 3721 	anl	a,#0x0f
      001060 65*3D            [12] 3722 	xrl	a,_put_fat_sloc3_1_0
      001062 C5*3D            [12] 3723 	xch	a,_put_fat_sloc3_1_0
      001064 54 0F            [12] 3724 	anl	a,#0x0f
      001066 C5*3D            [12] 3725 	xch	a,_put_fat_sloc3_1_0
      001068 65*3D            [12] 3726 	xrl	a,_put_fat_sloc3_1_0
      00106A C5*3D            [12] 3727 	xch	a,_put_fat_sloc3_1_0
      00106C F5*3E            [12] 3728 	mov	(_put_fat_sloc3_1_0 + 1),a
      00106E A8*3D            [24] 3729 	mov  r0,_put_fat_sloc3_1_0
      001070 75*3E 00         [24] 3730 	mov	(_put_fat_sloc3_1_0 + 1),#0x00
      001073 80 30            [24] 3731 	sjmp	00124$
      001075                       3732 00123$:
      001075 89 82            [24] 3733 	mov	dpl,r1
      001077 8A 83            [24] 3734 	mov	dph,r2
      001079 8B F0            [24] 3735 	mov	b,r3
      00107B 12r00r00         [24] 3736 	lcall	__gptrget
      00107E F9               [12] 3737 	mov	r1,a
      00107F 7B 00            [12] 3738 	mov	r3,#0x00
      001081 74 F0            [12] 3739 	mov	a,#0xf0
      001083 59               [12] 3740 	anl	a,r1
      001084 F5*3B            [12] 3741 	mov	_put_fat_sloc2_1_0,a
                                   3742 ;	1-genFromRTrack replaced	mov	(_put_fat_sloc2_1_0 + 1),#0x00
      001086 8B*3C            [24] 3743 	mov	(_put_fat_sloc2_1_0 + 1),r3
      001088 90r00r3F         [24] 3744 	mov	dptr,#_put_fat_PARM_3
      00108B E0               [24] 3745 	movx	a,@dptr
      00108C A3               [24] 3746 	inc	dptr
      00108D E0               [24] 3747 	movx	a,@dptr
      00108E F9               [12] 3748 	mov	r1,a
      00108F A3               [24] 3749 	inc	dptr
      001090 E0               [24] 3750 	movx	a,@dptr
      001091 FA               [12] 3751 	mov	r2,a
      001092 A3               [24] 3752 	inc	dptr
      001093 E0               [24] 3753 	movx	a,@dptr
      001094 89 00            [24] 3754 	mov	ar0,r1
      001096 53 00 0F         [24] 3755 	anl	ar0,#0x0f
      001099 7B 00            [12] 3756 	mov	r3,#0x00
      00109B E8               [12] 3757 	mov	a,r0
      00109C 45*3B            [12] 3758 	orl	a,_put_fat_sloc2_1_0
      00109E F5*3D            [12] 3759 	mov	_put_fat_sloc3_1_0,a
      0010A0 EB               [12] 3760 	mov	a,r3
      0010A1 45*3C            [12] 3761 	orl	a,(_put_fat_sloc2_1_0 + 1)
      0010A3 F5*3E            [12] 3762 	mov	(_put_fat_sloc3_1_0 + 1),a
      0010A5                       3763 00124$:
      0010A5 AB*3D            [24] 3764 	mov	r3,_put_fat_sloc3_1_0
      0010A7 85*40 82         [24] 3765 	mov	dpl,_put_fat_sloc4_1_0
      0010AA 85*41 83         [24] 3766 	mov	dph,(_put_fat_sloc4_1_0 + 1)
      0010AD 85*42 F0         [24] 3767 	mov	b,(_put_fat_sloc4_1_0 + 2)
      0010B0 EB               [12] 3768 	mov	a,r3
      0010B1 12r00r00         [24] 3769 	lcall	__gptrput
                                   3770 ;	ff15\source\ff.c:1263: fs->wflag = 1;
      0010B4 90r00r43         [24] 3771 	mov	dptr,#_put_fat_fs_65536_109
      0010B7 E0               [24] 3772 	movx	a,@dptr
      0010B8 F9               [12] 3773 	mov	r1,a
      0010B9 A3               [24] 3774 	inc	dptr
      0010BA E0               [24] 3775 	movx	a,@dptr
      0010BB FA               [12] 3776 	mov	r2,a
      0010BC A3               [24] 3777 	inc	dptr
      0010BD E0               [24] 3778 	movx	a,@dptr
      0010BE FB               [12] 3779 	mov	r3,a
      0010BF 74 04            [12] 3780 	mov	a,#0x04
      0010C1 29               [12] 3781 	add	a,r1
      0010C2 F9               [12] 3782 	mov	r1,a
      0010C3 E4               [12] 3783 	clr	a
      0010C4 3A               [12] 3784 	addc	a,r2
      0010C5 FA               [12] 3785 	mov	r2,a
      0010C6 89 82            [24] 3786 	mov	dpl,r1
      0010C8 8A 83            [24] 3787 	mov	dph,r2
      0010CA 8B F0            [24] 3788 	mov	b,r3
      0010CC 74 01            [12] 3789 	mov	a,#0x01
      0010CE 12r00r00         [24] 3790 	lcall	__gptrput
                                   3791 ;	ff15\source\ff.c:1264: break;
      0010D1 02r13r0E         [24] 3792 	ljmp	00117$
                                   3793 ;	ff15\source\ff.c:1266: case FS_FAT16:
      0010D4                       3794 00106$:
                                   3795 ;	ff15\source\ff.c:1267: res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
      0010D4 74 20            [12] 3796 	mov	a,#0x20
      0010D6 25*34            [12] 3797 	add	a,_put_fat_sloc0_1_0
      0010D8 FB               [12] 3798 	mov	r3,a
      0010D9 E4               [12] 3799 	clr	a
      0010DA 35*35            [12] 3800 	addc	a,(_put_fat_sloc0_1_0 + 1)
      0010DC F9               [12] 3801 	mov	r1,a
      0010DD AA*36            [24] 3802 	mov	r2,(_put_fat_sloc0_1_0 + 2)
      0010DF 8B 82            [24] 3803 	mov	dpl,r3
      0010E1 89 83            [24] 3804 	mov	dph,r1
      0010E3 8A F0            [24] 3805 	mov	b,r2
      0010E5 12r00r00         [24] 3806 	lcall	__gptrget
      0010E8 F5*40            [12] 3807 	mov	_put_fat_sloc4_1_0,a
      0010EA A3               [24] 3808 	inc	dptr
      0010EB 12r00r00         [24] 3809 	lcall	__gptrget
      0010EE F5*41            [12] 3810 	mov	(_put_fat_sloc4_1_0 + 1),a
      0010F0 A3               [24] 3811 	inc	dptr
      0010F1 12r00r00         [24] 3812 	lcall	__gptrget
      0010F4 F5*42            [12] 3813 	mov	(_put_fat_sloc4_1_0 + 2),a
      0010F6 A3               [24] 3814 	inc	dptr
      0010F7 12r00r00         [24] 3815 	lcall	__gptrget
      0010FA F5*43            [12] 3816 	mov	(_put_fat_sloc4_1_0 + 3),a
      0010FC 8D 00            [24] 3817 	mov	ar0,r5
      0010FE 8E 01            [24] 3818 	mov	ar1,r6
      001100 8F 02            [24] 3819 	mov	ar2,r7
      001102 7B 00            [12] 3820 	mov	r3,#0x00
      001104 90r00r1D         [24] 3821 	mov	dptr,#_move_window_PARM_2
      001107 E8               [12] 3822 	mov	a,r0
      001108 25*40            [12] 3823 	add	a,_put_fat_sloc4_1_0
      00110A F0               [24] 3824 	movx	@dptr,a
      00110B E9               [12] 3825 	mov	a,r1
      00110C 35*41            [12] 3826 	addc	a,(_put_fat_sloc4_1_0 + 1)
      00110E A3               [24] 3827 	inc	dptr
      00110F F0               [24] 3828 	movx	@dptr,a
      001110 EA               [12] 3829 	mov	a,r2
      001111 35*42            [12] 3830 	addc	a,(_put_fat_sloc4_1_0 + 2)
      001113 A3               [24] 3831 	inc	dptr
      001114 F0               [24] 3832 	movx	@dptr,a
      001115 EB               [12] 3833 	mov	a,r3
      001116 35*43            [12] 3834 	addc	a,(_put_fat_sloc4_1_0 + 3)
      001118 A3               [24] 3835 	inc	dptr
      001119 F0               [24] 3836 	movx	@dptr,a
      00111A 85*34 82         [24] 3837 	mov	dpl,_put_fat_sloc0_1_0
      00111D 85*35 83         [24] 3838 	mov	dph,(_put_fat_sloc0_1_0 + 1)
      001120 85*36 F0         [24] 3839 	mov	b,(_put_fat_sloc0_1_0 + 2)
      001123 C0 07            [24] 3840 	push	ar7
      001125 C0 06            [24] 3841 	push	ar6
      001127 C0 05            [24] 3842 	push	ar5
      001129 C0 04            [24] 3843 	push	ar4
      00112B 12r05r18         [24] 3844 	lcall	_move_window
      00112E AB 82            [24] 3845 	mov	r3,dpl
      001130 D0 04            [24] 3846 	pop	ar4
      001132 D0 05            [24] 3847 	pop	ar5
      001134 D0 06            [24] 3848 	pop	ar6
      001136 D0 07            [24] 3849 	pop	ar7
      001138 90r00r46         [24] 3850 	mov	dptr,#_put_fat_res_65536_110
      00113B EB               [12] 3851 	mov	a,r3
      00113C F0               [24] 3852 	movx	@dptr,a
                                   3853 ;	ff15\source\ff.c:1268: if (res != FR_OK) break;
      00113D EB               [12] 3854 	mov	a,r3
      00113E 60 03            [24] 3855 	jz	00178$
      001140 02r13r0E         [24] 3856 	ljmp	00117$
      001143                       3857 00178$:
                                   3858 ;	ff15\source\ff.c:1269: st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
      001143 90r00r43         [24] 3859 	mov	dptr,#_put_fat_fs_65536_109
      001146 E0               [24] 3860 	movx	a,@dptr
      001147 F5*40            [12] 3861 	mov	_put_fat_sloc4_1_0,a
      001149 A3               [24] 3862 	inc	dptr
      00114A E0               [24] 3863 	movx	a,@dptr
      00114B F5*41            [12] 3864 	mov	(_put_fat_sloc4_1_0 + 1),a
      00114D A3               [24] 3865 	inc	dptr
      00114E E0               [24] 3866 	movx	a,@dptr
      00114F F5*42            [12] 3867 	mov	(_put_fat_sloc4_1_0 + 2),a
      001151 74 30            [12] 3868 	mov	a,#0x30
      001153 25*40            [12] 3869 	add	a,_put_fat_sloc4_1_0
      001155 F5*3D            [12] 3870 	mov	_put_fat_sloc3_1_0,a
      001157 E4               [12] 3871 	clr	a
      001158 35*41            [12] 3872 	addc	a,(_put_fat_sloc4_1_0 + 1)
      00115A F5*3E            [12] 3873 	mov	(_put_fat_sloc3_1_0 + 1),a
      00115C 85*42*3F         [24] 3874 	mov	(_put_fat_sloc3_1_0 + 2),(_put_fat_sloc4_1_0 + 2)
      00115F EC               [12] 3875 	mov	a,r4
      001160 2C               [12] 3876 	add	a,r4
      001161 F8               [12] 3877 	mov	r0,a
      001162 ED               [12] 3878 	mov	a,r5
      001163 33               [12] 3879 	rlc	a
      001164 F9               [12] 3880 	mov	r1,a
      001165 EE               [12] 3881 	mov	a,r6
      001166 33               [12] 3882 	rlc	a
      001167 EF               [12] 3883 	mov	a,r7
      001168 33               [12] 3884 	rlc	a
      001169 53 01 01         [24] 3885 	anl	ar1,#0x01
      00116C E4               [12] 3886 	clr	a
      00116D E8               [12] 3887 	mov	a,r0
      00116E 25*3D            [12] 3888 	add	a,_put_fat_sloc3_1_0
      001170 F5*3D            [12] 3889 	mov	_put_fat_sloc3_1_0,a
      001172 E9               [12] 3890 	mov	a,r1
      001173 35*3E            [12] 3891 	addc	a,(_put_fat_sloc3_1_0 + 1)
      001175 F5*3E            [12] 3892 	mov	(_put_fat_sloc3_1_0 + 1),a
      001177 90r00r3F         [24] 3893 	mov	dptr,#_put_fat_PARM_3
      00117A E0               [24] 3894 	movx	a,@dptr
      00117B F8               [12] 3895 	mov	r0,a
      00117C A3               [24] 3896 	inc	dptr
      00117D E0               [24] 3897 	movx	a,@dptr
      00117E F9               [12] 3898 	mov	r1,a
      00117F A3               [24] 3899 	inc	dptr
      001180 E0               [24] 3900 	movx	a,@dptr
      001181 A3               [24] 3901 	inc	dptr
      001182 E0               [24] 3902 	movx	a,@dptr
      001183 90r00r0B         [24] 3903 	mov	dptr,#_st_word_PARM_2
      001186 E8               [12] 3904 	mov	a,r0
      001187 F0               [24] 3905 	movx	@dptr,a
      001188 E9               [12] 3906 	mov	a,r1
      001189 A3               [24] 3907 	inc	dptr
      00118A F0               [24] 3908 	movx	@dptr,a
      00118B 85*3D 82         [24] 3909 	mov	dpl,_put_fat_sloc3_1_0
      00118E 85*3E 83         [24] 3910 	mov	dph,(_put_fat_sloc3_1_0 + 1)
      001191 85*3F F0         [24] 3911 	mov	b,(_put_fat_sloc3_1_0 + 2)
      001194 12r01r02         [24] 3912 	lcall	_st_word
                                   3913 ;	ff15\source\ff.c:1270: fs->wflag = 1;
      001197 74 04            [12] 3914 	mov	a,#0x04
      001199 25*40            [12] 3915 	add	a,_put_fat_sloc4_1_0
      00119B F9               [12] 3916 	mov	r1,a
      00119C E4               [12] 3917 	clr	a
      00119D 35*41            [12] 3918 	addc	a,(_put_fat_sloc4_1_0 + 1)
      00119F FA               [12] 3919 	mov	r2,a
      0011A0 AB*42            [24] 3920 	mov	r3,(_put_fat_sloc4_1_0 + 2)
      0011A2 89 82            [24] 3921 	mov	dpl,r1
      0011A4 8A 83            [24] 3922 	mov	dph,r2
      0011A6 8B F0            [24] 3923 	mov	b,r3
      0011A8 74 01            [12] 3924 	mov	a,#0x01
      0011AA 12r00r00         [24] 3925 	lcall	__gptrput
                                   3926 ;	ff15\source\ff.c:1271: break;
      0011AD 02r13r0E         [24] 3927 	ljmp	00117$
                                   3928 ;	ff15\source\ff.c:1273: case FS_FAT32:
      0011B0                       3929 00109$:
                                   3930 ;	ff15\source\ff.c:1277: res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
      0011B0 74 20            [12] 3931 	mov	a,#0x20
      0011B2 25*34            [12] 3932 	add	a,_put_fat_sloc0_1_0
      0011B4 FB               [12] 3933 	mov	r3,a
      0011B5 E4               [12] 3934 	clr	a
      0011B6 35*35            [12] 3935 	addc	a,(_put_fat_sloc0_1_0 + 1)
      0011B8 F9               [12] 3936 	mov	r1,a
      0011B9 AA*36            [24] 3937 	mov	r2,(_put_fat_sloc0_1_0 + 2)
      0011BB 8B 82            [24] 3938 	mov	dpl,r3
      0011BD 89 83            [24] 3939 	mov	dph,r1
      0011BF 8A F0            [24] 3940 	mov	b,r2
      0011C1 12r00r00         [24] 3941 	lcall	__gptrget
      0011C4 F5*40            [12] 3942 	mov	_put_fat_sloc4_1_0,a
      0011C6 A3               [24] 3943 	inc	dptr
      0011C7 12r00r00         [24] 3944 	lcall	__gptrget
      0011CA F5*41            [12] 3945 	mov	(_put_fat_sloc4_1_0 + 1),a
      0011CC A3               [24] 3946 	inc	dptr
      0011CD 12r00r00         [24] 3947 	lcall	__gptrget
      0011D0 F5*42            [12] 3948 	mov	(_put_fat_sloc4_1_0 + 2),a
      0011D2 A3               [24] 3949 	inc	dptr
      0011D3 12r00r00         [24] 3950 	lcall	__gptrget
      0011D6 F5*43            [12] 3951 	mov	(_put_fat_sloc4_1_0 + 3),a
      0011D8 8C 00            [24] 3952 	mov	ar0,r4
      0011DA ED               [12] 3953 	mov	a,r5
      0011DB A2 E7            [12] 3954 	mov	c,acc.7
      0011DD C8               [12] 3955 	xch	a,r0
      0011DE 33               [12] 3956 	rlc	a
      0011DF C8               [12] 3957 	xch	a,r0
      0011E0 33               [12] 3958 	rlc	a
      0011E1 C8               [12] 3959 	xch	a,r0
      0011E2 54 01            [12] 3960 	anl	a,#0x01
      0011E4 F9               [12] 3961 	mov	r1,a
      0011E5 EE               [12] 3962 	mov	a,r6
      0011E6 2E               [12] 3963 	add	a,r6
      0011E7 49               [12] 3964 	orl	a,r1
      0011E8 F9               [12] 3965 	mov	r1,a
      0011E9 8E 02            [24] 3966 	mov	ar2,r6
      0011EB EF               [12] 3967 	mov	a,r7
      0011EC A2 E7            [12] 3968 	mov	c,acc.7
      0011EE CA               [12] 3969 	xch	a,r2
      0011EF 33               [12] 3970 	rlc	a
      0011F0 CA               [12] 3971 	xch	a,r2
      0011F1 33               [12] 3972 	rlc	a
      0011F2 CA               [12] 3973 	xch	a,r2
      0011F3 54 01            [12] 3974 	anl	a,#0x01
      0011F5 FB               [12] 3975 	mov	r3,a
      0011F6 90r00r1D         [24] 3976 	mov	dptr,#_move_window_PARM_2
      0011F9 E8               [12] 3977 	mov	a,r0
      0011FA 25*40            [12] 3978 	add	a,_put_fat_sloc4_1_0
      0011FC F0               [24] 3979 	movx	@dptr,a
      0011FD E9               [12] 3980 	mov	a,r1
      0011FE 35*41            [12] 3981 	addc	a,(_put_fat_sloc4_1_0 + 1)
      001200 A3               [24] 3982 	inc	dptr
      001201 F0               [24] 3983 	movx	@dptr,a
      001202 EA               [12] 3984 	mov	a,r2
      001203 35*42            [12] 3985 	addc	a,(_put_fat_sloc4_1_0 + 2)
      001205 A3               [24] 3986 	inc	dptr
      001206 F0               [24] 3987 	movx	@dptr,a
      001207 EB               [12] 3988 	mov	a,r3
      001208 35*43            [12] 3989 	addc	a,(_put_fat_sloc4_1_0 + 3)
      00120A A3               [24] 3990 	inc	dptr
      00120B F0               [24] 3991 	movx	@dptr,a
      00120C 85*34 82         [24] 3992 	mov	dpl,_put_fat_sloc0_1_0
      00120F 85*35 83         [24] 3993 	mov	dph,(_put_fat_sloc0_1_0 + 1)
      001212 85*36 F0         [24] 3994 	mov	b,(_put_fat_sloc0_1_0 + 2)
      001215 C0 07            [24] 3995 	push	ar7
      001217 C0 06            [24] 3996 	push	ar6
      001219 C0 05            [24] 3997 	push	ar5
      00121B C0 04            [24] 3998 	push	ar4
      00121D 12r05r18         [24] 3999 	lcall	_move_window
      001220 AB 82            [24] 4000 	mov	r3,dpl
      001222 D0 04            [24] 4001 	pop	ar4
      001224 D0 05            [24] 4002 	pop	ar5
      001226 D0 06            [24] 4003 	pop	ar6
      001228 D0 07            [24] 4004 	pop	ar7
      00122A 90r00r46         [24] 4005 	mov	dptr,#_put_fat_res_65536_110
      00122D EB               [12] 4006 	mov	a,r3
      00122E F0               [24] 4007 	movx	@dptr,a
                                   4008 ;	ff15\source\ff.c:1278: if (res != FR_OK) break;
      00122F EB               [12] 4009 	mov	a,r3
      001230 60 03            [24] 4010 	jz	00179$
      001232 02r13r0E         [24] 4011 	ljmp	00117$
      001235                       4012 00179$:
                                   4013 ;	ff15\source\ff.c:1280: val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
      001235 90r00r3F         [24] 4014 	mov	dptr,#_put_fat_PARM_3
      001238 E0               [24] 4015 	movx	a,@dptr
      001239 F8               [12] 4016 	mov	r0,a
      00123A A3               [24] 4017 	inc	dptr
      00123B E0               [24] 4018 	movx	a,@dptr
      00123C F9               [12] 4019 	mov	r1,a
      00123D A3               [24] 4020 	inc	dptr
      00123E E0               [24] 4021 	movx	a,@dptr
      00123F FA               [12] 4022 	mov	r2,a
      001240 A3               [24] 4023 	inc	dptr
      001241 E0               [24] 4024 	movx	a,@dptr
      001242 FB               [12] 4025 	mov	r3,a
      001243 88*40            [24] 4026 	mov	_put_fat_sloc4_1_0,r0
      001245 89*41            [24] 4027 	mov	(_put_fat_sloc4_1_0 + 1),r1
      001247 8A*42            [24] 4028 	mov	(_put_fat_sloc4_1_0 + 2),r2
      001249 74 0F            [12] 4029 	mov	a,#0x0f
      00124B 5B               [12] 4030 	anl	a,r3
      00124C F5*43            [12] 4031 	mov	(_put_fat_sloc4_1_0 + 3),a
      00124E 90r00r43         [24] 4032 	mov	dptr,#_put_fat_fs_65536_109
      001251 E0               [24] 4033 	movx	a,@dptr
      001252 F5*3D            [12] 4034 	mov	_put_fat_sloc3_1_0,a
      001254 A3               [24] 4035 	inc	dptr
      001255 E0               [24] 4036 	movx	a,@dptr
      001256 F5*3E            [12] 4037 	mov	(_put_fat_sloc3_1_0 + 1),a
      001258 A3               [24] 4038 	inc	dptr
      001259 E0               [24] 4039 	movx	a,@dptr
      00125A F5*3F            [12] 4040 	mov	(_put_fat_sloc3_1_0 + 2),a
      00125C 74 30            [12] 4041 	mov	a,#0x30
      00125E 25*3D            [12] 4042 	add	a,_put_fat_sloc3_1_0
      001260 F5*37            [12] 4043 	mov	_put_fat_sloc1_1_0,a
      001262 E4               [12] 4044 	clr	a
      001263 35*3E            [12] 4045 	addc	a,(_put_fat_sloc3_1_0 + 1)
      001265 F5*38            [12] 4046 	mov	(_put_fat_sloc1_1_0 + 1),a
      001267 85*3F*39         [24] 4047 	mov	(_put_fat_sloc1_1_0 + 2),(_put_fat_sloc3_1_0 + 2)
      00126A EC               [12] 4048 	mov	a,r4
      00126B 2C               [12] 4049 	add	a,r4
      00126C FC               [12] 4050 	mov	r4,a
      00126D ED               [12] 4051 	mov	a,r5
      00126E 33               [12] 4052 	rlc	a
      00126F FD               [12] 4053 	mov	r5,a
      001270 EE               [12] 4054 	mov	a,r6
      001271 33               [12] 4055 	rlc	a
      001272 FE               [12] 4056 	mov	r6,a
      001273 EF               [12] 4057 	mov	a,r7
      001274 33               [12] 4058 	rlc	a
      001275 FF               [12] 4059 	mov	r7,a
      001276 EC               [12] 4060 	mov	a,r4
      001277 2C               [12] 4061 	add	a,r4
      001278 FC               [12] 4062 	mov	r4,a
      001279 ED               [12] 4063 	mov	a,r5
      00127A 33               [12] 4064 	rlc	a
      00127B FD               [12] 4065 	mov	r5,a
      00127C EE               [12] 4066 	mov	a,r6
      00127D 33               [12] 4067 	rlc	a
      00127E EF               [12] 4068 	mov	a,r7
      00127F 33               [12] 4069 	rlc	a
      001280 53 05 01         [24] 4070 	anl	ar5,#0x01
      001283 E4               [12] 4071 	clr	a
      001284 FE               [12] 4072 	mov	r6,a
      001285 FF               [12] 4073 	mov	r7,a
      001286 EC               [12] 4074 	mov	a,r4
      001287 25*37            [12] 4075 	add	a,_put_fat_sloc1_1_0
      001289 F9               [12] 4076 	mov	r1,a
      00128A ED               [12] 4077 	mov	a,r5
      00128B 35*38            [12] 4078 	addc	a,(_put_fat_sloc1_1_0 + 1)
      00128D FA               [12] 4079 	mov	r2,a
      00128E AB*39            [24] 4080 	mov	r3,(_put_fat_sloc1_1_0 + 2)
      001290 89 82            [24] 4081 	mov	dpl,r1
      001292 8A 83            [24] 4082 	mov	dph,r2
      001294 8B F0            [24] 4083 	mov	b,r3
      001296 C0 07            [24] 4084 	push	ar7
      001298 C0 06            [24] 4085 	push	ar6
      00129A C0 05            [24] 4086 	push	ar5
      00129C C0 04            [24] 4087 	push	ar4
      00129E 12r00r45         [24] 4088 	lcall	_ld_dword
      0012A1 FB               [12] 4089 	mov	r3,a
      0012A2 D0 04            [24] 4090 	pop	ar4
      0012A4 D0 05            [24] 4091 	pop	ar5
      0012A6 D0 06            [24] 4092 	pop	ar6
      0012A8 D0 07            [24] 4093 	pop	ar7
      0012AA 78 00            [12] 4094 	mov	r0,#0x00
      0012AC 79 00            [12] 4095 	mov	r1,#0x00
      0012AE 7A 00            [12] 4096 	mov	r2,#0x00
      0012B0 53 03 F0         [24] 4097 	anl	ar3,#0xf0
      0012B3 90r00r3F         [24] 4098 	mov	dptr,#_put_fat_PARM_3
      0012B6 E8               [12] 4099 	mov	a,r0
      0012B7 45*40            [12] 4100 	orl	a,_put_fat_sloc4_1_0
      0012B9 F0               [24] 4101 	movx	@dptr,a
      0012BA E9               [12] 4102 	mov	a,r1
      0012BB 45*41            [12] 4103 	orl	a,(_put_fat_sloc4_1_0 + 1)
      0012BD A3               [24] 4104 	inc	dptr
      0012BE F0               [24] 4105 	movx	@dptr,a
      0012BF EA               [12] 4106 	mov	a,r2
      0012C0 45*42            [12] 4107 	orl	a,(_put_fat_sloc4_1_0 + 2)
      0012C2 A3               [24] 4108 	inc	dptr
      0012C3 F0               [24] 4109 	movx	@dptr,a
      0012C4 EB               [12] 4110 	mov	a,r3
      0012C5 45*43            [12] 4111 	orl	a,(_put_fat_sloc4_1_0 + 3)
      0012C7 A3               [24] 4112 	inc	dptr
      0012C8 F0               [24] 4113 	movx	@dptr,a
                                   4114 ;	ff15\source\ff.c:1282: st_dword(fs->win + clst * 4 % SS(fs), val);
      0012C9 EC               [12] 4115 	mov	a,r4
      0012CA 25*37            [12] 4116 	add	a,_put_fat_sloc1_1_0
      0012CC FC               [12] 4117 	mov	r4,a
      0012CD ED               [12] 4118 	mov	a,r5
      0012CE 35*38            [12] 4119 	addc	a,(_put_fat_sloc1_1_0 + 1)
      0012D0 FD               [12] 4120 	mov	r5,a
      0012D1 AE*39            [24] 4121 	mov	r6,(_put_fat_sloc1_1_0 + 2)
      0012D3 90r00r3F         [24] 4122 	mov	dptr,#_put_fat_PARM_3
      0012D6 E0               [24] 4123 	movx	a,@dptr
      0012D7 F9               [12] 4124 	mov	r1,a
      0012D8 A3               [24] 4125 	inc	dptr
      0012D9 E0               [24] 4126 	movx	a,@dptr
      0012DA FA               [12] 4127 	mov	r2,a
      0012DB A3               [24] 4128 	inc	dptr
      0012DC E0               [24] 4129 	movx	a,@dptr
      0012DD FB               [12] 4130 	mov	r3,a
      0012DE A3               [24] 4131 	inc	dptr
      0012DF E0               [24] 4132 	movx	a,@dptr
      0012E0 FF               [12] 4133 	mov	r7,a
      0012E1 90r00r10         [24] 4134 	mov	dptr,#_st_dword_PARM_2
      0012E4 E9               [12] 4135 	mov	a,r1
      0012E5 F0               [24] 4136 	movx	@dptr,a
      0012E6 EA               [12] 4137 	mov	a,r2
      0012E7 A3               [24] 4138 	inc	dptr
      0012E8 F0               [24] 4139 	movx	@dptr,a
      0012E9 EB               [12] 4140 	mov	a,r3
      0012EA A3               [24] 4141 	inc	dptr
      0012EB F0               [24] 4142 	movx	@dptr,a
      0012EC EF               [12] 4143 	mov	a,r7
      0012ED A3               [24] 4144 	inc	dptr
      0012EE F0               [24] 4145 	movx	@dptr,a
      0012EF 8C 82            [24] 4146 	mov	dpl,r4
      0012F1 8D 83            [24] 4147 	mov	dph,r5
      0012F3 8E F0            [24] 4148 	mov	b,r6
      0012F5 12r01r76         [24] 4149 	lcall	_st_dword
                                   4150 ;	ff15\source\ff.c:1283: fs->wflag = 1;
      0012F8 74 04            [12] 4151 	mov	a,#0x04
      0012FA 25*3D            [12] 4152 	add	a,_put_fat_sloc3_1_0
      0012FC FD               [12] 4153 	mov	r5,a
      0012FD E4               [12] 4154 	clr	a
      0012FE 35*3E            [12] 4155 	addc	a,(_put_fat_sloc3_1_0 + 1)
      001300 FE               [12] 4156 	mov	r6,a
      001301 AF*3F            [24] 4157 	mov	r7,(_put_fat_sloc3_1_0 + 2)
      001303 8D 82            [24] 4158 	mov	dpl,r5
      001305 8E 83            [24] 4159 	mov	dph,r6
      001307 8F F0            [24] 4160 	mov	b,r7
      001309 74 01            [12] 4161 	mov	a,#0x01
      00130B 12r00r00         [24] 4162 	lcall	__gptrput
                                   4163 ;	ff15\source\ff.c:1285: }
      00130E                       4164 00117$:
                                   4165 ;	ff15\source\ff.c:1287: return res;
      00130E 90r00r46         [24] 4166 	mov	dptr,#_put_fat_res_65536_110
      001311 E0               [24] 4167 	movx	a,@dptr
                                   4168 ;	ff15\source\ff.c:1288: }
      001312 F5 82            [12] 4169 	mov	dpl,a
      001314 22               [24] 4170 	ret
                                   4171 ;------------------------------------------------------------
                                   4172 ;Allocation info for local variables in function 'remove_chain'
                                   4173 ;------------------------------------------------------------
                                   4174 ;sloc0                     Allocated with name '_remove_chain_sloc0_1_0'
                                   4175 ;sloc1                     Allocated with name '_remove_chain_sloc1_1_0'
                                   4176 ;sloc2                     Allocated with name '_remove_chain_sloc2_1_0'
                                   4177 ;clst                      Allocated with name '_remove_chain_PARM_2'
                                   4178 ;pclst                     Allocated with name '_remove_chain_PARM_3'
                                   4179 ;obj                       Allocated with name '_remove_chain_obj_65536_114'
                                   4180 ;res                       Allocated with name '_remove_chain_res_65536_115'
                                   4181 ;nxt                       Allocated with name '_remove_chain_nxt_65536_115'
                                   4182 ;fs                        Allocated with name '_remove_chain_fs_65536_115'
                                   4183 ;------------------------------------------------------------
                                   4184 ;	ff15\source\ff.c:1429: static FRESULT remove_chain (	/* FR_OK(0):succeeded, !=0:error */
                                   4185 ;	-----------------------------------------
                                   4186 ;	 function remove_chain
                                   4187 ;	-----------------------------------------
      001315                       4188 _remove_chain:
      001315 AF F0            [24] 4189 	mov	r7,b
      001317 AE 83            [24] 4190 	mov	r6,dph
      001319 E5 82            [12] 4191 	mov	a,dpl
      00131B 90r00r4F         [24] 4192 	mov	dptr,#_remove_chain_obj_65536_114
      00131E F0               [24] 4193 	movx	@dptr,a
      00131F EE               [12] 4194 	mov	a,r6
      001320 A3               [24] 4195 	inc	dptr
      001321 F0               [24] 4196 	movx	@dptr,a
      001322 EF               [12] 4197 	mov	a,r7
      001323 A3               [24] 4198 	inc	dptr
      001324 F0               [24] 4199 	movx	@dptr,a
                                   4200 ;	ff15\source\ff.c:1437: FATFS *fs = obj->fs;
      001325 90r00r4F         [24] 4201 	mov	dptr,#_remove_chain_obj_65536_114
      001328 E0               [24] 4202 	movx	a,@dptr
      001329 FD               [12] 4203 	mov	r5,a
      00132A A3               [24] 4204 	inc	dptr
      00132B E0               [24] 4205 	movx	a,@dptr
      00132C FE               [12] 4206 	mov	r6,a
      00132D A3               [24] 4207 	inc	dptr
      00132E E0               [24] 4208 	movx	a,@dptr
      00132F FF               [12] 4209 	mov	r7,a
      001330 8D 82            [24] 4210 	mov	dpl,r5
      001332 8E 83            [24] 4211 	mov	dph,r6
      001334 8F F0            [24] 4212 	mov	b,r7
      001336 12r00r00         [24] 4213 	lcall	__gptrget
      001339 FD               [12] 4214 	mov	r5,a
      00133A A3               [24] 4215 	inc	dptr
      00133B 12r00r00         [24] 4216 	lcall	__gptrget
      00133E FE               [12] 4217 	mov	r6,a
      00133F A3               [24] 4218 	inc	dptr
      001340 12r00r00         [24] 4219 	lcall	__gptrget
      001343 FF               [12] 4220 	mov	r7,a
                                   4221 ;	ff15\source\ff.c:1445: if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
      001344 90r00r47         [24] 4222 	mov	dptr,#_remove_chain_PARM_2
      001347 E0               [24] 4223 	movx	a,@dptr
      001348 F5*44            [12] 4224 	mov	_remove_chain_sloc0_1_0,a
      00134A A3               [24] 4225 	inc	dptr
      00134B E0               [24] 4226 	movx	a,@dptr
      00134C F5*45            [12] 4227 	mov	(_remove_chain_sloc0_1_0 + 1),a
      00134E A3               [24] 4228 	inc	dptr
      00134F E0               [24] 4229 	movx	a,@dptr
      001350 F5*46            [12] 4230 	mov	(_remove_chain_sloc0_1_0 + 2),a
      001352 A3               [24] 4231 	inc	dptr
      001353 E0               [24] 4232 	movx	a,@dptr
      001354 F5*47            [12] 4233 	mov	(_remove_chain_sloc0_1_0 + 3),a
      001356 C3               [12] 4234 	clr	c
      001357 E5*44            [12] 4235 	mov	a,_remove_chain_sloc0_1_0
      001359 94 02            [12] 4236 	subb	a,#0x02
      00135B E5*45            [12] 4237 	mov	a,(_remove_chain_sloc0_1_0 + 1)
      00135D 94 00            [12] 4238 	subb	a,#0x00
      00135F E5*46            [12] 4239 	mov	a,(_remove_chain_sloc0_1_0 + 2)
      001361 94 00            [12] 4240 	subb	a,#0x00
      001363 E5*47            [12] 4241 	mov	a,(_remove_chain_sloc0_1_0 + 3)
      001365 94 00            [12] 4242 	subb	a,#0x00
      001367 40 31            [24] 4243 	jc	00101$
      001369 74 14            [12] 4244 	mov	a,#0x14
      00136B 2D               [12] 4245 	add	a,r5
      00136C F8               [12] 4246 	mov	r0,a
      00136D E4               [12] 4247 	clr	a
      00136E 3E               [12] 4248 	addc	a,r6
      00136F FB               [12] 4249 	mov	r3,a
      001370 8F 04            [24] 4250 	mov	ar4,r7
      001372 88 82            [24] 4251 	mov	dpl,r0
      001374 8B 83            [24] 4252 	mov	dph,r3
      001376 8C F0            [24] 4253 	mov	b,r4
      001378 12r00r00         [24] 4254 	lcall	__gptrget
      00137B F8               [12] 4255 	mov	r0,a
      00137C A3               [24] 4256 	inc	dptr
      00137D 12r00r00         [24] 4257 	lcall	__gptrget
      001380 FB               [12] 4258 	mov	r3,a
      001381 A3               [24] 4259 	inc	dptr
      001382 12r00r00         [24] 4260 	lcall	__gptrget
      001385 FC               [12] 4261 	mov	r4,a
      001386 A3               [24] 4262 	inc	dptr
      001387 12r00r00         [24] 4263 	lcall	__gptrget
      00138A FA               [12] 4264 	mov	r2,a
      00138B C3               [12] 4265 	clr	c
      00138C E5*44            [12] 4266 	mov	a,_remove_chain_sloc0_1_0
      00138E 98               [12] 4267 	subb	a,r0
      00138F E5*45            [12] 4268 	mov	a,(_remove_chain_sloc0_1_0 + 1)
      001391 9B               [12] 4269 	subb	a,r3
      001392 E5*46            [12] 4270 	mov	a,(_remove_chain_sloc0_1_0 + 2)
      001394 9C               [12] 4271 	subb	a,r4
      001395 E5*47            [12] 4272 	mov	a,(_remove_chain_sloc0_1_0 + 3)
      001397 9A               [12] 4273 	subb	a,r2
      001398 40 04            [24] 4274 	jc	00102$
      00139A                       4275 00101$:
      00139A 75 82 02         [24] 4276 	mov	dpl,#0x02
      00139D 22               [24] 4277 	ret
      00139E                       4278 00102$:
                                   4279 ;	ff15\source\ff.c:1448: if (pclst != 0 && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
      00139E 90r00r4B         [24] 4280 	mov	dptr,#_remove_chain_PARM_3
      0013A1 E0               [24] 4281 	movx	a,@dptr
      0013A2 F9               [12] 4282 	mov	r1,a
      0013A3 A3               [24] 4283 	inc	dptr
      0013A4 E0               [24] 4284 	movx	a,@dptr
      0013A5 FA               [12] 4285 	mov	r2,a
      0013A6 A3               [24] 4286 	inc	dptr
      0013A7 E0               [24] 4287 	movx	a,@dptr
      0013A8 FB               [12] 4288 	mov	r3,a
      0013A9 A3               [24] 4289 	inc	dptr
      0013AA E0               [24] 4290 	movx	a,@dptr
      0013AB FC               [12] 4291 	mov	r4,a
      0013AC 90r00r4B         [24] 4292 	mov	dptr,#_remove_chain_PARM_3
      0013AF E0               [24] 4293 	movx	a,@dptr
      0013B0 F5 F0            [12] 4294 	mov	b,a
      0013B2 A3               [24] 4295 	inc	dptr
      0013B3 E0               [24] 4296 	movx	a,@dptr
      0013B4 42 F0            [12] 4297 	orl	b,a
      0013B6 A3               [24] 4298 	inc	dptr
      0013B7 E0               [24] 4299 	movx	a,@dptr
      0013B8 42 F0            [12] 4300 	orl	b,a
      0013BA A3               [24] 4301 	inc	dptr
      0013BB E0               [24] 4302 	movx	a,@dptr
      0013BC 45 F0            [12] 4303 	orl	a,b
      0013BE 60 37            [24] 4304 	jz	00137$
                                   4305 ;	ff15\source\ff.c:1449: res = put_fat(fs, pclst, 0xFFFFFFFF);
      0013C0 90r00r3B         [24] 4306 	mov	dptr,#_put_fat_PARM_2
      0013C3 E9               [12] 4307 	mov	a,r1
      0013C4 F0               [24] 4308 	movx	@dptr,a
      0013C5 EA               [12] 4309 	mov	a,r2
      0013C6 A3               [24] 4310 	inc	dptr
      0013C7 F0               [24] 4311 	movx	@dptr,a
      0013C8 EB               [12] 4312 	mov	a,r3
      0013C9 A3               [24] 4313 	inc	dptr
      0013CA F0               [24] 4314 	movx	@dptr,a
      0013CB EC               [12] 4315 	mov	a,r4
      0013CC A3               [24] 4316 	inc	dptr
      0013CD F0               [24] 4317 	movx	@dptr,a
      0013CE 90r00r3F         [24] 4318 	mov	dptr,#_put_fat_PARM_3
      0013D1 74 FF            [12] 4319 	mov	a,#0xff
      0013D3 F0               [24] 4320 	movx	@dptr,a
      0013D4 A3               [24] 4321 	inc	dptr
      0013D5 F0               [24] 4322 	movx	@dptr,a
      0013D6 A3               [24] 4323 	inc	dptr
      0013D7 F0               [24] 4324 	movx	@dptr,a
      0013D8 A3               [24] 4325 	inc	dptr
      0013D9 F0               [24] 4326 	movx	@dptr,a
      0013DA 8D 82            [24] 4327 	mov	dpl,r5
      0013DC 8E 83            [24] 4328 	mov	dph,r6
      0013DE 8F F0            [24] 4329 	mov	b,r7
      0013E0 C0 07            [24] 4330 	push	ar7
      0013E2 C0 06            [24] 4331 	push	ar6
      0013E4 C0 05            [24] 4332 	push	ar5
      0013E6 12r0DrB2         [24] 4333 	lcall	_put_fat
      0013E9 AC 82            [24] 4334 	mov	r4,dpl
      0013EB D0 05            [24] 4335 	pop	ar5
      0013ED D0 06            [24] 4336 	pop	ar6
      0013EF D0 07            [24] 4337 	pop	ar7
                                   4338 ;	ff15\source\ff.c:1450: if (res != FR_OK) return res;
      0013F1 EC               [12] 4339 	mov	a,r4
      0013F2 60 03            [24] 4340 	jz	00137$
      0013F4 8C 82            [24] 4341 	mov	dpl,r4
      0013F6 22               [24] 4342 	ret
                                   4343 ;	ff15\source\ff.c:1454: do {
      0013F7                       4344 00137$:
      0013F7 74 14            [12] 4345 	mov	a,#0x14
      0013F9 2D               [12] 4346 	add	a,r5
      0013FA FA               [12] 4347 	mov	r2,a
      0013FB E4               [12] 4348 	clr	a
      0013FC 3E               [12] 4349 	addc	a,r6
      0013FD FB               [12] 4350 	mov	r3,a
      0013FE 8F 04            [24] 4351 	mov	ar4,r7
      001400                       4352 00124$:
                                   4353 ;	ff15\source\ff.c:1455: nxt = get_fat(obj, clst);			/* Get cluster status */
      001400 C0 02            [24] 4354 	push	ar2
      001402 C0 03            [24] 4355 	push	ar3
      001404 C0 04            [24] 4356 	push	ar4
      001406 90r00r4F         [24] 4357 	mov	dptr,#_remove_chain_obj_65536_114
      001409 E0               [24] 4358 	movx	a,@dptr
      00140A F8               [12] 4359 	mov	r0,a
      00140B A3               [24] 4360 	inc	dptr
      00140C E0               [24] 4361 	movx	a,@dptr
      00140D F9               [12] 4362 	mov	r1,a
      00140E A3               [24] 4363 	inc	dptr
      00140F E0               [24] 4364 	movx	a,@dptr
      001410 FC               [12] 4365 	mov	r4,a
      001411 90r00r47         [24] 4366 	mov	dptr,#_remove_chain_PARM_2
      001414 E0               [24] 4367 	movx	a,@dptr
      001415 F5*44            [12] 4368 	mov	_remove_chain_sloc0_1_0,a
      001417 A3               [24] 4369 	inc	dptr
      001418 E0               [24] 4370 	movx	a,@dptr
      001419 F5*45            [12] 4371 	mov	(_remove_chain_sloc0_1_0 + 1),a
      00141B A3               [24] 4372 	inc	dptr
      00141C E0               [24] 4373 	movx	a,@dptr
      00141D F5*46            [12] 4374 	mov	(_remove_chain_sloc0_1_0 + 2),a
      00141F A3               [24] 4375 	inc	dptr
      001420 E0               [24] 4376 	movx	a,@dptr
      001421 F5*47            [12] 4377 	mov	(_remove_chain_sloc0_1_0 + 3),a
      001423 90r00r30         [24] 4378 	mov	dptr,#_get_fat_PARM_2
      001426 E5*44            [12] 4379 	mov	a,_remove_chain_sloc0_1_0
      001428 F0               [24] 4380 	movx	@dptr,a
      001429 E5*45            [12] 4381 	mov	a,(_remove_chain_sloc0_1_0 + 1)
      00142B A3               [24] 4382 	inc	dptr
      00142C F0               [24] 4383 	movx	@dptr,a
      00142D E5*46            [12] 4384 	mov	a,(_remove_chain_sloc0_1_0 + 2)
      00142F A3               [24] 4385 	inc	dptr
      001430 F0               [24] 4386 	movx	@dptr,a
      001431 E5*47            [12] 4387 	mov	a,(_remove_chain_sloc0_1_0 + 3)
      001433 A3               [24] 4388 	inc	dptr
      001434 F0               [24] 4389 	movx	@dptr,a
      001435 88 82            [24] 4390 	mov	dpl,r0
      001437 89 83            [24] 4391 	mov	dph,r1
      001439 8C F0            [24] 4392 	mov	b,r4
      00143B C0 07            [24] 4393 	push	ar7
      00143D C0 06            [24] 4394 	push	ar6
      00143F C0 05            [24] 4395 	push	ar5
      001441 C0 04            [24] 4396 	push	ar4
      001443 C0 03            [24] 4397 	push	ar3
      001445 C0 02            [24] 4398 	push	ar2
      001447 12r09rFE         [24] 4399 	lcall	_get_fat
      00144A 85 82*48         [24] 4400 	mov	_remove_chain_sloc1_1_0,dpl
      00144D 85 83*49         [24] 4401 	mov	(_remove_chain_sloc1_1_0 + 1),dph
      001450 85 F0*4A         [24] 4402 	mov	(_remove_chain_sloc1_1_0 + 2),b
      001453 F5*4B            [12] 4403 	mov	(_remove_chain_sloc1_1_0 + 3),a
      001455 D0 02            [24] 4404 	pop	ar2
      001457 D0 03            [24] 4405 	pop	ar3
      001459 D0 04            [24] 4406 	pop	ar4
      00145B D0 05            [24] 4407 	pop	ar5
      00145D D0 06            [24] 4408 	pop	ar6
      00145F D0 07            [24] 4409 	pop	ar7
                                   4410 ;	ff15\source\ff.c:1456: if (nxt == 0) break;				/* Empty cluster? */
      001461 D0 04            [24] 4411 	pop	ar4
      001463 D0 03            [24] 4412 	pop	ar3
      001465 D0 02            [24] 4413 	pop	ar2
      001467 E5*48            [12] 4414 	mov	a,_remove_chain_sloc1_1_0
      001469 45*49            [12] 4415 	orl	a,(_remove_chain_sloc1_1_0 + 1)
      00146B 45*4A            [12] 4416 	orl	a,(_remove_chain_sloc1_1_0 + 2)
      00146D 45*4B            [12] 4417 	orl	a,(_remove_chain_sloc1_1_0 + 3)
      00146F 70 03            [24] 4418 	jnz	00169$
      001471 02r15rF1         [24] 4419 	ljmp	00126$
      001474                       4420 00169$:
                                   4421 ;	ff15\source\ff.c:1457: if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
      001474 74 01            [12] 4422 	mov	a,#0x01
      001476 B5*48 0C         [24] 4423 	cjne	a,_remove_chain_sloc1_1_0,00170$
      001479 14               [12] 4424 	dec	a
      00147A B5*49 08         [24] 4425 	cjne	a,(_remove_chain_sloc1_1_0 + 1),00170$
      00147D B5*4A 05         [24] 4426 	cjne	a,(_remove_chain_sloc1_1_0 + 2),00170$
      001480 B5*4B 02         [24] 4427 	cjne	a,(_remove_chain_sloc1_1_0 + 3),00170$
      001483 80 02            [24] 4428 	sjmp	00171$
      001485                       4429 00170$:
      001485 80 04            [24] 4430 	sjmp	00114$
      001487                       4431 00171$:
      001487 75 82 02         [24] 4432 	mov	dpl,#0x02
      00148A 22               [24] 4433 	ret
      00148B                       4434 00114$:
                                   4435 ;	ff15\source\ff.c:1458: if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
      00148B E5*48            [12] 4436 	mov	a,_remove_chain_sloc1_1_0
      00148D 55*49            [12] 4437 	anl	a,(_remove_chain_sloc1_1_0 + 1)
      00148F 55*4A            [12] 4438 	anl	a,(_remove_chain_sloc1_1_0 + 2)
      001491 55*4B            [12] 4439 	anl	a,(_remove_chain_sloc1_1_0 + 3)
      001493 B4 FF 04         [24] 4440 	cjne	a,#0xFF,00119$
      001496 75 82 01         [24] 4441 	mov	dpl,#0x01
      001499 22               [24] 4442 	ret
                                   4443 ;	ff15\source\ff.c:1459: if (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) {
      00149A                       4444 00119$:
                                   4445 ;	ff15\source\ff.c:1460: res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
      00149A 90r00r3B         [24] 4446 	mov	dptr,#_put_fat_PARM_2
      00149D E5*44            [12] 4447 	mov	a,_remove_chain_sloc0_1_0
      00149F F0               [24] 4448 	movx	@dptr,a
      0014A0 E5*45            [12] 4449 	mov	a,(_remove_chain_sloc0_1_0 + 1)
      0014A2 A3               [24] 4450 	inc	dptr
      0014A3 F0               [24] 4451 	movx	@dptr,a
      0014A4 E5*46            [12] 4452 	mov	a,(_remove_chain_sloc0_1_0 + 2)
      0014A6 A3               [24] 4453 	inc	dptr
      0014A7 F0               [24] 4454 	movx	@dptr,a
      0014A8 E5*47            [12] 4455 	mov	a,(_remove_chain_sloc0_1_0 + 3)
      0014AA A3               [24] 4456 	inc	dptr
      0014AB F0               [24] 4457 	movx	@dptr,a
      0014AC 90r00r3F         [24] 4458 	mov	dptr,#_put_fat_PARM_3
      0014AF E4               [12] 4459 	clr	a
      0014B0 F0               [24] 4460 	movx	@dptr,a
      0014B1 A3               [24] 4461 	inc	dptr
      0014B2 F0               [24] 4462 	movx	@dptr,a
      0014B3 A3               [24] 4463 	inc	dptr
      0014B4 F0               [24] 4464 	movx	@dptr,a
      0014B5 A3               [24] 4465 	inc	dptr
      0014B6 F0               [24] 4466 	movx	@dptr,a
      0014B7 8D 82            [24] 4467 	mov	dpl,r5
      0014B9 8E 83            [24] 4468 	mov	dph,r6
      0014BB 8F F0            [24] 4469 	mov	b,r7
      0014BD C0 07            [24] 4470 	push	ar7
      0014BF C0 06            [24] 4471 	push	ar6
      0014C1 C0 05            [24] 4472 	push	ar5
      0014C3 C0 04            [24] 4473 	push	ar4
      0014C5 C0 03            [24] 4474 	push	ar3
      0014C7 C0 02            [24] 4475 	push	ar2
      0014C9 12r0DrB2         [24] 4476 	lcall	_put_fat
      0014CC A9 82            [24] 4477 	mov	r1,dpl
      0014CE D0 02            [24] 4478 	pop	ar2
      0014D0 D0 03            [24] 4479 	pop	ar3
      0014D2 D0 04            [24] 4480 	pop	ar4
      0014D4 D0 05            [24] 4481 	pop	ar5
      0014D6 D0 06            [24] 4482 	pop	ar6
      0014D8 D0 07            [24] 4483 	pop	ar7
                                   4484 ;	ff15\source\ff.c:1461: if (res != FR_OK) return res;
      0014DA E9               [12] 4485 	mov	a,r1
      0014DB 60 03            [24] 4486 	jz	00120$
      0014DD 89 82            [24] 4487 	mov	dpl,r1
      0014DF 22               [24] 4488 	ret
      0014E0                       4489 00120$:
                                   4490 ;	ff15\source\ff.c:1463: if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
      0014E0 74 10            [12] 4491 	mov	a,#0x10
      0014E2 2D               [12] 4492 	add	a,r5
      0014E3 F5*44            [12] 4493 	mov	_remove_chain_sloc0_1_0,a
      0014E5 E4               [12] 4494 	clr	a
      0014E6 3E               [12] 4495 	addc	a,r6
      0014E7 F5*45            [12] 4496 	mov	(_remove_chain_sloc0_1_0 + 1),a
      0014E9 8F*46            [24] 4497 	mov	(_remove_chain_sloc0_1_0 + 2),r7
      0014EB 85*44 82         [24] 4498 	mov	dpl,_remove_chain_sloc0_1_0
      0014EE 85*45 83         [24] 4499 	mov	dph,(_remove_chain_sloc0_1_0 + 1)
      0014F1 85*46 F0         [24] 4500 	mov	b,(_remove_chain_sloc0_1_0 + 2)
      0014F4 12r00r00         [24] 4501 	lcall	__gptrget
      0014F7 F5*4C            [12] 4502 	mov	_remove_chain_sloc2_1_0,a
      0014F9 A3               [24] 4503 	inc	dptr
      0014FA 12r00r00         [24] 4504 	lcall	__gptrget
      0014FD F5*4D            [12] 4505 	mov	(_remove_chain_sloc2_1_0 + 1),a
      0014FF A3               [24] 4506 	inc	dptr
      001500 12r00r00         [24] 4507 	lcall	__gptrget
      001503 F5*4E            [12] 4508 	mov	(_remove_chain_sloc2_1_0 + 2),a
      001505 A3               [24] 4509 	inc	dptr
      001506 12r00r00         [24] 4510 	lcall	__gptrget
      001509 F5*4F            [12] 4511 	mov	(_remove_chain_sloc2_1_0 + 3),a
      00150B C0 05            [24] 4512 	push	ar5
      00150D C0 06            [24] 4513 	push	ar6
      00150F C0 07            [24] 4514 	push	ar7
      001511 8A 82            [24] 4515 	mov	dpl,r2
      001513 8B 83            [24] 4516 	mov	dph,r3
      001515 8C F0            [24] 4517 	mov	b,r4
      001517 12r00r00         [24] 4518 	lcall	__gptrget
      00151A F8               [12] 4519 	mov	r0,a
      00151B A3               [24] 4520 	inc	dptr
      00151C 12r00r00         [24] 4521 	lcall	__gptrget
      00151F F9               [12] 4522 	mov	r1,a
      001520 A3               [24] 4523 	inc	dptr
      001521 12r00r00         [24] 4524 	lcall	__gptrget
      001524 FE               [12] 4525 	mov	r6,a
      001525 A3               [24] 4526 	inc	dptr
      001526 12r00r00         [24] 4527 	lcall	__gptrget
      001529 FF               [12] 4528 	mov	r7,a
      00152A E8               [12] 4529 	mov	a,r0
      00152B 24 FE            [12] 4530 	add	a,#0xfe
      00152D F8               [12] 4531 	mov	r0,a
      00152E E9               [12] 4532 	mov	a,r1
      00152F 34 FF            [12] 4533 	addc	a,#0xff
      001531 F9               [12] 4534 	mov	r1,a
      001532 EE               [12] 4535 	mov	a,r6
      001533 34 FF            [12] 4536 	addc	a,#0xff
      001535 FE               [12] 4537 	mov	r6,a
      001536 EF               [12] 4538 	mov	a,r7
      001537 34 FF            [12] 4539 	addc	a,#0xff
      001539 FF               [12] 4540 	mov	r7,a
      00153A C3               [12] 4541 	clr	c
      00153B E5*4C            [12] 4542 	mov	a,_remove_chain_sloc2_1_0
      00153D 98               [12] 4543 	subb	a,r0
      00153E E5*4D            [12] 4544 	mov	a,(_remove_chain_sloc2_1_0 + 1)
      001540 99               [12] 4545 	subb	a,r1
      001541 E5*4E            [12] 4546 	mov	a,(_remove_chain_sloc2_1_0 + 2)
      001543 9E               [12] 4547 	subb	a,r6
      001544 E5*4F            [12] 4548 	mov	a,(_remove_chain_sloc2_1_0 + 3)
      001546 9F               [12] 4549 	subb	a,r7
      001547 D0 07            [24] 4550 	pop	ar7
      001549 D0 06            [24] 4551 	pop	ar6
      00154B D0 05            [24] 4552 	pop	ar5
      00154D 50 59            [24] 4553 	jnc	00123$
                                   4554 ;	ff15\source\ff.c:1464: fs->free_clst++;
      00154F C0 02            [24] 4555 	push	ar2
      001551 C0 03            [24] 4556 	push	ar3
      001553 C0 04            [24] 4557 	push	ar4
      001555 74 01            [12] 4558 	mov	a,#0x01
      001557 25*4C            [12] 4559 	add	a,_remove_chain_sloc2_1_0
      001559 F8               [12] 4560 	mov	r0,a
      00155A E4               [12] 4561 	clr	a
      00155B 35*4D            [12] 4562 	addc	a,(_remove_chain_sloc2_1_0 + 1)
      00155D F9               [12] 4563 	mov	r1,a
      00155E E4               [12] 4564 	clr	a
      00155F 35*4E            [12] 4565 	addc	a,(_remove_chain_sloc2_1_0 + 2)
      001561 FB               [12] 4566 	mov	r3,a
      001562 E4               [12] 4567 	clr	a
      001563 35*4F            [12] 4568 	addc	a,(_remove_chain_sloc2_1_0 + 3)
      001565 FC               [12] 4569 	mov	r4,a
      001566 85*44 82         [24] 4570 	mov	dpl,_remove_chain_sloc0_1_0
      001569 85*45 83         [24] 4571 	mov	dph,(_remove_chain_sloc0_1_0 + 1)
      00156C 85*46 F0         [24] 4572 	mov	b,(_remove_chain_sloc0_1_0 + 2)
      00156F E8               [12] 4573 	mov	a,r0
      001570 12r00r00         [24] 4574 	lcall	__gptrput
      001573 A3               [24] 4575 	inc	dptr
      001574 E9               [12] 4576 	mov	a,r1
      001575 12r00r00         [24] 4577 	lcall	__gptrput
      001578 A3               [24] 4578 	inc	dptr
      001579 EB               [12] 4579 	mov	a,r3
      00157A 12r00r00         [24] 4580 	lcall	__gptrput
      00157D A3               [24] 4581 	inc	dptr
      00157E EC               [12] 4582 	mov	a,r4
      00157F 12r00r00         [24] 4583 	lcall	__gptrput
                                   4584 ;	ff15\source\ff.c:1465: fs->fsi_flag |= 1;
      001582 74 05            [12] 4585 	mov	a,#0x05
      001584 2D               [12] 4586 	add	a,r5
      001585 FA               [12] 4587 	mov	r2,a
      001586 E4               [12] 4588 	clr	a
      001587 3E               [12] 4589 	addc	a,r6
      001588 FB               [12] 4590 	mov	r3,a
      001589 8F 04            [24] 4591 	mov	ar4,r7
      00158B 8A 82            [24] 4592 	mov	dpl,r2
      00158D 8B 83            [24] 4593 	mov	dph,r3
      00158F 8C F0            [24] 4594 	mov	b,r4
      001591 12r00r00         [24] 4595 	lcall	__gptrget
      001594 F9               [12] 4596 	mov	r1,a
      001595 43 01 01         [24] 4597 	orl	ar1,#0x01
      001598 8A 82            [24] 4598 	mov	dpl,r2
      00159A 8B 83            [24] 4599 	mov	dph,r3
      00159C 8C F0            [24] 4600 	mov	b,r4
      00159E E9               [12] 4601 	mov	a,r1
      00159F 12r00r00         [24] 4602 	lcall	__gptrput
                                   4603 ;	ff15\source\ff.c:1514: return FR_OK;
      0015A2 D0 04            [24] 4604 	pop	ar4
      0015A4 D0 03            [24] 4605 	pop	ar3
      0015A6 D0 02            [24] 4606 	pop	ar2
                                   4607 ;	ff15\source\ff.c:1465: fs->fsi_flag |= 1;
      0015A8                       4608 00123$:
                                   4609 ;	ff15\source\ff.c:1485: clst = nxt;					/* Next cluster */
      0015A8 C0 05            [24] 4610 	push	ar5
      0015AA C0 06            [24] 4611 	push	ar6
      0015AC C0 07            [24] 4612 	push	ar7
      0015AE 90r00r47         [24] 4613 	mov	dptr,#_remove_chain_PARM_2
      0015B1 E5*48            [12] 4614 	mov	a,_remove_chain_sloc1_1_0
      0015B3 F0               [24] 4615 	movx	@dptr,a
      0015B4 E5*49            [12] 4616 	mov	a,(_remove_chain_sloc1_1_0 + 1)
      0015B6 A3               [24] 4617 	inc	dptr
      0015B7 F0               [24] 4618 	movx	@dptr,a
      0015B8 E5*4A            [12] 4619 	mov	a,(_remove_chain_sloc1_1_0 + 2)
      0015BA A3               [24] 4620 	inc	dptr
      0015BB F0               [24] 4621 	movx	@dptr,a
      0015BC E5*4B            [12] 4622 	mov	a,(_remove_chain_sloc1_1_0 + 3)
      0015BE A3               [24] 4623 	inc	dptr
      0015BF F0               [24] 4624 	movx	@dptr,a
                                   4625 ;	ff15\source\ff.c:1486: } while (clst < fs->n_fatent);	/* Repeat while not the last link */
      0015C0 8A 82            [24] 4626 	mov	dpl,r2
      0015C2 8B 83            [24] 4627 	mov	dph,r3
      0015C4 8C F0            [24] 4628 	mov	b,r4
      0015C6 12r00r00         [24] 4629 	lcall	__gptrget
      0015C9 F8               [12] 4630 	mov	r0,a
      0015CA A3               [24] 4631 	inc	dptr
      0015CB 12r00r00         [24] 4632 	lcall	__gptrget
      0015CE F9               [12] 4633 	mov	r1,a
      0015CF A3               [24] 4634 	inc	dptr
      0015D0 12r00r00         [24] 4635 	lcall	__gptrget
      0015D3 FE               [12] 4636 	mov	r6,a
      0015D4 A3               [24] 4637 	inc	dptr
      0015D5 12r00r00         [24] 4638 	lcall	__gptrget
      0015D8 FF               [12] 4639 	mov	r7,a
      0015D9 C3               [12] 4640 	clr	c
      0015DA E5*48            [12] 4641 	mov	a,_remove_chain_sloc1_1_0
      0015DC 98               [12] 4642 	subb	a,r0
      0015DD E5*49            [12] 4643 	mov	a,(_remove_chain_sloc1_1_0 + 1)
      0015DF 99               [12] 4644 	subb	a,r1
      0015E0 E5*4A            [12] 4645 	mov	a,(_remove_chain_sloc1_1_0 + 2)
      0015E2 9E               [12] 4646 	subb	a,r6
      0015E3 E5*4B            [12] 4647 	mov	a,(_remove_chain_sloc1_1_0 + 3)
      0015E5 9F               [12] 4648 	subb	a,r7
      0015E6 D0 07            [24] 4649 	pop	ar7
      0015E8 D0 06            [24] 4650 	pop	ar6
      0015EA D0 05            [24] 4651 	pop	ar5
      0015EC 50 03            [24] 4652 	jnc	00176$
      0015EE 02r14r00         [24] 4653 	ljmp	00124$
      0015F1                       4654 00176$:
      0015F1                       4655 00126$:
                                   4656 ;	ff15\source\ff.c:1514: return FR_OK;
      0015F1 75 82 00         [24] 4657 	mov	dpl,#0x00
                                   4658 ;	ff15\source\ff.c:1515: }
      0015F4 22               [24] 4659 	ret
                                   4660 ;------------------------------------------------------------
                                   4661 ;Allocation info for local variables in function 'create_chain'
                                   4662 ;------------------------------------------------------------
                                   4663 ;sloc0                     Allocated with name '_create_chain_sloc0_1_0'
                                   4664 ;sloc1                     Allocated with name '_create_chain_sloc1_1_0'
                                   4665 ;sloc2                     Allocated with name '_create_chain_sloc2_1_0'
                                   4666 ;sloc3                     Allocated with name '_create_chain_sloc3_1_0'
                                   4667 ;sloc4                     Allocated with name '_create_chain_sloc4_1_0'
                                   4668 ;clst                      Allocated with name '_create_chain_PARM_2'
                                   4669 ;obj                       Allocated with name '_create_chain_obj_65536_120'
                                   4670 ;cs                        Allocated with name '_create_chain_cs_65536_121'
                                   4671 ;ncl                       Allocated with name '_create_chain_ncl_65536_121'
                                   4672 ;scl                       Allocated with name '_create_chain_scl_65536_121'
                                   4673 ;res                       Allocated with name '_create_chain_res_65536_121'
                                   4674 ;fs                        Allocated with name '_create_chain_fs_65536_121'
                                   4675 ;------------------------------------------------------------
                                   4676 ;	ff15\source\ff.c:1524: static DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster# */
                                   4677 ;	-----------------------------------------
                                   4678 ;	 function create_chain
                                   4679 ;	-----------------------------------------
      0015F5                       4680 _create_chain:
      0015F5 AF F0            [24] 4681 	mov	r7,b
      0015F7 AE 83            [24] 4682 	mov	r6,dph
      0015F9 E5 82            [12] 4683 	mov	a,dpl
      0015FB 90r00r56         [24] 4684 	mov	dptr,#_create_chain_obj_65536_120
      0015FE F0               [24] 4685 	movx	@dptr,a
      0015FF EE               [12] 4686 	mov	a,r6
      001600 A3               [24] 4687 	inc	dptr
      001601 F0               [24] 4688 	movx	@dptr,a
      001602 EF               [12] 4689 	mov	a,r7
      001603 A3               [24] 4690 	inc	dptr
      001604 F0               [24] 4691 	movx	@dptr,a
                                   4692 ;	ff15\source\ff.c:1531: FATFS *fs = obj->fs;
      001605 90r00r56         [24] 4693 	mov	dptr,#_create_chain_obj_65536_120
      001608 E0               [24] 4694 	movx	a,@dptr
      001609 FD               [12] 4695 	mov	r5,a
      00160A A3               [24] 4696 	inc	dptr
      00160B E0               [24] 4697 	movx	a,@dptr
      00160C FE               [12] 4698 	mov	r6,a
      00160D A3               [24] 4699 	inc	dptr
      00160E E0               [24] 4700 	movx	a,@dptr
      00160F FF               [12] 4701 	mov	r7,a
      001610 8D 82            [24] 4702 	mov	dpl,r5
      001612 8E 83            [24] 4703 	mov	dph,r6
      001614 8F F0            [24] 4704 	mov	b,r7
      001616 12r00r00         [24] 4705 	lcall	__gptrget
      001619 F5*54            [12] 4706 	mov	_create_chain_sloc1_1_0,a
      00161B A3               [24] 4707 	inc	dptr
      00161C 12r00r00         [24] 4708 	lcall	__gptrget
      00161F F5*55            [12] 4709 	mov	(_create_chain_sloc1_1_0 + 1),a
      001621 A3               [24] 4710 	inc	dptr
      001622 12r00r00         [24] 4711 	lcall	__gptrget
      001625 F5*56            [12] 4712 	mov	(_create_chain_sloc1_1_0 + 2),a
                                   4713 ;	ff15\source\ff.c:1534: if (clst == 0) {	/* Create a new chain */
      001627 90r00r52         [24] 4714 	mov	dptr,#_create_chain_PARM_2
      00162A E0               [24] 4715 	movx	a,@dptr
      00162B F5*50            [12] 4716 	mov	_create_chain_sloc0_1_0,a
      00162D A3               [24] 4717 	inc	dptr
      00162E E0               [24] 4718 	movx	a,@dptr
      00162F F5*51            [12] 4719 	mov	(_create_chain_sloc0_1_0 + 1),a
      001631 A3               [24] 4720 	inc	dptr
      001632 E0               [24] 4721 	movx	a,@dptr
      001633 F5*52            [12] 4722 	mov	(_create_chain_sloc0_1_0 + 2),a
      001635 A3               [24] 4723 	inc	dptr
      001636 E0               [24] 4724 	movx	a,@dptr
      001637 F5*53            [12] 4725 	mov	(_create_chain_sloc0_1_0 + 3),a
      001639 E5*50            [12] 4726 	mov	a,_create_chain_sloc0_1_0
      00163B 45*51            [12] 4727 	orl	a,(_create_chain_sloc0_1_0 + 1)
      00163D 45*52            [12] 4728 	orl	a,(_create_chain_sloc0_1_0 + 2)
      00163F 45*53            [12] 4729 	orl	a,(_create_chain_sloc0_1_0 + 3)
      001641 60 03            [24] 4730 	jz	00251$
      001643 02r16rD0         [24] 4731 	ljmp	00111$
      001646                       4732 00251$:
                                   4733 ;	ff15\source\ff.c:1535: scl = fs->last_clst;				/* Suggested cluster to start to find */
      001646 74 0C            [12] 4734 	mov	a,#0x0c
      001648 25*54            [12] 4735 	add	a,_create_chain_sloc1_1_0
      00164A F9               [12] 4736 	mov	r1,a
      00164B E4               [12] 4737 	clr	a
      00164C 35*55            [12] 4738 	addc	a,(_create_chain_sloc1_1_0 + 1)
      00164E F8               [12] 4739 	mov	r0,a
      00164F AC*56            [24] 4740 	mov	r4,(_create_chain_sloc1_1_0 + 2)
      001651 89 82            [24] 4741 	mov	dpl,r1
      001653 88 83            [24] 4742 	mov	dph,r0
      001655 8C F0            [24] 4743 	mov	b,r4
      001657 12r00r00         [24] 4744 	lcall	__gptrget
      00165A F5*57            [12] 4745 	mov	_create_chain_sloc2_1_0,a
      00165C A3               [24] 4746 	inc	dptr
      00165D 12r00r00         [24] 4747 	lcall	__gptrget
      001660 F5*58            [12] 4748 	mov	(_create_chain_sloc2_1_0 + 1),a
      001662 A3               [24] 4749 	inc	dptr
      001663 12r00r00         [24] 4750 	lcall	__gptrget
      001666 F5*59            [12] 4751 	mov	(_create_chain_sloc2_1_0 + 2),a
      001668 A3               [24] 4752 	inc	dptr
      001669 12r00r00         [24] 4753 	lcall	__gptrget
      00166C F5*5A            [12] 4754 	mov	(_create_chain_sloc2_1_0 + 3),a
      00166E 90r00r5D         [24] 4755 	mov	dptr,#_create_chain_scl_65536_121
      001671 E5*57            [12] 4756 	mov	a,_create_chain_sloc2_1_0
      001673 F0               [24] 4757 	movx	@dptr,a
      001674 E5*58            [12] 4758 	mov	a,(_create_chain_sloc2_1_0 + 1)
      001676 A3               [24] 4759 	inc	dptr
      001677 F0               [24] 4760 	movx	@dptr,a
      001678 E5*59            [12] 4761 	mov	a,(_create_chain_sloc2_1_0 + 2)
      00167A A3               [24] 4762 	inc	dptr
      00167B F0               [24] 4763 	movx	@dptr,a
      00167C E5*5A            [12] 4764 	mov	a,(_create_chain_sloc2_1_0 + 3)
      00167E A3               [24] 4765 	inc	dptr
      00167F F0               [24] 4766 	movx	@dptr,a
                                   4767 ;	ff15\source\ff.c:1536: if (scl == 0 || scl >= fs->n_fatent) scl = 1;
      001680 E5*57            [12] 4768 	mov	a,_create_chain_sloc2_1_0
      001682 45*58            [12] 4769 	orl	a,(_create_chain_sloc2_1_0 + 1)
      001684 45*59            [12] 4770 	orl	a,(_create_chain_sloc2_1_0 + 2)
      001686 45*5A            [12] 4771 	orl	a,(_create_chain_sloc2_1_0 + 3)
      001688 60 36            [24] 4772 	jz	00101$
      00168A 74 14            [12] 4773 	mov	a,#0x14
      00168C 25*54            [12] 4774 	add	a,_create_chain_sloc1_1_0
      00168E F8               [12] 4775 	mov	r0,a
      00168F E4               [12] 4776 	clr	a
      001690 35*55            [12] 4777 	addc	a,(_create_chain_sloc1_1_0 + 1)
      001692 FB               [12] 4778 	mov	r3,a
      001693 AC*56            [24] 4779 	mov	r4,(_create_chain_sloc1_1_0 + 2)
      001695 88 82            [24] 4780 	mov	dpl,r0
      001697 8B 83            [24] 4781 	mov	dph,r3
      001699 8C F0            [24] 4782 	mov	b,r4
      00169B 12r00r00         [24] 4783 	lcall	__gptrget
      00169E F8               [12] 4784 	mov	r0,a
      00169F A3               [24] 4785 	inc	dptr
      0016A0 12r00r00         [24] 4786 	lcall	__gptrget
      0016A3 FB               [12] 4787 	mov	r3,a
      0016A4 A3               [24] 4788 	inc	dptr
      0016A5 12r00r00         [24] 4789 	lcall	__gptrget
      0016A8 FC               [12] 4790 	mov	r4,a
      0016A9 A3               [24] 4791 	inc	dptr
      0016AA 12r00r00         [24] 4792 	lcall	__gptrget
      0016AD FA               [12] 4793 	mov	r2,a
      0016AE C3               [12] 4794 	clr	c
      0016AF E5*57            [12] 4795 	mov	a,_create_chain_sloc2_1_0
      0016B1 98               [12] 4796 	subb	a,r0
      0016B2 E5*58            [12] 4797 	mov	a,(_create_chain_sloc2_1_0 + 1)
      0016B4 9B               [12] 4798 	subb	a,r3
      0016B5 E5*59            [12] 4799 	mov	a,(_create_chain_sloc2_1_0 + 2)
      0016B7 9C               [12] 4800 	subb	a,r4
      0016B8 E5*5A            [12] 4801 	mov	a,(_create_chain_sloc2_1_0 + 3)
      0016BA 9A               [12] 4802 	subb	a,r2
      0016BB 50 03            [24] 4803 	jnc	00253$
      0016BD 02r17r65         [24] 4804 	ljmp	00112$
      0016C0                       4805 00253$:
      0016C0                       4806 00101$:
      0016C0 90r00r5D         [24] 4807 	mov	dptr,#_create_chain_scl_65536_121
      0016C3 74 01            [12] 4808 	mov	a,#0x01
      0016C5 F0               [24] 4809 	movx	@dptr,a
      0016C6 E4               [12] 4810 	clr	a
      0016C7 A3               [24] 4811 	inc	dptr
      0016C8 F0               [24] 4812 	movx	@dptr,a
      0016C9 A3               [24] 4813 	inc	dptr
      0016CA F0               [24] 4814 	movx	@dptr,a
      0016CB A3               [24] 4815 	inc	dptr
      0016CC F0               [24] 4816 	movx	@dptr,a
      0016CD 02r17r65         [24] 4817 	ljmp	00112$
      0016D0                       4818 00111$:
                                   4819 ;	ff15\source\ff.c:1539: cs = get_fat(obj, clst);			/* Check the cluster status */
      0016D0 90r00r30         [24] 4820 	mov	dptr,#_get_fat_PARM_2
      0016D3 E5*50            [12] 4821 	mov	a,_create_chain_sloc0_1_0
      0016D5 F0               [24] 4822 	movx	@dptr,a
      0016D6 E5*51            [12] 4823 	mov	a,(_create_chain_sloc0_1_0 + 1)
      0016D8 A3               [24] 4824 	inc	dptr
      0016D9 F0               [24] 4825 	movx	@dptr,a
      0016DA E5*52            [12] 4826 	mov	a,(_create_chain_sloc0_1_0 + 2)
      0016DC A3               [24] 4827 	inc	dptr
      0016DD F0               [24] 4828 	movx	@dptr,a
      0016DE E5*53            [12] 4829 	mov	a,(_create_chain_sloc0_1_0 + 3)
      0016E0 A3               [24] 4830 	inc	dptr
      0016E1 F0               [24] 4831 	movx	@dptr,a
      0016E2 8D 82            [24] 4832 	mov	dpl,r5
      0016E4 8E 83            [24] 4833 	mov	dph,r6
      0016E6 8F F0            [24] 4834 	mov	b,r7
      0016E8 12r09rFE         [24] 4835 	lcall	_get_fat
      0016EB AC 82            [24] 4836 	mov	r4,dpl
      0016ED AD 83            [24] 4837 	mov	r5,dph
      0016EF AE F0            [24] 4838 	mov	r6,b
      0016F1 FF               [12] 4839 	mov	r7,a
                                   4840 ;	ff15\source\ff.c:1540: if (cs < 2) return 1;				/* Test for insanity */
      0016F2 C3               [12] 4841 	clr	c
      0016F3 EC               [12] 4842 	mov	a,r4
      0016F4 94 02            [12] 4843 	subb	a,#0x02
      0016F6 ED               [12] 4844 	mov	a,r5
      0016F7 94 00            [12] 4845 	subb	a,#0x00
      0016F9 EE               [12] 4846 	mov	a,r6
      0016FA 94 00            [12] 4847 	subb	a,#0x00
      0016FC EF               [12] 4848 	mov	a,r7
      0016FD 94 00            [12] 4849 	subb	a,#0x00
      0016FF 50 07            [24] 4850 	jnc	00105$
      001701 90 00 01         [24] 4851 	mov	dptr,#(0x01&0x00ff)
      001704 E4               [12] 4852 	clr	a
      001705 F5 F0            [12] 4853 	mov	b,a
      001707 22               [24] 4854 	ret
      001708                       4855 00105$:
                                   4856 ;	ff15\source\ff.c:1541: if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
      001708 BC FF 11         [24] 4857 	cjne	r4,#0xff,00107$
      00170B BD FF 0E         [24] 4858 	cjne	r5,#0xff,00107$
      00170E BE FF 0B         [24] 4859 	cjne	r6,#0xff,00107$
      001711 BF FF 08         [24] 4860 	cjne	r7,#0xff,00107$
      001714 8C 82            [24] 4861 	mov	dpl,r4
      001716 8D 83            [24] 4862 	mov	dph,r5
      001718 8E F0            [24] 4863 	mov	b,r6
      00171A EF               [12] 4864 	mov	a,r7
      00171B 22               [24] 4865 	ret
      00171C                       4866 00107$:
                                   4867 ;	ff15\source\ff.c:1542: if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
      00171C 74 14            [12] 4868 	mov	a,#0x14
      00171E 25*54            [12] 4869 	add	a,_create_chain_sloc1_1_0
      001720 FB               [12] 4870 	mov	r3,a
      001721 E4               [12] 4871 	clr	a
      001722 35*55            [12] 4872 	addc	a,(_create_chain_sloc1_1_0 + 1)
      001724 F9               [12] 4873 	mov	r1,a
      001725 AA*56            [24] 4874 	mov	r2,(_create_chain_sloc1_1_0 + 2)
      001727 8B 82            [24] 4875 	mov	dpl,r3
      001729 89 83            [24] 4876 	mov	dph,r1
      00172B 8A F0            [24] 4877 	mov	b,r2
      00172D 12r00r00         [24] 4878 	lcall	__gptrget
      001730 F8               [12] 4879 	mov	r0,a
      001731 A3               [24] 4880 	inc	dptr
      001732 12r00r00         [24] 4881 	lcall	__gptrget
      001735 F9               [12] 4882 	mov	r1,a
      001736 A3               [24] 4883 	inc	dptr
      001737 12r00r00         [24] 4884 	lcall	__gptrget
      00173A FA               [12] 4885 	mov	r2,a
      00173B A3               [24] 4886 	inc	dptr
      00173C 12r00r00         [24] 4887 	lcall	__gptrget
      00173F FB               [12] 4888 	mov	r3,a
      001740 C3               [12] 4889 	clr	c
      001741 EC               [12] 4890 	mov	a,r4
      001742 98               [12] 4891 	subb	a,r0
      001743 ED               [12] 4892 	mov	a,r5
      001744 99               [12] 4893 	subb	a,r1
      001745 EE               [12] 4894 	mov	a,r6
      001746 9A               [12] 4895 	subb	a,r2
      001747 EF               [12] 4896 	mov	a,r7
      001748 9B               [12] 4897 	subb	a,r3
      001749 50 08            [24] 4898 	jnc	00109$
      00174B 8C 82            [24] 4899 	mov	dpl,r4
      00174D 8D 83            [24] 4900 	mov	dph,r5
      00174F 8E F0            [24] 4901 	mov	b,r6
      001751 EF               [12] 4902 	mov	a,r7
      001752 22               [24] 4903 	ret
      001753                       4904 00109$:
                                   4905 ;	ff15\source\ff.c:1543: scl = clst;							/* Cluster to start to find */
      001753 90r00r5D         [24] 4906 	mov	dptr,#_create_chain_scl_65536_121
      001756 E5*50            [12] 4907 	mov	a,_create_chain_sloc0_1_0
      001758 F0               [24] 4908 	movx	@dptr,a
      001759 E5*51            [12] 4909 	mov	a,(_create_chain_sloc0_1_0 + 1)
      00175B A3               [24] 4910 	inc	dptr
      00175C F0               [24] 4911 	movx	@dptr,a
      00175D E5*52            [12] 4912 	mov	a,(_create_chain_sloc0_1_0 + 2)
      00175F A3               [24] 4913 	inc	dptr
      001760 F0               [24] 4914 	movx	@dptr,a
      001761 E5*53            [12] 4915 	mov	a,(_create_chain_sloc0_1_0 + 3)
      001763 A3               [24] 4916 	inc	dptr
      001764 F0               [24] 4917 	movx	@dptr,a
      001765                       4918 00112$:
                                   4919 ;	ff15\source\ff.c:1545: if (fs->free_clst == 0) return 0;		/* No free cluster */
      001765 74 10            [12] 4920 	mov	a,#0x10
      001767 25*54            [12] 4921 	add	a,_create_chain_sloc1_1_0
      001769 FD               [12] 4922 	mov	r5,a
      00176A E4               [12] 4923 	clr	a
      00176B 35*55            [12] 4924 	addc	a,(_create_chain_sloc1_1_0 + 1)
      00176D FE               [12] 4925 	mov	r6,a
      00176E AF*56            [24] 4926 	mov	r7,(_create_chain_sloc1_1_0 + 2)
      001770 8D 82            [24] 4927 	mov	dpl,r5
      001772 8E 83            [24] 4928 	mov	dph,r6
      001774 8F F0            [24] 4929 	mov	b,r7
      001776 12r00r00         [24] 4930 	lcall	__gptrget
      001779 FD               [12] 4931 	mov	r5,a
      00177A A3               [24] 4932 	inc	dptr
      00177B 12r00r00         [24] 4933 	lcall	__gptrget
      00177E FE               [12] 4934 	mov	r6,a
      00177F A3               [24] 4935 	inc	dptr
      001780 12r00r00         [24] 4936 	lcall	__gptrget
      001783 FF               [12] 4937 	mov	r7,a
      001784 A3               [24] 4938 	inc	dptr
      001785 12r00r00         [24] 4939 	lcall	__gptrget
      001788 FC               [12] 4940 	mov	r4,a
      001789 ED               [12] 4941 	mov	a,r5
      00178A 4E               [12] 4942 	orl	a,r6
      00178B 4F               [12] 4943 	orl	a,r7
      00178C 4C               [12] 4944 	orl	a,r4
      00178D 70 07            [24] 4945 	jnz	00114$
      00178F 90 00 00         [24] 4946 	mov	dptr,#(0x00&0x00ff)
      001792 E4               [12] 4947 	clr	a
      001793 F5 F0            [12] 4948 	mov	b,a
      001795 22               [24] 4949 	ret
      001796                       4950 00114$:
                                   4951 ;	ff15\source\ff.c:1574: ncl = 0;
      001796 90r00r59         [24] 4952 	mov	dptr,#_create_chain_ncl_65536_121
      001799 E4               [12] 4953 	clr	a
      00179A F0               [24] 4954 	movx	@dptr,a
      00179B A3               [24] 4955 	inc	dptr
      00179C F0               [24] 4956 	movx	@dptr,a
      00179D A3               [24] 4957 	inc	dptr
      00179E F0               [24] 4958 	movx	@dptr,a
      00179F A3               [24] 4959 	inc	dptr
      0017A0 F0               [24] 4960 	movx	@dptr,a
                                   4961 ;	ff15\source\ff.c:1575: if (scl == clst) {						/* Stretching an existing chain? */
      0017A1 90r00r5D         [24] 4962 	mov	dptr,#_create_chain_scl_65536_121
      0017A4 E0               [24] 4963 	movx	a,@dptr
      0017A5 FC               [12] 4964 	mov	r4,a
      0017A6 A3               [24] 4965 	inc	dptr
      0017A7 E0               [24] 4966 	movx	a,@dptr
      0017A8 FD               [12] 4967 	mov	r5,a
      0017A9 A3               [24] 4968 	inc	dptr
      0017AA E0               [24] 4969 	movx	a,@dptr
      0017AB FE               [12] 4970 	mov	r6,a
      0017AC A3               [24] 4971 	inc	dptr
      0017AD E0               [24] 4972 	movx	a,@dptr
      0017AE FF               [12] 4973 	mov	r7,a
      0017AF EC               [12] 4974 	mov	a,r4
      0017B0 B5*50 0E         [24] 4975 	cjne	a,_create_chain_sloc0_1_0,00259$
      0017B3 ED               [12] 4976 	mov	a,r5
      0017B4 B5*51 0A         [24] 4977 	cjne	a,(_create_chain_sloc0_1_0 + 1),00259$
      0017B7 EE               [12] 4978 	mov	a,r6
      0017B8 B5*52 06         [24] 4979 	cjne	a,(_create_chain_sloc0_1_0 + 2),00259$
      0017BB EF               [12] 4980 	mov	a,r7
      0017BC B5*53 02         [24] 4981 	cjne	a,(_create_chain_sloc0_1_0 + 3),00259$
      0017BF 80 03            [24] 4982 	sjmp	00260$
      0017C1                       4983 00259$:
      0017C1 02r18rF3         [24] 4984 	ljmp	00126$
      0017C4                       4985 00260$:
                                   4986 ;	ff15\source\ff.c:1576: ncl = scl + 1;						/* Test if next cluster is free */
      0017C4 0C               [12] 4987 	inc	r4
      0017C5 BC 00 09         [24] 4988 	cjne	r4,#0x00,00261$
      0017C8 0D               [12] 4989 	inc	r5
      0017C9 BD 00 05         [24] 4990 	cjne	r5,#0x00,00261$
      0017CC 0E               [12] 4991 	inc	r6
      0017CD BE 00 01         [24] 4992 	cjne	r6,#0x00,00261$
      0017D0 0F               [12] 4993 	inc	r7
      0017D1                       4994 00261$:
      0017D1 90r00r59         [24] 4995 	mov	dptr,#_create_chain_ncl_65536_121
      0017D4 EC               [12] 4996 	mov	a,r4
      0017D5 F0               [24] 4997 	movx	@dptr,a
      0017D6 ED               [12] 4998 	mov	a,r5
      0017D7 A3               [24] 4999 	inc	dptr
      0017D8 F0               [24] 5000 	movx	@dptr,a
      0017D9 EE               [12] 5001 	mov	a,r6
      0017DA A3               [24] 5002 	inc	dptr
      0017DB F0               [24] 5003 	movx	@dptr,a
      0017DC EF               [12] 5004 	mov	a,r7
      0017DD A3               [24] 5005 	inc	dptr
      0017DE F0               [24] 5006 	movx	@dptr,a
                                   5007 ;	ff15\source\ff.c:1577: if (ncl >= fs->n_fatent) ncl = 2;
      0017DF 74 14            [12] 5008 	mov	a,#0x14
      0017E1 25*54            [12] 5009 	add	a,_create_chain_sloc1_1_0
      0017E3 F5*57            [12] 5010 	mov	_create_chain_sloc2_1_0,a
      0017E5 E4               [12] 5011 	clr	a
      0017E6 35*55            [12] 5012 	addc	a,(_create_chain_sloc1_1_0 + 1)
      0017E8 F5*58            [12] 5013 	mov	(_create_chain_sloc2_1_0 + 1),a
      0017EA 85*56*59         [24] 5014 	mov	(_create_chain_sloc2_1_0 + 2),(_create_chain_sloc1_1_0 + 2)
      0017ED 85*57 82         [24] 5015 	mov	dpl,_create_chain_sloc2_1_0
      0017F0 85*58 83         [24] 5016 	mov	dph,(_create_chain_sloc2_1_0 + 1)
      0017F3 85*59 F0         [24] 5017 	mov	b,(_create_chain_sloc2_1_0 + 2)
      0017F6 12r00r00         [24] 5018 	lcall	__gptrget
      0017F9 F8               [12] 5019 	mov	r0,a
      0017FA A3               [24] 5020 	inc	dptr
      0017FB 12r00r00         [24] 5021 	lcall	__gptrget
      0017FE F9               [12] 5022 	mov	r1,a
      0017FF A3               [24] 5023 	inc	dptr
      001800 12r00r00         [24] 5024 	lcall	__gptrget
      001803 FA               [12] 5025 	mov	r2,a
      001804 A3               [24] 5026 	inc	dptr
      001805 12r00r00         [24] 5027 	lcall	__gptrget
      001808 FB               [12] 5028 	mov	r3,a
      001809 C3               [12] 5029 	clr	c
      00180A EC               [12] 5030 	mov	a,r4
      00180B 98               [12] 5031 	subb	a,r0
      00180C ED               [12] 5032 	mov	a,r5
      00180D 99               [12] 5033 	subb	a,r1
      00180E EE               [12] 5034 	mov	a,r6
      00180F 9A               [12] 5035 	subb	a,r2
      001810 EF               [12] 5036 	mov	a,r7
      001811 9B               [12] 5037 	subb	a,r3
      001812 40 0D            [24] 5038 	jc	00116$
      001814 90r00r59         [24] 5039 	mov	dptr,#_create_chain_ncl_65536_121
      001817 74 02            [12] 5040 	mov	a,#0x02
      001819 F0               [24] 5041 	movx	@dptr,a
      00181A E4               [12] 5042 	clr	a
      00181B A3               [24] 5043 	inc	dptr
      00181C F0               [24] 5044 	movx	@dptr,a
      00181D A3               [24] 5045 	inc	dptr
      00181E F0               [24] 5046 	movx	@dptr,a
      00181F A3               [24] 5047 	inc	dptr
      001820 F0               [24] 5048 	movx	@dptr,a
      001821                       5049 00116$:
                                   5050 ;	ff15\source\ff.c:1578: cs = get_fat(obj, ncl);				/* Get next cluster status */
      001821 90r00r56         [24] 5051 	mov	dptr,#_create_chain_obj_65536_120
      001824 E0               [24] 5052 	movx	a,@dptr
      001825 FD               [12] 5053 	mov	r5,a
      001826 A3               [24] 5054 	inc	dptr
      001827 E0               [24] 5055 	movx	a,@dptr
      001828 FE               [12] 5056 	mov	r6,a
      001829 A3               [24] 5057 	inc	dptr
      00182A E0               [24] 5058 	movx	a,@dptr
      00182B FF               [12] 5059 	mov	r7,a
      00182C 90r00r59         [24] 5060 	mov	dptr,#_create_chain_ncl_65536_121
      00182F E0               [24] 5061 	movx	a,@dptr
      001830 F9               [12] 5062 	mov	r1,a
      001831 A3               [24] 5063 	inc	dptr
      001832 E0               [24] 5064 	movx	a,@dptr
      001833 FA               [12] 5065 	mov	r2,a
      001834 A3               [24] 5066 	inc	dptr
      001835 E0               [24] 5067 	movx	a,@dptr
      001836 FB               [12] 5068 	mov	r3,a
      001837 A3               [24] 5069 	inc	dptr
      001838 E0               [24] 5070 	movx	a,@dptr
      001839 FC               [12] 5071 	mov	r4,a
      00183A 90r00r30         [24] 5072 	mov	dptr,#_get_fat_PARM_2
      00183D E9               [12] 5073 	mov	a,r1
      00183E F0               [24] 5074 	movx	@dptr,a
      00183F EA               [12] 5075 	mov	a,r2
      001840 A3               [24] 5076 	inc	dptr
      001841 F0               [24] 5077 	movx	@dptr,a
      001842 EB               [12] 5078 	mov	a,r3
      001843 A3               [24] 5079 	inc	dptr
      001844 F0               [24] 5080 	movx	@dptr,a
      001845 EC               [12] 5081 	mov	a,r4
      001846 A3               [24] 5082 	inc	dptr
      001847 F0               [24] 5083 	movx	@dptr,a
      001848 8D 82            [24] 5084 	mov	dpl,r5
      00184A 8E 83            [24] 5085 	mov	dph,r6
      00184C 8F F0            [24] 5086 	mov	b,r7
      00184E 12r09rFE         [24] 5087 	lcall	_get_fat
      001851 AC 82            [24] 5088 	mov	r4,dpl
      001853 AD 83            [24] 5089 	mov	r5,dph
      001855 AE F0            [24] 5090 	mov	r6,b
      001857 FF               [12] 5091 	mov	r7,a
                                   5092 ;	ff15\source\ff.c:1579: if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
      001858 BC 01 0B         [24] 5093 	cjne	r4,#0x01,00263$
      00185B BD 00 08         [24] 5094 	cjne	r5,#0x00,00263$
      00185E BE 00 05         [24] 5095 	cjne	r6,#0x00,00263$
      001861 BF 00 02         [24] 5096 	cjne	r7,#0x00,00263$
      001864 80 0C            [24] 5097 	sjmp	00117$
      001866                       5098 00263$:
      001866 BC FF 11         [24] 5099 	cjne	r4,#0xff,00118$
      001869 BD FF 0E         [24] 5100 	cjne	r5,#0xff,00118$
      00186C BE FF 0B         [24] 5101 	cjne	r6,#0xff,00118$
      00186F BF FF 08         [24] 5102 	cjne	r7,#0xff,00118$
      001872                       5103 00117$:
      001872 8C 82            [24] 5104 	mov	dpl,r4
      001874 8D 83            [24] 5105 	mov	dph,r5
      001876 8E F0            [24] 5106 	mov	b,r6
      001878 EF               [12] 5107 	mov	a,r7
      001879 22               [24] 5108 	ret
      00187A                       5109 00118$:
                                   5110 ;	ff15\source\ff.c:1580: if (cs != 0) {						/* Not free? */
      00187A EC               [12] 5111 	mov	a,r4
      00187B 4D               [12] 5112 	orl	a,r5
      00187C 4E               [12] 5113 	orl	a,r6
      00187D 4F               [12] 5114 	orl	a,r7
      00187E 60 73            [24] 5115 	jz	00126$
                                   5116 ;	ff15\source\ff.c:1581: cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
      001880 74 0C            [12] 5117 	mov	a,#0x0c
      001882 25*54            [12] 5118 	add	a,_create_chain_sloc1_1_0
      001884 FF               [12] 5119 	mov	r7,a
      001885 E4               [12] 5120 	clr	a
      001886 35*55            [12] 5121 	addc	a,(_create_chain_sloc1_1_0 + 1)
      001888 FD               [12] 5122 	mov	r5,a
      001889 AE*56            [24] 5123 	mov	r6,(_create_chain_sloc1_1_0 + 2)
      00188B 8F 82            [24] 5124 	mov	dpl,r7
      00188D 8D 83            [24] 5125 	mov	dph,r5
      00188F 8E F0            [24] 5126 	mov	b,r6
      001891 12r00r00         [24] 5127 	lcall	__gptrget
      001894 FC               [12] 5128 	mov	r4,a
      001895 A3               [24] 5129 	inc	dptr
      001896 12r00r00         [24] 5130 	lcall	__gptrget
      001899 FD               [12] 5131 	mov	r5,a
      00189A A3               [24] 5132 	inc	dptr
      00189B 12r00r00         [24] 5133 	lcall	__gptrget
      00189E FE               [12] 5134 	mov	r6,a
      00189F A3               [24] 5135 	inc	dptr
      0018A0 12r00r00         [24] 5136 	lcall	__gptrget
      0018A3 FF               [12] 5137 	mov	r7,a
                                   5138 ;	ff15\source\ff.c:1582: if (cs >= 2 && cs < fs->n_fatent) scl = cs;
      0018A4 C3               [12] 5139 	clr	c
      0018A5 EC               [12] 5140 	mov	a,r4
      0018A6 94 02            [12] 5141 	subb	a,#0x02
      0018A8 ED               [12] 5142 	mov	a,r5
      0018A9 94 00            [12] 5143 	subb	a,#0x00
      0018AB EE               [12] 5144 	mov	a,r6
      0018AC 94 00            [12] 5145 	subb	a,#0x00
      0018AE EF               [12] 5146 	mov	a,r7
      0018AF 94 00            [12] 5147 	subb	a,#0x00
      0018B1 40 35            [24] 5148 	jc	00121$
      0018B3 85*57 82         [24] 5149 	mov	dpl,_create_chain_sloc2_1_0
      0018B6 85*58 83         [24] 5150 	mov	dph,(_create_chain_sloc2_1_0 + 1)
      0018B9 85*59 F0         [24] 5151 	mov	b,(_create_chain_sloc2_1_0 + 2)
      0018BC 12r00r00         [24] 5152 	lcall	__gptrget
      0018BF F8               [12] 5153 	mov	r0,a
      0018C0 A3               [24] 5154 	inc	dptr
      0018C1 12r00r00         [24] 5155 	lcall	__gptrget
      0018C4 F9               [12] 5156 	mov	r1,a
      0018C5 A3               [24] 5157 	inc	dptr
      0018C6 12r00r00         [24] 5158 	lcall	__gptrget
      0018C9 FA               [12] 5159 	mov	r2,a
      0018CA A3               [24] 5160 	inc	dptr
      0018CB 12r00r00         [24] 5161 	lcall	__gptrget
      0018CE FB               [12] 5162 	mov	r3,a
      0018CF C3               [12] 5163 	clr	c
      0018D0 EC               [12] 5164 	mov	a,r4
      0018D1 98               [12] 5165 	subb	a,r0
      0018D2 ED               [12] 5166 	mov	a,r5
      0018D3 99               [12] 5167 	subb	a,r1
      0018D4 EE               [12] 5168 	mov	a,r6
      0018D5 9A               [12] 5169 	subb	a,r2
      0018D6 EF               [12] 5170 	mov	a,r7
      0018D7 9B               [12] 5171 	subb	a,r3
      0018D8 50 0E            [24] 5172 	jnc	00121$
      0018DA 90r00r5D         [24] 5173 	mov	dptr,#_create_chain_scl_65536_121
      0018DD EC               [12] 5174 	mov	a,r4
      0018DE F0               [24] 5175 	movx	@dptr,a
      0018DF ED               [12] 5176 	mov	a,r5
      0018E0 A3               [24] 5177 	inc	dptr
      0018E1 F0               [24] 5178 	movx	@dptr,a
      0018E2 EE               [12] 5179 	mov	a,r6
      0018E3 A3               [24] 5180 	inc	dptr
      0018E4 F0               [24] 5181 	movx	@dptr,a
      0018E5 EF               [12] 5182 	mov	a,r7
      0018E6 A3               [24] 5183 	inc	dptr
      0018E7 F0               [24] 5184 	movx	@dptr,a
      0018E8                       5185 00121$:
                                   5186 ;	ff15\source\ff.c:1583: ncl = 0;
      0018E8 90r00r59         [24] 5187 	mov	dptr,#_create_chain_ncl_65536_121
      0018EB E4               [12] 5188 	clr	a
      0018EC F0               [24] 5189 	movx	@dptr,a
      0018ED A3               [24] 5190 	inc	dptr
      0018EE F0               [24] 5191 	movx	@dptr,a
      0018EF A3               [24] 5192 	inc	dptr
      0018F0 F0               [24] 5193 	movx	@dptr,a
      0018F1 A3               [24] 5194 	inc	dptr
      0018F2 F0               [24] 5195 	movx	@dptr,a
      0018F3                       5196 00126$:
                                   5197 ;	ff15\source\ff.c:1586: if (ncl == 0) {	/* The new cluster cannot be contiguous and find another fragment */
      0018F3 90r00r59         [24] 5198 	mov	dptr,#_create_chain_ncl_65536_121
      0018F6 E0               [24] 5199 	movx	a,@dptr
      0018F7 F5 F0            [12] 5200 	mov	b,a
      0018F9 A3               [24] 5201 	inc	dptr
      0018FA E0               [24] 5202 	movx	a,@dptr
      0018FB 42 F0            [12] 5203 	orl	b,a
      0018FD A3               [24] 5204 	inc	dptr
      0018FE E0               [24] 5205 	movx	a,@dptr
      0018FF 42 F0            [12] 5206 	orl	b,a
      001901 A3               [24] 5207 	inc	dptr
      001902 E0               [24] 5208 	movx	a,@dptr
      001903 45 F0            [12] 5209 	orl	a,b
      001905 60 03            [24] 5210 	jz	00269$
      001907 02r1Ar4F         [24] 5211 	ljmp	00140$
      00190A                       5212 00269$:
                                   5213 ;	ff15\source\ff.c:1587: ncl = scl;	/* Start cluster */
      00190A 90r00r5D         [24] 5214 	mov	dptr,#_create_chain_scl_65536_121
      00190D E0               [24] 5215 	movx	a,@dptr
      00190E FC               [12] 5216 	mov	r4,a
      00190F A3               [24] 5217 	inc	dptr
      001910 E0               [24] 5218 	movx	a,@dptr
      001911 FD               [12] 5219 	mov	r5,a
      001912 A3               [24] 5220 	inc	dptr
      001913 E0               [24] 5221 	movx	a,@dptr
      001914 FE               [12] 5222 	mov	r6,a
      001915 A3               [24] 5223 	inc	dptr
      001916 E0               [24] 5224 	movx	a,@dptr
      001917 FF               [12] 5225 	mov	r7,a
      001918 90r00r59         [24] 5226 	mov	dptr,#_create_chain_ncl_65536_121
      00191B EC               [12] 5227 	mov	a,r4
      00191C F0               [24] 5228 	movx	@dptr,a
      00191D ED               [12] 5229 	mov	a,r5
      00191E A3               [24] 5230 	inc	dptr
      00191F F0               [24] 5231 	movx	@dptr,a
      001920 EE               [12] 5232 	mov	a,r6
      001921 A3               [24] 5233 	inc	dptr
      001922 F0               [24] 5234 	movx	@dptr,a
      001923 EF               [12] 5235 	mov	a,r7
      001924 A3               [24] 5236 	inc	dptr
      001925 F0               [24] 5237 	movx	@dptr,a
      001926 C3               [12] 5238 	clr	c
      001927 EC               [12] 5239 	mov	a,r4
      001928 94 02            [12] 5240 	subb	a,#0x02
      00192A ED               [12] 5241 	mov	a,r5
      00192B 94 00            [12] 5242 	subb	a,#0x00
      00192D EE               [12] 5243 	mov	a,r6
      00192E 94 00            [12] 5244 	subb	a,#0x00
      001930 EF               [12] 5245 	mov	a,r7
      001931 94 00            [12] 5246 	subb	a,#0x00
      001933 E4               [12] 5247 	clr	a
      001934 33               [12] 5248 	rlc	a
      001935 FB               [12] 5249 	mov	r3,a
      001936 8C*5B            [24] 5250 	mov	_create_chain_sloc3_1_0,r4
      001938 8D*5C            [24] 5251 	mov	(_create_chain_sloc3_1_0 + 1),r5
      00193A 8E*5D            [24] 5252 	mov	(_create_chain_sloc3_1_0 + 2),r6
      00193C 8F*5E            [24] 5253 	mov	(_create_chain_sloc3_1_0 + 3),r7
      00193E 74 14            [12] 5254 	mov	a,#0x14
      001940 25*54            [12] 5255 	add	a,_create_chain_sloc1_1_0
      001942 F5*57            [12] 5256 	mov	_create_chain_sloc2_1_0,a
      001944 E4               [12] 5257 	clr	a
      001945 35*55            [12] 5258 	addc	a,(_create_chain_sloc1_1_0 + 1)
      001947 F5*58            [12] 5259 	mov	(_create_chain_sloc2_1_0 + 1),a
      001949 85*56*59         [24] 5260 	mov	(_create_chain_sloc2_1_0 + 2),(_create_chain_sloc1_1_0 + 2)
      00194C                       5261 00149$:
                                   5262 ;	ff15\source\ff.c:1589: ncl++;							/* Next cluster */
      00194C C0 03            [24] 5263 	push	ar3
      00194E 90r00r59         [24] 5264 	mov	dptr,#_create_chain_ncl_65536_121
      001951 E0               [24] 5265 	movx	a,@dptr
      001952 24 01            [12] 5266 	add	a,#0x01
      001954 F0               [24] 5267 	movx	@dptr,a
      001955 A3               [24] 5268 	inc	dptr
      001956 E0               [24] 5269 	movx	a,@dptr
      001957 34 00            [12] 5270 	addc	a,#0x00
      001959 F0               [24] 5271 	movx	@dptr,a
      00195A A3               [24] 5272 	inc	dptr
      00195B E0               [24] 5273 	movx	a,@dptr
      00195C 34 00            [12] 5274 	addc	a,#0x00
      00195E F0               [24] 5275 	movx	@dptr,a
      00195F A3               [24] 5276 	inc	dptr
      001960 E0               [24] 5277 	movx	a,@dptr
      001961 34 00            [12] 5278 	addc	a,#0x00
      001963 F0               [24] 5279 	movx	@dptr,a
                                   5280 ;	ff15\source\ff.c:1590: if (ncl >= fs->n_fatent) {		/* Check wrap-around */
      001964 85*57 82         [24] 5281 	mov	dpl,_create_chain_sloc2_1_0
      001967 85*58 83         [24] 5282 	mov	dph,(_create_chain_sloc2_1_0 + 1)
      00196A 85*59 F0         [24] 5283 	mov	b,(_create_chain_sloc2_1_0 + 2)
      00196D 12r00r00         [24] 5284 	lcall	__gptrget
      001970 F8               [12] 5285 	mov	r0,a
      001971 A3               [24] 5286 	inc	dptr
      001972 12r00r00         [24] 5287 	lcall	__gptrget
      001975 F9               [12] 5288 	mov	r1,a
      001976 A3               [24] 5289 	inc	dptr
      001977 12r00r00         [24] 5290 	lcall	__gptrget
      00197A FA               [12] 5291 	mov	r2,a
      00197B A3               [24] 5292 	inc	dptr
      00197C 12r00r00         [24] 5293 	lcall	__gptrget
      00197F FB               [12] 5294 	mov	r3,a
      001980 90r00r59         [24] 5295 	mov	dptr,#_create_chain_ncl_65536_121
      001983 E0               [24] 5296 	movx	a,@dptr
      001984 FC               [12] 5297 	mov	r4,a
      001985 A3               [24] 5298 	inc	dptr
      001986 E0               [24] 5299 	movx	a,@dptr
      001987 FD               [12] 5300 	mov	r5,a
      001988 A3               [24] 5301 	inc	dptr
      001989 E0               [24] 5302 	movx	a,@dptr
      00198A FE               [12] 5303 	mov	r6,a
      00198B A3               [24] 5304 	inc	dptr
      00198C E0               [24] 5305 	movx	a,@dptr
      00198D FF               [12] 5306 	mov	r7,a
      00198E C3               [12] 5307 	clr	c
      00198F EC               [12] 5308 	mov	a,r4
      001990 98               [12] 5309 	subb	a,r0
      001991 ED               [12] 5310 	mov	a,r5
      001992 99               [12] 5311 	subb	a,r1
      001993 EE               [12] 5312 	mov	a,r6
      001994 9A               [12] 5313 	subb	a,r2
      001995 EF               [12] 5314 	mov	a,r7
      001996 9B               [12] 5315 	subb	a,r3
      001997 D0 03            [24] 5316 	pop	ar3
      001999 40 17            [24] 5317 	jc	00130$
                                   5318 ;	ff15\source\ff.c:1591: ncl = 2;
      00199B 90r00r59         [24] 5319 	mov	dptr,#_create_chain_ncl_65536_121
      00199E 74 02            [12] 5320 	mov	a,#0x02
      0019A0 F0               [24] 5321 	movx	@dptr,a
      0019A1 E4               [12] 5322 	clr	a
      0019A2 A3               [24] 5323 	inc	dptr
      0019A3 F0               [24] 5324 	movx	@dptr,a
      0019A4 A3               [24] 5325 	inc	dptr
      0019A5 F0               [24] 5326 	movx	@dptr,a
      0019A6 A3               [24] 5327 	inc	dptr
      0019A7 F0               [24] 5328 	movx	@dptr,a
                                   5329 ;	ff15\source\ff.c:1592: if (ncl > scl) return 0;	/* No free cluster found? */
      0019A8 EB               [12] 5330 	mov	a,r3
      0019A9 60 07            [24] 5331 	jz	00130$
      0019AB 90 00 00         [24] 5332 	mov	dptr,#(0x00&0x00ff)
      0019AE E4               [12] 5333 	clr	a
      0019AF F5 F0            [12] 5334 	mov	b,a
      0019B1 22               [24] 5335 	ret
      0019B2                       5336 00130$:
                                   5337 ;	ff15\source\ff.c:1594: cs = get_fat(obj, ncl);			/* Get the cluster status */
      0019B2 90r00r56         [24] 5338 	mov	dptr,#_create_chain_obj_65536_120
      0019B5 E0               [24] 5339 	movx	a,@dptr
      0019B6 FD               [12] 5340 	mov	r5,a
      0019B7 A3               [24] 5341 	inc	dptr
      0019B8 E0               [24] 5342 	movx	a,@dptr
      0019B9 FE               [12] 5343 	mov	r6,a
      0019BA A3               [24] 5344 	inc	dptr
      0019BB E0               [24] 5345 	movx	a,@dptr
      0019BC FF               [12] 5346 	mov	r7,a
      0019BD 90r00r59         [24] 5347 	mov	dptr,#_create_chain_ncl_65536_121
      0019C0 E0               [24] 5348 	movx	a,@dptr
      0019C1 F8               [12] 5349 	mov	r0,a
      0019C2 A3               [24] 5350 	inc	dptr
      0019C3 E0               [24] 5351 	movx	a,@dptr
      0019C4 F9               [12] 5352 	mov	r1,a
      0019C5 A3               [24] 5353 	inc	dptr
      0019C6 E0               [24] 5354 	movx	a,@dptr
      0019C7 FA               [12] 5355 	mov	r2,a
      0019C8 A3               [24] 5356 	inc	dptr
      0019C9 E0               [24] 5357 	movx	a,@dptr
      0019CA FC               [12] 5358 	mov	r4,a
      0019CB 90r00r30         [24] 5359 	mov	dptr,#_get_fat_PARM_2
      0019CE E8               [12] 5360 	mov	a,r0
      0019CF F0               [24] 5361 	movx	@dptr,a
      0019D0 E9               [12] 5362 	mov	a,r1
      0019D1 A3               [24] 5363 	inc	dptr
      0019D2 F0               [24] 5364 	movx	@dptr,a
      0019D3 EA               [12] 5365 	mov	a,r2
      0019D4 A3               [24] 5366 	inc	dptr
      0019D5 F0               [24] 5367 	movx	@dptr,a
      0019D6 EC               [12] 5368 	mov	a,r4
      0019D7 A3               [24] 5369 	inc	dptr
      0019D8 F0               [24] 5370 	movx	@dptr,a
      0019D9 8D 82            [24] 5371 	mov	dpl,r5
      0019DB 8E 83            [24] 5372 	mov	dph,r6
      0019DD 8F F0            [24] 5373 	mov	b,r7
      0019DF C0 04            [24] 5374 	push	ar4
      0019E1 C0 03            [24] 5375 	push	ar3
      0019E3 C0 02            [24] 5376 	push	ar2
      0019E5 C0 01            [24] 5377 	push	ar1
      0019E7 C0 00            [24] 5378 	push	ar0
      0019E9 12r09rFE         [24] 5379 	lcall	_get_fat
      0019EC 85 82*5F         [24] 5380 	mov	_create_chain_sloc4_1_0,dpl
      0019EF 85 83*60         [24] 5381 	mov	(_create_chain_sloc4_1_0 + 1),dph
      0019F2 85 F0*61         [24] 5382 	mov	(_create_chain_sloc4_1_0 + 2),b
      0019F5 F5*62            [12] 5383 	mov	(_create_chain_sloc4_1_0 + 3),a
      0019F7 D0 00            [24] 5384 	pop	ar0
      0019F9 D0 01            [24] 5385 	pop	ar1
      0019FB D0 02            [24] 5386 	pop	ar2
      0019FD D0 03            [24] 5387 	pop	ar3
      0019FF D0 04            [24] 5388 	pop	ar4
                                   5389 ;	ff15\source\ff.c:1595: if (cs == 0) break;				/* Found a free cluster? */
      001A01 E5*5F            [12] 5390 	mov	a,_create_chain_sloc4_1_0
      001A03 45*60            [12] 5391 	orl	a,(_create_chain_sloc4_1_0 + 1)
      001A05 45*61            [12] 5392 	orl	a,(_create_chain_sloc4_1_0 + 2)
      001A07 45*62            [12] 5393 	orl	a,(_create_chain_sloc4_1_0 + 3)
      001A09 60 44            [24] 5394 	jz	00140$
                                   5395 ;	ff15\source\ff.c:1596: if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
      001A0B 74 01            [12] 5396 	mov	a,#0x01
      001A0D B5*5F 0C         [24] 5397 	cjne	a,_create_chain_sloc4_1_0,00273$
      001A10 14               [12] 5398 	dec	a
      001A11 B5*60 08         [24] 5399 	cjne	a,(_create_chain_sloc4_1_0 + 1),00273$
      001A14 B5*61 05         [24] 5400 	cjne	a,(_create_chain_sloc4_1_0 + 2),00273$
      001A17 B5*62 02         [24] 5401 	cjne	a,(_create_chain_sloc4_1_0 + 3),00273$
      001A1A 80 0B            [24] 5402 	sjmp	00133$
      001A1C                       5403 00273$:
      001A1C E5*5F            [12] 5404 	mov	a,_create_chain_sloc4_1_0
      001A1E 55*60            [12] 5405 	anl	a,(_create_chain_sloc4_1_0 + 1)
      001A20 55*61            [12] 5406 	anl	a,(_create_chain_sloc4_1_0 + 2)
      001A22 55*62            [12] 5407 	anl	a,(_create_chain_sloc4_1_0 + 3)
      001A24 B4 FF 0C         [24] 5408 	cjne	a,#0xFF,00134$
      001A27                       5409 00133$:
      001A27 85*5F 82         [24] 5410 	mov	dpl,_create_chain_sloc4_1_0
      001A2A 85*60 83         [24] 5411 	mov	dph,(_create_chain_sloc4_1_0 + 1)
      001A2D 85*61 F0         [24] 5412 	mov	b,(_create_chain_sloc4_1_0 + 2)
      001A30 E5*62            [12] 5413 	mov	a,(_create_chain_sloc4_1_0 + 3)
      001A32 22               [24] 5414 	ret
      001A33                       5415 00134$:
                                   5416 ;	ff15\source\ff.c:1597: if (ncl == scl) return 0;		/* No free cluster found? */
      001A33 E8               [12] 5417 	mov	a,r0
      001A34 B5*5B 0E         [24] 5418 	cjne	a,_create_chain_sloc3_1_0,00276$
      001A37 E9               [12] 5419 	mov	a,r1
      001A38 B5*5C 0A         [24] 5420 	cjne	a,(_create_chain_sloc3_1_0 + 1),00276$
      001A3B EA               [12] 5421 	mov	a,r2
      001A3C B5*5D 06         [24] 5422 	cjne	a,(_create_chain_sloc3_1_0 + 2),00276$
      001A3F EC               [12] 5423 	mov	a,r4
      001A40 B5*5E 02         [24] 5424 	cjne	a,(_create_chain_sloc3_1_0 + 3),00276$
      001A43 80 03            [24] 5425 	sjmp	00277$
      001A45                       5426 00276$:
      001A45 02r19r4C         [24] 5427 	ljmp	00149$
      001A48                       5428 00277$:
      001A48 90 00 00         [24] 5429 	mov	dptr,#(0x00&0x00ff)
      001A4B E4               [12] 5430 	clr	a
      001A4C F5 F0            [12] 5431 	mov	b,a
      001A4E 22               [24] 5432 	ret
      001A4F                       5433 00140$:
                                   5434 ;	ff15\source\ff.c:1600: res = put_fat(fs, ncl, 0xFFFFFFFF);		/* Mark the new cluster 'EOC' */
      001A4F 90r00r59         [24] 5435 	mov	dptr,#_create_chain_ncl_65536_121
      001A52 E0               [24] 5436 	movx	a,@dptr
      001A53 FC               [12] 5437 	mov	r4,a
      001A54 A3               [24] 5438 	inc	dptr
      001A55 E0               [24] 5439 	movx	a,@dptr
      001A56 FD               [12] 5440 	mov	r5,a
      001A57 A3               [24] 5441 	inc	dptr
      001A58 E0               [24] 5442 	movx	a,@dptr
      001A59 FE               [12] 5443 	mov	r6,a
      001A5A A3               [24] 5444 	inc	dptr
      001A5B E0               [24] 5445 	movx	a,@dptr
      001A5C FF               [12] 5446 	mov	r7,a
      001A5D 90r00r3B         [24] 5447 	mov	dptr,#_put_fat_PARM_2
      001A60 EC               [12] 5448 	mov	a,r4
      001A61 F0               [24] 5449 	movx	@dptr,a
      001A62 ED               [12] 5450 	mov	a,r5
      001A63 A3               [24] 5451 	inc	dptr
      001A64 F0               [24] 5452 	movx	@dptr,a
      001A65 EE               [12] 5453 	mov	a,r6
      001A66 A3               [24] 5454 	inc	dptr
      001A67 F0               [24] 5455 	movx	@dptr,a
      001A68 EF               [12] 5456 	mov	a,r7
      001A69 A3               [24] 5457 	inc	dptr
      001A6A F0               [24] 5458 	movx	@dptr,a
      001A6B 90r00r3F         [24] 5459 	mov	dptr,#_put_fat_PARM_3
      001A6E 74 FF            [12] 5460 	mov	a,#0xff
      001A70 F0               [24] 5461 	movx	@dptr,a
      001A71 A3               [24] 5462 	inc	dptr
      001A72 F0               [24] 5463 	movx	@dptr,a
      001A73 A3               [24] 5464 	inc	dptr
      001A74 F0               [24] 5465 	movx	@dptr,a
      001A75 A3               [24] 5466 	inc	dptr
      001A76 F0               [24] 5467 	movx	@dptr,a
      001A77 85*54 82         [24] 5468 	mov	dpl,_create_chain_sloc1_1_0
      001A7A 85*55 83         [24] 5469 	mov	dph,(_create_chain_sloc1_1_0 + 1)
      001A7D 85*56 F0         [24] 5470 	mov	b,(_create_chain_sloc1_1_0 + 2)
      001A80 C0 07            [24] 5471 	push	ar7
      001A82 C0 06            [24] 5472 	push	ar6
      001A84 C0 05            [24] 5473 	push	ar5
      001A86 C0 04            [24] 5474 	push	ar4
      001A88 12r0DrB2         [24] 5475 	lcall	_put_fat
      001A8B AB 82            [24] 5476 	mov	r3,dpl
      001A8D D0 04            [24] 5477 	pop	ar4
      001A8F D0 05            [24] 5478 	pop	ar5
      001A91 D0 06            [24] 5479 	pop	ar6
      001A93 D0 07            [24] 5480 	pop	ar7
      001A95 90r00r61         [24] 5481 	mov	dptr,#_create_chain_res_65536_121
      001A98 EB               [12] 5482 	mov	a,r3
      001A99 F0               [24] 5483 	movx	@dptr,a
                                   5484 ;	ff15\source\ff.c:1601: if (res == FR_OK && clst != 0) {
      001A9A EB               [12] 5485 	mov	a,r3
      001A9B 70 3C            [24] 5486 	jnz	00142$
      001A9D E5*50            [12] 5487 	mov	a,_create_chain_sloc0_1_0
      001A9F 45*51            [12] 5488 	orl	a,(_create_chain_sloc0_1_0 + 1)
      001AA1 45*52            [12] 5489 	orl	a,(_create_chain_sloc0_1_0 + 2)
      001AA3 45*53            [12] 5490 	orl	a,(_create_chain_sloc0_1_0 + 3)
      001AA5 60 32            [24] 5491 	jz	00142$
                                   5492 ;	ff15\source\ff.c:1602: res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
      001AA7 90r00r3B         [24] 5493 	mov	dptr,#_put_fat_PARM_2
      001AAA E5*50            [12] 5494 	mov	a,_create_chain_sloc0_1_0
      001AAC F0               [24] 5495 	movx	@dptr,a
      001AAD E5*51            [12] 5496 	mov	a,(_create_chain_sloc0_1_0 + 1)
      001AAF A3               [24] 5497 	inc	dptr
      001AB0 F0               [24] 5498 	movx	@dptr,a
      001AB1 E5*52            [12] 5499 	mov	a,(_create_chain_sloc0_1_0 + 2)
      001AB3 A3               [24] 5500 	inc	dptr
      001AB4 F0               [24] 5501 	movx	@dptr,a
      001AB5 E5*53            [12] 5502 	mov	a,(_create_chain_sloc0_1_0 + 3)
      001AB7 A3               [24] 5503 	inc	dptr
      001AB8 F0               [24] 5504 	movx	@dptr,a
      001AB9 90r00r3F         [24] 5505 	mov	dptr,#_put_fat_PARM_3
      001ABC EC               [12] 5506 	mov	a,r4
      001ABD F0               [24] 5507 	movx	@dptr,a
      001ABE ED               [12] 5508 	mov	a,r5
      001ABF A3               [24] 5509 	inc	dptr
      001AC0 F0               [24] 5510 	movx	@dptr,a
      001AC1 EE               [12] 5511 	mov	a,r6
      001AC2 A3               [24] 5512 	inc	dptr
      001AC3 F0               [24] 5513 	movx	@dptr,a
      001AC4 EF               [12] 5514 	mov	a,r7
      001AC5 A3               [24] 5515 	inc	dptr
      001AC6 F0               [24] 5516 	movx	@dptr,a
      001AC7 85*54 82         [24] 5517 	mov	dpl,_create_chain_sloc1_1_0
      001ACA 85*55 83         [24] 5518 	mov	dph,(_create_chain_sloc1_1_0 + 1)
      001ACD 85*56 F0         [24] 5519 	mov	b,(_create_chain_sloc1_1_0 + 2)
      001AD0 12r0DrB2         [24] 5520 	lcall	_put_fat
      001AD3 E5 82            [12] 5521 	mov	a,dpl
      001AD5 90r00r61         [24] 5522 	mov	dptr,#_create_chain_res_65536_121
      001AD8 F0               [24] 5523 	movx	@dptr,a
      001AD9                       5524 00142$:
                                   5525 ;	ff15\source\ff.c:1606: if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
      001AD9 90r00r61         [24] 5526 	mov	dptr,#_create_chain_res_65536_121
      001ADC E0               [24] 5527 	movx	a,@dptr
      001ADD FF               [12] 5528 	mov	r7,a
      001ADE E0               [24] 5529 	movx	a,@dptr
      001ADF 60 03            [24] 5530 	jz	00280$
      001AE1 02r1BrDB         [24] 5531 	ljmp	00147$
      001AE4                       5532 00280$:
                                   5533 ;	ff15\source\ff.c:1607: fs->last_clst = ncl;
      001AE4 74 0C            [12] 5534 	mov	a,#0x0c
      001AE6 25*54            [12] 5535 	add	a,_create_chain_sloc1_1_0
      001AE8 FC               [12] 5536 	mov	r4,a
      001AE9 E4               [12] 5537 	clr	a
      001AEA 35*55            [12] 5538 	addc	a,(_create_chain_sloc1_1_0 + 1)
      001AEC FD               [12] 5539 	mov	r5,a
      001AED AE*56            [24] 5540 	mov	r6,(_create_chain_sloc1_1_0 + 2)
      001AEF 90r00r59         [24] 5541 	mov	dptr,#_create_chain_ncl_65536_121
      001AF2 E0               [24] 5542 	movx	a,@dptr
      001AF3 F8               [12] 5543 	mov	r0,a
      001AF4 A3               [24] 5544 	inc	dptr
      001AF5 E0               [24] 5545 	movx	a,@dptr
      001AF6 F9               [12] 5546 	mov	r1,a
      001AF7 A3               [24] 5547 	inc	dptr
      001AF8 E0               [24] 5548 	movx	a,@dptr
      001AF9 FA               [12] 5549 	mov	r2,a
      001AFA A3               [24] 5550 	inc	dptr
      001AFB E0               [24] 5551 	movx	a,@dptr
      001AFC FB               [12] 5552 	mov	r3,a
      001AFD 8C 82            [24] 5553 	mov	dpl,r4
      001AFF 8D 83            [24] 5554 	mov	dph,r5
      001B01 8E F0            [24] 5555 	mov	b,r6
      001B03 E8               [12] 5556 	mov	a,r0
      001B04 12r00r00         [24] 5557 	lcall	__gptrput
      001B07 A3               [24] 5558 	inc	dptr
      001B08 E9               [12] 5559 	mov	a,r1
      001B09 12r00r00         [24] 5560 	lcall	__gptrput
      001B0C A3               [24] 5561 	inc	dptr
      001B0D EA               [12] 5562 	mov	a,r2
      001B0E 12r00r00         [24] 5563 	lcall	__gptrput
      001B11 A3               [24] 5564 	inc	dptr
      001B12 EB               [12] 5565 	mov	a,r3
      001B13 12r00r00         [24] 5566 	lcall	__gptrput
                                   5567 ;	ff15\source\ff.c:1608: if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
      001B16 74 10            [12] 5568 	mov	a,#0x10
      001B18 25*54            [12] 5569 	add	a,_create_chain_sloc1_1_0
      001B1A F5*5F            [12] 5570 	mov	_create_chain_sloc4_1_0,a
      001B1C E4               [12] 5571 	clr	a
      001B1D 35*55            [12] 5572 	addc	a,(_create_chain_sloc1_1_0 + 1)
      001B1F F5*60            [12] 5573 	mov	(_create_chain_sloc4_1_0 + 1),a
      001B21 85*56*61         [24] 5574 	mov	(_create_chain_sloc4_1_0 + 2),(_create_chain_sloc1_1_0 + 2)
      001B24 85*5F 82         [24] 5575 	mov	dpl,_create_chain_sloc4_1_0
      001B27 85*60 83         [24] 5576 	mov	dph,(_create_chain_sloc4_1_0 + 1)
      001B2A 85*61 F0         [24] 5577 	mov	b,(_create_chain_sloc4_1_0 + 2)
      001B2D 12r00r00         [24] 5578 	lcall	__gptrget
      001B30 F5*5B            [12] 5579 	mov	_create_chain_sloc3_1_0,a
      001B32 A3               [24] 5580 	inc	dptr
      001B33 12r00r00         [24] 5581 	lcall	__gptrget
      001B36 F5*5C            [12] 5582 	mov	(_create_chain_sloc3_1_0 + 1),a
      001B38 A3               [24] 5583 	inc	dptr
      001B39 12r00r00         [24] 5584 	lcall	__gptrget
      001B3C F5*5D            [12] 5585 	mov	(_create_chain_sloc3_1_0 + 2),a
      001B3E A3               [24] 5586 	inc	dptr
      001B3F 12r00r00         [24] 5587 	lcall	__gptrget
      001B42 F5*5E            [12] 5588 	mov	(_create_chain_sloc3_1_0 + 3),a
      001B44 74 14            [12] 5589 	mov	a,#0x14
      001B46 25*54            [12] 5590 	add	a,_create_chain_sloc1_1_0
      001B48 FE               [12] 5591 	mov	r6,a
      001B49 E4               [12] 5592 	clr	a
      001B4A 35*55            [12] 5593 	addc	a,(_create_chain_sloc1_1_0 + 1)
      001B4C FC               [12] 5594 	mov	r4,a
      001B4D AD*56            [24] 5595 	mov	r5,(_create_chain_sloc1_1_0 + 2)
      001B4F 8E 82            [24] 5596 	mov	dpl,r6
      001B51 8C 83            [24] 5597 	mov	dph,r4
      001B53 8D F0            [24] 5598 	mov	b,r5
      001B55 12r00r00         [24] 5599 	lcall	__gptrget
      001B58 FB               [12] 5600 	mov	r3,a
      001B59 A3               [24] 5601 	inc	dptr
      001B5A 12r00r00         [24] 5602 	lcall	__gptrget
      001B5D FC               [12] 5603 	mov	r4,a
      001B5E A3               [24] 5604 	inc	dptr
      001B5F 12r00r00         [24] 5605 	lcall	__gptrget
      001B62 FD               [12] 5606 	mov	r5,a
      001B63 A3               [24] 5607 	inc	dptr
      001B64 12r00r00         [24] 5608 	lcall	__gptrget
      001B67 FE               [12] 5609 	mov	r6,a
      001B68 EB               [12] 5610 	mov	a,r3
      001B69 24 FE            [12] 5611 	add	a,#0xfe
      001B6B FB               [12] 5612 	mov	r3,a
      001B6C EC               [12] 5613 	mov	a,r4
      001B6D 34 FF            [12] 5614 	addc	a,#0xff
      001B6F FC               [12] 5615 	mov	r4,a
      001B70 ED               [12] 5616 	mov	a,r5
      001B71 34 FF            [12] 5617 	addc	a,#0xff
      001B73 FD               [12] 5618 	mov	r5,a
      001B74 EE               [12] 5619 	mov	a,r6
      001B75 34 FF            [12] 5620 	addc	a,#0xff
      001B77 FE               [12] 5621 	mov	r6,a
      001B78 C3               [12] 5622 	clr	c
      001B79 EB               [12] 5623 	mov	a,r3
      001B7A 95*5B            [12] 5624 	subb	a,_create_chain_sloc3_1_0
      001B7C EC               [12] 5625 	mov	a,r4
      001B7D 95*5C            [12] 5626 	subb	a,(_create_chain_sloc3_1_0 + 1)
      001B7F ED               [12] 5627 	mov	a,r5
      001B80 95*5D            [12] 5628 	subb	a,(_create_chain_sloc3_1_0 + 2)
      001B82 EE               [12] 5629 	mov	a,r6
      001B83 95*5E            [12] 5630 	subb	a,(_create_chain_sloc3_1_0 + 3)
      001B85 40 30            [24] 5631 	jc	00145$
      001B87 E5*5B            [12] 5632 	mov	a,_create_chain_sloc3_1_0
      001B89 24 FF            [12] 5633 	add	a,#0xff
      001B8B FC               [12] 5634 	mov	r4,a
      001B8C E5*5C            [12] 5635 	mov	a,(_create_chain_sloc3_1_0 + 1)
      001B8E 34 FF            [12] 5636 	addc	a,#0xff
      001B90 FD               [12] 5637 	mov	r5,a
      001B91 E5*5D            [12] 5638 	mov	a,(_create_chain_sloc3_1_0 + 2)
      001B93 34 FF            [12] 5639 	addc	a,#0xff
      001B95 FB               [12] 5640 	mov	r3,a
      001B96 E5*5E            [12] 5641 	mov	a,(_create_chain_sloc3_1_0 + 3)
      001B98 34 FF            [12] 5642 	addc	a,#0xff
      001B9A FE               [12] 5643 	mov	r6,a
      001B9B 85*5F 82         [24] 5644 	mov	dpl,_create_chain_sloc4_1_0
      001B9E 85*60 83         [24] 5645 	mov	dph,(_create_chain_sloc4_1_0 + 1)
      001BA1 85*61 F0         [24] 5646 	mov	b,(_create_chain_sloc4_1_0 + 2)
      001BA4 EC               [12] 5647 	mov	a,r4
      001BA5 12r00r00         [24] 5648 	lcall	__gptrput
      001BA8 A3               [24] 5649 	inc	dptr
      001BA9 ED               [12] 5650 	mov	a,r5
      001BAA 12r00r00         [24] 5651 	lcall	__gptrput
      001BAD A3               [24] 5652 	inc	dptr
      001BAE EB               [12] 5653 	mov	a,r3
      001BAF 12r00r00         [24] 5654 	lcall	__gptrput
      001BB2 A3               [24] 5655 	inc	dptr
      001BB3 EE               [12] 5656 	mov	a,r6
      001BB4 12r00r00         [24] 5657 	lcall	__gptrput
      001BB7                       5658 00145$:
                                   5659 ;	ff15\source\ff.c:1609: fs->fsi_flag |= 1;
      001BB7 74 05            [12] 5660 	mov	a,#0x05
      001BB9 25*54            [12] 5661 	add	a,_create_chain_sloc1_1_0
      001BBB FC               [12] 5662 	mov	r4,a
      001BBC E4               [12] 5663 	clr	a
      001BBD 35*55            [12] 5664 	addc	a,(_create_chain_sloc1_1_0 + 1)
      001BBF FD               [12] 5665 	mov	r5,a
      001BC0 AE*56            [24] 5666 	mov	r6,(_create_chain_sloc1_1_0 + 2)
      001BC2 8C 82            [24] 5667 	mov	dpl,r4
      001BC4 8D 83            [24] 5668 	mov	dph,r5
      001BC6 8E F0            [24] 5669 	mov	b,r6
      001BC8 12r00r00         [24] 5670 	lcall	__gptrget
      001BCB FB               [12] 5671 	mov	r3,a
      001BCC 43 03 01         [24] 5672 	orl	ar3,#0x01
      001BCF 8C 82            [24] 5673 	mov	dpl,r4
      001BD1 8D 83            [24] 5674 	mov	dph,r5
      001BD3 8E F0            [24] 5675 	mov	b,r6
      001BD5 EB               [12] 5676 	mov	a,r3
      001BD6 12r00r00         [24] 5677 	lcall	__gptrput
      001BD9 80 23            [24] 5678 	sjmp	00148$
      001BDB                       5679 00147$:
                                   5680 ;	ff15\source\ff.c:1611: ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
      001BDB BF 01 0A         [24] 5681 	cjne	r7,#0x01,00153$
      001BDE 7C FF            [12] 5682 	mov	r4,#0xff
      001BE0 7D FF            [12] 5683 	mov	r5,#0xff
      001BE2 7E FF            [12] 5684 	mov	r6,#0xff
      001BE4 7F FF            [12] 5685 	mov	r7,#0xff
      001BE6 80 08            [24] 5686 	sjmp	00154$
      001BE8                       5687 00153$:
      001BE8 7C 01            [12] 5688 	mov	r4,#0x01
      001BEA 7D 00            [12] 5689 	mov	r5,#0x00
      001BEC 7E 00            [12] 5690 	mov	r6,#0x00
      001BEE 7F 00            [12] 5691 	mov	r7,#0x00
      001BF0                       5692 00154$:
      001BF0 90r00r59         [24] 5693 	mov	dptr,#_create_chain_ncl_65536_121
      001BF3 EC               [12] 5694 	mov	a,r4
      001BF4 F0               [24] 5695 	movx	@dptr,a
      001BF5 ED               [12] 5696 	mov	a,r5
      001BF6 A3               [24] 5697 	inc	dptr
      001BF7 F0               [24] 5698 	movx	@dptr,a
      001BF8 EE               [12] 5699 	mov	a,r6
      001BF9 A3               [24] 5700 	inc	dptr
      001BFA F0               [24] 5701 	movx	@dptr,a
      001BFB EF               [12] 5702 	mov	a,r7
      001BFC A3               [24] 5703 	inc	dptr
      001BFD F0               [24] 5704 	movx	@dptr,a
      001BFE                       5705 00148$:
                                   5706 ;	ff15\source\ff.c:1614: return ncl;		/* Return new cluster number or error status */
      001BFE 90r00r59         [24] 5707 	mov	dptr,#_create_chain_ncl_65536_121
      001C01 E0               [24] 5708 	movx	a,@dptr
      001C02 FC               [12] 5709 	mov	r4,a
      001C03 A3               [24] 5710 	inc	dptr
      001C04 E0               [24] 5711 	movx	a,@dptr
      001C05 FD               [12] 5712 	mov	r5,a
      001C06 A3               [24] 5713 	inc	dptr
      001C07 E0               [24] 5714 	movx	a,@dptr
      001C08 FE               [12] 5715 	mov	r6,a
      001C09 A3               [24] 5716 	inc	dptr
      001C0A E0               [24] 5717 	movx	a,@dptr
      001C0B 8C 82            [24] 5718 	mov	dpl,r4
      001C0D 8D 83            [24] 5719 	mov	dph,r5
      001C0F 8E F0            [24] 5720 	mov	b,r6
                                   5721 ;	ff15\source\ff.c:1615: }
      001C11 22               [24] 5722 	ret
                                   5723 ;------------------------------------------------------------
                                   5724 ;Allocation info for local variables in function 'dir_clear'
                                   5725 ;------------------------------------------------------------
                                   5726 ;sloc0                     Allocated with name '_dir_clear_sloc0_1_0'
                                   5727 ;sloc1                     Allocated with name '_dir_clear_sloc1_1_0'
                                   5728 ;sloc2                     Allocated with name '_dir_clear_sloc2_1_0'
                                   5729 ;sloc3                     Allocated with name '_dir_clear_sloc3_1_0'
                                   5730 ;sloc4                     Allocated with name '_dir_clear_sloc4_1_0'
                                   5731 ;clst                      Allocated with name '_dir_clear_PARM_2'
                                   5732 ;fs                        Allocated with name '_dir_clear_fs_65536_134'
                                   5733 ;sect                      Allocated with name '_dir_clear_sect_65536_135'
                                   5734 ;n                         Allocated with name '_dir_clear_n_65536_135'
                                   5735 ;szb                       Allocated with name '_dir_clear_szb_65536_135'
                                   5736 ;ibuf                      Allocated with name '_dir_clear_ibuf_65536_135'
                                   5737 ;------------------------------------------------------------
                                   5738 ;	ff15\source\ff.c:1658: static FRESULT dir_clear (	/* Returns FR_OK or FR_DISK_ERR */
                                   5739 ;	-----------------------------------------
                                   5740 ;	 function dir_clear
                                   5741 ;	-----------------------------------------
      001C12                       5742 _dir_clear:
      001C12 AF F0            [24] 5743 	mov	r7,b
      001C14 AE 83            [24] 5744 	mov	r6,dph
      001C16 E5 82            [12] 5745 	mov	a,dpl
      001C18 90r00r66         [24] 5746 	mov	dptr,#_dir_clear_fs_65536_134
      001C1B F0               [24] 5747 	movx	@dptr,a
      001C1C EE               [12] 5748 	mov	a,r6
      001C1D A3               [24] 5749 	inc	dptr
      001C1E F0               [24] 5750 	movx	@dptr,a
      001C1F EF               [12] 5751 	mov	a,r7
      001C20 A3               [24] 5752 	inc	dptr
      001C21 F0               [24] 5753 	movx	@dptr,a
                                   5754 ;	ff15\source\ff.c:1668: if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
      001C22 90r00r66         [24] 5755 	mov	dptr,#_dir_clear_fs_65536_134
      001C25 E0               [24] 5756 	movx	a,@dptr
      001C26 FD               [12] 5757 	mov	r5,a
      001C27 A3               [24] 5758 	inc	dptr
      001C28 E0               [24] 5759 	movx	a,@dptr
      001C29 FE               [12] 5760 	mov	r6,a
      001C2A A3               [24] 5761 	inc	dptr
      001C2B E0               [24] 5762 	movx	a,@dptr
      001C2C FF               [12] 5763 	mov	r7,a
      001C2D 8D 82            [24] 5764 	mov	dpl,r5
      001C2F 8E 83            [24] 5765 	mov	dph,r6
      001C31 8F F0            [24] 5766 	mov	b,r7
      001C33 12r03r2B         [24] 5767 	lcall	_sync_window
      001C36 E5 82            [12] 5768 	mov	a,dpl
      001C38 60 04            [24] 5769 	jz	00102$
      001C3A 75 82 01         [24] 5770 	mov	dpl,#0x01
      001C3D 22               [24] 5771 	ret
      001C3E                       5772 00102$:
                                   5773 ;	ff15\source\ff.c:1669: sect = clst2sect(fs, clst);		/* Top of the cluster */
      001C3E 90r00r66         [24] 5774 	mov	dptr,#_dir_clear_fs_65536_134
      001C41 E0               [24] 5775 	movx	a,@dptr
      001C42 FD               [12] 5776 	mov	r5,a
      001C43 A3               [24] 5777 	inc	dptr
      001C44 E0               [24] 5778 	movx	a,@dptr
      001C45 FE               [12] 5779 	mov	r6,a
      001C46 A3               [24] 5780 	inc	dptr
      001C47 E0               [24] 5781 	movx	a,@dptr
      001C48 FF               [12] 5782 	mov	r7,a
      001C49 90r00r62         [24] 5783 	mov	dptr,#_dir_clear_PARM_2
      001C4C E0               [24] 5784 	movx	a,@dptr
      001C4D F9               [12] 5785 	mov	r1,a
      001C4E A3               [24] 5786 	inc	dptr
      001C4F E0               [24] 5787 	movx	a,@dptr
      001C50 FA               [12] 5788 	mov	r2,a
      001C51 A3               [24] 5789 	inc	dptr
      001C52 E0               [24] 5790 	movx	a,@dptr
      001C53 FB               [12] 5791 	mov	r3,a
      001C54 A3               [24] 5792 	inc	dptr
      001C55 E0               [24] 5793 	movx	a,@dptr
      001C56 FC               [12] 5794 	mov	r4,a
      001C57 90r00r29         [24] 5795 	mov	dptr,#_clst2sect_PARM_2
      001C5A E9               [12] 5796 	mov	a,r1
      001C5B F0               [24] 5797 	movx	@dptr,a
      001C5C EA               [12] 5798 	mov	a,r2
      001C5D A3               [24] 5799 	inc	dptr
      001C5E F0               [24] 5800 	movx	@dptr,a
      001C5F EB               [12] 5801 	mov	a,r3
      001C60 A3               [24] 5802 	inc	dptr
      001C61 F0               [24] 5803 	movx	@dptr,a
      001C62 EC               [12] 5804 	mov	a,r4
      001C63 A3               [24] 5805 	inc	dptr
      001C64 F0               [24] 5806 	movx	@dptr,a
      001C65 8D 82            [24] 5807 	mov	dpl,r5
      001C67 8E 83            [24] 5808 	mov	dph,r6
      001C69 8F F0            [24] 5809 	mov	b,r7
      001C6B 12r08rDC         [24] 5810 	lcall	_clst2sect
      001C6E AC 82            [24] 5811 	mov	r4,dpl
      001C70 AD 83            [24] 5812 	mov	r5,dph
      001C72 AE F0            [24] 5813 	mov	r6,b
      001C74 FF               [12] 5814 	mov	r7,a
                                   5815 ;	ff15\source\ff.c:1670: fs->winsect = sect;				/* Set window to top of the cluster */
      001C75 90r00r66         [24] 5816 	mov	dptr,#_dir_clear_fs_65536_134
      001C78 E0               [24] 5817 	movx	a,@dptr
      001C79 F5*63            [12] 5818 	mov	_dir_clear_sloc0_1_0,a
      001C7B A3               [24] 5819 	inc	dptr
      001C7C E0               [24] 5820 	movx	a,@dptr
      001C7D F5*64            [12] 5821 	mov	(_dir_clear_sloc0_1_0 + 1),a
      001C7F A3               [24] 5822 	inc	dptr
      001C80 E0               [24] 5823 	movx	a,@dptr
      001C81 F5*65            [12] 5824 	mov	(_dir_clear_sloc0_1_0 + 2),a
      001C83 74 2C            [12] 5825 	mov	a,#0x2c
      001C85 25*63            [12] 5826 	add	a,_dir_clear_sloc0_1_0
      001C87 F8               [12] 5827 	mov	r0,a
      001C88 E4               [12] 5828 	clr	a
      001C89 35*64            [12] 5829 	addc	a,(_dir_clear_sloc0_1_0 + 1)
      001C8B FA               [12] 5830 	mov	r2,a
      001C8C AB*65            [24] 5831 	mov	r3,(_dir_clear_sloc0_1_0 + 2)
      001C8E 88 82            [24] 5832 	mov	dpl,r0
      001C90 8A 83            [24] 5833 	mov	dph,r2
      001C92 8B F0            [24] 5834 	mov	b,r3
      001C94 EC               [12] 5835 	mov	a,r4
      001C95 12r00r00         [24] 5836 	lcall	__gptrput
      001C98 A3               [24] 5837 	inc	dptr
      001C99 ED               [12] 5838 	mov	a,r5
      001C9A 12r00r00         [24] 5839 	lcall	__gptrput
      001C9D A3               [24] 5840 	inc	dptr
      001C9E EE               [12] 5841 	mov	a,r6
      001C9F 12r00r00         [24] 5842 	lcall	__gptrput
      001CA2 A3               [24] 5843 	inc	dptr
      001CA3 EF               [12] 5844 	mov	a,r7
      001CA4 12r00r00         [24] 5845 	lcall	__gptrput
                                   5846 ;	ff15\source\ff.c:1671: memset(fs->win, 0, sizeof fs->win);	/* Clear window buffer */
      001CA7 74 30            [12] 5847 	mov	a,#0x30
      001CA9 25*63            [12] 5848 	add	a,_dir_clear_sloc0_1_0
      001CAB F5*66            [12] 5849 	mov	_dir_clear_sloc1_1_0,a
      001CAD E4               [12] 5850 	clr	a
      001CAE 35*64            [12] 5851 	addc	a,(_dir_clear_sloc0_1_0 + 1)
      001CB0 F5*67            [12] 5852 	mov	(_dir_clear_sloc1_1_0 + 1),a
      001CB2 85*65*68         [24] 5853 	mov	(_dir_clear_sloc1_1_0 + 2),(_dir_clear_sloc0_1_0 + 2)
      001CB5 A8*66            [24] 5854 	mov	r0,_dir_clear_sloc1_1_0
      001CB7 AA*67            [24] 5855 	mov	r2,(_dir_clear_sloc1_1_0 + 1)
      001CB9 AB*68            [24] 5856 	mov	r3,(_dir_clear_sloc1_1_0 + 2)
      001CBB 90r00r00         [24] 5857 	mov	dptr,#_memset_PARM_2
      001CBE E4               [12] 5858 	clr	a
      001CBF F0               [24] 5859 	movx	@dptr,a
      001CC0 90r00r00         [24] 5860 	mov	dptr,#_memset_PARM_3
      001CC3 F0               [24] 5861 	movx	@dptr,a
      001CC4 74 02            [12] 5862 	mov	a,#0x02
      001CC6 A3               [24] 5863 	inc	dptr
      001CC7 F0               [24] 5864 	movx	@dptr,a
      001CC8 88 82            [24] 5865 	mov	dpl,r0
      001CCA 8A 83            [24] 5866 	mov	dph,r2
      001CCC 8B F0            [24] 5867 	mov	b,r3
      001CCE C0 07            [24] 5868 	push	ar7
      001CD0 C0 06            [24] 5869 	push	ar6
      001CD2 C0 05            [24] 5870 	push	ar5
      001CD4 C0 04            [24] 5871 	push	ar4
      001CD6 12r00r00         [24] 5872 	lcall	_memset
      001CD9 D0 04            [24] 5873 	pop	ar4
      001CDB D0 05            [24] 5874 	pop	ar5
      001CDD D0 06            [24] 5875 	pop	ar6
      001CDF D0 07            [24] 5876 	pop	ar7
                                   5877 ;	ff15\source\ff.c:1684: for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* Fill the cluster with 0 */
      001CE1 85*63*6B         [24] 5878 	mov	_dir_clear_sloc3_1_0,_dir_clear_sloc0_1_0
      001CE4 85*64*6C         [24] 5879 	mov	(_dir_clear_sloc3_1_0 + 1),(_dir_clear_sloc0_1_0 + 1)
      001CE7 85*65*6D         [24] 5880 	mov	(_dir_clear_sloc3_1_0 + 2),(_dir_clear_sloc0_1_0 + 2)
      001CEA 74 0A            [12] 5881 	mov	a,#0x0a
      001CEC 25*63            [12] 5882 	add	a,_dir_clear_sloc0_1_0
      001CEE F5*63            [12] 5883 	mov	_dir_clear_sloc0_1_0,a
      001CF0 E4               [12] 5884 	clr	a
      001CF1 35*64            [12] 5885 	addc	a,(_dir_clear_sloc0_1_0 + 1)
      001CF3 F5*64            [12] 5886 	mov	(_dir_clear_sloc0_1_0 + 1),a
      001CF5 E4               [12] 5887 	clr	a
      001CF6 F5*69            [12] 5888 	mov	_dir_clear_sloc2_1_0,a
      001CF8 F5*6A            [12] 5889 	mov	(_dir_clear_sloc2_1_0 + 1),a
      001CFA                       5890 00106$:
      001CFA 85*63 82         [24] 5891 	mov	dpl,_dir_clear_sloc0_1_0
      001CFD 85*64 83         [24] 5892 	mov	dph,(_dir_clear_sloc0_1_0 + 1)
      001D00 85*65 F0         [24] 5893 	mov	b,(_dir_clear_sloc0_1_0 + 2)
      001D03 12r00r00         [24] 5894 	lcall	__gptrget
      001D06 F8               [12] 5895 	mov	r0,a
      001D07 A3               [24] 5896 	inc	dptr
      001D08 12r00r00         [24] 5897 	lcall	__gptrget
      001D0B FB               [12] 5898 	mov	r3,a
      001D0C A9*69            [24] 5899 	mov	r1,_dir_clear_sloc2_1_0
      001D0E AA*6A            [24] 5900 	mov	r2,(_dir_clear_sloc2_1_0 + 1)
      001D10 C3               [12] 5901 	clr	c
      001D11 E9               [12] 5902 	mov	a,r1
      001D12 98               [12] 5903 	subb	a,r0
      001D13 EA               [12] 5904 	mov	a,r2
      001D14 9B               [12] 5905 	subb	a,r3
      001D15 50 73            [24] 5906 	jnc	00103$
      001D17 74 01            [12] 5907 	mov	a,#0x01
      001D19 25*6B            [12] 5908 	add	a,_dir_clear_sloc3_1_0
      001D1B F8               [12] 5909 	mov	r0,a
      001D1C E4               [12] 5910 	clr	a
      001D1D 35*6C            [12] 5911 	addc	a,(_dir_clear_sloc3_1_0 + 1)
      001D1F FA               [12] 5912 	mov	r2,a
      001D20 AB*6D            [24] 5913 	mov	r3,(_dir_clear_sloc3_1_0 + 2)
      001D22 88 82            [24] 5914 	mov	dpl,r0
      001D24 8A 83            [24] 5915 	mov	dph,r2
      001D26 8B F0            [24] 5916 	mov	b,r3
      001D28 12r00r00         [24] 5917 	lcall	__gptrget
      001D2B F5*6E            [12] 5918 	mov	_dir_clear_sloc4_1_0,a
      001D2D A8*69            [24] 5919 	mov	r0,_dir_clear_sloc2_1_0
      001D2F A9*6A            [24] 5920 	mov	r1,(_dir_clear_sloc2_1_0 + 1)
      001D31 E4               [12] 5921 	clr	a
      001D32 FA               [12] 5922 	mov	r2,a
      001D33 FB               [12] 5923 	mov	r3,a
      001D34 E8               [12] 5924 	mov	a,r0
      001D35 2C               [12] 5925 	add	a,r4
      001D36 F8               [12] 5926 	mov	r0,a
      001D37 E9               [12] 5927 	mov	a,r1
      001D38 3D               [12] 5928 	addc	a,r5
      001D39 F9               [12] 5929 	mov	r1,a
      001D3A EA               [12] 5930 	mov	a,r2
      001D3B 3E               [12] 5931 	addc	a,r6
      001D3C FA               [12] 5932 	mov	r2,a
      001D3D EB               [12] 5933 	mov	a,r3
      001D3E 3F               [12] 5934 	addc	a,r7
      001D3F FB               [12] 5935 	mov	r3,a
      001D40 90r00r00         [24] 5936 	mov	dptr,#_disk_write_PARM_2
      001D43 E5*66            [12] 5937 	mov	a,_dir_clear_sloc1_1_0
      001D45 F0               [24] 5938 	movx	@dptr,a
      001D46 E5*67            [12] 5939 	mov	a,(_dir_clear_sloc1_1_0 + 1)
      001D48 A3               [24] 5940 	inc	dptr
      001D49 F0               [24] 5941 	movx	@dptr,a
      001D4A E5*68            [12] 5942 	mov	a,(_dir_clear_sloc1_1_0 + 2)
      001D4C A3               [24] 5943 	inc	dptr
      001D4D F0               [24] 5944 	movx	@dptr,a
      001D4E 90r00r00         [24] 5945 	mov	dptr,#_disk_write_PARM_3
      001D51 E8               [12] 5946 	mov	a,r0
      001D52 F0               [24] 5947 	movx	@dptr,a
      001D53 E9               [12] 5948 	mov	a,r1
      001D54 A3               [24] 5949 	inc	dptr
      001D55 F0               [24] 5950 	movx	@dptr,a
      001D56 EA               [12] 5951 	mov	a,r2
      001D57 A3               [24] 5952 	inc	dptr
      001D58 F0               [24] 5953 	movx	@dptr,a
      001D59 EB               [12] 5954 	mov	a,r3
      001D5A A3               [24] 5955 	inc	dptr
      001D5B F0               [24] 5956 	movx	@dptr,a
      001D5C 90r00r00         [24] 5957 	mov	dptr,#_disk_write_PARM_4
      001D5F 74 01            [12] 5958 	mov	a,#0x01
      001D61 F0               [24] 5959 	movx	@dptr,a
      001D62 E4               [12] 5960 	clr	a
      001D63 A3               [24] 5961 	inc	dptr
      001D64 F0               [24] 5962 	movx	@dptr,a
      001D65 85*6E 82         [24] 5963 	mov	dpl,_dir_clear_sloc4_1_0
      001D68 C0 07            [24] 5964 	push	ar7
      001D6A C0 06            [24] 5965 	push	ar6
      001D6C C0 05            [24] 5966 	push	ar5
      001D6E C0 04            [24] 5967 	push	ar4
      001D70 12r00r00         [24] 5968 	lcall	_disk_write
      001D73 E5 82            [12] 5969 	mov	a,dpl
      001D75 D0 04            [24] 5970 	pop	ar4
      001D77 D0 05            [24] 5971 	pop	ar5
      001D79 D0 06            [24] 5972 	pop	ar6
      001D7B D0 07            [24] 5973 	pop	ar7
      001D7D 70 0B            [24] 5974 	jnz	00103$
      001D7F 05*69            [12] 5975 	inc	_dir_clear_sloc2_1_0
      001D81 E4               [12] 5976 	clr	a
      001D82 B5*69 02         [24] 5977 	cjne	a,_dir_clear_sloc2_1_0,00136$
      001D85 05*6A            [12] 5978 	inc	(_dir_clear_sloc2_1_0 + 1)
      001D87                       5979 00136$:
      001D87 02r1CrFA         [24] 5980 	ljmp	00106$
      001D8A                       5981 00103$:
                                   5982 ;	ff15\source\ff.c:1686: return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
      001D8A 90r00r66         [24] 5983 	mov	dptr,#_dir_clear_fs_65536_134
      001D8D E0               [24] 5984 	movx	a,@dptr
      001D8E FD               [12] 5985 	mov	r5,a
      001D8F A3               [24] 5986 	inc	dptr
      001D90 E0               [24] 5987 	movx	a,@dptr
      001D91 FE               [12] 5988 	mov	r6,a
      001D92 A3               [24] 5989 	inc	dptr
      001D93 E0               [24] 5990 	movx	a,@dptr
      001D94 FF               [12] 5991 	mov	r7,a
      001D95 74 0A            [12] 5992 	mov	a,#0x0a
      001D97 2D               [12] 5993 	add	a,r5
      001D98 FD               [12] 5994 	mov	r5,a
      001D99 E4               [12] 5995 	clr	a
      001D9A 3E               [12] 5996 	addc	a,r6
      001D9B FE               [12] 5997 	mov	r6,a
      001D9C 8D 82            [24] 5998 	mov	dpl,r5
      001D9E 8E 83            [24] 5999 	mov	dph,r6
      001DA0 8F F0            [24] 6000 	mov	b,r7
      001DA2 12r00r00         [24] 6001 	lcall	__gptrget
      001DA5 FD               [12] 6002 	mov	r5,a
      001DA6 A3               [24] 6003 	inc	dptr
      001DA7 12r00r00         [24] 6004 	lcall	__gptrget
      001DAA FE               [12] 6005 	mov	r6,a
      001DAB AC*69            [24] 6006 	mov	r4,_dir_clear_sloc2_1_0
      001DAD AF*6A            [24] 6007 	mov	r7,(_dir_clear_sloc2_1_0 + 1)
      001DAF EC               [12] 6008 	mov	a,r4
      001DB0 B5 05 0A         [24] 6009 	cjne	a,ar5,00110$
      001DB3 EF               [12] 6010 	mov	a,r7
      001DB4 B5 06 06         [24] 6011 	cjne	a,ar6,00110$
      001DB7 7E 00            [12] 6012 	mov	r6,#0x00
      001DB9 7F 00            [12] 6013 	mov	r7,#0x00
      001DBB 80 04            [24] 6014 	sjmp	00111$
      001DBD                       6015 00110$:
      001DBD 7E 01            [12] 6016 	mov	r6,#0x01
      001DBF 7F 00            [12] 6017 	mov	r7,#0x00
      001DC1                       6018 00111$:
      001DC1 8E 82            [24] 6019 	mov	dpl,r6
                                   6020 ;	ff15\source\ff.c:1687: }
      001DC3 22               [24] 6021 	ret
                                   6022 ;------------------------------------------------------------
                                   6023 ;Allocation info for local variables in function 'dir_sdi'
                                   6024 ;------------------------------------------------------------
                                   6025 ;sloc0                     Allocated with name '_dir_sdi_sloc0_1_0'
                                   6026 ;sloc1                     Allocated with name '_dir_sdi_sloc1_1_0'
                                   6027 ;sloc2                     Allocated with name '_dir_sdi_sloc2_1_0'
                                   6028 ;sloc3                     Allocated with name '_dir_sdi_sloc3_1_0'
                                   6029 ;ofs                       Allocated with name '_dir_sdi_PARM_2'
                                   6030 ;dp                        Allocated with name '_dir_sdi_dp_65536_138'
                                   6031 ;csz                       Allocated with name '_dir_sdi_csz_65536_139'
                                   6032 ;clst                      Allocated with name '_dir_sdi_clst_65536_139'
                                   6033 ;fs                        Allocated with name '_dir_sdi_fs_65536_139'
                                   6034 ;------------------------------------------------------------
                                   6035 ;	ff15\source\ff.c:1697: static FRESULT dir_sdi (	/* FR_OK(0):succeeded, !=0:error */
                                   6036 ;	-----------------------------------------
                                   6037 ;	 function dir_sdi
                                   6038 ;	-----------------------------------------
      001DC4                       6039 _dir_sdi:
      001DC4 AF F0            [24] 6040 	mov	r7,b
      001DC6 AE 83            [24] 6041 	mov	r6,dph
      001DC8 E5 82            [12] 6042 	mov	a,dpl
      001DCA 90r00r6D         [24] 6043 	mov	dptr,#_dir_sdi_dp_65536_138
      001DCD F0               [24] 6044 	movx	@dptr,a
      001DCE EE               [12] 6045 	mov	a,r6
      001DCF A3               [24] 6046 	inc	dptr
      001DD0 F0               [24] 6047 	movx	@dptr,a
      001DD1 EF               [12] 6048 	mov	a,r7
      001DD2 A3               [24] 6049 	inc	dptr
      001DD3 F0               [24] 6050 	movx	@dptr,a
                                   6051 ;	ff15\source\ff.c:1703: FATFS *fs = dp->obj.fs;
      001DD4 90r00r6D         [24] 6052 	mov	dptr,#_dir_sdi_dp_65536_138
      001DD7 E0               [24] 6053 	movx	a,@dptr
      001DD8 FD               [12] 6054 	mov	r5,a
      001DD9 A3               [24] 6055 	inc	dptr
      001DDA E0               [24] 6056 	movx	a,@dptr
      001DDB FE               [12] 6057 	mov	r6,a
      001DDC A3               [24] 6058 	inc	dptr
      001DDD E0               [24] 6059 	movx	a,@dptr
      001DDE FF               [12] 6060 	mov	r7,a
      001DDF 8D 82            [24] 6061 	mov	dpl,r5
      001DE1 8E 83            [24] 6062 	mov	dph,r6
      001DE3 8F F0            [24] 6063 	mov	b,r7
      001DE5 12r00r00         [24] 6064 	lcall	__gptrget
      001DE8 FA               [12] 6065 	mov	r2,a
      001DE9 A3               [24] 6066 	inc	dptr
      001DEA 12r00r00         [24] 6067 	lcall	__gptrget
      001DED FB               [12] 6068 	mov	r3,a
      001DEE A3               [24] 6069 	inc	dptr
      001DEF 12r00r00         [24] 6070 	lcall	__gptrget
      001DF2 FC               [12] 6071 	mov	r4,a
                                   6072 ;	ff15\source\ff.c:1706: if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
      001DF3 90r00r69         [24] 6073 	mov	dptr,#_dir_sdi_PARM_2
      001DF6 E0               [24] 6074 	movx	a,@dptr
      001DF7 F5*6F            [12] 6075 	mov	_dir_sdi_sloc0_1_0,a
      001DF9 A3               [24] 6076 	inc	dptr
      001DFA E0               [24] 6077 	movx	a,@dptr
      001DFB F5*70            [12] 6078 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      001DFD A3               [24] 6079 	inc	dptr
      001DFE E0               [24] 6080 	movx	a,@dptr
      001DFF F5*71            [12] 6081 	mov	(_dir_sdi_sloc0_1_0 + 2),a
      001E01 A3               [24] 6082 	inc	dptr
      001E02 E0               [24] 6083 	movx	a,@dptr
      001E03 F5*72            [12] 6084 	mov	(_dir_sdi_sloc0_1_0 + 3),a
      001E05 C3               [12] 6085 	clr	c
      001E06 E5*71            [12] 6086 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      001E08 94 20            [12] 6087 	subb	a,#0x20
      001E0A E5*72            [12] 6088 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      001E0C 94 00            [12] 6089 	subb	a,#0x00
      001E0E 50 06            [24] 6090 	jnc	00101$
      001E10 E5*6F            [12] 6091 	mov	a,_dir_sdi_sloc0_1_0
      001E12 54 1F            [12] 6092 	anl	a,#0x1f
      001E14 60 04            [24] 6093 	jz	00102$
      001E16                       6094 00101$:
                                   6095 ;	ff15\source\ff.c:1707: return FR_INT_ERR;
      001E16 75 82 02         [24] 6096 	mov	dpl,#0x02
      001E19 22               [24] 6097 	ret
      001E1A                       6098 00102$:
                                   6099 ;	ff15\source\ff.c:1709: dp->dptr = ofs;				/* Set current offset */
      001E1A C0 02            [24] 6100 	push	ar2
      001E1C C0 03            [24] 6101 	push	ar3
      001E1E C0 04            [24] 6102 	push	ar4
      001E20 74 0F            [12] 6103 	mov	a,#0x0f
      001E22 2D               [12] 6104 	add	a,r5
      001E23 F8               [12] 6105 	mov	r0,a
      001E24 E4               [12] 6106 	clr	a
      001E25 3E               [12] 6107 	addc	a,r6
      001E26 F9               [12] 6108 	mov	r1,a
      001E27 8F 04            [24] 6109 	mov	ar4,r7
      001E29 88 82            [24] 6110 	mov	dpl,r0
      001E2B 89 83            [24] 6111 	mov	dph,r1
      001E2D 8C F0            [24] 6112 	mov	b,r4
      001E2F E5*6F            [12] 6113 	mov	a,_dir_sdi_sloc0_1_0
      001E31 12r00r00         [24] 6114 	lcall	__gptrput
      001E34 A3               [24] 6115 	inc	dptr
      001E35 E5*70            [12] 6116 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      001E37 12r00r00         [24] 6117 	lcall	__gptrput
      001E3A A3               [24] 6118 	inc	dptr
      001E3B E5*71            [12] 6119 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      001E3D 12r00r00         [24] 6120 	lcall	__gptrput
      001E40 A3               [24] 6121 	inc	dptr
      001E41 E5*72            [12] 6122 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      001E43 12r00r00         [24] 6123 	lcall	__gptrput
                                   6124 ;	ff15\source\ff.c:1710: clst = dp->obj.sclust;		/* Table start cluster (0:root) */
      001E46 74 07            [12] 6125 	mov	a,#0x07
      001E48 2D               [12] 6126 	add	a,r5
      001E49 FD               [12] 6127 	mov	r5,a
      001E4A E4               [12] 6128 	clr	a
      001E4B 3E               [12] 6129 	addc	a,r6
      001E4C FE               [12] 6130 	mov	r6,a
      001E4D 8D 82            [24] 6131 	mov	dpl,r5
      001E4F 8E 83            [24] 6132 	mov	dph,r6
      001E51 8F F0            [24] 6133 	mov	b,r7
      001E53 12r00r00         [24] 6134 	lcall	__gptrget
      001E56 FD               [12] 6135 	mov	r5,a
      001E57 A3               [24] 6136 	inc	dptr
      001E58 12r00r00         [24] 6137 	lcall	__gptrget
      001E5B FE               [12] 6138 	mov	r6,a
      001E5C A3               [24] 6139 	inc	dptr
      001E5D 12r00r00         [24] 6140 	lcall	__gptrget
      001E60 FF               [12] 6141 	mov	r7,a
      001E61 A3               [24] 6142 	inc	dptr
      001E62 12r00r00         [24] 6143 	lcall	__gptrget
      001E65 FC               [12] 6144 	mov	r4,a
      001E66 90r00r70         [24] 6145 	mov	dptr,#_dir_sdi_clst_65536_139
      001E69 ED               [12] 6146 	mov	a,r5
      001E6A F0               [24] 6147 	movx	@dptr,a
      001E6B EE               [12] 6148 	mov	a,r6
      001E6C A3               [24] 6149 	inc	dptr
      001E6D F0               [24] 6150 	movx	@dptr,a
      001E6E EF               [12] 6151 	mov	a,r7
      001E6F A3               [24] 6152 	inc	dptr
      001E70 F0               [24] 6153 	movx	@dptr,a
      001E71 EC               [12] 6154 	mov	a,r4
      001E72 A3               [24] 6155 	inc	dptr
      001E73 F0               [24] 6156 	movx	@dptr,a
                                   6157 ;	ff15\source\ff.c:1711: if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
      001E74 ED               [12] 6158 	mov	a,r5
      001E75 4E               [12] 6159 	orl	a,r6
      001E76 4F               [12] 6160 	orl	a,r7
      001E77 4C               [12] 6161 	orl	a,r4
      001E78 D0 04            [24] 6162 	pop	ar4
      001E7A D0 03            [24] 6163 	pop	ar3
      001E7C D0 02            [24] 6164 	pop	ar2
      001E7E 70 3F            [24] 6165 	jnz	00107$
      001E80 8A 82            [24] 6166 	mov	dpl,r2
      001E82 8B 83            [24] 6167 	mov	dph,r3
      001E84 8C F0            [24] 6168 	mov	b,r4
      001E86 12r00r00         [24] 6169 	lcall	__gptrget
      001E89 FF               [12] 6170 	mov	r7,a
      001E8A BF 03 00         [24] 6171 	cjne	r7,#0x03,00175$
      001E8D                       6172 00175$:
      001E8D 40 30            [24] 6173 	jc	00107$
                                   6174 ;	ff15\source\ff.c:1712: clst = (DWORD)fs->dirbase;
      001E8F 74 24            [12] 6175 	mov	a,#0x24
      001E91 2A               [12] 6176 	add	a,r2
      001E92 FF               [12] 6177 	mov	r7,a
      001E93 E4               [12] 6178 	clr	a
      001E94 3B               [12] 6179 	addc	a,r3
      001E95 FD               [12] 6180 	mov	r5,a
      001E96 8C 06            [24] 6181 	mov	ar6,r4
      001E98 8F 82            [24] 6182 	mov	dpl,r7
      001E9A 8D 83            [24] 6183 	mov	dph,r5
      001E9C 8E F0            [24] 6184 	mov	b,r6
      001E9E 12r00r00         [24] 6185 	lcall	__gptrget
      001EA1 F9               [12] 6186 	mov	r1,a
      001EA2 A3               [24] 6187 	inc	dptr
      001EA3 12r00r00         [24] 6188 	lcall	__gptrget
      001EA6 FD               [12] 6189 	mov	r5,a
      001EA7 A3               [24] 6190 	inc	dptr
      001EA8 12r00r00         [24] 6191 	lcall	__gptrget
      001EAB FE               [12] 6192 	mov	r6,a
      001EAC A3               [24] 6193 	inc	dptr
      001EAD 12r00r00         [24] 6194 	lcall	__gptrget
      001EB0 FF               [12] 6195 	mov	r7,a
      001EB1 90r00r70         [24] 6196 	mov	dptr,#_dir_sdi_clst_65536_139
      001EB4 E9               [12] 6197 	mov	a,r1
      001EB5 F0               [24] 6198 	movx	@dptr,a
      001EB6 ED               [12] 6199 	mov	a,r5
      001EB7 A3               [24] 6200 	inc	dptr
      001EB8 F0               [24] 6201 	movx	@dptr,a
      001EB9 EE               [12] 6202 	mov	a,r6
      001EBA A3               [24] 6203 	inc	dptr
      001EBB F0               [24] 6204 	movx	@dptr,a
      001EBC EF               [12] 6205 	mov	a,r7
      001EBD A3               [24] 6206 	inc	dptr
      001EBE F0               [24] 6207 	movx	@dptr,a
                                   6208 ;	ff15\source\ff.c:1713: if (FF_FS_EXFAT) dp->obj.stat = 0;	/* exFAT: Root dir has an FAT chain */
      001EBF                       6209 00107$:
                                   6210 ;	ff15\source\ff.c:1716: if (clst == 0) {	/* Static table (root-directory on the FAT volume) */
      001EBF 90r00r70         [24] 6211 	mov	dptr,#_dir_sdi_clst_65536_139
      001EC2 E0               [24] 6212 	movx	a,@dptr
      001EC3 F5 F0            [12] 6213 	mov	b,a
      001EC5 A3               [24] 6214 	inc	dptr
      001EC6 E0               [24] 6215 	movx	a,@dptr
      001EC7 42 F0            [12] 6216 	orl	b,a
      001EC9 A3               [24] 6217 	inc	dptr
      001ECA E0               [24] 6218 	movx	a,@dptr
      001ECB 42 F0            [12] 6219 	orl	b,a
      001ECD A3               [24] 6220 	inc	dptr
      001ECE E0               [24] 6221 	movx	a,@dptr
      001ECF 45 F0            [12] 6222 	orl	a,b
      001ED1 60 03            [24] 6223 	jz	00177$
      001ED3 02r1Fr96         [24] 6224 	ljmp	00120$
      001ED6                       6225 00177$:
                                   6226 ;	ff15\source\ff.c:1717: if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
      001ED6 E5*70            [12] 6227 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      001ED8 C4               [12] 6228 	swap	a
      001ED9 03               [12] 6229 	rr	a
      001EDA C5*6F            [12] 6230 	xch	a,_dir_sdi_sloc0_1_0
      001EDC C4               [12] 6231 	swap	a
      001EDD 03               [12] 6232 	rr	a
      001EDE 54 07            [12] 6233 	anl	a,#0x07
      001EE0 65*6F            [12] 6234 	xrl	a,_dir_sdi_sloc0_1_0
      001EE2 C5*6F            [12] 6235 	xch	a,_dir_sdi_sloc0_1_0
      001EE4 54 07            [12] 6236 	anl	a,#0x07
      001EE6 C5*6F            [12] 6237 	xch	a,_dir_sdi_sloc0_1_0
      001EE8 65*6F            [12] 6238 	xrl	a,_dir_sdi_sloc0_1_0
      001EEA C5*6F            [12] 6239 	xch	a,_dir_sdi_sloc0_1_0
      001EEC F5*70            [12] 6240 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      001EEE E5*71            [12] 6241 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      001EF0 C4               [12] 6242 	swap	a
      001EF1 03               [12] 6243 	rr	a
      001EF2 54 F8            [12] 6244 	anl	a,#0xf8
      001EF4 45*70            [12] 6245 	orl	a,(_dir_sdi_sloc0_1_0 + 1)
      001EF6 F5*70            [12] 6246 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      001EF8 E5*72            [12] 6247 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      001EFA C4               [12] 6248 	swap	a
      001EFB 03               [12] 6249 	rr	a
      001EFC C5*71            [12] 6250 	xch	a,(_dir_sdi_sloc0_1_0 + 2)
      001EFE C4               [12] 6251 	swap	a
      001EFF 03               [12] 6252 	rr	a
      001F00 54 07            [12] 6253 	anl	a,#0x07
      001F02 65*71            [12] 6254 	xrl	a,(_dir_sdi_sloc0_1_0 + 2)
      001F04 C5*71            [12] 6255 	xch	a,(_dir_sdi_sloc0_1_0 + 2)
      001F06 54 07            [12] 6256 	anl	a,#0x07
      001F08 C5*71            [12] 6257 	xch	a,(_dir_sdi_sloc0_1_0 + 2)
      001F0A 65*71            [12] 6258 	xrl	a,(_dir_sdi_sloc0_1_0 + 2)
      001F0C C5*71            [12] 6259 	xch	a,(_dir_sdi_sloc0_1_0 + 2)
      001F0E F5*72            [12] 6260 	mov	(_dir_sdi_sloc0_1_0 + 3),a
      001F10 74 08            [12] 6261 	mov	a,#0x08
      001F12 2A               [12] 6262 	add	a,r2
      001F13 F8               [12] 6263 	mov	r0,a
      001F14 E4               [12] 6264 	clr	a
      001F15 3B               [12] 6265 	addc	a,r3
      001F16 FE               [12] 6266 	mov	r6,a
      001F17 8C 07            [24] 6267 	mov	ar7,r4
      001F19 88 82            [24] 6268 	mov	dpl,r0
      001F1B 8E 83            [24] 6269 	mov	dph,r6
      001F1D 8F F0            [24] 6270 	mov	b,r7
      001F1F 12r00r00         [24] 6271 	lcall	__gptrget
      001F22 F8               [12] 6272 	mov	r0,a
      001F23 A3               [24] 6273 	inc	dptr
      001F24 12r00r00         [24] 6274 	lcall	__gptrget
      001F27 FE               [12] 6275 	mov	r6,a
      001F28 7F 00            [12] 6276 	mov	r7,#0x00
      001F2A 7D 00            [12] 6277 	mov	r5,#0x00
      001F2C C3               [12] 6278 	clr	c
      001F2D E5*6F            [12] 6279 	mov	a,_dir_sdi_sloc0_1_0
      001F2F 98               [12] 6280 	subb	a,r0
      001F30 E5*70            [12] 6281 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      001F32 9E               [12] 6282 	subb	a,r6
      001F33 E5*71            [12] 6283 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      001F35 9F               [12] 6284 	subb	a,r7
      001F36 E5*72            [12] 6285 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      001F38 9D               [12] 6286 	subb	a,r5
      001F39 40 04            [24] 6287 	jc	00110$
      001F3B 75 82 02         [24] 6288 	mov	dpl,#0x02
      001F3E 22               [24] 6289 	ret
      001F3F                       6290 00110$:
                                   6291 ;	ff15\source\ff.c:1718: dp->sect = fs->dirbase;
      001F3F 90r00r6D         [24] 6292 	mov	dptr,#_dir_sdi_dp_65536_138
      001F42 E0               [24] 6293 	movx	a,@dptr
      001F43 FD               [12] 6294 	mov	r5,a
      001F44 A3               [24] 6295 	inc	dptr
      001F45 E0               [24] 6296 	movx	a,@dptr
      001F46 FE               [12] 6297 	mov	r6,a
      001F47 A3               [24] 6298 	inc	dptr
      001F48 E0               [24] 6299 	movx	a,@dptr
      001F49 FF               [12] 6300 	mov	r7,a
      001F4A 74 17            [12] 6301 	mov	a,#0x17
      001F4C 2D               [12] 6302 	add	a,r5
      001F4D F5*6F            [12] 6303 	mov	_dir_sdi_sloc0_1_0,a
      001F4F E4               [12] 6304 	clr	a
      001F50 3E               [12] 6305 	addc	a,r6
      001F51 F5*70            [12] 6306 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      001F53 8F*71            [24] 6307 	mov	(_dir_sdi_sloc0_1_0 + 2),r7
      001F55 74 24            [12] 6308 	mov	a,#0x24
      001F57 2A               [12] 6309 	add	a,r2
      001F58 F8               [12] 6310 	mov	r0,a
      001F59 E4               [12] 6311 	clr	a
      001F5A 3B               [12] 6312 	addc	a,r3
      001F5B F9               [12] 6313 	mov	r1,a
      001F5C 8C 07            [24] 6314 	mov	ar7,r4
      001F5E 88 82            [24] 6315 	mov	dpl,r0
      001F60 89 83            [24] 6316 	mov	dph,r1
      001F62 8F F0            [24] 6317 	mov	b,r7
      001F64 12r00r00         [24] 6318 	lcall	__gptrget
      001F67 F8               [12] 6319 	mov	r0,a
      001F68 A3               [24] 6320 	inc	dptr
      001F69 12r00r00         [24] 6321 	lcall	__gptrget
      001F6C F9               [12] 6322 	mov	r1,a
      001F6D A3               [24] 6323 	inc	dptr
      001F6E 12r00r00         [24] 6324 	lcall	__gptrget
      001F71 FF               [12] 6325 	mov	r7,a
      001F72 A3               [24] 6326 	inc	dptr
      001F73 12r00r00         [24] 6327 	lcall	__gptrget
      001F76 FE               [12] 6328 	mov	r6,a
      001F77 85*6F 82         [24] 6329 	mov	dpl,_dir_sdi_sloc0_1_0
      001F7A 85*70 83         [24] 6330 	mov	dph,(_dir_sdi_sloc0_1_0 + 1)
      001F7D 85*71 F0         [24] 6331 	mov	b,(_dir_sdi_sloc0_1_0 + 2)
      001F80 E8               [12] 6332 	mov	a,r0
      001F81 12r00r00         [24] 6333 	lcall	__gptrput
      001F84 A3               [24] 6334 	inc	dptr
      001F85 E9               [12] 6335 	mov	a,r1
      001F86 12r00r00         [24] 6336 	lcall	__gptrput
      001F89 A3               [24] 6337 	inc	dptr
      001F8A EF               [12] 6338 	mov	a,r7
      001F8B 12r00r00         [24] 6339 	lcall	__gptrput
      001F8E A3               [24] 6340 	inc	dptr
      001F8F EE               [12] 6341 	mov	a,r6
      001F90 12r00r00         [24] 6342 	lcall	__gptrput
      001F93 02r21r59         [24] 6343 	ljmp	00121$
      001F96                       6344 00120$:
                                   6345 ;	ff15\source\ff.c:1721: csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
      001F96 74 0A            [12] 6346 	mov	a,#0x0a
      001F98 2A               [12] 6347 	add	a,r2
      001F99 FD               [12] 6348 	mov	r5,a
      001F9A E4               [12] 6349 	clr	a
      001F9B 3B               [12] 6350 	addc	a,r3
      001F9C FE               [12] 6351 	mov	r6,a
      001F9D 8C 07            [24] 6352 	mov	ar7,r4
      001F9F 8D 82            [24] 6353 	mov	dpl,r5
      001FA1 8E 83            [24] 6354 	mov	dph,r6
      001FA3 8F F0            [24] 6355 	mov	b,r7
      001FA5 12r00r00         [24] 6356 	lcall	__gptrget
      001FA8 FD               [12] 6357 	mov	r5,a
      001FA9 A3               [24] 6358 	inc	dptr
      001FAA 12r00r00         [24] 6359 	lcall	__gptrget
      001FAD F9               [12] 6360 	mov	r1,a
      001FAE E4               [12] 6361 	clr	a
      001FAF FE               [12] 6362 	mov	r6,a
      001FB0 FF               [12] 6363 	mov	r7,a
      001FB1 ED               [12] 6364 	mov	a,r5
      001FB2 2D               [12] 6365 	add	a,r5
      001FB3 C9               [12] 6366 	xch	a,r1
      001FB4 33               [12] 6367 	rlc	a
      001FB5 CE               [12] 6368 	xch	a,r6
      001FB6 33               [12] 6369 	rlc	a
      001FB7 CF               [12] 6370 	xch	a,r7
      001FB8 7D 00            [12] 6371 	mov	r5,#0x00
                                   6372 ;	ff15\source\ff.c:1722: while (ofs >= csz) {				/* Follow cluster chain */
      001FBA 74 14            [12] 6373 	mov	a,#0x14
      001FBC 2A               [12] 6374 	add	a,r2
      001FBD F5*6F            [12] 6375 	mov	_dir_sdi_sloc0_1_0,a
      001FBF E4               [12] 6376 	clr	a
      001FC0 3B               [12] 6377 	addc	a,r3
      001FC1 F5*70            [12] 6378 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      001FC3 8C*71            [24] 6379 	mov	(_dir_sdi_sloc0_1_0 + 2),r4
      001FC5                       6380 00116$:
      001FC5 90r00r69         [24] 6381 	mov	dptr,#_dir_sdi_PARM_2
      001FC8 E0               [24] 6382 	movx	a,@dptr
      001FC9 F5*73            [12] 6383 	mov	_dir_sdi_sloc1_1_0,a
      001FCB A3               [24] 6384 	inc	dptr
      001FCC E0               [24] 6385 	movx	a,@dptr
      001FCD F5*74            [12] 6386 	mov	(_dir_sdi_sloc1_1_0 + 1),a
      001FCF A3               [24] 6387 	inc	dptr
      001FD0 E0               [24] 6388 	movx	a,@dptr
      001FD1 F5*75            [12] 6389 	mov	(_dir_sdi_sloc1_1_0 + 2),a
      001FD3 A3               [24] 6390 	inc	dptr
      001FD4 E0               [24] 6391 	movx	a,@dptr
      001FD5 F5*76            [12] 6392 	mov	(_dir_sdi_sloc1_1_0 + 3),a
      001FD7 C3               [12] 6393 	clr	c
      001FD8 E5*73            [12] 6394 	mov	a,_dir_sdi_sloc1_1_0
      001FDA 9D               [12] 6395 	subb	a,r5
      001FDB E5*74            [12] 6396 	mov	a,(_dir_sdi_sloc1_1_0 + 1)
      001FDD 99               [12] 6397 	subb	a,r1
      001FDE E5*75            [12] 6398 	mov	a,(_dir_sdi_sloc1_1_0 + 2)
      001FE0 9E               [12] 6399 	subb	a,r6
      001FE1 E5*76            [12] 6400 	mov	a,(_dir_sdi_sloc1_1_0 + 3)
      001FE3 9F               [12] 6401 	subb	a,r7
      001FE4 50 03            [24] 6402 	jnc	00179$
      001FE6 02r20rEF         [24] 6403 	ljmp	00118$
      001FE9                       6404 00179$:
                                   6405 ;	ff15\source\ff.c:1723: clst = get_fat(&dp->obj, clst);				/* Get next cluster */
      001FE9 C0 05            [24] 6406 	push	ar5
      001FEB C0 01            [24] 6407 	push	ar1
      001FED C0 06            [24] 6408 	push	ar6
      001FEF C0 07            [24] 6409 	push	ar7
      001FF1 90r00r6D         [24] 6410 	mov	dptr,#_dir_sdi_dp_65536_138
      001FF4 E0               [24] 6411 	movx	a,@dptr
      001FF5 F5*77            [12] 6412 	mov	_dir_sdi_sloc2_1_0,a
      001FF7 A3               [24] 6413 	inc	dptr
      001FF8 E0               [24] 6414 	movx	a,@dptr
      001FF9 F5*78            [12] 6415 	mov	(_dir_sdi_sloc2_1_0 + 1),a
      001FFB A3               [24] 6416 	inc	dptr
      001FFC E0               [24] 6417 	movx	a,@dptr
      001FFD F5*79            [12] 6418 	mov	(_dir_sdi_sloc2_1_0 + 2),a
      001FFF 90r00r70         [24] 6419 	mov	dptr,#_dir_sdi_clst_65536_139
      002002 E0               [24] 6420 	movx	a,@dptr
      002003 F9               [12] 6421 	mov	r1,a
      002004 A3               [24] 6422 	inc	dptr
      002005 E0               [24] 6423 	movx	a,@dptr
      002006 FD               [12] 6424 	mov	r5,a
      002007 A3               [24] 6425 	inc	dptr
      002008 E0               [24] 6426 	movx	a,@dptr
      002009 FE               [12] 6427 	mov	r6,a
      00200A A3               [24] 6428 	inc	dptr
      00200B E0               [24] 6429 	movx	a,@dptr
      00200C FF               [12] 6430 	mov	r7,a
      00200D 90r00r30         [24] 6431 	mov	dptr,#_get_fat_PARM_2
      002010 E9               [12] 6432 	mov	a,r1
      002011 F0               [24] 6433 	movx	@dptr,a
      002012 ED               [12] 6434 	mov	a,r5
      002013 A3               [24] 6435 	inc	dptr
      002014 F0               [24] 6436 	movx	@dptr,a
      002015 EE               [12] 6437 	mov	a,r6
      002016 A3               [24] 6438 	inc	dptr
      002017 F0               [24] 6439 	movx	@dptr,a
      002018 EF               [12] 6440 	mov	a,r7
      002019 A3               [24] 6441 	inc	dptr
      00201A F0               [24] 6442 	movx	@dptr,a
      00201B 85*77 82         [24] 6443 	mov	dpl,_dir_sdi_sloc2_1_0
      00201E 85*78 83         [24] 6444 	mov	dph,(_dir_sdi_sloc2_1_0 + 1)
      002021 85*79 F0         [24] 6445 	mov	b,(_dir_sdi_sloc2_1_0 + 2)
      002024 C0 07            [24] 6446 	push	ar7
      002026 C0 06            [24] 6447 	push	ar6
      002028 C0 05            [24] 6448 	push	ar5
      00202A C0 04            [24] 6449 	push	ar4
      00202C C0 03            [24] 6450 	push	ar3
      00202E C0 02            [24] 6451 	push	ar2
      002030 C0 01            [24] 6452 	push	ar1
      002032 12r09rFE         [24] 6453 	lcall	_get_fat
      002035 85 82*7A         [24] 6454 	mov	_dir_sdi_sloc3_1_0,dpl
      002038 85 83*7B         [24] 6455 	mov	(_dir_sdi_sloc3_1_0 + 1),dph
      00203B 85 F0*7C         [24] 6456 	mov	(_dir_sdi_sloc3_1_0 + 2),b
      00203E F5*7D            [12] 6457 	mov	(_dir_sdi_sloc3_1_0 + 3),a
      002040 D0 01            [24] 6458 	pop	ar1
      002042 D0 02            [24] 6459 	pop	ar2
      002044 D0 03            [24] 6460 	pop	ar3
      002046 D0 04            [24] 6461 	pop	ar4
      002048 D0 05            [24] 6462 	pop	ar5
      00204A D0 06            [24] 6463 	pop	ar6
      00204C D0 07            [24] 6464 	pop	ar7
      00204E 90r00r70         [24] 6465 	mov	dptr,#_dir_sdi_clst_65536_139
      002051 E5*7A            [12] 6466 	mov	a,_dir_sdi_sloc3_1_0
      002053 F0               [24] 6467 	movx	@dptr,a
      002054 E5*7B            [12] 6468 	mov	a,(_dir_sdi_sloc3_1_0 + 1)
      002056 A3               [24] 6469 	inc	dptr
      002057 F0               [24] 6470 	movx	@dptr,a
      002058 E5*7C            [12] 6471 	mov	a,(_dir_sdi_sloc3_1_0 + 2)
      00205A A3               [24] 6472 	inc	dptr
      00205B F0               [24] 6473 	movx	@dptr,a
      00205C E5*7D            [12] 6474 	mov	a,(_dir_sdi_sloc3_1_0 + 3)
      00205E A3               [24] 6475 	inc	dptr
      00205F F0               [24] 6476 	movx	@dptr,a
                                   6477 ;	ff15\source\ff.c:1724: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
      002060 E5*7A            [12] 6478 	mov	a,_dir_sdi_sloc3_1_0
      002062 55*7B            [12] 6479 	anl	a,(_dir_sdi_sloc3_1_0 + 1)
      002064 55*7C            [12] 6480 	anl	a,(_dir_sdi_sloc3_1_0 + 2)
      002066 55*7D            [12] 6481 	anl	a,(_dir_sdi_sloc3_1_0 + 3)
      002068 B4 FF 02         [24] 6482 	cjne	a,#0xFF,00180$
      00206B 80 0A            [24] 6483 	sjmp	00181$
      00206D                       6484 00180$:
      00206D D0 07            [24] 6485 	pop	ar7
      00206F D0 06            [24] 6486 	pop	ar6
      002071 D0 01            [24] 6487 	pop	ar1
      002073 D0 05            [24] 6488 	pop	ar5
      002075 80 0C            [24] 6489 	sjmp	00112$
      002077                       6490 00181$:
      002077 D0 07            [24] 6491 	pop	ar7
      002079 D0 06            [24] 6492 	pop	ar6
      00207B D0 01            [24] 6493 	pop	ar1
      00207D D0 05            [24] 6494 	pop	ar5
      00207F 75 82 01         [24] 6495 	mov	dpl,#0x01
      002082 22               [24] 6496 	ret
      002083                       6497 00112$:
                                   6498 ;	ff15\source\ff.c:1725: if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal error */
      002083 C3               [12] 6499 	clr	c
      002084 E5*7A            [12] 6500 	mov	a,_dir_sdi_sloc3_1_0
      002086 94 02            [12] 6501 	subb	a,#0x02
      002088 E5*7B            [12] 6502 	mov	a,(_dir_sdi_sloc3_1_0 + 1)
      00208A 94 00            [12] 6503 	subb	a,#0x00
      00208C E5*7C            [12] 6504 	mov	a,(_dir_sdi_sloc3_1_0 + 2)
      00208E 94 00            [12] 6505 	subb	a,#0x00
      002090 E5*7D            [12] 6506 	mov	a,(_dir_sdi_sloc3_1_0 + 3)
      002092 94 00            [12] 6507 	subb	a,#0x00
      002094 40 3B            [24] 6508 	jc	00113$
      002096 C0 05            [24] 6509 	push	ar5
      002098 C0 01            [24] 6510 	push	ar1
      00209A C0 06            [24] 6511 	push	ar6
      00209C C0 07            [24] 6512 	push	ar7
      00209E 85*6F 82         [24] 6513 	mov	dpl,_dir_sdi_sloc0_1_0
      0020A1 85*70 83         [24] 6514 	mov	dph,(_dir_sdi_sloc0_1_0 + 1)
      0020A4 85*71 F0         [24] 6515 	mov	b,(_dir_sdi_sloc0_1_0 + 2)
      0020A7 12r00r00         [24] 6516 	lcall	__gptrget
      0020AA F8               [12] 6517 	mov	r0,a
      0020AB A3               [24] 6518 	inc	dptr
      0020AC 12r00r00         [24] 6519 	lcall	__gptrget
      0020AF FD               [12] 6520 	mov	r5,a
      0020B0 A3               [24] 6521 	inc	dptr
      0020B1 12r00r00         [24] 6522 	lcall	__gptrget
      0020B4 FE               [12] 6523 	mov	r6,a
      0020B5 A3               [24] 6524 	inc	dptr
      0020B6 12r00r00         [24] 6525 	lcall	__gptrget
      0020B9 FF               [12] 6526 	mov	r7,a
      0020BA C3               [12] 6527 	clr	c
      0020BB E5*7A            [12] 6528 	mov	a,_dir_sdi_sloc3_1_0
      0020BD 98               [12] 6529 	subb	a,r0
      0020BE E5*7B            [12] 6530 	mov	a,(_dir_sdi_sloc3_1_0 + 1)
      0020C0 9D               [12] 6531 	subb	a,r5
      0020C1 E5*7C            [12] 6532 	mov	a,(_dir_sdi_sloc3_1_0 + 2)
      0020C3 9E               [12] 6533 	subb	a,r6
      0020C4 E5*7D            [12] 6534 	mov	a,(_dir_sdi_sloc3_1_0 + 3)
      0020C6 9F               [12] 6535 	subb	a,r7
      0020C7 D0 07            [24] 6536 	pop	ar7
      0020C9 D0 06            [24] 6537 	pop	ar6
      0020CB D0 01            [24] 6538 	pop	ar1
      0020CD D0 05            [24] 6539 	pop	ar5
      0020CF 40 04            [24] 6540 	jc	00114$
      0020D1                       6541 00113$:
      0020D1 75 82 02         [24] 6542 	mov	dpl,#0x02
      0020D4 22               [24] 6543 	ret
      0020D5                       6544 00114$:
                                   6545 ;	ff15\source\ff.c:1726: ofs -= csz;
      0020D5 90r00r69         [24] 6546 	mov	dptr,#_dir_sdi_PARM_2
      0020D8 E5*73            [12] 6547 	mov	a,_dir_sdi_sloc1_1_0
      0020DA C3               [12] 6548 	clr	c
      0020DB 9D               [12] 6549 	subb	a,r5
      0020DC F0               [24] 6550 	movx	@dptr,a
      0020DD E5*74            [12] 6551 	mov	a,(_dir_sdi_sloc1_1_0 + 1)
      0020DF 99               [12] 6552 	subb	a,r1
      0020E0 A3               [24] 6553 	inc	dptr
      0020E1 F0               [24] 6554 	movx	@dptr,a
      0020E2 E5*75            [12] 6555 	mov	a,(_dir_sdi_sloc1_1_0 + 2)
      0020E4 9E               [12] 6556 	subb	a,r6
      0020E5 A3               [24] 6557 	inc	dptr
      0020E6 F0               [24] 6558 	movx	@dptr,a
      0020E7 E5*76            [12] 6559 	mov	a,(_dir_sdi_sloc1_1_0 + 3)
      0020E9 9F               [12] 6560 	subb	a,r7
      0020EA A3               [24] 6561 	inc	dptr
      0020EB F0               [24] 6562 	movx	@dptr,a
      0020EC 02r1FrC5         [24] 6563 	ljmp	00116$
      0020EF                       6564 00118$:
                                   6565 ;	ff15\source\ff.c:1728: dp->sect = clst2sect(fs, clst);
      0020EF 90r00r6D         [24] 6566 	mov	dptr,#_dir_sdi_dp_65536_138
      0020F2 E0               [24] 6567 	movx	a,@dptr
      0020F3 FD               [12] 6568 	mov	r5,a
      0020F4 A3               [24] 6569 	inc	dptr
      0020F5 E0               [24] 6570 	movx	a,@dptr
      0020F6 FE               [12] 6571 	mov	r6,a
      0020F7 A3               [24] 6572 	inc	dptr
      0020F8 E0               [24] 6573 	movx	a,@dptr
      0020F9 FF               [12] 6574 	mov	r7,a
      0020FA 74 17            [12] 6575 	mov	a,#0x17
      0020FC 2D               [12] 6576 	add	a,r5
      0020FD F5*7A            [12] 6577 	mov	_dir_sdi_sloc3_1_0,a
      0020FF E4               [12] 6578 	clr	a
      002100 3E               [12] 6579 	addc	a,r6
      002101 F5*7B            [12] 6580 	mov	(_dir_sdi_sloc3_1_0 + 1),a
      002103 8F*7C            [24] 6581 	mov	(_dir_sdi_sloc3_1_0 + 2),r7
      002105 90r00r70         [24] 6582 	mov	dptr,#_dir_sdi_clst_65536_139
      002108 E0               [24] 6583 	movx	a,@dptr
      002109 F8               [12] 6584 	mov	r0,a
      00210A A3               [24] 6585 	inc	dptr
      00210B E0               [24] 6586 	movx	a,@dptr
      00210C F9               [12] 6587 	mov	r1,a
      00210D A3               [24] 6588 	inc	dptr
      00210E E0               [24] 6589 	movx	a,@dptr
      00210F FE               [12] 6590 	mov	r6,a
      002110 A3               [24] 6591 	inc	dptr
      002111 E0               [24] 6592 	movx	a,@dptr
      002112 FF               [12] 6593 	mov	r7,a
      002113 90r00r29         [24] 6594 	mov	dptr,#_clst2sect_PARM_2
      002116 E8               [12] 6595 	mov	a,r0
      002117 F0               [24] 6596 	movx	@dptr,a
      002118 E9               [12] 6597 	mov	a,r1
      002119 A3               [24] 6598 	inc	dptr
      00211A F0               [24] 6599 	movx	@dptr,a
      00211B EE               [12] 6600 	mov	a,r6
      00211C A3               [24] 6601 	inc	dptr
      00211D F0               [24] 6602 	movx	@dptr,a
      00211E EF               [12] 6603 	mov	a,r7
      00211F A3               [24] 6604 	inc	dptr
      002120 F0               [24] 6605 	movx	@dptr,a
      002121 8A 82            [24] 6606 	mov	dpl,r2
      002123 8B 83            [24] 6607 	mov	dph,r3
      002125 8C F0            [24] 6608 	mov	b,r4
      002127 C0 04            [24] 6609 	push	ar4
      002129 C0 03            [24] 6610 	push	ar3
      00212B C0 02            [24] 6611 	push	ar2
      00212D 12r08rDC         [24] 6612 	lcall	_clst2sect
      002130 AD 82            [24] 6613 	mov	r5,dpl
      002132 AE 83            [24] 6614 	mov	r6,dph
      002134 A9 F0            [24] 6615 	mov	r1,b
      002136 FF               [12] 6616 	mov	r7,a
      002137 D0 02            [24] 6617 	pop	ar2
      002139 D0 03            [24] 6618 	pop	ar3
      00213B D0 04            [24] 6619 	pop	ar4
      00213D 85*7A 82         [24] 6620 	mov	dpl,_dir_sdi_sloc3_1_0
      002140 85*7B 83         [24] 6621 	mov	dph,(_dir_sdi_sloc3_1_0 + 1)
      002143 85*7C F0         [24] 6622 	mov	b,(_dir_sdi_sloc3_1_0 + 2)
      002146 ED               [12] 6623 	mov	a,r5
      002147 12r00r00         [24] 6624 	lcall	__gptrput
      00214A A3               [24] 6625 	inc	dptr
      00214B EE               [12] 6626 	mov	a,r6
      00214C 12r00r00         [24] 6627 	lcall	__gptrput
      00214F A3               [24] 6628 	inc	dptr
      002150 E9               [12] 6629 	mov	a,r1
      002151 12r00r00         [24] 6630 	lcall	__gptrput
      002154 A3               [24] 6631 	inc	dptr
      002155 EF               [12] 6632 	mov	a,r7
      002156 12r00r00         [24] 6633 	lcall	__gptrput
      002159                       6634 00121$:
                                   6635 ;	ff15\source\ff.c:1730: dp->clust = clst;					/* Current cluster# */
      002159 C0 02            [24] 6636 	push	ar2
      00215B C0 03            [24] 6637 	push	ar3
      00215D C0 04            [24] 6638 	push	ar4
      00215F 90r00r6D         [24] 6639 	mov	dptr,#_dir_sdi_dp_65536_138
      002162 E0               [24] 6640 	movx	a,@dptr
      002163 F5*77            [12] 6641 	mov	_dir_sdi_sloc2_1_0,a
      002165 A3               [24] 6642 	inc	dptr
      002166 E0               [24] 6643 	movx	a,@dptr
      002167 F5*78            [12] 6644 	mov	(_dir_sdi_sloc2_1_0 + 1),a
      002169 A3               [24] 6645 	inc	dptr
      00216A E0               [24] 6646 	movx	a,@dptr
      00216B F5*79            [12] 6647 	mov	(_dir_sdi_sloc2_1_0 + 2),a
      00216D 74 13            [12] 6648 	mov	a,#0x13
      00216F 25*77            [12] 6649 	add	a,_dir_sdi_sloc2_1_0
      002171 F5*7A            [12] 6650 	mov	_dir_sdi_sloc3_1_0,a
      002173 E4               [12] 6651 	clr	a
      002174 35*78            [12] 6652 	addc	a,(_dir_sdi_sloc2_1_0 + 1)
      002176 F5*7B            [12] 6653 	mov	(_dir_sdi_sloc3_1_0 + 1),a
      002178 85*79*7C         [24] 6654 	mov	(_dir_sdi_sloc3_1_0 + 2),(_dir_sdi_sloc2_1_0 + 2)
      00217B 90r00r70         [24] 6655 	mov	dptr,#_dir_sdi_clst_65536_139
      00217E E0               [24] 6656 	movx	a,@dptr
      00217F FA               [12] 6657 	mov	r2,a
      002180 A3               [24] 6658 	inc	dptr
      002181 E0               [24] 6659 	movx	a,@dptr
      002182 F9               [12] 6660 	mov	r1,a
      002183 A3               [24] 6661 	inc	dptr
      002184 E0               [24] 6662 	movx	a,@dptr
      002185 FB               [12] 6663 	mov	r3,a
      002186 A3               [24] 6664 	inc	dptr
      002187 E0               [24] 6665 	movx	a,@dptr
      002188 FC               [12] 6666 	mov	r4,a
      002189 85*7A 82         [24] 6667 	mov	dpl,_dir_sdi_sloc3_1_0
      00218C 85*7B 83         [24] 6668 	mov	dph,(_dir_sdi_sloc3_1_0 + 1)
      00218F 85*7C F0         [24] 6669 	mov	b,(_dir_sdi_sloc3_1_0 + 2)
      002192 EA               [12] 6670 	mov	a,r2
      002193 12r00r00         [24] 6671 	lcall	__gptrput
      002196 A3               [24] 6672 	inc	dptr
      002197 E9               [12] 6673 	mov	a,r1
      002198 12r00r00         [24] 6674 	lcall	__gptrput
      00219B A3               [24] 6675 	inc	dptr
      00219C EB               [12] 6676 	mov	a,r3
      00219D 12r00r00         [24] 6677 	lcall	__gptrput
      0021A0 A3               [24] 6678 	inc	dptr
      0021A1 EC               [12] 6679 	mov	a,r4
      0021A2 12r00r00         [24] 6680 	lcall	__gptrput
                                   6681 ;	ff15\source\ff.c:1731: if (dp->sect == 0) return FR_INT_ERR;
      0021A5 74 17            [12] 6682 	mov	a,#0x17
      0021A7 25*77            [12] 6683 	add	a,_dir_sdi_sloc2_1_0
      0021A9 F5*7A            [12] 6684 	mov	_dir_sdi_sloc3_1_0,a
      0021AB E4               [12] 6685 	clr	a
      0021AC 35*78            [12] 6686 	addc	a,(_dir_sdi_sloc2_1_0 + 1)
      0021AE F5*7B            [12] 6687 	mov	(_dir_sdi_sloc3_1_0 + 1),a
      0021B0 85*79*7C         [24] 6688 	mov	(_dir_sdi_sloc3_1_0 + 2),(_dir_sdi_sloc2_1_0 + 2)
      0021B3 85*7A 82         [24] 6689 	mov	dpl,_dir_sdi_sloc3_1_0
      0021B6 85*7B 83         [24] 6690 	mov	dph,(_dir_sdi_sloc3_1_0 + 1)
      0021B9 85*7C F0         [24] 6691 	mov	b,(_dir_sdi_sloc3_1_0 + 2)
      0021BC 12r00r00         [24] 6692 	lcall	__gptrget
      0021BF F5*73            [12] 6693 	mov	_dir_sdi_sloc1_1_0,a
      0021C1 A3               [24] 6694 	inc	dptr
      0021C2 12r00r00         [24] 6695 	lcall	__gptrget
      0021C5 F5*74            [12] 6696 	mov	(_dir_sdi_sloc1_1_0 + 1),a
      0021C7 A3               [24] 6697 	inc	dptr
      0021C8 12r00r00         [24] 6698 	lcall	__gptrget
      0021CB F5*75            [12] 6699 	mov	(_dir_sdi_sloc1_1_0 + 2),a
      0021CD A3               [24] 6700 	inc	dptr
      0021CE 12r00r00         [24] 6701 	lcall	__gptrget
      0021D1 F5*76            [12] 6702 	mov	(_dir_sdi_sloc1_1_0 + 3),a
      0021D3 D0 04            [24] 6703 	pop	ar4
      0021D5 D0 03            [24] 6704 	pop	ar3
      0021D7 D0 02            [24] 6705 	pop	ar2
      0021D9 E5*73            [12] 6706 	mov	a,_dir_sdi_sloc1_1_0
      0021DB 45*74            [12] 6707 	orl	a,(_dir_sdi_sloc1_1_0 + 1)
      0021DD 45*75            [12] 6708 	orl	a,(_dir_sdi_sloc1_1_0 + 2)
      0021DF 45*76            [12] 6709 	orl	a,(_dir_sdi_sloc1_1_0 + 3)
      0021E1 70 04            [24] 6710 	jnz	00123$
      0021E3 75 82 02         [24] 6711 	mov	dpl,#0x02
      0021E6 22               [24] 6712 	ret
      0021E7                       6713 00123$:
                                   6714 ;	ff15\source\ff.c:1732: dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
      0021E7 90r00r69         [24] 6715 	mov	dptr,#_dir_sdi_PARM_2
      0021EA E0               [24] 6716 	movx	a,@dptr
      0021EB F5*6F            [12] 6717 	mov	_dir_sdi_sloc0_1_0,a
      0021ED A3               [24] 6718 	inc	dptr
      0021EE E0               [24] 6719 	movx	a,@dptr
      0021EF F5*70            [12] 6720 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      0021F1 A3               [24] 6721 	inc	dptr
      0021F2 E0               [24] 6722 	movx	a,@dptr
      0021F3 F5*71            [12] 6723 	mov	(_dir_sdi_sloc0_1_0 + 2),a
      0021F5 A3               [24] 6724 	inc	dptr
      0021F6 E0               [24] 6725 	movx	a,@dptr
      0021F7 F5*72            [12] 6726 	mov	(_dir_sdi_sloc0_1_0 + 3),a
      0021F9 7F 00            [12] 6727 	mov	r7,#0x00
      0021FB C3               [12] 6728 	clr	c
      0021FC 13               [12] 6729 	rrc	a
      0021FD FE               [12] 6730 	mov	r6,a
      0021FE E5*71            [12] 6731 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      002200 13               [12] 6732 	rrc	a
      002201 FD               [12] 6733 	mov	r5,a
      002202 E5*70            [12] 6734 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      002204 13               [12] 6735 	rrc	a
      002205 25*73            [12] 6736 	add	a,_dir_sdi_sloc1_1_0
      002207 F9               [12] 6737 	mov	r1,a
      002208 ED               [12] 6738 	mov	a,r5
      002209 35*74            [12] 6739 	addc	a,(_dir_sdi_sloc1_1_0 + 1)
      00220B FD               [12] 6740 	mov	r5,a
      00220C EE               [12] 6741 	mov	a,r6
      00220D 35*75            [12] 6742 	addc	a,(_dir_sdi_sloc1_1_0 + 2)
      00220F FE               [12] 6743 	mov	r6,a
      002210 EF               [12] 6744 	mov	a,r7
      002211 35*76            [12] 6745 	addc	a,(_dir_sdi_sloc1_1_0 + 3)
      002213 FF               [12] 6746 	mov	r7,a
      002214 85*7A 82         [24] 6747 	mov	dpl,_dir_sdi_sloc3_1_0
      002217 85*7B 83         [24] 6748 	mov	dph,(_dir_sdi_sloc3_1_0 + 1)
      00221A 85*7C F0         [24] 6749 	mov	b,(_dir_sdi_sloc3_1_0 + 2)
      00221D E9               [12] 6750 	mov	a,r1
      00221E 12r00r00         [24] 6751 	lcall	__gptrput
      002221 A3               [24] 6752 	inc	dptr
      002222 ED               [12] 6753 	mov	a,r5
      002223 12r00r00         [24] 6754 	lcall	__gptrput
      002226 A3               [24] 6755 	inc	dptr
      002227 EE               [12] 6756 	mov	a,r6
      002228 12r00r00         [24] 6757 	lcall	__gptrput
      00222B A3               [24] 6758 	inc	dptr
      00222C EF               [12] 6759 	mov	a,r7
      00222D 12r00r00         [24] 6760 	lcall	__gptrput
                                   6761 ;	ff15\source\ff.c:1733: dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
      002230 74 1B            [12] 6762 	mov	a,#0x1b
      002232 25*77            [12] 6763 	add	a,_dir_sdi_sloc2_1_0
      002234 FD               [12] 6764 	mov	r5,a
      002235 E4               [12] 6765 	clr	a
      002236 35*78            [12] 6766 	addc	a,(_dir_sdi_sloc2_1_0 + 1)
      002238 FE               [12] 6767 	mov	r6,a
      002239 AF*79            [24] 6768 	mov	r7,(_dir_sdi_sloc2_1_0 + 2)
      00223B 74 30            [12] 6769 	mov	a,#0x30
      00223D 2A               [12] 6770 	add	a,r2
      00223E F5*7A            [12] 6771 	mov	_dir_sdi_sloc3_1_0,a
      002240 E4               [12] 6772 	clr	a
      002241 3B               [12] 6773 	addc	a,r3
      002242 F5*7B            [12] 6774 	mov	(_dir_sdi_sloc3_1_0 + 1),a
      002244 8C*7C            [24] 6775 	mov	(_dir_sdi_sloc3_1_0 + 2),r4
      002246 A8*6F            [24] 6776 	mov	r0,_dir_sdi_sloc0_1_0
      002248 74 01            [12] 6777 	mov	a,#0x01
      00224A 55*70            [12] 6778 	anl	a,(_dir_sdi_sloc0_1_0 + 1)
      00224C F9               [12] 6779 	mov	r1,a
      00224D E4               [12] 6780 	clr	a
      00224E E8               [12] 6781 	mov	a,r0
      00224F 25*7A            [12] 6782 	add	a,_dir_sdi_sloc3_1_0
      002251 F8               [12] 6783 	mov	r0,a
      002252 E9               [12] 6784 	mov	a,r1
      002253 35*7B            [12] 6785 	addc	a,(_dir_sdi_sloc3_1_0 + 1)
      002255 F9               [12] 6786 	mov	r1,a
      002256 AB*7C            [24] 6787 	mov	r3,(_dir_sdi_sloc3_1_0 + 2)
      002258 8D 82            [24] 6788 	mov	dpl,r5
      00225A 8E 83            [24] 6789 	mov	dph,r6
      00225C 8F F0            [24] 6790 	mov	b,r7
      00225E E8               [12] 6791 	mov	a,r0
      00225F 12r00r00         [24] 6792 	lcall	__gptrput
      002262 A3               [24] 6793 	inc	dptr
      002263 E9               [12] 6794 	mov	a,r1
      002264 12r00r00         [24] 6795 	lcall	__gptrput
      002267 A3               [24] 6796 	inc	dptr
      002268 EB               [12] 6797 	mov	a,r3
      002269 12r00r00         [24] 6798 	lcall	__gptrput
                                   6799 ;	ff15\source\ff.c:1735: return FR_OK;
      00226C 75 82 00         [24] 6800 	mov	dpl,#0x00
                                   6801 ;	ff15\source\ff.c:1736: }
      00226F 22               [24] 6802 	ret
                                   6803 ;------------------------------------------------------------
                                   6804 ;Allocation info for local variables in function 'dir_next'
                                   6805 ;------------------------------------------------------------
                                   6806 ;sloc0                     Allocated with name '_dir_next_sloc0_1_0'
                                   6807 ;sloc1                     Allocated with name '_dir_next_sloc1_1_0'
                                   6808 ;sloc2                     Allocated with name '_dir_next_sloc2_1_0'
                                   6809 ;sloc3                     Allocated with name '_dir_next_sloc3_1_0'
                                   6810 ;sloc4                     Allocated with name '_dir_next_sloc4_1_0'
                                   6811 ;sloc5                     Allocated with name '_dir_next_sloc5_1_0'
                                   6812 ;stretch                   Allocated with name '_dir_next_PARM_2'
                                   6813 ;dp                        Allocated with name '_dir_next_dp_65536_145'
                                   6814 ;ofs                       Allocated with name '_dir_next_ofs_65536_146'
                                   6815 ;clst                      Allocated with name '_dir_next_clst_65536_146'
                                   6816 ;fs                        Allocated with name '_dir_next_fs_65536_146'
                                   6817 ;------------------------------------------------------------
                                   6818 ;	ff15\source\ff.c:1745: static FRESULT dir_next (	/* FR_OK(0):succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
                                   6819 ;	-----------------------------------------
                                   6820 ;	 function dir_next
                                   6821 ;	-----------------------------------------
      002270                       6822 _dir_next:
      002270 AF F0            [24] 6823 	mov	r7,b
      002272 AE 83            [24] 6824 	mov	r6,dph
      002274 E5 82            [12] 6825 	mov	a,dpl
      002276 90r00r76         [24] 6826 	mov	dptr,#_dir_next_dp_65536_145
      002279 F0               [24] 6827 	movx	@dptr,a
      00227A EE               [12] 6828 	mov	a,r6
      00227B A3               [24] 6829 	inc	dptr
      00227C F0               [24] 6830 	movx	@dptr,a
      00227D EF               [12] 6831 	mov	a,r7
      00227E A3               [24] 6832 	inc	dptr
      00227F F0               [24] 6833 	movx	@dptr,a
                                   6834 ;	ff15\source\ff.c:1751: FATFS *fs = dp->obj.fs;
      002280 90r00r76         [24] 6835 	mov	dptr,#_dir_next_dp_65536_145
      002283 E0               [24] 6836 	movx	a,@dptr
      002284 F5*7E            [12] 6837 	mov	_dir_next_sloc0_1_0,a
      002286 A3               [24] 6838 	inc	dptr
      002287 E0               [24] 6839 	movx	a,@dptr
      002288 F5*7F            [12] 6840 	mov	(_dir_next_sloc0_1_0 + 1),a
      00228A A3               [24] 6841 	inc	dptr
      00228B E0               [24] 6842 	movx	a,@dptr
      00228C F5*80            [12] 6843 	mov	(_dir_next_sloc0_1_0 + 2),a
      00228E 85*7E 82         [24] 6844 	mov	dpl,_dir_next_sloc0_1_0
      002291 85*7F 83         [24] 6845 	mov	dph,(_dir_next_sloc0_1_0 + 1)
      002294 85*80 F0         [24] 6846 	mov	b,(_dir_next_sloc0_1_0 + 2)
      002297 12r00r00         [24] 6847 	lcall	__gptrget
      00229A F5*8D            [12] 6848 	mov	_dir_next_sloc4_1_0,a
      00229C A3               [24] 6849 	inc	dptr
      00229D 12r00r00         [24] 6850 	lcall	__gptrget
      0022A0 F5*8E            [12] 6851 	mov	(_dir_next_sloc4_1_0 + 1),a
      0022A2 A3               [24] 6852 	inc	dptr
      0022A3 12r00r00         [24] 6853 	lcall	__gptrget
      0022A6 F5*8F            [12] 6854 	mov	(_dir_next_sloc4_1_0 + 2),a
                                   6855 ;	ff15\source\ff.c:1754: ofs = dp->dptr + SZDIRE;	/* Next entry */
      0022A8 74 0F            [12] 6856 	mov	a,#0x0f
      0022AA 25*7E            [12] 6857 	add	a,_dir_next_sloc0_1_0
      0022AC F8               [12] 6858 	mov	r0,a
      0022AD E4               [12] 6859 	clr	a
      0022AE 35*7F            [12] 6860 	addc	a,(_dir_next_sloc0_1_0 + 1)
      0022B0 F9               [12] 6861 	mov	r1,a
      0022B1 AF*80            [24] 6862 	mov	r7,(_dir_next_sloc0_1_0 + 2)
      0022B3 88 82            [24] 6863 	mov	dpl,r0
      0022B5 89 83            [24] 6864 	mov	dph,r1
      0022B7 8F F0            [24] 6865 	mov	b,r7
      0022B9 12r00r00         [24] 6866 	lcall	__gptrget
      0022BC F8               [12] 6867 	mov	r0,a
      0022BD A3               [24] 6868 	inc	dptr
      0022BE 12r00r00         [24] 6869 	lcall	__gptrget
      0022C1 F9               [12] 6870 	mov	r1,a
      0022C2 A3               [24] 6871 	inc	dptr
      0022C3 12r00r00         [24] 6872 	lcall	__gptrget
      0022C6 FF               [12] 6873 	mov	r7,a
      0022C7 A3               [24] 6874 	inc	dptr
      0022C8 12r00r00         [24] 6875 	lcall	__gptrget
      0022CB FE               [12] 6876 	mov	r6,a
      0022CC 74 20            [12] 6877 	mov	a,#0x20
      0022CE 28               [12] 6878 	add	a,r0
      0022CF F5*81            [12] 6879 	mov	_dir_next_sloc1_1_0,a
      0022D1 E4               [12] 6880 	clr	a
      0022D2 39               [12] 6881 	addc	a,r1
      0022D3 F5*82            [12] 6882 	mov	(_dir_next_sloc1_1_0 + 1),a
      0022D5 E4               [12] 6883 	clr	a
      0022D6 3F               [12] 6884 	addc	a,r7
      0022D7 F5*83            [12] 6885 	mov	(_dir_next_sloc1_1_0 + 2),a
      0022D9 E4               [12] 6886 	clr	a
      0022DA 3E               [12] 6887 	addc	a,r6
      0022DB F5*84            [12] 6888 	mov	(_dir_next_sloc1_1_0 + 3),a
                                   6889 ;	ff15\source\ff.c:1755: if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) dp->sect = 0;	/* Disable it if the offset reached the max value */
      0022DD C3               [12] 6890 	clr	c
      0022DE E5*83            [12] 6891 	mov	a,(_dir_next_sloc1_1_0 + 2)
      0022E0 94 20            [12] 6892 	subb	a,#0x20
      0022E2 E5*84            [12] 6893 	mov	a,(_dir_next_sloc1_1_0 + 3)
      0022E4 94 00            [12] 6894 	subb	a,#0x00
      0022E6 40 21            [24] 6895 	jc	00102$
      0022E8 74 17            [12] 6896 	mov	a,#0x17
      0022EA 25*7E            [12] 6897 	add	a,_dir_next_sloc0_1_0
      0022EC F8               [12] 6898 	mov	r0,a
      0022ED E4               [12] 6899 	clr	a
      0022EE 35*7F            [12] 6900 	addc	a,(_dir_next_sloc0_1_0 + 1)
      0022F0 FE               [12] 6901 	mov	r6,a
      0022F1 AF*80            [24] 6902 	mov	r7,(_dir_next_sloc0_1_0 + 2)
      0022F3 88 82            [24] 6903 	mov	dpl,r0
      0022F5 8E 83            [24] 6904 	mov	dph,r6
      0022F7 8F F0            [24] 6905 	mov	b,r7
      0022F9 E4               [12] 6906 	clr	a
      0022FA 12r00r00         [24] 6907 	lcall	__gptrput
      0022FD A3               [24] 6908 	inc	dptr
      0022FE 12r00r00         [24] 6909 	lcall	__gptrput
      002301 A3               [24] 6910 	inc	dptr
      002302 12r00r00         [24] 6911 	lcall	__gptrput
      002305 A3               [24] 6912 	inc	dptr
      002306 12r00r00         [24] 6913 	lcall	__gptrput
      002309                       6914 00102$:
                                   6915 ;	ff15\source\ff.c:1756: if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
      002309 90r00r76         [24] 6916 	mov	dptr,#_dir_next_dp_65536_145
      00230C E0               [24] 6917 	movx	a,@dptr
      00230D FD               [12] 6918 	mov	r5,a
      00230E A3               [24] 6919 	inc	dptr
      00230F E0               [24] 6920 	movx	a,@dptr
      002310 FE               [12] 6921 	mov	r6,a
      002311 A3               [24] 6922 	inc	dptr
      002312 E0               [24] 6923 	movx	a,@dptr
      002313 FF               [12] 6924 	mov	r7,a
      002314 74 17            [12] 6925 	mov	a,#0x17
      002316 2D               [12] 6926 	add	a,r5
      002317 F5*7E            [12] 6927 	mov	_dir_next_sloc0_1_0,a
      002319 E4               [12] 6928 	clr	a
      00231A 3E               [12] 6929 	addc	a,r6
      00231B F5*7F            [12] 6930 	mov	(_dir_next_sloc0_1_0 + 1),a
      00231D 8F*80            [24] 6931 	mov	(_dir_next_sloc0_1_0 + 2),r7
      00231F 85*7E 82         [24] 6932 	mov	dpl,_dir_next_sloc0_1_0
      002322 85*7F 83         [24] 6933 	mov	dph,(_dir_next_sloc0_1_0 + 1)
      002325 85*80 F0         [24] 6934 	mov	b,(_dir_next_sloc0_1_0 + 2)
      002328 12r00r00         [24] 6935 	lcall	__gptrget
      00232B F5*85            [12] 6936 	mov	_dir_next_sloc2_1_0,a
      00232D A3               [24] 6937 	inc	dptr
      00232E 12r00r00         [24] 6938 	lcall	__gptrget
      002331 F5*86            [12] 6939 	mov	(_dir_next_sloc2_1_0 + 1),a
      002333 A3               [24] 6940 	inc	dptr
      002334 12r00r00         [24] 6941 	lcall	__gptrget
      002337 F5*87            [12] 6942 	mov	(_dir_next_sloc2_1_0 + 2),a
      002339 A3               [24] 6943 	inc	dptr
      00233A 12r00r00         [24] 6944 	lcall	__gptrget
      00233D F5*88            [12] 6945 	mov	(_dir_next_sloc2_1_0 + 3),a
      00233F E5*85            [12] 6946 	mov	a,_dir_next_sloc2_1_0
      002341 45*86            [12] 6947 	orl	a,(_dir_next_sloc2_1_0 + 1)
      002343 45*87            [12] 6948 	orl	a,(_dir_next_sloc2_1_0 + 2)
      002345 45*88            [12] 6949 	orl	a,(_dir_next_sloc2_1_0 + 3)
      002347 70 04            [24] 6950 	jnz	00104$
      002349 75 82 04         [24] 6951 	mov	dpl,#0x04
      00234C 22               [24] 6952 	ret
      00234D                       6953 00104$:
                                   6954 ;	ff15\source\ff.c:1758: if (ofs % SS(fs) == 0) {	/* Sector changed? */
      00234D 85*81*89         [24] 6955 	mov	_dir_next_sloc3_1_0,_dir_next_sloc1_1_0
      002350 74 01            [12] 6956 	mov	a,#0x01
      002352 55*82            [12] 6957 	anl	a,(_dir_next_sloc1_1_0 + 1)
      002354 F5*8A            [12] 6958 	mov	(_dir_next_sloc3_1_0 + 1),a
      002356 E4               [12] 6959 	clr	a
      002357 F5*8B            [12] 6960 	mov	(_dir_next_sloc3_1_0 + 2),a
      002359 F5*8C            [12] 6961 	mov	(_dir_next_sloc3_1_0 + 3),a
      00235B E5*89            [12] 6962 	mov	a,_dir_next_sloc3_1_0
      00235D 45*8A            [12] 6963 	orl	a,(_dir_next_sloc3_1_0 + 1)
      00235F 45*8B            [12] 6964 	orl	a,(_dir_next_sloc3_1_0 + 2)
      002361 45*8C            [12] 6965 	orl	a,(_dir_next_sloc3_1_0 + 3)
      002363 60 03            [24] 6966 	jz	00198$
      002365 02r26r93         [24] 6967 	ljmp	00131$
      002368                       6968 00198$:
                                   6969 ;	ff15\source\ff.c:1759: dp->sect++;				/* Next sector */
      002368 74 01            [12] 6970 	mov	a,#0x01
      00236A 25*85            [12] 6971 	add	a,_dir_next_sloc2_1_0
      00236C F8               [12] 6972 	mov	r0,a
      00236D E4               [12] 6973 	clr	a
      00236E 35*86            [12] 6974 	addc	a,(_dir_next_sloc2_1_0 + 1)
      002370 F9               [12] 6975 	mov	r1,a
      002371 E4               [12] 6976 	clr	a
      002372 35*87            [12] 6977 	addc	a,(_dir_next_sloc2_1_0 + 2)
      002374 FB               [12] 6978 	mov	r3,a
      002375 E4               [12] 6979 	clr	a
      002376 35*88            [12] 6980 	addc	a,(_dir_next_sloc2_1_0 + 3)
      002378 FC               [12] 6981 	mov	r4,a
      002379 85*7E 82         [24] 6982 	mov	dpl,_dir_next_sloc0_1_0
      00237C 85*7F 83         [24] 6983 	mov	dph,(_dir_next_sloc0_1_0 + 1)
      00237F 85*80 F0         [24] 6984 	mov	b,(_dir_next_sloc0_1_0 + 2)
      002382 E8               [12] 6985 	mov	a,r0
      002383 12r00r00         [24] 6986 	lcall	__gptrput
      002386 A3               [24] 6987 	inc	dptr
      002387 E9               [12] 6988 	mov	a,r1
      002388 12r00r00         [24] 6989 	lcall	__gptrput
      00238B A3               [24] 6990 	inc	dptr
      00238C EB               [12] 6991 	mov	a,r3
      00238D 12r00r00         [24] 6992 	lcall	__gptrput
      002390 A3               [24] 6993 	inc	dptr
      002391 EC               [12] 6994 	mov	a,r4
      002392 12r00r00         [24] 6995 	lcall	__gptrput
                                   6996 ;	ff15\source\ff.c:1761: if (dp->clust == 0) {	/* Static table */
      002395 74 13            [12] 6997 	mov	a,#0x13
      002397 2D               [12] 6998 	add	a,r5
      002398 FA               [12] 6999 	mov	r2,a
      002399 E4               [12] 7000 	clr	a
      00239A 3E               [12] 7001 	addc	a,r6
      00239B FB               [12] 7002 	mov	r3,a
      00239C 8F 04            [24] 7003 	mov	ar4,r7
      00239E 8A 82            [24] 7004 	mov	dpl,r2
      0023A0 8B 83            [24] 7005 	mov	dph,r3
      0023A2 8C F0            [24] 7006 	mov	b,r4
      0023A4 12r00r00         [24] 7007 	lcall	__gptrget
      0023A7 F5*85            [12] 7008 	mov	_dir_next_sloc2_1_0,a
      0023A9 A3               [24] 7009 	inc	dptr
      0023AA 12r00r00         [24] 7010 	lcall	__gptrget
      0023AD F5*86            [12] 7011 	mov	(_dir_next_sloc2_1_0 + 1),a
      0023AF A3               [24] 7012 	inc	dptr
      0023B0 12r00r00         [24] 7013 	lcall	__gptrget
      0023B3 F5*87            [12] 7014 	mov	(_dir_next_sloc2_1_0 + 2),a
      0023B5 A3               [24] 7015 	inc	dptr
      0023B6 12r00r00         [24] 7016 	lcall	__gptrget
      0023B9 F5*88            [12] 7017 	mov	(_dir_next_sloc2_1_0 + 3),a
      0023BB E5*85            [12] 7018 	mov	a,_dir_next_sloc2_1_0
      0023BD 45*86            [12] 7019 	orl	a,(_dir_next_sloc2_1_0 + 1)
      0023BF 45*87            [12] 7020 	orl	a,(_dir_next_sloc2_1_0 + 2)
      0023C1 45*88            [12] 7021 	orl	a,(_dir_next_sloc2_1_0 + 3)
      0023C3 60 03            [24] 7022 	jz	00199$
      0023C5 02r24r55         [24] 7023 	ljmp	00128$
      0023C8                       7024 00199$:
                                   7025 ;	ff15\source\ff.c:1762: if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
      0023C8 85*81*90         [24] 7026 	mov	_dir_next_sloc5_1_0,_dir_next_sloc1_1_0
      0023CB E5*82            [12] 7027 	mov	a,(_dir_next_sloc1_1_0 + 1)
      0023CD C4               [12] 7028 	swap	a
      0023CE 03               [12] 7029 	rr	a
      0023CF C5*90            [12] 7030 	xch	a,_dir_next_sloc5_1_0
      0023D1 C4               [12] 7031 	swap	a
      0023D2 03               [12] 7032 	rr	a
      0023D3 54 07            [12] 7033 	anl	a,#0x07
      0023D5 65*90            [12] 7034 	xrl	a,_dir_next_sloc5_1_0
      0023D7 C5*90            [12] 7035 	xch	a,_dir_next_sloc5_1_0
      0023D9 54 07            [12] 7036 	anl	a,#0x07
      0023DB C5*90            [12] 7037 	xch	a,_dir_next_sloc5_1_0
      0023DD 65*90            [12] 7038 	xrl	a,_dir_next_sloc5_1_0
      0023DF C5*90            [12] 7039 	xch	a,_dir_next_sloc5_1_0
      0023E1 F5*91            [12] 7040 	mov	(_dir_next_sloc5_1_0 + 1),a
      0023E3 E5*83            [12] 7041 	mov	a,(_dir_next_sloc1_1_0 + 2)
      0023E5 C4               [12] 7042 	swap	a
      0023E6 03               [12] 7043 	rr	a
      0023E7 54 F8            [12] 7044 	anl	a,#0xf8
      0023E9 45*91            [12] 7045 	orl	a,(_dir_next_sloc5_1_0 + 1)
      0023EB F5*91            [12] 7046 	mov	(_dir_next_sloc5_1_0 + 1),a
      0023ED 85*83*92         [24] 7047 	mov	(_dir_next_sloc5_1_0 + 2),(_dir_next_sloc1_1_0 + 2)
      0023F0 E5*84            [12] 7048 	mov	a,(_dir_next_sloc1_1_0 + 3)
      0023F2 C4               [12] 7049 	swap	a
      0023F3 03               [12] 7050 	rr	a
      0023F4 C5*92            [12] 7051 	xch	a,(_dir_next_sloc5_1_0 + 2)
      0023F6 C4               [12] 7052 	swap	a
      0023F7 03               [12] 7053 	rr	a
      0023F8 54 07            [12] 7054 	anl	a,#0x07
      0023FA 65*92            [12] 7055 	xrl	a,(_dir_next_sloc5_1_0 + 2)
      0023FC C5*92            [12] 7056 	xch	a,(_dir_next_sloc5_1_0 + 2)
      0023FE 54 07            [12] 7057 	anl	a,#0x07
      002400 C5*92            [12] 7058 	xch	a,(_dir_next_sloc5_1_0 + 2)
      002402 65*92            [12] 7059 	xrl	a,(_dir_next_sloc5_1_0 + 2)
      002404 C5*92            [12] 7060 	xch	a,(_dir_next_sloc5_1_0 + 2)
      002406 F5*93            [12] 7061 	mov	(_dir_next_sloc5_1_0 + 3),a
      002408 74 08            [12] 7062 	mov	a,#0x08
      00240A 25*8D            [12] 7063 	add	a,_dir_next_sloc4_1_0
      00240C FA               [12] 7064 	mov	r2,a
      00240D E4               [12] 7065 	clr	a
      00240E 35*8E            [12] 7066 	addc	a,(_dir_next_sloc4_1_0 + 1)
      002410 FB               [12] 7067 	mov	r3,a
      002411 AC*8F            [24] 7068 	mov	r4,(_dir_next_sloc4_1_0 + 2)
      002413 8A 82            [24] 7069 	mov	dpl,r2
      002415 8B 83            [24] 7070 	mov	dph,r3
      002417 8C F0            [24] 7071 	mov	b,r4
      002419 12r00r00         [24] 7072 	lcall	__gptrget
      00241C FA               [12] 7073 	mov	r2,a
      00241D A3               [24] 7074 	inc	dptr
      00241E 12r00r00         [24] 7075 	lcall	__gptrget
      002421 F9               [12] 7076 	mov	r1,a
      002422 7B 00            [12] 7077 	mov	r3,#0x00
      002424 7C 00            [12] 7078 	mov	r4,#0x00
      002426 C3               [12] 7079 	clr	c
      002427 E5*90            [12] 7080 	mov	a,_dir_next_sloc5_1_0
      002429 9A               [12] 7081 	subb	a,r2
      00242A E5*91            [12] 7082 	mov	a,(_dir_next_sloc5_1_0 + 1)
      00242C 99               [12] 7083 	subb	a,r1
      00242D E5*92            [12] 7084 	mov	a,(_dir_next_sloc5_1_0 + 2)
      00242F 9B               [12] 7085 	subb	a,r3
      002430 E5*93            [12] 7086 	mov	a,(_dir_next_sloc5_1_0 + 3)
      002432 9C               [12] 7087 	subb	a,r4
      002433 50 03            [24] 7088 	jnc	00200$
      002435 02r26r93         [24] 7089 	ljmp	00131$
      002438                       7090 00200$:
                                   7091 ;	ff15\source\ff.c:1763: dp->sect = 0; return FR_NO_FILE;
      002438 85*7E 82         [24] 7092 	mov	dpl,_dir_next_sloc0_1_0
      00243B 85*7F 83         [24] 7093 	mov	dph,(_dir_next_sloc0_1_0 + 1)
      00243E 85*80 F0         [24] 7094 	mov	b,(_dir_next_sloc0_1_0 + 2)
      002441 E4               [12] 7095 	clr	a
      002442 12r00r00         [24] 7096 	lcall	__gptrput
      002445 A3               [24] 7097 	inc	dptr
      002446 12r00r00         [24] 7098 	lcall	__gptrput
      002449 A3               [24] 7099 	inc	dptr
      00244A 12r00r00         [24] 7100 	lcall	__gptrput
      00244D A3               [24] 7101 	inc	dptr
      00244E 12r00r00         [24] 7102 	lcall	__gptrput
      002451 75 82 04         [24] 7103 	mov	dpl,#0x04
      002454 22               [24] 7104 	ret
      002455                       7105 00128$:
                                   7106 ;	ff15\source\ff.c:1767: if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
      002455 C0 05            [24] 7107 	push	ar5
      002457 C0 06            [24] 7108 	push	ar6
      002459 C0 07            [24] 7109 	push	ar7
      00245B E5*84            [12] 7110 	mov	a,(_dir_next_sloc1_1_0 + 3)
      00245D 7C 00            [12] 7111 	mov	r4,#0x00
      00245F C3               [12] 7112 	clr	c
      002460 13               [12] 7113 	rrc	a
      002461 FB               [12] 7114 	mov	r3,a
      002462 E5*83            [12] 7115 	mov	a,(_dir_next_sloc1_1_0 + 2)
      002464 13               [12] 7116 	rrc	a
      002465 FA               [12] 7117 	mov	r2,a
      002466 E5*82            [12] 7118 	mov	a,(_dir_next_sloc1_1_0 + 1)
      002468 13               [12] 7119 	rrc	a
      002469 F9               [12] 7120 	mov	r1,a
      00246A 74 0A            [12] 7121 	mov	a,#0x0a
      00246C 25*8D            [12] 7122 	add	a,_dir_next_sloc4_1_0
      00246E F8               [12] 7123 	mov	r0,a
      00246F E4               [12] 7124 	clr	a
      002470 35*8E            [12] 7125 	addc	a,(_dir_next_sloc4_1_0 + 1)
      002472 FE               [12] 7126 	mov	r6,a
      002473 AF*8F            [24] 7127 	mov	r7,(_dir_next_sloc4_1_0 + 2)
      002475 88 82            [24] 7128 	mov	dpl,r0
      002477 8E 83            [24] 7129 	mov	dph,r6
      002479 8F F0            [24] 7130 	mov	b,r7
      00247B 12r00r00         [24] 7131 	lcall	__gptrget
      00247E F8               [12] 7132 	mov	r0,a
      00247F A3               [24] 7133 	inc	dptr
      002480 12r00r00         [24] 7134 	lcall	__gptrget
      002483 FE               [12] 7135 	mov	r6,a
      002484 18               [12] 7136 	dec	r0
      002485 B8 FF 01         [24] 7137 	cjne	r0,#0xff,00201$
      002488 1E               [12] 7138 	dec	r6
      002489                       7139 00201$:
      002489 E4               [12] 7140 	clr	a
      00248A FF               [12] 7141 	mov	r7,a
      00248B FD               [12] 7142 	mov	r5,a
      00248C E8               [12] 7143 	mov	a,r0
      00248D 52 01            [12] 7144 	anl	ar1,a
      00248F EE               [12] 7145 	mov	a,r6
      002490 52 02            [12] 7146 	anl	ar2,a
      002492 EF               [12] 7147 	mov	a,r7
      002493 52 03            [12] 7148 	anl	ar3,a
      002495 ED               [12] 7149 	mov	a,r5
      002496 52 04            [12] 7150 	anl	ar4,a
      002498 D0 07            [24] 7151 	pop	ar7
      00249A D0 06            [24] 7152 	pop	ar6
      00249C D0 05            [24] 7153 	pop	ar5
      00249E E9               [12] 7154 	mov	a,r1
      00249F 4A               [12] 7155 	orl	a,r2
      0024A0 4B               [12] 7156 	orl	a,r3
      0024A1 4C               [12] 7157 	orl	a,r4
      0024A2 60 03            [24] 7158 	jz	00202$
      0024A4 02r26r93         [24] 7159 	ljmp	00131$
      0024A7                       7160 00202$:
                                   7161 ;	ff15\source\ff.c:1768: clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
      0024A7 90r00r30         [24] 7162 	mov	dptr,#_get_fat_PARM_2
      0024AA E5*85            [12] 7163 	mov	a,_dir_next_sloc2_1_0
      0024AC F0               [24] 7164 	movx	@dptr,a
      0024AD E5*86            [12] 7165 	mov	a,(_dir_next_sloc2_1_0 + 1)
      0024AF A3               [24] 7166 	inc	dptr
      0024B0 F0               [24] 7167 	movx	@dptr,a
      0024B1 E5*87            [12] 7168 	mov	a,(_dir_next_sloc2_1_0 + 2)
      0024B3 A3               [24] 7169 	inc	dptr
      0024B4 F0               [24] 7170 	movx	@dptr,a
      0024B5 E5*88            [12] 7171 	mov	a,(_dir_next_sloc2_1_0 + 3)
      0024B7 A3               [24] 7172 	inc	dptr
      0024B8 F0               [24] 7173 	movx	@dptr,a
      0024B9 8D 82            [24] 7174 	mov	dpl,r5
      0024BB 8E 83            [24] 7175 	mov	dph,r6
      0024BD 8F F0            [24] 7176 	mov	b,r7
      0024BF 12r09rFE         [24] 7177 	lcall	_get_fat
      0024C2 AC 82            [24] 7178 	mov	r4,dpl
      0024C4 AD 83            [24] 7179 	mov	r5,dph
      0024C6 AE F0            [24] 7180 	mov	r6,b
      0024C8 FF               [12] 7181 	mov	r7,a
      0024C9 90r00r79         [24] 7182 	mov	dptr,#_dir_next_clst_65536_146
      0024CC EC               [12] 7183 	mov	a,r4
      0024CD F0               [24] 7184 	movx	@dptr,a
      0024CE ED               [12] 7185 	mov	a,r5
      0024CF A3               [24] 7186 	inc	dptr
      0024D0 F0               [24] 7187 	movx	@dptr,a
      0024D1 EE               [12] 7188 	mov	a,r6
      0024D2 A3               [24] 7189 	inc	dptr
      0024D3 F0               [24] 7190 	movx	@dptr,a
      0024D4 EF               [12] 7191 	mov	a,r7
      0024D5 A3               [24] 7192 	inc	dptr
      0024D6 F0               [24] 7193 	movx	@dptr,a
                                   7194 ;	ff15\source\ff.c:1769: if (clst <= 1) return FR_INT_ERR;			/* Internal error */
      0024D7 C3               [12] 7195 	clr	c
      0024D8 74 01            [12] 7196 	mov	a,#0x01
      0024DA 9C               [12] 7197 	subb	a,r4
      0024DB E4               [12] 7198 	clr	a
      0024DC 9D               [12] 7199 	subb	a,r5
      0024DD E4               [12] 7200 	clr	a
      0024DE 9E               [12] 7201 	subb	a,r6
      0024DF E4               [12] 7202 	clr	a
      0024E0 9F               [12] 7203 	subb	a,r7
      0024E1 40 04            [24] 7204 	jc	00108$
      0024E3 75 82 02         [24] 7205 	mov	dpl,#0x02
      0024E6 22               [24] 7206 	ret
      0024E7                       7207 00108$:
                                   7208 ;	ff15\source\ff.c:1770: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
      0024E7 BC FF 0D         [24] 7209 	cjne	r4,#0xff,00110$
      0024EA BD FF 0A         [24] 7210 	cjne	r5,#0xff,00110$
      0024ED BE FF 07         [24] 7211 	cjne	r6,#0xff,00110$
      0024F0 BF FF 04         [24] 7212 	cjne	r7,#0xff,00110$
      0024F3 75 82 01         [24] 7213 	mov	dpl,#0x01
      0024F6 22               [24] 7214 	ret
      0024F7                       7215 00110$:
                                   7216 ;	ff15\source\ff.c:1771: if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
      0024F7 74 14            [12] 7217 	mov	a,#0x14
      0024F9 25*8D            [12] 7218 	add	a,_dir_next_sloc4_1_0
      0024FB FB               [12] 7219 	mov	r3,a
      0024FC E4               [12] 7220 	clr	a
      0024FD 35*8E            [12] 7221 	addc	a,(_dir_next_sloc4_1_0 + 1)
      0024FF F9               [12] 7222 	mov	r1,a
      002500 AA*8F            [24] 7223 	mov	r2,(_dir_next_sloc4_1_0 + 2)
      002502 8B 82            [24] 7224 	mov	dpl,r3
      002504 89 83            [24] 7225 	mov	dph,r1
      002506 8A F0            [24] 7226 	mov	b,r2
      002508 12r00r00         [24] 7227 	lcall	__gptrget
      00250B F8               [12] 7228 	mov	r0,a
      00250C A3               [24] 7229 	inc	dptr
      00250D 12r00r00         [24] 7230 	lcall	__gptrget
      002510 F9               [12] 7231 	mov	r1,a
      002511 A3               [24] 7232 	inc	dptr
      002512 12r00r00         [24] 7233 	lcall	__gptrget
      002515 FA               [12] 7234 	mov	r2,a
      002516 A3               [24] 7235 	inc	dptr
      002517 12r00r00         [24] 7236 	lcall	__gptrget
      00251A FB               [12] 7237 	mov	r3,a
      00251B C3               [12] 7238 	clr	c
      00251C EC               [12] 7239 	mov	a,r4
      00251D 98               [12] 7240 	subb	a,r0
      00251E ED               [12] 7241 	mov	a,r5
      00251F 99               [12] 7242 	subb	a,r1
      002520 EE               [12] 7243 	mov	a,r6
      002521 9A               [12] 7244 	subb	a,r2
      002522 EF               [12] 7245 	mov	a,r7
      002523 9B               [12] 7246 	subb	a,r3
      002524 50 03            [24] 7247 	jnc	00206$
      002526 02r26r06         [24] 7248 	ljmp	00124$
      002529                       7249 00206$:
                                   7250 ;	ff15\source\ff.c:1773: if (!stretch) {								/* If no stretch, report EOT */
      002529 90r00r74         [24] 7251 	mov	dptr,#_dir_next_PARM_2
      00252C E0               [24] 7252 	movx	a,@dptr
      00252D F5 F0            [12] 7253 	mov	b,a
      00252F A3               [24] 7254 	inc	dptr
      002530 E0               [24] 7255 	movx	a,@dptr
      002531 45 F0            [12] 7256 	orl	a,b
      002533 70 2C            [24] 7257 	jnz	00112$
                                   7258 ;	ff15\source\ff.c:1774: dp->sect = 0; return FR_NO_FILE;
      002535 90r00r76         [24] 7259 	mov	dptr,#_dir_next_dp_65536_145
      002538 E0               [24] 7260 	movx	a,@dptr
      002539 FD               [12] 7261 	mov	r5,a
      00253A A3               [24] 7262 	inc	dptr
      00253B E0               [24] 7263 	movx	a,@dptr
      00253C FE               [12] 7264 	mov	r6,a
      00253D A3               [24] 7265 	inc	dptr
      00253E E0               [24] 7266 	movx	a,@dptr
      00253F FF               [12] 7267 	mov	r7,a
      002540 74 17            [12] 7268 	mov	a,#0x17
      002542 2D               [12] 7269 	add	a,r5
      002543 FD               [12] 7270 	mov	r5,a
      002544 E4               [12] 7271 	clr	a
      002545 3E               [12] 7272 	addc	a,r6
      002546 FE               [12] 7273 	mov	r6,a
      002547 8D 82            [24] 7274 	mov	dpl,r5
      002549 8E 83            [24] 7275 	mov	dph,r6
      00254B 8F F0            [24] 7276 	mov	b,r7
      00254D E4               [12] 7277 	clr	a
      00254E 12r00r00         [24] 7278 	lcall	__gptrput
      002551 A3               [24] 7279 	inc	dptr
      002552 12r00r00         [24] 7280 	lcall	__gptrput
      002555 A3               [24] 7281 	inc	dptr
      002556 12r00r00         [24] 7282 	lcall	__gptrput
      002559 A3               [24] 7283 	inc	dptr
      00255A 12r00r00         [24] 7284 	lcall	__gptrput
      00255D 75 82 04         [24] 7285 	mov	dpl,#0x04
      002560 22               [24] 7286 	ret
      002561                       7287 00112$:
                                   7288 ;	ff15\source\ff.c:1776: clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
      002561 90r00r76         [24] 7289 	mov	dptr,#_dir_next_dp_65536_145
      002564 E0               [24] 7290 	movx	a,@dptr
      002565 FD               [12] 7291 	mov	r5,a
      002566 A3               [24] 7292 	inc	dptr
      002567 E0               [24] 7293 	movx	a,@dptr
      002568 FE               [12] 7294 	mov	r6,a
      002569 A3               [24] 7295 	inc	dptr
      00256A E0               [24] 7296 	movx	a,@dptr
      00256B FF               [12] 7297 	mov	r7,a
      00256C 74 13            [12] 7298 	mov	a,#0x13
      00256E 2D               [12] 7299 	add	a,r5
      00256F FC               [12] 7300 	mov	r4,a
      002570 E4               [12] 7301 	clr	a
      002571 3E               [12] 7302 	addc	a,r6
      002572 FA               [12] 7303 	mov	r2,a
      002573 8F 03            [24] 7304 	mov	ar3,r7
      002575 8C 82            [24] 7305 	mov	dpl,r4
      002577 8A 83            [24] 7306 	mov	dph,r2
      002579 8B F0            [24] 7307 	mov	b,r3
      00257B 12r00r00         [24] 7308 	lcall	__gptrget
      00257E F9               [12] 7309 	mov	r1,a
      00257F A3               [24] 7310 	inc	dptr
      002580 12r00r00         [24] 7311 	lcall	__gptrget
      002583 FA               [12] 7312 	mov	r2,a
      002584 A3               [24] 7313 	inc	dptr
      002585 12r00r00         [24] 7314 	lcall	__gptrget
      002588 FB               [12] 7315 	mov	r3,a
      002589 A3               [24] 7316 	inc	dptr
      00258A 12r00r00         [24] 7317 	lcall	__gptrget
      00258D FC               [12] 7318 	mov	r4,a
      00258E 90r00r52         [24] 7319 	mov	dptr,#_create_chain_PARM_2
      002591 E9               [12] 7320 	mov	a,r1
      002592 F0               [24] 7321 	movx	@dptr,a
      002593 EA               [12] 7322 	mov	a,r2
      002594 A3               [24] 7323 	inc	dptr
      002595 F0               [24] 7324 	movx	@dptr,a
      002596 EB               [12] 7325 	mov	a,r3
      002597 A3               [24] 7326 	inc	dptr
      002598 F0               [24] 7327 	movx	@dptr,a
      002599 EC               [12] 7328 	mov	a,r4
      00259A A3               [24] 7329 	inc	dptr
      00259B F0               [24] 7330 	movx	@dptr,a
      00259C 8D 82            [24] 7331 	mov	dpl,r5
      00259E 8E 83            [24] 7332 	mov	dph,r6
      0025A0 8F F0            [24] 7333 	mov	b,r7
      0025A2 12r15rF5         [24] 7334 	lcall	_create_chain
      0025A5 AC 82            [24] 7335 	mov	r4,dpl
      0025A7 AD 83            [24] 7336 	mov	r5,dph
      0025A9 AE F0            [24] 7337 	mov	r6,b
      0025AB FF               [12] 7338 	mov	r7,a
      0025AC 90r00r79         [24] 7339 	mov	dptr,#_dir_next_clst_65536_146
      0025AF EC               [12] 7340 	mov	a,r4
      0025B0 F0               [24] 7341 	movx	@dptr,a
      0025B1 ED               [12] 7342 	mov	a,r5
      0025B2 A3               [24] 7343 	inc	dptr
      0025B3 F0               [24] 7344 	movx	@dptr,a
      0025B4 EE               [12] 7345 	mov	a,r6
      0025B5 A3               [24] 7346 	inc	dptr
      0025B6 F0               [24] 7347 	movx	@dptr,a
      0025B7 EF               [12] 7348 	mov	a,r7
      0025B8 A3               [24] 7349 	inc	dptr
      0025B9 F0               [24] 7350 	movx	@dptr,a
                                   7351 ;	ff15\source\ff.c:1777: if (clst == 0) return FR_DENIED;			/* No free cluster */
      0025BA EC               [12] 7352 	mov	a,r4
      0025BB 4D               [12] 7353 	orl	a,r5
      0025BC 4E               [12] 7354 	orl	a,r6
      0025BD 4F               [12] 7355 	orl	a,r7
      0025BE 70 04            [24] 7356 	jnz	00114$
      0025C0 75 82 07         [24] 7357 	mov	dpl,#0x07
      0025C3 22               [24] 7358 	ret
      0025C4                       7359 00114$:
                                   7360 ;	ff15\source\ff.c:1778: if (clst == 1) return FR_INT_ERR;			/* Internal error */
      0025C4 BC 01 0D         [24] 7361 	cjne	r4,#0x01,00116$
      0025C7 BD 00 0A         [24] 7362 	cjne	r5,#0x00,00116$
      0025CA BE 00 07         [24] 7363 	cjne	r6,#0x00,00116$
      0025CD BF 00 04         [24] 7364 	cjne	r7,#0x00,00116$
      0025D0 75 82 02         [24] 7365 	mov	dpl,#0x02
      0025D3 22               [24] 7366 	ret
      0025D4                       7367 00116$:
                                   7368 ;	ff15\source\ff.c:1779: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
      0025D4 BC FF 0D         [24] 7369 	cjne	r4,#0xff,00118$
      0025D7 BD FF 0A         [24] 7370 	cjne	r5,#0xff,00118$
      0025DA BE FF 07         [24] 7371 	cjne	r6,#0xff,00118$
      0025DD BF FF 04         [24] 7372 	cjne	r7,#0xff,00118$
      0025E0 75 82 01         [24] 7373 	mov	dpl,#0x01
      0025E3 22               [24] 7374 	ret
      0025E4                       7375 00118$:
                                   7376 ;	ff15\source\ff.c:1780: if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
      0025E4 90r00r62         [24] 7377 	mov	dptr,#_dir_clear_PARM_2
      0025E7 EC               [12] 7378 	mov	a,r4
      0025E8 F0               [24] 7379 	movx	@dptr,a
      0025E9 ED               [12] 7380 	mov	a,r5
      0025EA A3               [24] 7381 	inc	dptr
      0025EB F0               [24] 7382 	movx	@dptr,a
      0025EC EE               [12] 7383 	mov	a,r6
      0025ED A3               [24] 7384 	inc	dptr
      0025EE F0               [24] 7385 	movx	@dptr,a
      0025EF EF               [12] 7386 	mov	a,r7
      0025F0 A3               [24] 7387 	inc	dptr
      0025F1 F0               [24] 7388 	movx	@dptr,a
      0025F2 85*8D 82         [24] 7389 	mov	dpl,_dir_next_sloc4_1_0
      0025F5 85*8E 83         [24] 7390 	mov	dph,(_dir_next_sloc4_1_0 + 1)
      0025F8 85*8F F0         [24] 7391 	mov	b,(_dir_next_sloc4_1_0 + 2)
      0025FB 12r1Cr12         [24] 7392 	lcall	_dir_clear
      0025FE E5 82            [12] 7393 	mov	a,dpl
      002600 60 04            [24] 7394 	jz	00124$
      002602 75 82 01         [24] 7395 	mov	dpl,#0x01
      002605 22               [24] 7396 	ret
                                   7397 ;	ff15\source\ff.c:1781: if (FF_FS_EXFAT) dp->obj.stat |= 4;			/* exFAT: The directory has been stretched */
      002606                       7398 00124$:
                                   7399 ;	ff15\source\ff.c:1787: dp->clust = clst;		/* Initialize data for new cluster */
      002606 90r00r76         [24] 7400 	mov	dptr,#_dir_next_dp_65536_145
      002609 E0               [24] 7401 	movx	a,@dptr
      00260A FD               [12] 7402 	mov	r5,a
      00260B A3               [24] 7403 	inc	dptr
      00260C E0               [24] 7404 	movx	a,@dptr
      00260D FE               [12] 7405 	mov	r6,a
      00260E A3               [24] 7406 	inc	dptr
      00260F E0               [24] 7407 	movx	a,@dptr
      002610 FF               [12] 7408 	mov	r7,a
      002611 74 13            [12] 7409 	mov	a,#0x13
      002613 2D               [12] 7410 	add	a,r5
      002614 F5*90            [12] 7411 	mov	_dir_next_sloc5_1_0,a
      002616 E4               [12] 7412 	clr	a
      002617 3E               [12] 7413 	addc	a,r6
      002618 F5*91            [12] 7414 	mov	(_dir_next_sloc5_1_0 + 1),a
      00261A 8F*92            [24] 7415 	mov	(_dir_next_sloc5_1_0 + 2),r7
      00261C 90r00r79         [24] 7416 	mov	dptr,#_dir_next_clst_65536_146
      00261F E0               [24] 7417 	movx	a,@dptr
      002620 F8               [12] 7418 	mov	r0,a
      002621 A3               [24] 7419 	inc	dptr
      002622 E0               [24] 7420 	movx	a,@dptr
      002623 FB               [12] 7421 	mov	r3,a
      002624 A3               [24] 7422 	inc	dptr
      002625 E0               [24] 7423 	movx	a,@dptr
      002626 F9               [12] 7424 	mov	r1,a
      002627 A3               [24] 7425 	inc	dptr
      002628 E0               [24] 7426 	movx	a,@dptr
      002629 FC               [12] 7427 	mov	r4,a
      00262A 85*90 82         [24] 7428 	mov	dpl,_dir_next_sloc5_1_0
      00262D 85*91 83         [24] 7429 	mov	dph,(_dir_next_sloc5_1_0 + 1)
      002630 85*92 F0         [24] 7430 	mov	b,(_dir_next_sloc5_1_0 + 2)
      002633 E8               [12] 7431 	mov	a,r0
      002634 12r00r00         [24] 7432 	lcall	__gptrput
      002637 A3               [24] 7433 	inc	dptr
      002638 EB               [12] 7434 	mov	a,r3
      002639 12r00r00         [24] 7435 	lcall	__gptrput
      00263C A3               [24] 7436 	inc	dptr
      00263D E9               [12] 7437 	mov	a,r1
      00263E 12r00r00         [24] 7438 	lcall	__gptrput
      002641 A3               [24] 7439 	inc	dptr
      002642 EC               [12] 7440 	mov	a,r4
      002643 12r00r00         [24] 7441 	lcall	__gptrput
                                   7442 ;	ff15\source\ff.c:1788: dp->sect = clst2sect(fs, clst);
      002646 74 17            [12] 7443 	mov	a,#0x17
      002648 2D               [12] 7444 	add	a,r5
      002649 FD               [12] 7445 	mov	r5,a
      00264A E4               [12] 7446 	clr	a
      00264B 3E               [12] 7447 	addc	a,r6
      00264C FE               [12] 7448 	mov	r6,a
      00264D 90r00r29         [24] 7449 	mov	dptr,#_clst2sect_PARM_2
      002650 E8               [12] 7450 	mov	a,r0
      002651 F0               [24] 7451 	movx	@dptr,a
      002652 EB               [12] 7452 	mov	a,r3
      002653 A3               [24] 7453 	inc	dptr
      002654 F0               [24] 7454 	movx	@dptr,a
      002655 E9               [12] 7455 	mov	a,r1
      002656 A3               [24] 7456 	inc	dptr
      002657 F0               [24] 7457 	movx	@dptr,a
      002658 EC               [12] 7458 	mov	a,r4
      002659 A3               [24] 7459 	inc	dptr
      00265A F0               [24] 7460 	movx	@dptr,a
      00265B 85*8D 82         [24] 7461 	mov	dpl,_dir_next_sloc4_1_0
      00265E 85*8E 83         [24] 7462 	mov	dph,(_dir_next_sloc4_1_0 + 1)
      002661 85*8F F0         [24] 7463 	mov	b,(_dir_next_sloc4_1_0 + 2)
      002664 C0 07            [24] 7464 	push	ar7
      002666 C0 06            [24] 7465 	push	ar6
      002668 C0 05            [24] 7466 	push	ar5
      00266A 12r08rDC         [24] 7467 	lcall	_clst2sect
      00266D A9 82            [24] 7468 	mov	r1,dpl
      00266F AA 83            [24] 7469 	mov	r2,dph
      002671 AB F0            [24] 7470 	mov	r3,b
      002673 FC               [12] 7471 	mov	r4,a
      002674 D0 05            [24] 7472 	pop	ar5
      002676 D0 06            [24] 7473 	pop	ar6
      002678 D0 07            [24] 7474 	pop	ar7
      00267A 8D 82            [24] 7475 	mov	dpl,r5
      00267C 8E 83            [24] 7476 	mov	dph,r6
      00267E 8F F0            [24] 7477 	mov	b,r7
      002680 E9               [12] 7478 	mov	a,r1
      002681 12r00r00         [24] 7479 	lcall	__gptrput
      002684 A3               [24] 7480 	inc	dptr
      002685 EA               [12] 7481 	mov	a,r2
      002686 12r00r00         [24] 7482 	lcall	__gptrput
      002689 A3               [24] 7483 	inc	dptr
      00268A EB               [12] 7484 	mov	a,r3
      00268B 12r00r00         [24] 7485 	lcall	__gptrput
      00268E A3               [24] 7486 	inc	dptr
      00268F EC               [12] 7487 	mov	a,r4
      002690 12r00r00         [24] 7488 	lcall	__gptrput
      002693                       7489 00131$:
                                   7490 ;	ff15\source\ff.c:1792: dp->dptr = ofs;						/* Current entry */
      002693 90r00r76         [24] 7491 	mov	dptr,#_dir_next_dp_65536_145
      002696 E0               [24] 7492 	movx	a,@dptr
      002697 FD               [12] 7493 	mov	r5,a
      002698 A3               [24] 7494 	inc	dptr
      002699 E0               [24] 7495 	movx	a,@dptr
      00269A FE               [12] 7496 	mov	r6,a
      00269B A3               [24] 7497 	inc	dptr
      00269C E0               [24] 7498 	movx	a,@dptr
      00269D FF               [12] 7499 	mov	r7,a
      00269E 74 0F            [12] 7500 	mov	a,#0x0f
      0026A0 2D               [12] 7501 	add	a,r5
      0026A1 FA               [12] 7502 	mov	r2,a
      0026A2 E4               [12] 7503 	clr	a
      0026A3 3E               [12] 7504 	addc	a,r6
      0026A4 FB               [12] 7505 	mov	r3,a
      0026A5 8F 04            [24] 7506 	mov	ar4,r7
      0026A7 8A 82            [24] 7507 	mov	dpl,r2
      0026A9 8B 83            [24] 7508 	mov	dph,r3
      0026AB 8C F0            [24] 7509 	mov	b,r4
      0026AD E5*81            [12] 7510 	mov	a,_dir_next_sloc1_1_0
      0026AF 12r00r00         [24] 7511 	lcall	__gptrput
      0026B2 A3               [24] 7512 	inc	dptr
      0026B3 E5*82            [12] 7513 	mov	a,(_dir_next_sloc1_1_0 + 1)
      0026B5 12r00r00         [24] 7514 	lcall	__gptrput
      0026B8 A3               [24] 7515 	inc	dptr
      0026B9 E5*83            [12] 7516 	mov	a,(_dir_next_sloc1_1_0 + 2)
      0026BB 12r00r00         [24] 7517 	lcall	__gptrput
      0026BE A3               [24] 7518 	inc	dptr
      0026BF E5*84            [12] 7519 	mov	a,(_dir_next_sloc1_1_0 + 3)
      0026C1 12r00r00         [24] 7520 	lcall	__gptrput
                                   7521 ;	ff15\source\ff.c:1793: dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
      0026C4 74 1B            [12] 7522 	mov	a,#0x1b
      0026C6 2D               [12] 7523 	add	a,r5
      0026C7 FD               [12] 7524 	mov	r5,a
      0026C8 E4               [12] 7525 	clr	a
      0026C9 3E               [12] 7526 	addc	a,r6
      0026CA FE               [12] 7527 	mov	r6,a
      0026CB 74 30            [12] 7528 	mov	a,#0x30
      0026CD 25*8D            [12] 7529 	add	a,_dir_next_sloc4_1_0
      0026CF FA               [12] 7530 	mov	r2,a
      0026D0 E4               [12] 7531 	clr	a
      0026D1 35*8E            [12] 7532 	addc	a,(_dir_next_sloc4_1_0 + 1)
      0026D3 FB               [12] 7533 	mov	r3,a
      0026D4 AC*8F            [24] 7534 	mov	r4,(_dir_next_sloc4_1_0 + 2)
      0026D6 E5*89            [12] 7535 	mov	a,_dir_next_sloc3_1_0
      0026D8 2A               [12] 7536 	add	a,r2
      0026D9 FA               [12] 7537 	mov	r2,a
      0026DA E5*8A            [12] 7538 	mov	a,(_dir_next_sloc3_1_0 + 1)
      0026DC 3B               [12] 7539 	addc	a,r3
      0026DD FB               [12] 7540 	mov	r3,a
      0026DE 8D 82            [24] 7541 	mov	dpl,r5
      0026E0 8E 83            [24] 7542 	mov	dph,r6
      0026E2 8F F0            [24] 7543 	mov	b,r7
      0026E4 EA               [12] 7544 	mov	a,r2
      0026E5 12r00r00         [24] 7545 	lcall	__gptrput
      0026E8 A3               [24] 7546 	inc	dptr
      0026E9 EB               [12] 7547 	mov	a,r3
      0026EA 12r00r00         [24] 7548 	lcall	__gptrput
      0026ED A3               [24] 7549 	inc	dptr
      0026EE EC               [12] 7550 	mov	a,r4
      0026EF 12r00r00         [24] 7551 	lcall	__gptrput
                                   7552 ;	ff15\source\ff.c:1795: return FR_OK;
      0026F2 75 82 00         [24] 7553 	mov	dpl,#0x00
                                   7554 ;	ff15\source\ff.c:1796: }
      0026F5 22               [24] 7555 	ret
                                   7556 ;------------------------------------------------------------
                                   7557 ;Allocation info for local variables in function 'dir_alloc'
                                   7558 ;------------------------------------------------------------
                                   7559 ;sloc0                     Allocated with name '_dir_alloc_sloc0_1_0'
                                   7560 ;sloc1                     Allocated with name '_dir_alloc_sloc1_1_0'
                                   7561 ;n_ent                     Allocated with name '_dir_alloc_PARM_2'
                                   7562 ;dp                        Allocated with name '_dir_alloc_dp_65536_154'
                                   7563 ;res                       Allocated with name '_dir_alloc_res_65536_155'
                                   7564 ;n                         Allocated with name '_dir_alloc_n_65536_155'
                                   7565 ;fs                        Allocated with name '_dir_alloc_fs_65536_155'
                                   7566 ;------------------------------------------------------------
                                   7567 ;	ff15\source\ff.c:1806: static FRESULT dir_alloc (	/* FR_OK(0):succeeded, !=0:error */
                                   7568 ;	-----------------------------------------
                                   7569 ;	 function dir_alloc
                                   7570 ;	-----------------------------------------
      0026F6                       7571 _dir_alloc:
      0026F6 AF F0            [24] 7572 	mov	r7,b
      0026F8 AE 83            [24] 7573 	mov	r6,dph
      0026FA E5 82            [12] 7574 	mov	a,dpl
      0026FC 90r00r7F         [24] 7575 	mov	dptr,#_dir_alloc_dp_65536_154
      0026FF F0               [24] 7576 	movx	@dptr,a
      002700 EE               [12] 7577 	mov	a,r6
      002701 A3               [24] 7578 	inc	dptr
      002702 F0               [24] 7579 	movx	@dptr,a
      002703 EF               [12] 7580 	mov	a,r7
      002704 A3               [24] 7581 	inc	dptr
      002705 F0               [24] 7582 	movx	@dptr,a
                                   7583 ;	ff15\source\ff.c:1813: FATFS *fs = dp->obj.fs;
      002706 90r00r7F         [24] 7584 	mov	dptr,#_dir_alloc_dp_65536_154
      002709 E0               [24] 7585 	movx	a,@dptr
      00270A FD               [12] 7586 	mov	r5,a
      00270B A3               [24] 7587 	inc	dptr
      00270C E0               [24] 7588 	movx	a,@dptr
      00270D FE               [12] 7589 	mov	r6,a
      00270E A3               [24] 7590 	inc	dptr
      00270F E0               [24] 7591 	movx	a,@dptr
      002710 FF               [12] 7592 	mov	r7,a
      002711 8D 82            [24] 7593 	mov	dpl,r5
      002713 8E 83            [24] 7594 	mov	dph,r6
      002715 8F F0            [24] 7595 	mov	b,r7
      002717 12r00r00         [24] 7596 	lcall	__gptrget
      00271A F5*97            [12] 7597 	mov	_dir_alloc_sloc1_1_0,a
      00271C A3               [24] 7598 	inc	dptr
      00271D 12r00r00         [24] 7599 	lcall	__gptrget
      002720 F5*98            [12] 7600 	mov	(_dir_alloc_sloc1_1_0 + 1),a
      002722 A3               [24] 7601 	inc	dptr
      002723 12r00r00         [24] 7602 	lcall	__gptrget
      002726 F5*99            [12] 7603 	mov	(_dir_alloc_sloc1_1_0 + 2),a
                                   7604 ;	ff15\source\ff.c:1816: res = dir_sdi(dp, 0);
      002728 90r00r69         [24] 7605 	mov	dptr,#_dir_sdi_PARM_2
      00272B E4               [12] 7606 	clr	a
      00272C F0               [24] 7607 	movx	@dptr,a
      00272D A3               [24] 7608 	inc	dptr
      00272E F0               [24] 7609 	movx	@dptr,a
      00272F A3               [24] 7610 	inc	dptr
      002730 F0               [24] 7611 	movx	@dptr,a
      002731 A3               [24] 7612 	inc	dptr
      002732 F0               [24] 7613 	movx	@dptr,a
      002733 8D 82            [24] 7614 	mov	dpl,r5
      002735 8E 83            [24] 7615 	mov	dph,r6
      002737 8F F0            [24] 7616 	mov	b,r7
      002739 12r1DrC4         [24] 7617 	lcall	_dir_sdi
      00273C AF 82            [24] 7618 	mov	r7,dpl
      00273E 90r00r82         [24] 7619 	mov	dptr,#_dir_alloc_res_65536_155
      002741 EF               [12] 7620 	mov	a,r7
      002742 F0               [24] 7621 	movx	@dptr,a
                                   7622 ;	ff15\source\ff.c:1817: if (res == FR_OK) {
      002743 EF               [12] 7623 	mov	a,r7
      002744 60 03            [24] 7624 	jz	00142$
      002746 02r28r5B         [24] 7625 	ljmp	00113$
      002749                       7626 00142$:
                                   7627 ;	ff15\source\ff.c:1818: n = 0;
      002749 90r00r83         [24] 7628 	mov	dptr,#_dir_alloc_n_65536_155
      00274C E4               [12] 7629 	clr	a
      00274D F0               [24] 7630 	movx	@dptr,a
      00274E A3               [24] 7631 	inc	dptr
      00274F F0               [24] 7632 	movx	@dptr,a
                                   7633 ;	ff15\source\ff.c:1819: do {
      002750 90r00r7D         [24] 7634 	mov	dptr,#_dir_alloc_PARM_2
      002753 E0               [24] 7635 	movx	a,@dptr
      002754 FE               [12] 7636 	mov	r6,a
      002755 A3               [24] 7637 	inc	dptr
      002756 E0               [24] 7638 	movx	a,@dptr
      002757 FF               [12] 7639 	mov	r7,a
      002758 90r00r7F         [24] 7640 	mov	dptr,#_dir_alloc_dp_65536_154
      00275B E0               [24] 7641 	movx	a,@dptr
      00275C F8               [12] 7642 	mov	r0,a
      00275D A3               [24] 7643 	inc	dptr
      00275E E0               [24] 7644 	movx	a,@dptr
      00275F F9               [12] 7645 	mov	r1,a
      002760 A3               [24] 7646 	inc	dptr
      002761 E0               [24] 7647 	movx	a,@dptr
      002762 FD               [12] 7648 	mov	r5,a
      002763 74 17            [12] 7649 	mov	a,#0x17
      002765 28               [12] 7650 	add	a,r0
      002766 F5*94            [12] 7651 	mov	_dir_alloc_sloc0_1_0,a
      002768 E4               [12] 7652 	clr	a
      002769 39               [12] 7653 	addc	a,r1
      00276A F5*95            [12] 7654 	mov	(_dir_alloc_sloc0_1_0 + 1),a
      00276C 8D*96            [24] 7655 	mov	(_dir_alloc_sloc0_1_0 + 2),r5
      00276E                       7656 00109$:
                                   7657 ;	ff15\source\ff.c:1820: res = move_window(fs, dp->sect);
      00276E C0 06            [24] 7658 	push	ar6
      002770 C0 07            [24] 7659 	push	ar7
      002772 85*94 82         [24] 7660 	mov	dpl,_dir_alloc_sloc0_1_0
      002775 85*95 83         [24] 7661 	mov	dph,(_dir_alloc_sloc0_1_0 + 1)
      002778 85*96 F0         [24] 7662 	mov	b,(_dir_alloc_sloc0_1_0 + 2)
      00277B 12r00r00         [24] 7663 	lcall	__gptrget
      00277E FB               [12] 7664 	mov	r3,a
      00277F A3               [24] 7665 	inc	dptr
      002780 12r00r00         [24] 7666 	lcall	__gptrget
      002783 FC               [12] 7667 	mov	r4,a
      002784 A3               [24] 7668 	inc	dptr
      002785 12r00r00         [24] 7669 	lcall	__gptrget
      002788 FE               [12] 7670 	mov	r6,a
      002789 A3               [24] 7671 	inc	dptr
      00278A 12r00r00         [24] 7672 	lcall	__gptrget
      00278D FF               [12] 7673 	mov	r7,a
      00278E 90r00r1D         [24] 7674 	mov	dptr,#_move_window_PARM_2
      002791 EB               [12] 7675 	mov	a,r3
      002792 F0               [24] 7676 	movx	@dptr,a
      002793 EC               [12] 7677 	mov	a,r4
      002794 A3               [24] 7678 	inc	dptr
      002795 F0               [24] 7679 	movx	@dptr,a
      002796 EE               [12] 7680 	mov	a,r6
      002797 A3               [24] 7681 	inc	dptr
      002798 F0               [24] 7682 	movx	@dptr,a
      002799 EF               [12] 7683 	mov	a,r7
      00279A A3               [24] 7684 	inc	dptr
      00279B F0               [24] 7685 	movx	@dptr,a
      00279C 85*97 82         [24] 7686 	mov	dpl,_dir_alloc_sloc1_1_0
      00279F 85*98 83         [24] 7687 	mov	dph,(_dir_alloc_sloc1_1_0 + 1)
      0027A2 85*99 F0         [24] 7688 	mov	b,(_dir_alloc_sloc1_1_0 + 2)
      0027A5 C0 06            [24] 7689 	push	ar6
      0027A7 C0 05            [24] 7690 	push	ar5
      0027A9 C0 01            [24] 7691 	push	ar1
      0027AB C0 00            [24] 7692 	push	ar0
      0027AD 12r05r18         [24] 7693 	lcall	_move_window
      0027B0 AF 82            [24] 7694 	mov	r7,dpl
      0027B2 D0 00            [24] 7695 	pop	ar0
      0027B4 D0 01            [24] 7696 	pop	ar1
      0027B6 D0 05            [24] 7697 	pop	ar5
      0027B8 D0 06            [24] 7698 	pop	ar6
      0027BA 90r00r82         [24] 7699 	mov	dptr,#_dir_alloc_res_65536_155
      0027BD EF               [12] 7700 	mov	a,r7
      0027BE F0               [24] 7701 	movx	@dptr,a
                                   7702 ;	ff15\source\ff.c:1821: if (res != FR_OK) break;
      0027BF EF               [12] 7703 	mov	a,r7
      0027C0 D0 07            [24] 7704 	pop	ar7
      0027C2 D0 06            [24] 7705 	pop	ar6
      0027C4 60 03            [24] 7706 	jz	00143$
      0027C6 02r28r5B         [24] 7707 	ljmp	00113$
      0027C9                       7708 00143$:
                                   7709 ;	ff15\source\ff.c:1825: if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {	/* Is the entry free? */
      0027C9 74 1B            [12] 7710 	mov	a,#0x1b
      0027CB 28               [12] 7711 	add	a,r0
      0027CC FA               [12] 7712 	mov	r2,a
      0027CD E4               [12] 7713 	clr	a
      0027CE 39               [12] 7714 	addc	a,r1
      0027CF FB               [12] 7715 	mov	r3,a
      0027D0 8D 04            [24] 7716 	mov	ar4,r5
      0027D2 8A 82            [24] 7717 	mov	dpl,r2
      0027D4 8B 83            [24] 7718 	mov	dph,r3
      0027D6 8C F0            [24] 7719 	mov	b,r4
      0027D8 12r00r00         [24] 7720 	lcall	__gptrget
      0027DB FA               [12] 7721 	mov	r2,a
      0027DC A3               [24] 7722 	inc	dptr
      0027DD 12r00r00         [24] 7723 	lcall	__gptrget
      0027E0 FB               [12] 7724 	mov	r3,a
      0027E1 A3               [24] 7725 	inc	dptr
      0027E2 12r00r00         [24] 7726 	lcall	__gptrget
      0027E5 FC               [12] 7727 	mov	r4,a
      0027E6 8A 82            [24] 7728 	mov	dpl,r2
      0027E8 8B 83            [24] 7729 	mov	dph,r3
      0027EA 8C F0            [24] 7730 	mov	b,r4
      0027EC 12r00r00         [24] 7731 	lcall	__gptrget
      0027EF FC               [12] 7732 	mov	r4,a
      0027F0 BC E5 02         [24] 7733 	cjne	r4,#0xe5,00144$
      0027F3 80 03            [24] 7734 	sjmp	00105$
      0027F5                       7735 00144$:
      0027F5 EC               [12] 7736 	mov	a,r4
      0027F6 70 1E            [24] 7737 	jnz	00106$
      0027F8                       7738 00105$:
                                   7739 ;	ff15\source\ff.c:1827: if (++n == n_ent) break;	/* Is a block of contiguous free entries found? */
      0027F8 90r00r83         [24] 7740 	mov	dptr,#_dir_alloc_n_65536_155
      0027FB E0               [24] 7741 	movx	a,@dptr
      0027FC 24 01            [12] 7742 	add	a,#0x01
      0027FE F0               [24] 7743 	movx	@dptr,a
      0027FF A3               [24] 7744 	inc	dptr
      002800 E0               [24] 7745 	movx	a,@dptr
      002801 34 00            [12] 7746 	addc	a,#0x00
      002803 F0               [24] 7747 	movx	@dptr,a
      002804 90r00r83         [24] 7748 	mov	dptr,#_dir_alloc_n_65536_155
      002807 E0               [24] 7749 	movx	a,@dptr
      002808 FB               [12] 7750 	mov	r3,a
      002809 A3               [24] 7751 	inc	dptr
      00280A E0               [24] 7752 	movx	a,@dptr
      00280B FC               [12] 7753 	mov	r4,a
      00280C EB               [12] 7754 	mov	a,r3
      00280D B5 06 0D         [24] 7755 	cjne	a,ar6,00107$
      002810 EC               [12] 7756 	mov	a,r4
      002811 B5 07 09         [24] 7757 	cjne	a,ar7,00107$
      002814 80 45            [24] 7758 	sjmp	00113$
      002816                       7759 00106$:
                                   7760 ;	ff15\source\ff.c:1829: n = 0;				/* Not a free entry, restart to search */
      002816 90r00r83         [24] 7761 	mov	dptr,#_dir_alloc_n_65536_155
      002819 E4               [12] 7762 	clr	a
      00281A F0               [24] 7763 	movx	@dptr,a
      00281B A3               [24] 7764 	inc	dptr
      00281C F0               [24] 7765 	movx	@dptr,a
      00281D                       7766 00107$:
                                   7767 ;	ff15\source\ff.c:1831: res = dir_next(dp, 1);	/* Next entry with table stretch enabled */
      00281D 90r00r7F         [24] 7768 	mov	dptr,#_dir_alloc_dp_65536_154
      002820 E0               [24] 7769 	movx	a,@dptr
      002821 FA               [12] 7770 	mov	r2,a
      002822 A3               [24] 7771 	inc	dptr
      002823 E0               [24] 7772 	movx	a,@dptr
      002824 FB               [12] 7773 	mov	r3,a
      002825 A3               [24] 7774 	inc	dptr
      002826 E0               [24] 7775 	movx	a,@dptr
      002827 FC               [12] 7776 	mov	r4,a
      002828 90r00r74         [24] 7777 	mov	dptr,#_dir_next_PARM_2
      00282B 74 01            [12] 7778 	mov	a,#0x01
      00282D F0               [24] 7779 	movx	@dptr,a
      00282E E4               [12] 7780 	clr	a
      00282F A3               [24] 7781 	inc	dptr
      002830 F0               [24] 7782 	movx	@dptr,a
      002831 8A 82            [24] 7783 	mov	dpl,r2
      002833 8B 83            [24] 7784 	mov	dph,r3
      002835 8C F0            [24] 7785 	mov	b,r4
      002837 C0 07            [24] 7786 	push	ar7
      002839 C0 06            [24] 7787 	push	ar6
      00283B C0 05            [24] 7788 	push	ar5
      00283D C0 01            [24] 7789 	push	ar1
      00283F C0 00            [24] 7790 	push	ar0
      002841 12r22r70         [24] 7791 	lcall	_dir_next
      002844 AC 82            [24] 7792 	mov	r4,dpl
      002846 D0 00            [24] 7793 	pop	ar0
      002848 D0 01            [24] 7794 	pop	ar1
      00284A D0 05            [24] 7795 	pop	ar5
      00284C D0 06            [24] 7796 	pop	ar6
      00284E D0 07            [24] 7797 	pop	ar7
      002850 90r00r82         [24] 7798 	mov	dptr,#_dir_alloc_res_65536_155
      002853 EC               [12] 7799 	mov	a,r4
      002854 F0               [24] 7800 	movx	@dptr,a
                                   7801 ;	ff15\source\ff.c:1832: } while (res == FR_OK);
      002855 EC               [12] 7802 	mov	a,r4
      002856 70 03            [24] 7803 	jnz	00148$
      002858 02r27r6E         [24] 7804 	ljmp	00109$
      00285B                       7805 00148$:
      00285B                       7806 00113$:
                                   7807 ;	ff15\source\ff.c:1835: if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
      00285B 90r00r82         [24] 7808 	mov	dptr,#_dir_alloc_res_65536_155
      00285E E0               [24] 7809 	movx	a,@dptr
      00285F FF               [12] 7810 	mov	r7,a
      002860 BF 04 06         [24] 7811 	cjne	r7,#0x04,00115$
      002863 90r00r82         [24] 7812 	mov	dptr,#_dir_alloc_res_65536_155
      002866 74 07            [12] 7813 	mov	a,#0x07
      002868 F0               [24] 7814 	movx	@dptr,a
      002869                       7815 00115$:
                                   7816 ;	ff15\source\ff.c:1836: return res;
      002869 90r00r82         [24] 7817 	mov	dptr,#_dir_alloc_res_65536_155
      00286C E0               [24] 7818 	movx	a,@dptr
                                   7819 ;	ff15\source\ff.c:1837: }
      00286D F5 82            [12] 7820 	mov	dpl,a
      00286F 22               [24] 7821 	ret
                                   7822 ;------------------------------------------------------------
                                   7823 ;Allocation info for local variables in function 'ld_clust'
                                   7824 ;------------------------------------------------------------
                                   7825 ;sloc0                     Allocated with name '_ld_clust_sloc0_1_0'
                                   7826 ;dir                       Allocated with name '_ld_clust_PARM_2'
                                   7827 ;fs                        Allocated with name '_ld_clust_fs_65536_160'
                                   7828 ;cl                        Allocated with name '_ld_clust_cl_65536_161'
                                   7829 ;------------------------------------------------------------
                                   7830 ;	ff15\source\ff.c:1848: static DWORD ld_clust (	/* Returns the top cluster value of the SFN entry */
                                   7831 ;	-----------------------------------------
                                   7832 ;	 function ld_clust
                                   7833 ;	-----------------------------------------
      002870                       7834 _ld_clust:
      002870 AF F0            [24] 7835 	mov	r7,b
      002872 AE 83            [24] 7836 	mov	r6,dph
      002874 E5 82            [12] 7837 	mov	a,dpl
      002876 90r00r88         [24] 7838 	mov	dptr,#_ld_clust_fs_65536_160
      002879 F0               [24] 7839 	movx	@dptr,a
      00287A EE               [12] 7840 	mov	a,r6
      00287B A3               [24] 7841 	inc	dptr
      00287C F0               [24] 7842 	movx	@dptr,a
      00287D EF               [12] 7843 	mov	a,r7
      00287E A3               [24] 7844 	inc	dptr
      00287F F0               [24] 7845 	movx	@dptr,a
                                   7846 ;	ff15\source\ff.c:1855: cl = ld_word(dir + DIR_FstClusLO);
      002880 90r00r85         [24] 7847 	mov	dptr,#_ld_clust_PARM_2
      002883 E0               [24] 7848 	movx	a,@dptr
      002884 F5*9A            [12] 7849 	mov	_ld_clust_sloc0_1_0,a
      002886 A3               [24] 7850 	inc	dptr
      002887 E0               [24] 7851 	movx	a,@dptr
      002888 F5*9B            [12] 7852 	mov	(_ld_clust_sloc0_1_0 + 1),a
      00288A A3               [24] 7853 	inc	dptr
      00288B E0               [24] 7854 	movx	a,@dptr
      00288C F5*9C            [12] 7855 	mov	(_ld_clust_sloc0_1_0 + 2),a
      00288E 74 1A            [12] 7856 	mov	a,#0x1a
      002890 25*9A            [12] 7857 	add	a,_ld_clust_sloc0_1_0
      002892 FA               [12] 7858 	mov	r2,a
      002893 E4               [12] 7859 	clr	a
      002894 35*9B            [12] 7860 	addc	a,(_ld_clust_sloc0_1_0 + 1)
      002896 FB               [12] 7861 	mov	r3,a
      002897 AC*9C            [24] 7862 	mov	r4,(_ld_clust_sloc0_1_0 + 2)
      002899 8A 82            [24] 7863 	mov	dpl,r2
      00289B 8B 83            [24] 7864 	mov	dph,r3
      00289D 8C F0            [24] 7865 	mov	b,r4
      00289F 12r00r00         [24] 7866 	lcall	_ld_word
      0028A2 AB 82            [24] 7867 	mov	r3,dpl
      0028A4 AC 83            [24] 7868 	mov	r4,dph
      0028A6 8B 01            [24] 7869 	mov	ar1,r3
      0028A8 8C 02            [24] 7870 	mov	ar2,r4
      0028AA 7B 00            [12] 7871 	mov	r3,#0x00
      0028AC 7C 00            [12] 7872 	mov	r4,#0x00
      0028AE 90r00r8B         [24] 7873 	mov	dptr,#_ld_clust_cl_65536_161
      0028B1 E9               [12] 7874 	mov	a,r1
      0028B2 F0               [24] 7875 	movx	@dptr,a
      0028B3 EA               [12] 7876 	mov	a,r2
      0028B4 A3               [24] 7877 	inc	dptr
      0028B5 F0               [24] 7878 	movx	@dptr,a
      0028B6 EB               [12] 7879 	mov	a,r3
      0028B7 A3               [24] 7880 	inc	dptr
      0028B8 F0               [24] 7881 	movx	@dptr,a
      0028B9 EC               [12] 7882 	mov	a,r4
      0028BA A3               [24] 7883 	inc	dptr
      0028BB F0               [24] 7884 	movx	@dptr,a
                                   7885 ;	ff15\source\ff.c:1856: if (fs->fs_type == FS_FAT32) {
      0028BC 90r00r88         [24] 7886 	mov	dptr,#_ld_clust_fs_65536_160
      0028BF E0               [24] 7887 	movx	a,@dptr
      0028C0 F8               [12] 7888 	mov	r0,a
      0028C1 A3               [24] 7889 	inc	dptr
      0028C2 E0               [24] 7890 	movx	a,@dptr
      0028C3 FE               [12] 7891 	mov	r6,a
      0028C4 A3               [24] 7892 	inc	dptr
      0028C5 E0               [24] 7893 	movx	a,@dptr
      0028C6 FF               [12] 7894 	mov	r7,a
      0028C7 88 82            [24] 7895 	mov	dpl,r0
      0028C9 8E 83            [24] 7896 	mov	dph,r6
      0028CB 8F F0            [24] 7897 	mov	b,r7
      0028CD 12r00r00         [24] 7898 	lcall	__gptrget
      0028D0 F8               [12] 7899 	mov	r0,a
      0028D1 B8 03 46         [24] 7900 	cjne	r0,#0x03,00102$
                                   7901 ;	ff15\source\ff.c:1857: cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
      0028D4 74 14            [12] 7902 	mov	a,#0x14
      0028D6 25*9A            [12] 7903 	add	a,_ld_clust_sloc0_1_0
      0028D8 FD               [12] 7904 	mov	r5,a
      0028D9 E4               [12] 7905 	clr	a
      0028DA 35*9B            [12] 7906 	addc	a,(_ld_clust_sloc0_1_0 + 1)
      0028DC FE               [12] 7907 	mov	r6,a
      0028DD AF*9C            [24] 7908 	mov	r7,(_ld_clust_sloc0_1_0 + 2)
      0028DF 8D 82            [24] 7909 	mov	dpl,r5
      0028E1 8E 83            [24] 7910 	mov	dph,r6
      0028E3 8F F0            [24] 7911 	mov	b,r7
      0028E5 C0 04            [24] 7912 	push	ar4
      0028E7 C0 03            [24] 7913 	push	ar3
      0028E9 C0 02            [24] 7914 	push	ar2
      0028EB C0 01            [24] 7915 	push	ar1
      0028ED 12r00r00         [24] 7916 	lcall	_ld_word
      0028F0 AE 82            [24] 7917 	mov	r6,dpl
      0028F2 AF 83            [24] 7918 	mov	r7,dph
      0028F4 D0 01            [24] 7919 	pop	ar1
      0028F6 D0 02            [24] 7920 	pop	ar2
      0028F8 D0 03            [24] 7921 	pop	ar3
      0028FA D0 04            [24] 7922 	pop	ar4
      0028FC 8E 00            [24] 7923 	mov	ar0,r6
      0028FE 8F 05            [24] 7924 	mov	ar5,r7
      002900 8D 07            [24] 7925 	mov	ar7,r5
      002902 88 06            [24] 7926 	mov	ar6,r0
      002904 78 00            [12] 7927 	mov	r0,#0x00
      002906 7D 00            [12] 7928 	mov	r5,#0x00
      002908 90r00r8B         [24] 7929 	mov	dptr,#_ld_clust_cl_65536_161
      00290B E8               [12] 7930 	mov	a,r0
      00290C 49               [12] 7931 	orl	a,r1
      00290D F0               [24] 7932 	movx	@dptr,a
      00290E ED               [12] 7933 	mov	a,r5
      00290F 4A               [12] 7934 	orl	a,r2
      002910 A3               [24] 7935 	inc	dptr
      002911 F0               [24] 7936 	movx	@dptr,a
      002912 EE               [12] 7937 	mov	a,r6
      002913 4B               [12] 7938 	orl	a,r3
      002914 A3               [24] 7939 	inc	dptr
      002915 F0               [24] 7940 	movx	@dptr,a
      002916 EF               [12] 7941 	mov	a,r7
      002917 4C               [12] 7942 	orl	a,r4
      002918 A3               [24] 7943 	inc	dptr
      002919 F0               [24] 7944 	movx	@dptr,a
      00291A                       7945 00102$:
                                   7946 ;	ff15\source\ff.c:1860: return cl;
      00291A 90r00r8B         [24] 7947 	mov	dptr,#_ld_clust_cl_65536_161
      00291D E0               [24] 7948 	movx	a,@dptr
      00291E FC               [12] 7949 	mov	r4,a
      00291F A3               [24] 7950 	inc	dptr
      002920 E0               [24] 7951 	movx	a,@dptr
      002921 FD               [12] 7952 	mov	r5,a
      002922 A3               [24] 7953 	inc	dptr
      002923 E0               [24] 7954 	movx	a,@dptr
      002924 FE               [12] 7955 	mov	r6,a
      002925 A3               [24] 7956 	inc	dptr
      002926 E0               [24] 7957 	movx	a,@dptr
      002927 8C 82            [24] 7958 	mov	dpl,r4
      002929 8D 83            [24] 7959 	mov	dph,r5
      00292B 8E F0            [24] 7960 	mov	b,r6
                                   7961 ;	ff15\source\ff.c:1861: }
      00292D 22               [24] 7962 	ret
                                   7963 ;------------------------------------------------------------
                                   7964 ;Allocation info for local variables in function 'st_clust'
                                   7965 ;------------------------------------------------------------
                                   7966 ;sloc0                     Allocated with name '_st_clust_sloc0_1_0'
                                   7967 ;dir                       Allocated with name '_st_clust_PARM_2'
                                   7968 ;cl                        Allocated with name '_st_clust_PARM_3'
                                   7969 ;fs                        Allocated with name '_st_clust_fs_65536_163'
                                   7970 ;------------------------------------------------------------
                                   7971 ;	ff15\source\ff.c:1865: static void st_clust (
                                   7972 ;	-----------------------------------------
                                   7973 ;	 function st_clust
                                   7974 ;	-----------------------------------------
      00292E                       7975 _st_clust:
      00292E AF F0            [24] 7976 	mov	r7,b
      002930 AE 83            [24] 7977 	mov	r6,dph
      002932 E5 82            [12] 7978 	mov	a,dpl
      002934 90r00r96         [24] 7979 	mov	dptr,#_st_clust_fs_65536_163
      002937 F0               [24] 7980 	movx	@dptr,a
      002938 EE               [12] 7981 	mov	a,r6
      002939 A3               [24] 7982 	inc	dptr
      00293A F0               [24] 7983 	movx	@dptr,a
      00293B EF               [12] 7984 	mov	a,r7
      00293C A3               [24] 7985 	inc	dptr
      00293D F0               [24] 7986 	movx	@dptr,a
                                   7987 ;	ff15\source\ff.c:1871: st_word(dir + DIR_FstClusLO, (WORD)cl);
      00293E 90r00r8F         [24] 7988 	mov	dptr,#_st_clust_PARM_2
      002941 E0               [24] 7989 	movx	a,@dptr
      002942 FD               [12] 7990 	mov	r5,a
      002943 A3               [24] 7991 	inc	dptr
      002944 E0               [24] 7992 	movx	a,@dptr
      002945 FE               [12] 7993 	mov	r6,a
      002946 A3               [24] 7994 	inc	dptr
      002947 E0               [24] 7995 	movx	a,@dptr
      002948 FF               [12] 7996 	mov	r7,a
      002949 74 1A            [12] 7997 	mov	a,#0x1a
      00294B 2D               [12] 7998 	add	a,r5
      00294C FA               [12] 7999 	mov	r2,a
      00294D E4               [12] 8000 	clr	a
      00294E 3E               [12] 8001 	addc	a,r6
      00294F FB               [12] 8002 	mov	r3,a
      002950 8F 04            [24] 8003 	mov	ar4,r7
      002952 90r00r92         [24] 8004 	mov	dptr,#_st_clust_PARM_3
      002955 E0               [24] 8005 	movx	a,@dptr
      002956 F5*9D            [12] 8006 	mov	_st_clust_sloc0_1_0,a
      002958 A3               [24] 8007 	inc	dptr
      002959 E0               [24] 8008 	movx	a,@dptr
      00295A F5*9E            [12] 8009 	mov	(_st_clust_sloc0_1_0 + 1),a
      00295C A3               [24] 8010 	inc	dptr
      00295D E0               [24] 8011 	movx	a,@dptr
      00295E F5*9F            [12] 8012 	mov	(_st_clust_sloc0_1_0 + 2),a
      002960 A3               [24] 8013 	inc	dptr
      002961 E0               [24] 8014 	movx	a,@dptr
      002962 F5*A0            [12] 8015 	mov	(_st_clust_sloc0_1_0 + 3),a
      002964 90r00r0B         [24] 8016 	mov	dptr,#_st_word_PARM_2
      002967 E5*9D            [12] 8017 	mov	a,_st_clust_sloc0_1_0
      002969 F0               [24] 8018 	movx	@dptr,a
      00296A E5*9E            [12] 8019 	mov	a,(_st_clust_sloc0_1_0 + 1)
      00296C A3               [24] 8020 	inc	dptr
      00296D F0               [24] 8021 	movx	@dptr,a
      00296E 8A 82            [24] 8022 	mov	dpl,r2
      002970 8B 83            [24] 8023 	mov	dph,r3
      002972 8C F0            [24] 8024 	mov	b,r4
      002974 C0 07            [24] 8025 	push	ar7
      002976 C0 06            [24] 8026 	push	ar6
      002978 C0 05            [24] 8027 	push	ar5
      00297A 12r01r02         [24] 8028 	lcall	_st_word
      00297D D0 05            [24] 8029 	pop	ar5
      00297F D0 06            [24] 8030 	pop	ar6
      002981 D0 07            [24] 8031 	pop	ar7
                                   8032 ;	ff15\source\ff.c:1872: if (fs->fs_type == FS_FAT32) {
      002983 90r00r96         [24] 8033 	mov	dptr,#_st_clust_fs_65536_163
      002986 E0               [24] 8034 	movx	a,@dptr
      002987 FA               [12] 8035 	mov	r2,a
      002988 A3               [24] 8036 	inc	dptr
      002989 E0               [24] 8037 	movx	a,@dptr
      00298A FB               [12] 8038 	mov	r3,a
      00298B A3               [24] 8039 	inc	dptr
      00298C E0               [24] 8040 	movx	a,@dptr
      00298D FC               [12] 8041 	mov	r4,a
      00298E 8A 82            [24] 8042 	mov	dpl,r2
      002990 8B 83            [24] 8043 	mov	dph,r3
      002992 8C F0            [24] 8044 	mov	b,r4
      002994 12r00r00         [24] 8045 	lcall	__gptrget
      002997 FA               [12] 8046 	mov	r2,a
      002998 BA 03 1C         [24] 8047 	cjne	r2,#0x03,00103$
                                   8048 ;	ff15\source\ff.c:1873: st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
      00299B 74 14            [12] 8049 	mov	a,#0x14
      00299D 2D               [12] 8050 	add	a,r5
      00299E FD               [12] 8051 	mov	r5,a
      00299F E4               [12] 8052 	clr	a
      0029A0 3E               [12] 8053 	addc	a,r6
      0029A1 FE               [12] 8054 	mov	r6,a
      0029A2 AB*9F            [24] 8055 	mov	r3,(_st_clust_sloc0_1_0 + 2)
      0029A4 AC*A0            [24] 8056 	mov	r4,(_st_clust_sloc0_1_0 + 3)
      0029A6 90r00r0B         [24] 8057 	mov	dptr,#_st_word_PARM_2
      0029A9 EB               [12] 8058 	mov	a,r3
      0029AA F0               [24] 8059 	movx	@dptr,a
      0029AB EC               [12] 8060 	mov	a,r4
      0029AC A3               [24] 8061 	inc	dptr
      0029AD F0               [24] 8062 	movx	@dptr,a
      0029AE 8D 82            [24] 8063 	mov	dpl,r5
      0029B0 8E 83            [24] 8064 	mov	dph,r6
      0029B2 8F F0            [24] 8065 	mov	b,r7
                                   8066 ;	ff15\source\ff.c:1875: }
      0029B4 02r01r02         [24] 8067 	ljmp	_st_word
      0029B7                       8068 00103$:
      0029B7 22               [24] 8069 	ret
                                   8070 ;------------------------------------------------------------
                                   8071 ;Allocation info for local variables in function 'dir_read'
                                   8072 ;------------------------------------------------------------
                                   8073 ;sloc0                     Allocated with name '_dir_read_sloc0_1_0'
                                   8074 ;sloc1                     Allocated with name '_dir_read_sloc1_1_0'
                                   8075 ;sloc2                     Allocated with name '_dir_read_sloc2_1_0'
                                   8076 ;sloc3                     Allocated with name '_dir_read_sloc3_1_0'
                                   8077 ;sloc4                     Allocated with name '_dir_read_sloc4_1_0'
                                   8078 ;vol                       Allocated with name '_dir_read_PARM_2'
                                   8079 ;dp                        Allocated with name '_dir_read_dp_65536_166'
                                   8080 ;res                       Allocated with name '_dir_read_res_65536_167'
                                   8081 ;fs                        Allocated with name '_dir_read_fs_65536_167'
                                   8082 ;attr                      Allocated with name '_dir_read_attr_65536_167'
                                   8083 ;b                         Allocated with name '_dir_read_b_65536_167'
                                   8084 ;------------------------------------------------------------
                                   8085 ;	ff15\source\ff.c:2306: static FRESULT dir_read (
                                   8086 ;	-----------------------------------------
                                   8087 ;	 function dir_read
                                   8088 ;	-----------------------------------------
      0029B8                       8089 _dir_read:
      0029B8 AF F0            [24] 8090 	mov	r7,b
      0029BA AE 83            [24] 8091 	mov	r6,dph
      0029BC E5 82            [12] 8092 	mov	a,dpl
      0029BE 90r00r9B         [24] 8093 	mov	dptr,#_dir_read_dp_65536_166
      0029C1 F0               [24] 8094 	movx	@dptr,a
      0029C2 EE               [12] 8095 	mov	a,r6
      0029C3 A3               [24] 8096 	inc	dptr
      0029C4 F0               [24] 8097 	movx	@dptr,a
      0029C5 EF               [12] 8098 	mov	a,r7
      0029C6 A3               [24] 8099 	inc	dptr
      0029C7 F0               [24] 8100 	movx	@dptr,a
                                   8101 ;	ff15\source\ff.c:2311: FRESULT res = FR_NO_FILE;
      0029C8 90r00r9E         [24] 8102 	mov	dptr,#_dir_read_res_65536_167
      0029CB 74 04            [12] 8103 	mov	a,#0x04
      0029CD F0               [24] 8104 	movx	@dptr,a
                                   8105 ;	ff15\source\ff.c:2312: FATFS *fs = dp->obj.fs;
      0029CE 90r00r9B         [24] 8106 	mov	dptr,#_dir_read_dp_65536_166
      0029D1 E0               [24] 8107 	movx	a,@dptr
      0029D2 FD               [12] 8108 	mov	r5,a
      0029D3 A3               [24] 8109 	inc	dptr
      0029D4 E0               [24] 8110 	movx	a,@dptr
      0029D5 FE               [12] 8111 	mov	r6,a
      0029D6 A3               [24] 8112 	inc	dptr
      0029D7 E0               [24] 8113 	movx	a,@dptr
      0029D8 FF               [12] 8114 	mov	r7,a
      0029D9 8D 82            [24] 8115 	mov	dpl,r5
      0029DB 8E 83            [24] 8116 	mov	dph,r6
      0029DD 8F F0            [24] 8117 	mov	b,r7
      0029DF 12r00r00         [24] 8118 	lcall	__gptrget
      0029E2 FA               [12] 8119 	mov	r2,a
      0029E3 A3               [24] 8120 	inc	dptr
      0029E4 12r00r00         [24] 8121 	lcall	__gptrget
      0029E7 FB               [12] 8122 	mov	r3,a
      0029E8 A3               [24] 8123 	inc	dptr
      0029E9 12r00r00         [24] 8124 	lcall	__gptrget
      0029EC FC               [12] 8125 	mov	r4,a
                                   8126 ;	ff15\source\ff.c:2318: while (dp->sect) {
      0029ED 90r00r99         [24] 8127 	mov	dptr,#_dir_read_PARM_2
      0029F0 E0               [24] 8128 	movx	a,@dptr
      0029F1 F5*A8            [12] 8129 	mov	_dir_read_sloc2_1_0,a
      0029F3 A3               [24] 8130 	inc	dptr
      0029F4 E0               [24] 8131 	movx	a,@dptr
      0029F5 F5*A9            [12] 8132 	mov	(_dir_read_sloc2_1_0 + 1),a
      0029F7 8D*A1            [24] 8133 	mov	_dir_read_sloc0_1_0,r5
      0029F9 8E*A2            [24] 8134 	mov	(_dir_read_sloc0_1_0 + 1),r6
      0029FB 8F*A3            [24] 8135 	mov	(_dir_read_sloc0_1_0 + 2),r7
      0029FD 74 17            [12] 8136 	mov	a,#0x17
      0029FF 2D               [12] 8137 	add	a,r5
      002A00 FD               [12] 8138 	mov	r5,a
      002A01 E4               [12] 8139 	clr	a
      002A02 3E               [12] 8140 	addc	a,r6
      002A03 FE               [12] 8141 	mov	r6,a
      002A04                       8142 00112$:
      002A04 8D 82            [24] 8143 	mov	dpl,r5
      002A06 8E 83            [24] 8144 	mov	dph,r6
      002A08 8F F0            [24] 8145 	mov	b,r7
      002A0A 12r00r00         [24] 8146 	lcall	__gptrget
      002A0D F5*A4            [12] 8147 	mov	_dir_read_sloc1_1_0,a
      002A0F A3               [24] 8148 	inc	dptr
      002A10 12r00r00         [24] 8149 	lcall	__gptrget
      002A13 F5*A5            [12] 8150 	mov	(_dir_read_sloc1_1_0 + 1),a
      002A15 A3               [24] 8151 	inc	dptr
      002A16 12r00r00         [24] 8152 	lcall	__gptrget
      002A19 F5*A6            [12] 8153 	mov	(_dir_read_sloc1_1_0 + 2),a
      002A1B A3               [24] 8154 	inc	dptr
      002A1C 12r00r00         [24] 8155 	lcall	__gptrget
      002A1F F5*A7            [12] 8156 	mov	(_dir_read_sloc1_1_0 + 3),a
      002A21 E5*A4            [12] 8157 	mov	a,_dir_read_sloc1_1_0
      002A23 45*A5            [12] 8158 	orl	a,(_dir_read_sloc1_1_0 + 1)
      002A25 45*A6            [12] 8159 	orl	a,(_dir_read_sloc1_1_0 + 2)
      002A27 45*A7            [12] 8160 	orl	a,(_dir_read_sloc1_1_0 + 3)
      002A29 70 03            [24] 8161 	jnz	00151$
      002A2B 02r2Br75         [24] 8162 	ljmp	00114$
      002A2E                       8163 00151$:
                                   8164 ;	ff15\source\ff.c:2319: res = move_window(fs, dp->sect);
      002A2E 90r00r1D         [24] 8165 	mov	dptr,#_move_window_PARM_2
      002A31 E5*A4            [12] 8166 	mov	a,_dir_read_sloc1_1_0
      002A33 F0               [24] 8167 	movx	@dptr,a
      002A34 E5*A5            [12] 8168 	mov	a,(_dir_read_sloc1_1_0 + 1)
      002A36 A3               [24] 8169 	inc	dptr
      002A37 F0               [24] 8170 	movx	@dptr,a
      002A38 E5*A6            [12] 8171 	mov	a,(_dir_read_sloc1_1_0 + 2)
      002A3A A3               [24] 8172 	inc	dptr
      002A3B F0               [24] 8173 	movx	@dptr,a
      002A3C E5*A7            [12] 8174 	mov	a,(_dir_read_sloc1_1_0 + 3)
      002A3E A3               [24] 8175 	inc	dptr
      002A3F F0               [24] 8176 	movx	@dptr,a
      002A40 8A 82            [24] 8177 	mov	dpl,r2
      002A42 8B 83            [24] 8178 	mov	dph,r3
      002A44 8C F0            [24] 8179 	mov	b,r4
      002A46 C0 07            [24] 8180 	push	ar7
      002A48 C0 06            [24] 8181 	push	ar6
      002A4A C0 05            [24] 8182 	push	ar5
      002A4C C0 04            [24] 8183 	push	ar4
      002A4E C0 03            [24] 8184 	push	ar3
      002A50 C0 02            [24] 8185 	push	ar2
      002A52 12r05r18         [24] 8186 	lcall	_move_window
      002A55 A9 82            [24] 8187 	mov	r1,dpl
      002A57 D0 02            [24] 8188 	pop	ar2
      002A59 D0 03            [24] 8189 	pop	ar3
      002A5B D0 04            [24] 8190 	pop	ar4
      002A5D D0 05            [24] 8191 	pop	ar5
      002A5F D0 06            [24] 8192 	pop	ar6
      002A61 D0 07            [24] 8193 	pop	ar7
      002A63 90r00r9E         [24] 8194 	mov	dptr,#_dir_read_res_65536_167
      002A66 E9               [12] 8195 	mov	a,r1
      002A67 F0               [24] 8196 	movx	@dptr,a
                                   8197 ;	ff15\source\ff.c:2320: if (res != FR_OK) break;
      002A68 E9               [12] 8198 	mov	a,r1
      002A69 60 03            [24] 8199 	jz	00152$
      002A6B 02r2Br75         [24] 8200 	ljmp	00114$
      002A6E                       8201 00152$:
                                   8202 ;	ff15\source\ff.c:2321: b = dp->dir[DIR_Name];	/* Test for the entry type */
      002A6E C0 05            [24] 8203 	push	ar5
      002A70 C0 06            [24] 8204 	push	ar6
      002A72 C0 07            [24] 8205 	push	ar7
      002A74 74 1B            [12] 8206 	mov	a,#0x1b
      002A76 25*A1            [12] 8207 	add	a,_dir_read_sloc0_1_0
      002A78 F8               [12] 8208 	mov	r0,a
      002A79 E4               [12] 8209 	clr	a
      002A7A 35*A2            [12] 8210 	addc	a,(_dir_read_sloc0_1_0 + 1)
      002A7C F9               [12] 8211 	mov	r1,a
      002A7D AF*A3            [24] 8212 	mov	r7,(_dir_read_sloc0_1_0 + 2)
      002A7F 88 82            [24] 8213 	mov	dpl,r0
      002A81 89 83            [24] 8214 	mov	dph,r1
      002A83 8F F0            [24] 8215 	mov	b,r7
      002A85 12r00r00         [24] 8216 	lcall	__gptrget
      002A88 F5*A4            [12] 8217 	mov	_dir_read_sloc1_1_0,a
      002A8A A3               [24] 8218 	inc	dptr
      002A8B 12r00r00         [24] 8219 	lcall	__gptrget
      002A8E F5*A5            [12] 8220 	mov	(_dir_read_sloc1_1_0 + 1),a
      002A90 A3               [24] 8221 	inc	dptr
      002A91 12r00r00         [24] 8222 	lcall	__gptrget
      002A94 F5*A6            [12] 8223 	mov	(_dir_read_sloc1_1_0 + 2),a
      002A96 85*A4 82         [24] 8224 	mov	dpl,_dir_read_sloc1_1_0
      002A99 85*A5 83         [24] 8225 	mov	dph,(_dir_read_sloc1_1_0 + 1)
      002A9C 85*A6 F0         [24] 8226 	mov	b,(_dir_read_sloc1_1_0 + 2)
      002A9F 12r00r00         [24] 8227 	lcall	__gptrget
      002AA2 F5*AA            [12] 8228 	mov	_dir_read_sloc3_1_0,a
                                   8229 ;	ff15\source\ff.c:2322: if (b == 0) {
      002AA4 D0 07            [24] 8230 	pop	ar7
      002AA6 D0 06            [24] 8231 	pop	ar6
      002AA8 D0 05            [24] 8232 	pop	ar5
      002AAA E5*AA            [12] 8233 	mov	a,_dir_read_sloc3_1_0
      002AAC 70 09            [24] 8234 	jnz	00104$
                                   8235 ;	ff15\source\ff.c:2323: res = FR_NO_FILE; break; /* Reached to end of the directory */
      002AAE 90r00r9E         [24] 8236 	mov	dptr,#_dir_read_res_65536_167
      002AB1 74 04            [12] 8237 	mov	a,#0x04
      002AB3 F0               [24] 8238 	movx	@dptr,a
      002AB4 02r2Br75         [24] 8239 	ljmp	00114$
      002AB7                       8240 00104$:
                                   8241 ;	ff15\source\ff.c:2342: dp->obj.attr = attr = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
      002AB7 C0 05            [24] 8242 	push	ar5
      002AB9 C0 06            [24] 8243 	push	ar6
      002ABB C0 07            [24] 8244 	push	ar7
      002ABD 74 05            [12] 8245 	mov	a,#0x05
      002ABF 25*A1            [12] 8246 	add	a,_dir_read_sloc0_1_0
      002AC1 F5*AB            [12] 8247 	mov	_dir_read_sloc4_1_0,a
      002AC3 E4               [12] 8248 	clr	a
      002AC4 35*A2            [12] 8249 	addc	a,(_dir_read_sloc0_1_0 + 1)
      002AC6 F5*AC            [12] 8250 	mov	(_dir_read_sloc4_1_0 + 1),a
      002AC8 85*A3*AD         [24] 8251 	mov	(_dir_read_sloc4_1_0 + 2),(_dir_read_sloc0_1_0 + 2)
      002ACB 74 0B            [12] 8252 	mov	a,#0x0b
      002ACD 25*A4            [12] 8253 	add	a,_dir_read_sloc1_1_0
      002ACF FD               [12] 8254 	mov	r5,a
      002AD0 E4               [12] 8255 	clr	a
      002AD1 35*A5            [12] 8256 	addc	a,(_dir_read_sloc1_1_0 + 1)
      002AD3 FE               [12] 8257 	mov	r6,a
      002AD4 AF*A6            [24] 8258 	mov	r7,(_dir_read_sloc1_1_0 + 2)
      002AD6 8D 82            [24] 8259 	mov	dpl,r5
      002AD8 8E 83            [24] 8260 	mov	dph,r6
      002ADA 8F F0            [24] 8261 	mov	b,r7
      002ADC 12r00r00         [24] 8262 	lcall	__gptrget
      002ADF FD               [12] 8263 	mov	r5,a
      002AE0 74 3F            [12] 8264 	mov	a,#0x3f
      002AE2 5D               [12] 8265 	anl	a,r5
      002AE3 F5*A4            [12] 8266 	mov	_dir_read_sloc1_1_0,a
      002AE5 85*AB 82         [24] 8267 	mov	dpl,_dir_read_sloc4_1_0
      002AE8 85*AC 83         [24] 8268 	mov	dph,(_dir_read_sloc4_1_0 + 1)
      002AEB 85*AD F0         [24] 8269 	mov	b,(_dir_read_sloc4_1_0 + 2)
      002AEE 12r00r00         [24] 8270 	lcall	__gptrput
                                   8271 ;	ff15\source\ff.c:2363: if (b != DDEM && b != '.' && attr != AM_LFN && (int)((attr & ~AM_ARC) == AM_VOL) == vol) {	/* Is it a valid entry? */
      002AF1 74 E5            [12] 8272 	mov	a,#0xe5
      002AF3 B5*AA 08         [24] 8273 	cjne	a,_dir_read_sloc3_1_0,00154$
      002AF6 D0 07            [24] 8274 	pop	ar7
      002AF8 D0 06            [24] 8275 	pop	ar6
      002AFA D0 05            [24] 8276 	pop	ar5
      002AFC 80 2F            [24] 8277 	sjmp	00106$
      002AFE                       8278 00154$:
      002AFE D0 07            [24] 8279 	pop	ar7
      002B00 D0 06            [24] 8280 	pop	ar6
      002B02 D0 05            [24] 8281 	pop	ar5
      002B04 74 2E            [12] 8282 	mov	a,#0x2e
      002B06 B5*AA 02         [24] 8283 	cjne	a,_dir_read_sloc3_1_0,00155$
      002B09 80 22            [24] 8284 	sjmp	00106$
      002B0B                       8285 00155$:
      002B0B 74 0F            [12] 8286 	mov	a,#0x0f
      002B0D B5*A4 02         [24] 8287 	cjne	a,_dir_read_sloc1_1_0,00156$
      002B10 80 1B            [24] 8288 	sjmp	00106$
      002B12                       8289 00156$:
      002B12 A8*A4            [24] 8290 	mov	r0,_dir_read_sloc1_1_0
      002B14 79 00            [12] 8291 	mov	r1,#0x00
      002B16 53 00 DF         [24] 8292 	anl	ar0,#0xdf
      002B19 E4               [12] 8293 	clr	a
      002B1A B8 08 04         [24] 8294 	cjne	r0,#0x08,00157$
      002B1D B9 00 01         [24] 8295 	cjne	r1,#0x00,00157$
      002B20 04               [12] 8296 	inc	a
      002B21                       8297 00157$:
      002B21 F8               [12] 8298 	mov	r0,a
      002B22 79 00            [12] 8299 	mov	r1,#0x00
      002B24 B5*A8 06         [24] 8300 	cjne	a,_dir_read_sloc2_1_0,00159$
      002B27 E9               [12] 8301 	mov	a,r1
      002B28 B5*A9 02         [24] 8302 	cjne	a,(_dir_read_sloc2_1_0 + 1),00159$
      002B2B 80 48            [24] 8303 	sjmp	00114$
      002B2D                       8304 00159$:
                                   8305 ;	ff15\source\ff.c:2364: break;
      002B2D                       8306 00106$:
                                   8307 ;	ff15\source\ff.c:2368: res = dir_next(dp, 0);		/* Next entry */
      002B2D C0 05            [24] 8308 	push	ar5
      002B2F C0 06            [24] 8309 	push	ar6
      002B31 C0 07            [24] 8310 	push	ar7
      002B33 90r00r9B         [24] 8311 	mov	dptr,#_dir_read_dp_65536_166
      002B36 E0               [24] 8312 	movx	a,@dptr
      002B37 F8               [12] 8313 	mov	r0,a
      002B38 A3               [24] 8314 	inc	dptr
      002B39 E0               [24] 8315 	movx	a,@dptr
      002B3A F9               [12] 8316 	mov	r1,a
      002B3B A3               [24] 8317 	inc	dptr
      002B3C E0               [24] 8318 	movx	a,@dptr
      002B3D FF               [12] 8319 	mov	r7,a
      002B3E 90r00r74         [24] 8320 	mov	dptr,#_dir_next_PARM_2
      002B41 E4               [12] 8321 	clr	a
      002B42 F0               [24] 8322 	movx	@dptr,a
      002B43 A3               [24] 8323 	inc	dptr
      002B44 F0               [24] 8324 	movx	@dptr,a
      002B45 88 82            [24] 8325 	mov	dpl,r0
      002B47 89 83            [24] 8326 	mov	dph,r1
      002B49 8F F0            [24] 8327 	mov	b,r7
      002B4B C0 06            [24] 8328 	push	ar6
      002B4D C0 05            [24] 8329 	push	ar5
      002B4F C0 04            [24] 8330 	push	ar4
      002B51 C0 03            [24] 8331 	push	ar3
      002B53 C0 02            [24] 8332 	push	ar2
      002B55 12r22r70         [24] 8333 	lcall	_dir_next
      002B58 AF 82            [24] 8334 	mov	r7,dpl
      002B5A D0 02            [24] 8335 	pop	ar2
      002B5C D0 03            [24] 8336 	pop	ar3
      002B5E D0 04            [24] 8337 	pop	ar4
      002B60 D0 05            [24] 8338 	pop	ar5
      002B62 D0 06            [24] 8339 	pop	ar6
      002B64 90r00r9E         [24] 8340 	mov	dptr,#_dir_read_res_65536_167
      002B67 EF               [12] 8341 	mov	a,r7
      002B68 F0               [24] 8342 	movx	@dptr,a
                                   8343 ;	ff15\source\ff.c:2369: if (res != FR_OK) break;
      002B69 EF               [12] 8344 	mov	a,r7
      002B6A D0 07            [24] 8345 	pop	ar7
      002B6C D0 06            [24] 8346 	pop	ar6
      002B6E D0 05            [24] 8347 	pop	ar5
      002B70 70 03            [24] 8348 	jnz	00160$
      002B72 02r2Ar04         [24] 8349 	ljmp	00112$
      002B75                       8350 00160$:
      002B75                       8351 00114$:
                                   8352 ;	ff15\source\ff.c:2372: if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
      002B75 90r00r9E         [24] 8353 	mov	dptr,#_dir_read_res_65536_167
      002B78 E0               [24] 8354 	movx	a,@dptr
      002B79 FC               [12] 8355 	mov	r4,a
      002B7A E0               [24] 8356 	movx	a,@dptr
      002B7B 60 28            [24] 8357 	jz	00116$
      002B7D 90r00r9B         [24] 8358 	mov	dptr,#_dir_read_dp_65536_166
      002B80 E0               [24] 8359 	movx	a,@dptr
      002B81 F9               [12] 8360 	mov	r1,a
      002B82 A3               [24] 8361 	inc	dptr
      002B83 E0               [24] 8362 	movx	a,@dptr
      002B84 FA               [12] 8363 	mov	r2,a
      002B85 A3               [24] 8364 	inc	dptr
      002B86 E0               [24] 8365 	movx	a,@dptr
      002B87 FB               [12] 8366 	mov	r3,a
      002B88 74 17            [12] 8367 	mov	a,#0x17
      002B8A 29               [12] 8368 	add	a,r1
      002B8B F9               [12] 8369 	mov	r1,a
      002B8C E4               [12] 8370 	clr	a
      002B8D 3A               [12] 8371 	addc	a,r2
      002B8E FA               [12] 8372 	mov	r2,a
      002B8F 89 82            [24] 8373 	mov	dpl,r1
      002B91 8A 83            [24] 8374 	mov	dph,r2
      002B93 8B F0            [24] 8375 	mov	b,r3
      002B95 E4               [12] 8376 	clr	a
      002B96 12r00r00         [24] 8377 	lcall	__gptrput
      002B99 A3               [24] 8378 	inc	dptr
      002B9A 12r00r00         [24] 8379 	lcall	__gptrput
      002B9D A3               [24] 8380 	inc	dptr
      002B9E 12r00r00         [24] 8381 	lcall	__gptrput
      002BA1 A3               [24] 8382 	inc	dptr
      002BA2 12r00r00         [24] 8383 	lcall	__gptrput
      002BA5                       8384 00116$:
                                   8385 ;	ff15\source\ff.c:2373: return res;
      002BA5 8C 82            [24] 8386 	mov	dpl,r4
                                   8387 ;	ff15\source\ff.c:2374: }
      002BA7 22               [24] 8388 	ret
                                   8389 ;------------------------------------------------------------
                                   8390 ;Allocation info for local variables in function 'dir_find'
                                   8391 ;------------------------------------------------------------
                                   8392 ;sloc0                     Allocated with name '_dir_find_sloc0_1_0'
                                   8393 ;sloc1                     Allocated with name '_dir_find_sloc1_1_0'
                                   8394 ;sloc2                     Allocated with name '_dir_find_sloc2_1_0'
                                   8395 ;sloc3                     Allocated with name '_dir_find_sloc3_1_0'
                                   8396 ;dp                        Allocated with name '_dir_find_dp_65536_172'
                                   8397 ;res                       Allocated with name '_dir_find_res_65536_173'
                                   8398 ;fs                        Allocated with name '_dir_find_fs_65536_173'
                                   8399 ;c                         Allocated with name '_dir_find_c_65536_173'
                                   8400 ;------------------------------------------------------------
                                   8401 ;	ff15\source\ff.c:2384: static FRESULT dir_find (	/* FR_OK(0):succeeded, !=0:error */
                                   8402 ;	-----------------------------------------
                                   8403 ;	 function dir_find
                                   8404 ;	-----------------------------------------
      002BA8                       8405 _dir_find:
      002BA8 AF F0            [24] 8406 	mov	r7,b
      002BAA AE 83            [24] 8407 	mov	r6,dph
      002BAC E5 82            [12] 8408 	mov	a,dpl
      002BAE 90r00r9F         [24] 8409 	mov	dptr,#_dir_find_dp_65536_172
      002BB1 F0               [24] 8410 	movx	@dptr,a
      002BB2 EE               [12] 8411 	mov	a,r6
      002BB3 A3               [24] 8412 	inc	dptr
      002BB4 F0               [24] 8413 	movx	@dptr,a
      002BB5 EF               [12] 8414 	mov	a,r7
      002BB6 A3               [24] 8415 	inc	dptr
      002BB7 F0               [24] 8416 	movx	@dptr,a
                                   8417 ;	ff15\source\ff.c:2389: FATFS *fs = dp->obj.fs;
      002BB8 90r00r9F         [24] 8418 	mov	dptr,#_dir_find_dp_65536_172
      002BBB E0               [24] 8419 	movx	a,@dptr
      002BBC FD               [12] 8420 	mov	r5,a
      002BBD A3               [24] 8421 	inc	dptr
      002BBE E0               [24] 8422 	movx	a,@dptr
      002BBF FE               [12] 8423 	mov	r6,a
      002BC0 A3               [24] 8424 	inc	dptr
      002BC1 E0               [24] 8425 	movx	a,@dptr
      002BC2 FF               [12] 8426 	mov	r7,a
      002BC3 8D 82            [24] 8427 	mov	dpl,r5
      002BC5 8E 83            [24] 8428 	mov	dph,r6
      002BC7 8F F0            [24] 8429 	mov	b,r7
      002BC9 12r00r00         [24] 8430 	lcall	__gptrget
      002BCC FA               [12] 8431 	mov	r2,a
      002BCD A3               [24] 8432 	inc	dptr
      002BCE 12r00r00         [24] 8433 	lcall	__gptrget
      002BD1 FB               [12] 8434 	mov	r3,a
      002BD2 A3               [24] 8435 	inc	dptr
      002BD3 12r00r00         [24] 8436 	lcall	__gptrget
      002BD6 FC               [12] 8437 	mov	r4,a
                                   8438 ;	ff15\source\ff.c:2395: res = dir_sdi(dp, 0);			/* Rewind directory object */
      002BD7 90r00r69         [24] 8439 	mov	dptr,#_dir_sdi_PARM_2
      002BDA E4               [12] 8440 	clr	a
      002BDB F0               [24] 8441 	movx	@dptr,a
      002BDC A3               [24] 8442 	inc	dptr
      002BDD F0               [24] 8443 	movx	@dptr,a
      002BDE A3               [24] 8444 	inc	dptr
      002BDF F0               [24] 8445 	movx	@dptr,a
      002BE0 A3               [24] 8446 	inc	dptr
      002BE1 F0               [24] 8447 	movx	@dptr,a
      002BE2 8D 82            [24] 8448 	mov	dpl,r5
      002BE4 8E 83            [24] 8449 	mov	dph,r6
      002BE6 8F F0            [24] 8450 	mov	b,r7
      002BE8 C0 04            [24] 8451 	push	ar4
      002BEA C0 03            [24] 8452 	push	ar3
      002BEC C0 02            [24] 8453 	push	ar2
      002BEE 12r1DrC4         [24] 8454 	lcall	_dir_sdi
      002BF1 AF 82            [24] 8455 	mov	r7,dpl
      002BF3 D0 02            [24] 8456 	pop	ar2
      002BF5 D0 03            [24] 8457 	pop	ar3
      002BF7 D0 04            [24] 8458 	pop	ar4
                                   8459 ;	ff15\source\ff.c:2396: if (res != FR_OK) return res;
      002BF9 EF               [12] 8460 	mov	a,r7
      002BFA 60 03            [24] 8461 	jz	00119$
      002BFC 8F 82            [24] 8462 	mov	dpl,r7
      002BFE 22               [24] 8463 	ret
                                   8464 ;	ff15\source\ff.c:2421: do {
      002BFF                       8465 00119$:
      002BFF 90r00r9F         [24] 8466 	mov	dptr,#_dir_find_dp_65536_172
      002C02 E0               [24] 8467 	movx	a,@dptr
      002C03 FD               [12] 8468 	mov	r5,a
      002C04 A3               [24] 8469 	inc	dptr
      002C05 E0               [24] 8470 	movx	a,@dptr
      002C06 FE               [12] 8471 	mov	r6,a
      002C07 A3               [24] 8472 	inc	dptr
      002C08 E0               [24] 8473 	movx	a,@dptr
      002C09 FF               [12] 8474 	mov	r7,a
      002C0A 74 17            [12] 8475 	mov	a,#0x17
      002C0C 2D               [12] 8476 	add	a,r5
      002C0D F5*AE            [12] 8477 	mov	_dir_find_sloc0_1_0,a
      002C0F E4               [12] 8478 	clr	a
      002C10 3E               [12] 8479 	addc	a,r6
      002C11 F5*AF            [12] 8480 	mov	(_dir_find_sloc0_1_0 + 1),a
      002C13 8F*B0            [24] 8481 	mov	(_dir_find_sloc0_1_0 + 2),r7
      002C15                       8482 00110$:
                                   8483 ;	ff15\source\ff.c:2422: res = move_window(fs, dp->sect);
      002C15 C0 05            [24] 8484 	push	ar5
      002C17 C0 06            [24] 8485 	push	ar6
      002C19 C0 07            [24] 8486 	push	ar7
      002C1B 85*AE 82         [24] 8487 	mov	dpl,_dir_find_sloc0_1_0
      002C1E 85*AF 83         [24] 8488 	mov	dph,(_dir_find_sloc0_1_0 + 1)
      002C21 85*B0 F0         [24] 8489 	mov	b,(_dir_find_sloc0_1_0 + 2)
      002C24 12r00r00         [24] 8490 	lcall	__gptrget
      002C27 F8               [12] 8491 	mov	r0,a
      002C28 A3               [24] 8492 	inc	dptr
      002C29 12r00r00         [24] 8493 	lcall	__gptrget
      002C2C F9               [12] 8494 	mov	r1,a
      002C2D A3               [24] 8495 	inc	dptr
      002C2E 12r00r00         [24] 8496 	lcall	__gptrget
      002C31 FE               [12] 8497 	mov	r6,a
      002C32 A3               [24] 8498 	inc	dptr
      002C33 12r00r00         [24] 8499 	lcall	__gptrget
      002C36 FF               [12] 8500 	mov	r7,a
      002C37 90r00r1D         [24] 8501 	mov	dptr,#_move_window_PARM_2
      002C3A E8               [12] 8502 	mov	a,r0
      002C3B F0               [24] 8503 	movx	@dptr,a
      002C3C E9               [12] 8504 	mov	a,r1
      002C3D A3               [24] 8505 	inc	dptr
      002C3E F0               [24] 8506 	movx	@dptr,a
      002C3F EE               [12] 8507 	mov	a,r6
      002C40 A3               [24] 8508 	inc	dptr
      002C41 F0               [24] 8509 	movx	@dptr,a
      002C42 EF               [12] 8510 	mov	a,r7
      002C43 A3               [24] 8511 	inc	dptr
      002C44 F0               [24] 8512 	movx	@dptr,a
      002C45 8A 82            [24] 8513 	mov	dpl,r2
      002C47 8B 83            [24] 8514 	mov	dph,r3
      002C49 8C F0            [24] 8515 	mov	b,r4
      002C4B C0 06            [24] 8516 	push	ar6
      002C4D C0 05            [24] 8517 	push	ar5
      002C4F C0 04            [24] 8518 	push	ar4
      002C51 C0 03            [24] 8519 	push	ar3
      002C53 C0 02            [24] 8520 	push	ar2
      002C55 12r05r18         [24] 8521 	lcall	_move_window
      002C58 AF 82            [24] 8522 	mov	r7,dpl
      002C5A D0 02            [24] 8523 	pop	ar2
      002C5C D0 03            [24] 8524 	pop	ar3
      002C5E D0 04            [24] 8525 	pop	ar4
      002C60 D0 05            [24] 8526 	pop	ar5
      002C62 D0 06            [24] 8527 	pop	ar6
      002C64 90r00rA2         [24] 8528 	mov	dptr,#_dir_find_res_65536_173
      002C67 EF               [12] 8529 	mov	a,r7
      002C68 F0               [24] 8530 	movx	@dptr,a
                                   8531 ;	ff15\source\ff.c:2423: if (res != FR_OK) break;
      002C69 EF               [12] 8532 	mov	a,r7
      002C6A D0 07            [24] 8533 	pop	ar7
      002C6C D0 06            [24] 8534 	pop	ar6
      002C6E D0 05            [24] 8535 	pop	ar5
      002C70 60 03            [24] 8536 	jz	00136$
      002C72 02r2DrBC         [24] 8537 	ljmp	00112$
      002C75                       8538 00136$:
                                   8539 ;	ff15\source\ff.c:2424: c = dp->dir[DIR_Name];
      002C75 74 1B            [12] 8540 	mov	a,#0x1b
      002C77 2D               [12] 8541 	add	a,r5
      002C78 F5*B1            [12] 8542 	mov	_dir_find_sloc1_1_0,a
      002C7A E4               [12] 8543 	clr	a
      002C7B 3E               [12] 8544 	addc	a,r6
      002C7C F5*B2            [12] 8545 	mov	(_dir_find_sloc1_1_0 + 1),a
      002C7E 8F*B3            [24] 8546 	mov	(_dir_find_sloc1_1_0 + 2),r7
      002C80 85*B1 82         [24] 8547 	mov	dpl,_dir_find_sloc1_1_0
      002C83 85*B2 83         [24] 8548 	mov	dph,(_dir_find_sloc1_1_0 + 1)
      002C86 85*B3 F0         [24] 8549 	mov	b,(_dir_find_sloc1_1_0 + 2)
      002C89 12r00r00         [24] 8550 	lcall	__gptrget
      002C8C F5*B4            [12] 8551 	mov	_dir_find_sloc2_1_0,a
      002C8E A3               [24] 8552 	inc	dptr
      002C8F 12r00r00         [24] 8553 	lcall	__gptrget
      002C92 F5*B5            [12] 8554 	mov	(_dir_find_sloc2_1_0 + 1),a
      002C94 A3               [24] 8555 	inc	dptr
      002C95 12r00r00         [24] 8556 	lcall	__gptrget
      002C98 F5*B6            [12] 8557 	mov	(_dir_find_sloc2_1_0 + 2),a
      002C9A 85*B4 82         [24] 8558 	mov	dpl,_dir_find_sloc2_1_0
      002C9D 85*B5 83         [24] 8559 	mov	dph,(_dir_find_sloc2_1_0 + 1)
      002CA0 85*B6 F0         [24] 8560 	mov	b,(_dir_find_sloc2_1_0 + 2)
      002CA3 12r00r00         [24] 8561 	lcall	__gptrget
      002CA6 70 09            [24] 8562 	jnz	00106$
                                   8563 ;	ff15\source\ff.c:2425: if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
      002CA8 90r00rA2         [24] 8564 	mov	dptr,#_dir_find_res_65536_173
      002CAB 74 04            [12] 8565 	mov	a,#0x04
      002CAD F0               [24] 8566 	movx	@dptr,a
      002CAE 02r2DrBC         [24] 8567 	ljmp	00112$
      002CB1                       8568 00106$:
                                   8569 ;	ff15\source\ff.c:2448: dp->obj.attr = dp->dir[DIR_Attr] & AM_MASK;
      002CB1 C0 02            [24] 8570 	push	ar2
      002CB3 C0 03            [24] 8571 	push	ar3
      002CB5 C0 04            [24] 8572 	push	ar4
      002CB7 74 05            [12] 8573 	mov	a,#0x05
      002CB9 2D               [12] 8574 	add	a,r5
      002CBA F5*B7            [12] 8575 	mov	_dir_find_sloc3_1_0,a
      002CBC E4               [12] 8576 	clr	a
      002CBD 3E               [12] 8577 	addc	a,r6
      002CBE F5*B8            [12] 8578 	mov	(_dir_find_sloc3_1_0 + 1),a
      002CC0 8F*B9            [24] 8579 	mov	(_dir_find_sloc3_1_0 + 2),r7
      002CC2 74 0B            [12] 8580 	mov	a,#0x0b
      002CC4 25*B4            [12] 8581 	add	a,_dir_find_sloc2_1_0
      002CC6 FA               [12] 8582 	mov	r2,a
      002CC7 E4               [12] 8583 	clr	a
      002CC8 35*B5            [12] 8584 	addc	a,(_dir_find_sloc2_1_0 + 1)
      002CCA FB               [12] 8585 	mov	r3,a
      002CCB AC*B6            [24] 8586 	mov	r4,(_dir_find_sloc2_1_0 + 2)
      002CCD 8A 82            [24] 8587 	mov	dpl,r2
      002CCF 8B 83            [24] 8588 	mov	dph,r3
      002CD1 8C F0            [24] 8589 	mov	b,r4
      002CD3 12r00r00         [24] 8590 	lcall	__gptrget
      002CD6 FA               [12] 8591 	mov	r2,a
      002CD7 53 02 3F         [24] 8592 	anl	ar2,#0x3f
      002CDA 85*B7 82         [24] 8593 	mov	dpl,_dir_find_sloc3_1_0
      002CDD 85*B8 83         [24] 8594 	mov	dph,(_dir_find_sloc3_1_0 + 1)
      002CE0 85*B9 F0         [24] 8595 	mov	b,(_dir_find_sloc3_1_0 + 2)
      002CE3 EA               [12] 8596 	mov	a,r2
      002CE4 12r00r00         [24] 8597 	lcall	__gptrput
                                   8598 ;	ff15\source\ff.c:2449: if (!(dp->dir[DIR_Attr] & AM_VOL) && !memcmp(dp->dir, dp->fn, 11)) break;	/* Is it a valid entry? */
      002CE7 85*B1 82         [24] 8599 	mov	dpl,_dir_find_sloc1_1_0
      002CEA 85*B2 83         [24] 8600 	mov	dph,(_dir_find_sloc1_1_0 + 1)
      002CED 85*B3 F0         [24] 8601 	mov	b,(_dir_find_sloc1_1_0 + 2)
      002CF0 12r00r00         [24] 8602 	lcall	__gptrget
      002CF3 F5*B7            [12] 8603 	mov	_dir_find_sloc3_1_0,a
      002CF5 A3               [24] 8604 	inc	dptr
      002CF6 12r00r00         [24] 8605 	lcall	__gptrget
      002CF9 F5*B8            [12] 8606 	mov	(_dir_find_sloc3_1_0 + 1),a
      002CFB A3               [24] 8607 	inc	dptr
      002CFC 12r00r00         [24] 8608 	lcall	__gptrget
      002CFF F5*B9            [12] 8609 	mov	(_dir_find_sloc3_1_0 + 2),a
      002D01 74 0B            [12] 8610 	mov	a,#0x0b
      002D03 25*B7            [12] 8611 	add	a,_dir_find_sloc3_1_0
      002D05 FA               [12] 8612 	mov	r2,a
      002D06 E4               [12] 8613 	clr	a
      002D07 35*B8            [12] 8614 	addc	a,(_dir_find_sloc3_1_0 + 1)
      002D09 FB               [12] 8615 	mov	r3,a
      002D0A AC*B9            [24] 8616 	mov	r4,(_dir_find_sloc3_1_0 + 2)
      002D0C 8A 82            [24] 8617 	mov	dpl,r2
      002D0E 8B 83            [24] 8618 	mov	dph,r3
      002D10 8C F0            [24] 8619 	mov	b,r4
      002D12 12r00r00         [24] 8620 	lcall	__gptrget
      002D15 D0 04            [24] 8621 	pop	ar4
      002D17 D0 03            [24] 8622 	pop	ar3
      002D19 D0 02            [24] 8623 	pop	ar2
      002D1B 20 E3 56         [24] 8624 	jb	acc.3,00108$
      002D1E C0 02            [24] 8625 	push	ar2
      002D20 C0 03            [24] 8626 	push	ar3
      002D22 C0 04            [24] 8627 	push	ar4
      002D24 74 1E            [12] 8628 	mov	a,#0x1e
      002D26 2D               [12] 8629 	add	a,r5
      002D27 FA               [12] 8630 	mov	r2,a
      002D28 E4               [12] 8631 	clr	a
      002D29 3E               [12] 8632 	addc	a,r6
      002D2A FB               [12] 8633 	mov	r3,a
      002D2B 8F 04            [24] 8634 	mov	ar4,r7
      002D2D 90r00r00         [24] 8635 	mov	dptr,#_memcmp_PARM_2
      002D30 EA               [12] 8636 	mov	a,r2
      002D31 F0               [24] 8637 	movx	@dptr,a
      002D32 EB               [12] 8638 	mov	a,r3
      002D33 A3               [24] 8639 	inc	dptr
      002D34 F0               [24] 8640 	movx	@dptr,a
      002D35 EC               [12] 8641 	mov	a,r4
      002D36 A3               [24] 8642 	inc	dptr
      002D37 F0               [24] 8643 	movx	@dptr,a
      002D38 90r00r00         [24] 8644 	mov	dptr,#_memcmp_PARM_3
      002D3B 74 0B            [12] 8645 	mov	a,#0x0b
      002D3D F0               [24] 8646 	movx	@dptr,a
      002D3E E4               [12] 8647 	clr	a
      002D3F A3               [24] 8648 	inc	dptr
      002D40 F0               [24] 8649 	movx	@dptr,a
      002D41 85*B7 82         [24] 8650 	mov	dpl,_dir_find_sloc3_1_0
      002D44 85*B8 83         [24] 8651 	mov	dph,(_dir_find_sloc3_1_0 + 1)
      002D47 85*B9 F0         [24] 8652 	mov	b,(_dir_find_sloc3_1_0 + 2)
      002D4A C0 07            [24] 8653 	push	ar7
      002D4C C0 06            [24] 8654 	push	ar6
      002D4E C0 05            [24] 8655 	push	ar5
      002D50 C0 04            [24] 8656 	push	ar4
      002D52 C0 03            [24] 8657 	push	ar3
      002D54 C0 02            [24] 8658 	push	ar2
      002D56 12r00r00         [24] 8659 	lcall	_memcmp
      002D59 E5 82            [12] 8660 	mov	a,dpl
      002D5B 85 83 F0         [24] 8661 	mov	b,dph
      002D5E D0 02            [24] 8662 	pop	ar2
      002D60 D0 03            [24] 8663 	pop	ar3
      002D62 D0 04            [24] 8664 	pop	ar4
      002D64 D0 05            [24] 8665 	pop	ar5
      002D66 D0 06            [24] 8666 	pop	ar6
      002D68 D0 07            [24] 8667 	pop	ar7
      002D6A D0 04            [24] 8668 	pop	ar4
      002D6C D0 03            [24] 8669 	pop	ar3
      002D6E D0 02            [24] 8670 	pop	ar2
      002D70 45 F0            [12] 8671 	orl	a,b
      002D72 60 48            [24] 8672 	jz	00112$
      002D74                       8673 00108$:
                                   8674 ;	ff15\source\ff.c:2451: res = dir_next(dp, 0);	/* Next entry */
      002D74 C0 02            [24] 8675 	push	ar2
      002D76 C0 03            [24] 8676 	push	ar3
      002D78 C0 04            [24] 8677 	push	ar4
      002D7A 90r00r9F         [24] 8678 	mov	dptr,#_dir_find_dp_65536_172
      002D7D E0               [24] 8679 	movx	a,@dptr
      002D7E F8               [12] 8680 	mov	r0,a
      002D7F A3               [24] 8681 	inc	dptr
      002D80 E0               [24] 8682 	movx	a,@dptr
      002D81 F9               [12] 8683 	mov	r1,a
      002D82 A3               [24] 8684 	inc	dptr
      002D83 E0               [24] 8685 	movx	a,@dptr
      002D84 FC               [12] 8686 	mov	r4,a
      002D85 90r00r74         [24] 8687 	mov	dptr,#_dir_next_PARM_2
      002D88 E4               [12] 8688 	clr	a
      002D89 F0               [24] 8689 	movx	@dptr,a
      002D8A A3               [24] 8690 	inc	dptr
      002D8B F0               [24] 8691 	movx	@dptr,a
      002D8C 88 82            [24] 8692 	mov	dpl,r0
      002D8E 89 83            [24] 8693 	mov	dph,r1
      002D90 8C F0            [24] 8694 	mov	b,r4
      002D92 C0 07            [24] 8695 	push	ar7
      002D94 C0 06            [24] 8696 	push	ar6
      002D96 C0 05            [24] 8697 	push	ar5
      002D98 C0 03            [24] 8698 	push	ar3
      002D9A C0 02            [24] 8699 	push	ar2
      002D9C 12r22r70         [24] 8700 	lcall	_dir_next
      002D9F AC 82            [24] 8701 	mov	r4,dpl
      002DA1 D0 02            [24] 8702 	pop	ar2
      002DA3 D0 03            [24] 8703 	pop	ar3
      002DA5 D0 05            [24] 8704 	pop	ar5
      002DA7 D0 06            [24] 8705 	pop	ar6
      002DA9 D0 07            [24] 8706 	pop	ar7
      002DAB 90r00rA2         [24] 8707 	mov	dptr,#_dir_find_res_65536_173
      002DAE EC               [12] 8708 	mov	a,r4
      002DAF F0               [24] 8709 	movx	@dptr,a
                                   8710 ;	ff15\source\ff.c:2452: } while (res == FR_OK);
      002DB0 EC               [12] 8711 	mov	a,r4
      002DB1 D0 04            [24] 8712 	pop	ar4
      002DB3 D0 03            [24] 8713 	pop	ar3
      002DB5 D0 02            [24] 8714 	pop	ar2
      002DB7 70 03            [24] 8715 	jnz	00140$
      002DB9 02r2Cr15         [24] 8716 	ljmp	00110$
      002DBC                       8717 00140$:
      002DBC                       8718 00112$:
                                   8719 ;	ff15\source\ff.c:2454: return res;
      002DBC 90r00rA2         [24] 8720 	mov	dptr,#_dir_find_res_65536_173
      002DBF E0               [24] 8721 	movx	a,@dptr
                                   8722 ;	ff15\source\ff.c:2455: }
      002DC0 F5 82            [12] 8723 	mov	dpl,a
      002DC2 22               [24] 8724 	ret
                                   8725 ;------------------------------------------------------------
                                   8726 ;Allocation info for local variables in function 'dir_register'
                                   8727 ;------------------------------------------------------------
                                   8728 ;sloc0                     Allocated with name '_dir_register_sloc0_1_0'
                                   8729 ;sloc1                     Allocated with name '_dir_register_sloc1_1_0'
                                   8730 ;dp                        Allocated with name '_dir_register_dp_65536_176'
                                   8731 ;res                       Allocated with name '_dir_register_res_65536_177'
                                   8732 ;fs                        Allocated with name '_dir_register_fs_65536_177'
                                   8733 ;------------------------------------------------------------
                                   8734 ;	ff15\source\ff.c:2465: static FRESULT dir_register (	/* FR_OK:succeeded, FR_DENIED:no free entry or too many SFN collision, FR_DISK_ERR:disk error */
                                   8735 ;	-----------------------------------------
                                   8736 ;	 function dir_register
                                   8737 ;	-----------------------------------------
      002DC3                       8738 _dir_register:
      002DC3 AF F0            [24] 8739 	mov	r7,b
      002DC5 AE 83            [24] 8740 	mov	r6,dph
      002DC7 E5 82            [12] 8741 	mov	a,dpl
      002DC9 90r00rA3         [24] 8742 	mov	dptr,#_dir_register_dp_65536_176
      002DCC F0               [24] 8743 	movx	@dptr,a
      002DCD EE               [12] 8744 	mov	a,r6
      002DCE A3               [24] 8745 	inc	dptr
      002DCF F0               [24] 8746 	movx	@dptr,a
      002DD0 EF               [12] 8747 	mov	a,r7
      002DD1 A3               [24] 8748 	inc	dptr
      002DD2 F0               [24] 8749 	movx	@dptr,a
                                   8750 ;	ff15\source\ff.c:2470: FATFS *fs = dp->obj.fs;
      002DD3 90r00rA3         [24] 8751 	mov	dptr,#_dir_register_dp_65536_176
      002DD6 E0               [24] 8752 	movx	a,@dptr
      002DD7 FD               [12] 8753 	mov	r5,a
      002DD8 A3               [24] 8754 	inc	dptr
      002DD9 E0               [24] 8755 	movx	a,@dptr
      002DDA FE               [12] 8756 	mov	r6,a
      002DDB A3               [24] 8757 	inc	dptr
      002DDC E0               [24] 8758 	movx	a,@dptr
      002DDD FF               [12] 8759 	mov	r7,a
      002DDE 8D 82            [24] 8760 	mov	dpl,r5
      002DE0 8E 83            [24] 8761 	mov	dph,r6
      002DE2 8F F0            [24] 8762 	mov	b,r7
      002DE4 12r00r00         [24] 8763 	lcall	__gptrget
      002DE7 F5*BA            [12] 8764 	mov	_dir_register_sloc0_1_0,a
      002DE9 A3               [24] 8765 	inc	dptr
      002DEA 12r00r00         [24] 8766 	lcall	__gptrget
      002DED F5*BB            [12] 8767 	mov	(_dir_register_sloc0_1_0 + 1),a
      002DEF A3               [24] 8768 	inc	dptr
      002DF0 12r00r00         [24] 8769 	lcall	__gptrget
      002DF3 F5*BC            [12] 8770 	mov	(_dir_register_sloc0_1_0 + 2),a
                                   8771 ;	ff15\source\ff.c:2542: res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
      002DF5 90r00r7D         [24] 8772 	mov	dptr,#_dir_alloc_PARM_2
      002DF8 74 01            [12] 8773 	mov	a,#0x01
      002DFA F0               [24] 8774 	movx	@dptr,a
      002DFB E4               [12] 8775 	clr	a
      002DFC A3               [24] 8776 	inc	dptr
      002DFD F0               [24] 8777 	movx	@dptr,a
      002DFE 8D 82            [24] 8778 	mov	dpl,r5
      002E00 8E 83            [24] 8779 	mov	dph,r6
      002E02 8F F0            [24] 8780 	mov	b,r7
      002E04 12r26rF6         [24] 8781 	lcall	_dir_alloc
      002E07 AF 82            [24] 8782 	mov	r7,dpl
      002E09 90r00rA6         [24] 8783 	mov	dptr,#_dir_register_res_65536_177
      002E0C EF               [12] 8784 	mov	a,r7
      002E0D F0               [24] 8785 	movx	@dptr,a
                                   8786 ;	ff15\source\ff.c:2547: if (res == FR_OK) {
      002E0E EF               [12] 8787 	mov	a,r7
      002E0F 60 03            [24] 8788 	jz	00115$
      002E11 02r2Fr0A         [24] 8789 	ljmp	00104$
      002E14                       8790 00115$:
                                   8791 ;	ff15\source\ff.c:2548: res = move_window(fs, dp->sect);
      002E14 90r00rA3         [24] 8792 	mov	dptr,#_dir_register_dp_65536_176
      002E17 E0               [24] 8793 	movx	a,@dptr
      002E18 FD               [12] 8794 	mov	r5,a
      002E19 A3               [24] 8795 	inc	dptr
      002E1A E0               [24] 8796 	movx	a,@dptr
      002E1B FE               [12] 8797 	mov	r6,a
      002E1C A3               [24] 8798 	inc	dptr
      002E1D E0               [24] 8799 	movx	a,@dptr
      002E1E FF               [12] 8800 	mov	r7,a
      002E1F 74 17            [12] 8801 	mov	a,#0x17
      002E21 2D               [12] 8802 	add	a,r5
      002E22 F8               [12] 8803 	mov	r0,a
      002E23 E4               [12] 8804 	clr	a
      002E24 3E               [12] 8805 	addc	a,r6
      002E25 F9               [12] 8806 	mov	r1,a
      002E26 8F 04            [24] 8807 	mov	ar4,r7
      002E28 88 82            [24] 8808 	mov	dpl,r0
      002E2A 89 83            [24] 8809 	mov	dph,r1
      002E2C 8C F0            [24] 8810 	mov	b,r4
      002E2E 12r00r00         [24] 8811 	lcall	__gptrget
      002E31 F8               [12] 8812 	mov	r0,a
      002E32 A3               [24] 8813 	inc	dptr
      002E33 12r00r00         [24] 8814 	lcall	__gptrget
      002E36 F9               [12] 8815 	mov	r1,a
      002E37 A3               [24] 8816 	inc	dptr
      002E38 12r00r00         [24] 8817 	lcall	__gptrget
      002E3B FC               [12] 8818 	mov	r4,a
      002E3C A3               [24] 8819 	inc	dptr
      002E3D 12r00r00         [24] 8820 	lcall	__gptrget
      002E40 FB               [12] 8821 	mov	r3,a
      002E41 90r00r1D         [24] 8822 	mov	dptr,#_move_window_PARM_2
      002E44 E8               [12] 8823 	mov	a,r0
      002E45 F0               [24] 8824 	movx	@dptr,a
      002E46 E9               [12] 8825 	mov	a,r1
      002E47 A3               [24] 8826 	inc	dptr
      002E48 F0               [24] 8827 	movx	@dptr,a
      002E49 EC               [12] 8828 	mov	a,r4
      002E4A A3               [24] 8829 	inc	dptr
      002E4B F0               [24] 8830 	movx	@dptr,a
      002E4C EB               [12] 8831 	mov	a,r3
      002E4D A3               [24] 8832 	inc	dptr
      002E4E F0               [24] 8833 	movx	@dptr,a
      002E4F 85*BA 82         [24] 8834 	mov	dpl,_dir_register_sloc0_1_0
      002E52 85*BB 83         [24] 8835 	mov	dph,(_dir_register_sloc0_1_0 + 1)
      002E55 85*BC F0         [24] 8836 	mov	b,(_dir_register_sloc0_1_0 + 2)
      002E58 C0 07            [24] 8837 	push	ar7
      002E5A C0 06            [24] 8838 	push	ar6
      002E5C C0 05            [24] 8839 	push	ar5
      002E5E 12r05r18         [24] 8840 	lcall	_move_window
      002E61 AC 82            [24] 8841 	mov	r4,dpl
      002E63 D0 05            [24] 8842 	pop	ar5
      002E65 D0 06            [24] 8843 	pop	ar6
      002E67 D0 07            [24] 8844 	pop	ar7
      002E69 90r00rA6         [24] 8845 	mov	dptr,#_dir_register_res_65536_177
      002E6C EC               [12] 8846 	mov	a,r4
      002E6D F0               [24] 8847 	movx	@dptr,a
                                   8848 ;	ff15\source\ff.c:2549: if (res == FR_OK) {
      002E6E EC               [12] 8849 	mov	a,r4
      002E6F 60 03            [24] 8850 	jz	00116$
      002E71 02r2Fr0A         [24] 8851 	ljmp	00104$
      002E74                       8852 00116$:
                                   8853 ;	ff15\source\ff.c:2550: memset(dp->dir, 0, SZDIRE);	/* Clean the entry */
      002E74 74 1B            [12] 8854 	mov	a,#0x1b
      002E76 2D               [12] 8855 	add	a,r5
      002E77 F5*BD            [12] 8856 	mov	_dir_register_sloc1_1_0,a
      002E79 E4               [12] 8857 	clr	a
      002E7A 3E               [12] 8858 	addc	a,r6
      002E7B F5*BE            [12] 8859 	mov	(_dir_register_sloc1_1_0 + 1),a
      002E7D 8F*BF            [24] 8860 	mov	(_dir_register_sloc1_1_0 + 2),r7
      002E7F 85*BD 82         [24] 8861 	mov	dpl,_dir_register_sloc1_1_0
      002E82 85*BE 83         [24] 8862 	mov	dph,(_dir_register_sloc1_1_0 + 1)
      002E85 85*BF F0         [24] 8863 	mov	b,(_dir_register_sloc1_1_0 + 2)
      002E88 12r00r00         [24] 8864 	lcall	__gptrget
      002E8B F8               [12] 8865 	mov	r0,a
      002E8C A3               [24] 8866 	inc	dptr
      002E8D 12r00r00         [24] 8867 	lcall	__gptrget
      002E90 F9               [12] 8868 	mov	r1,a
      002E91 A3               [24] 8869 	inc	dptr
      002E92 12r00r00         [24] 8870 	lcall	__gptrget
      002E95 FC               [12] 8871 	mov	r4,a
      002E96 90r00r00         [24] 8872 	mov	dptr,#_memset_PARM_2
      002E99 E4               [12] 8873 	clr	a
      002E9A F0               [24] 8874 	movx	@dptr,a
      002E9B 90r00r00         [24] 8875 	mov	dptr,#_memset_PARM_3
      002E9E 74 20            [12] 8876 	mov	a,#0x20
      002EA0 F0               [24] 8877 	movx	@dptr,a
      002EA1 E4               [12] 8878 	clr	a
      002EA2 A3               [24] 8879 	inc	dptr
      002EA3 F0               [24] 8880 	movx	@dptr,a
      002EA4 88 82            [24] 8881 	mov	dpl,r0
      002EA6 89 83            [24] 8882 	mov	dph,r1
      002EA8 8C F0            [24] 8883 	mov	b,r4
      002EAA C0 07            [24] 8884 	push	ar7
      002EAC C0 06            [24] 8885 	push	ar6
      002EAE C0 05            [24] 8886 	push	ar5
      002EB0 12r00r00         [24] 8887 	lcall	_memset
      002EB3 D0 05            [24] 8888 	pop	ar5
      002EB5 D0 06            [24] 8889 	pop	ar6
      002EB7 D0 07            [24] 8890 	pop	ar7
                                   8891 ;	ff15\source\ff.c:2551: memcpy(dp->dir + DIR_Name, dp->fn, 11);	/* Put SFN */
      002EB9 85*BD 82         [24] 8892 	mov	dpl,_dir_register_sloc1_1_0
      002EBC 85*BE 83         [24] 8893 	mov	dph,(_dir_register_sloc1_1_0 + 1)
      002EBF 85*BF F0         [24] 8894 	mov	b,(_dir_register_sloc1_1_0 + 2)
      002EC2 12r00r00         [24] 8895 	lcall	__gptrget
      002EC5 FA               [12] 8896 	mov	r2,a
      002EC6 A3               [24] 8897 	inc	dptr
      002EC7 12r00r00         [24] 8898 	lcall	__gptrget
      002ECA FB               [12] 8899 	mov	r3,a
      002ECB A3               [24] 8900 	inc	dptr
      002ECC 12r00r00         [24] 8901 	lcall	__gptrget
      002ECF FC               [12] 8902 	mov	r4,a
      002ED0 74 1E            [12] 8903 	mov	a,#0x1e
      002ED2 2D               [12] 8904 	add	a,r5
      002ED3 FD               [12] 8905 	mov	r5,a
      002ED4 E4               [12] 8906 	clr	a
      002ED5 3E               [12] 8907 	addc	a,r6
      002ED6 FE               [12] 8908 	mov	r6,a
      002ED7 90r00r00         [24] 8909 	mov	dptr,#___memcpy_PARM_2
      002EDA ED               [12] 8910 	mov	a,r5
      002EDB F0               [24] 8911 	movx	@dptr,a
      002EDC EE               [12] 8912 	mov	a,r6
      002EDD A3               [24] 8913 	inc	dptr
      002EDE F0               [24] 8914 	movx	@dptr,a
      002EDF EF               [12] 8915 	mov	a,r7
      002EE0 A3               [24] 8916 	inc	dptr
      002EE1 F0               [24] 8917 	movx	@dptr,a
      002EE2 90r00r00         [24] 8918 	mov	dptr,#___memcpy_PARM_3
      002EE5 74 0B            [12] 8919 	mov	a,#0x0b
      002EE7 F0               [24] 8920 	movx	@dptr,a
      002EE8 E4               [12] 8921 	clr	a
      002EE9 A3               [24] 8922 	inc	dptr
      002EEA F0               [24] 8923 	movx	@dptr,a
      002EEB 8A 82            [24] 8924 	mov	dpl,r2
      002EED 8B 83            [24] 8925 	mov	dph,r3
      002EEF 8C F0            [24] 8926 	mov	b,r4
      002EF1 12r00r00         [24] 8927 	lcall	___memcpy
                                   8928 ;	ff15\source\ff.c:2555: fs->wflag = 1;
      002EF4 74 04            [12] 8929 	mov	a,#0x04
      002EF6 25*BA            [12] 8930 	add	a,_dir_register_sloc0_1_0
      002EF8 FD               [12] 8931 	mov	r5,a
      002EF9 E4               [12] 8932 	clr	a
      002EFA 35*BB            [12] 8933 	addc	a,(_dir_register_sloc0_1_0 + 1)
      002EFC FE               [12] 8934 	mov	r6,a
      002EFD AF*BC            [24] 8935 	mov	r7,(_dir_register_sloc0_1_0 + 2)
      002EFF 8D 82            [24] 8936 	mov	dpl,r5
      002F01 8E 83            [24] 8937 	mov	dph,r6
      002F03 8F F0            [24] 8938 	mov	b,r7
      002F05 74 01            [12] 8939 	mov	a,#0x01
      002F07 12r00r00         [24] 8940 	lcall	__gptrput
      002F0A                       8941 00104$:
                                   8942 ;	ff15\source\ff.c:2559: return res;
      002F0A 90r00rA6         [24] 8943 	mov	dptr,#_dir_register_res_65536_177
      002F0D E0               [24] 8944 	movx	a,@dptr
                                   8945 ;	ff15\source\ff.c:2560: }
      002F0E F5 82            [12] 8946 	mov	dpl,a
      002F10 22               [24] 8947 	ret
                                   8948 ;------------------------------------------------------------
                                   8949 ;Allocation info for local variables in function 'dir_remove'
                                   8950 ;------------------------------------------------------------
                                   8951 ;sloc0                     Allocated with name '_dir_remove_sloc0_1_0'
                                   8952 ;dp                        Allocated with name '_dir_remove_dp_65536_180'
                                   8953 ;res                       Allocated with name '_dir_remove_res_65536_181'
                                   8954 ;fs                        Allocated with name '_dir_remove_fs_65536_181'
                                   8955 ;------------------------------------------------------------
                                   8956 ;	ff15\source\ff.c:2571: static FRESULT dir_remove (	/* FR_OK:Succeeded, FR_DISK_ERR:A disk error */
                                   8957 ;	-----------------------------------------
                                   8958 ;	 function dir_remove
                                   8959 ;	-----------------------------------------
      002F11                       8960 _dir_remove:
      002F11 AF F0            [24] 8961 	mov	r7,b
      002F13 AE 83            [24] 8962 	mov	r6,dph
      002F15 E5 82            [12] 8963 	mov	a,dpl
      002F17 90r00rA7         [24] 8964 	mov	dptr,#_dir_remove_dp_65536_180
      002F1A F0               [24] 8965 	movx	@dptr,a
      002F1B EE               [12] 8966 	mov	a,r6
      002F1C A3               [24] 8967 	inc	dptr
      002F1D F0               [24] 8968 	movx	@dptr,a
      002F1E EF               [12] 8969 	mov	a,r7
      002F1F A3               [24] 8970 	inc	dptr
      002F20 F0               [24] 8971 	movx	@dptr,a
                                   8972 ;	ff15\source\ff.c:2576: FATFS *fs = dp->obj.fs;
      002F21 90r00rA7         [24] 8973 	mov	dptr,#_dir_remove_dp_65536_180
      002F24 E0               [24] 8974 	movx	a,@dptr
      002F25 FD               [12] 8975 	mov	r5,a
      002F26 A3               [24] 8976 	inc	dptr
      002F27 E0               [24] 8977 	movx	a,@dptr
      002F28 FE               [12] 8978 	mov	r6,a
      002F29 A3               [24] 8979 	inc	dptr
      002F2A E0               [24] 8980 	movx	a,@dptr
      002F2B FF               [12] 8981 	mov	r7,a
      002F2C 8D 82            [24] 8982 	mov	dpl,r5
      002F2E 8E 83            [24] 8983 	mov	dph,r6
      002F30 8F F0            [24] 8984 	mov	b,r7
      002F32 12r00r00         [24] 8985 	lcall	__gptrget
      002F35 F5*C0            [12] 8986 	mov	_dir_remove_sloc0_1_0,a
      002F37 A3               [24] 8987 	inc	dptr
      002F38 12r00r00         [24] 8988 	lcall	__gptrget
      002F3B F5*C1            [12] 8989 	mov	(_dir_remove_sloc0_1_0 + 1),a
      002F3D A3               [24] 8990 	inc	dptr
      002F3E 12r00r00         [24] 8991 	lcall	__gptrget
      002F41 F5*C2            [12] 8992 	mov	(_dir_remove_sloc0_1_0 + 2),a
                                   8993 ;	ff15\source\ff.c:2598: res = move_window(fs, dp->sect);
      002F43 74 17            [12] 8994 	mov	a,#0x17
      002F45 2D               [12] 8995 	add	a,r5
      002F46 F8               [12] 8996 	mov	r0,a
      002F47 E4               [12] 8997 	clr	a
      002F48 3E               [12] 8998 	addc	a,r6
      002F49 F9               [12] 8999 	mov	r1,a
      002F4A 8F 04            [24] 9000 	mov	ar4,r7
      002F4C 88 82            [24] 9001 	mov	dpl,r0
      002F4E 89 83            [24] 9002 	mov	dph,r1
      002F50 8C F0            [24] 9003 	mov	b,r4
      002F52 12r00r00         [24] 9004 	lcall	__gptrget
      002F55 F8               [12] 9005 	mov	r0,a
      002F56 A3               [24] 9006 	inc	dptr
      002F57 12r00r00         [24] 9007 	lcall	__gptrget
      002F5A F9               [12] 9008 	mov	r1,a
      002F5B A3               [24] 9009 	inc	dptr
      002F5C 12r00r00         [24] 9010 	lcall	__gptrget
      002F5F FC               [12] 9011 	mov	r4,a
      002F60 A3               [24] 9012 	inc	dptr
      002F61 12r00r00         [24] 9013 	lcall	__gptrget
      002F64 FB               [12] 9014 	mov	r3,a
      002F65 90r00r1D         [24] 9015 	mov	dptr,#_move_window_PARM_2
      002F68 E8               [12] 9016 	mov	a,r0
      002F69 F0               [24] 9017 	movx	@dptr,a
      002F6A E9               [12] 9018 	mov	a,r1
      002F6B A3               [24] 9019 	inc	dptr
      002F6C F0               [24] 9020 	movx	@dptr,a
      002F6D EC               [12] 9021 	mov	a,r4
      002F6E A3               [24] 9022 	inc	dptr
      002F6F F0               [24] 9023 	movx	@dptr,a
      002F70 EB               [12] 9024 	mov	a,r3
      002F71 A3               [24] 9025 	inc	dptr
      002F72 F0               [24] 9026 	movx	@dptr,a
      002F73 85*C0 82         [24] 9027 	mov	dpl,_dir_remove_sloc0_1_0
      002F76 85*C1 83         [24] 9028 	mov	dph,(_dir_remove_sloc0_1_0 + 1)
      002F79 85*C2 F0         [24] 9029 	mov	b,(_dir_remove_sloc0_1_0 + 2)
      002F7C C0 07            [24] 9030 	push	ar7
      002F7E C0 06            [24] 9031 	push	ar6
      002F80 C0 05            [24] 9032 	push	ar5
      002F82 12r05r18         [24] 9033 	lcall	_move_window
      002F85 AC 82            [24] 9034 	mov	r4,dpl
      002F87 D0 05            [24] 9035 	pop	ar5
      002F89 D0 06            [24] 9036 	pop	ar6
      002F8B D0 07            [24] 9037 	pop	ar7
                                   9038 ;	ff15\source\ff.c:2599: if (res == FR_OK) {
      002F8D EC               [12] 9039 	mov	a,r4
      002F8E 70 3C            [24] 9040 	jnz	00102$
                                   9041 ;	ff15\source\ff.c:2600: dp->dir[DIR_Name] = DDEM;	/* Mark the entry 'deleted'.*/
      002F90 74 1B            [12] 9042 	mov	a,#0x1b
      002F92 2D               [12] 9043 	add	a,r5
      002F93 FD               [12] 9044 	mov	r5,a
      002F94 E4               [12] 9045 	clr	a
      002F95 3E               [12] 9046 	addc	a,r6
      002F96 FE               [12] 9047 	mov	r6,a
      002F97 8D 82            [24] 9048 	mov	dpl,r5
      002F99 8E 83            [24] 9049 	mov	dph,r6
      002F9B 8F F0            [24] 9050 	mov	b,r7
      002F9D 12r00r00         [24] 9051 	lcall	__gptrget
      002FA0 FD               [12] 9052 	mov	r5,a
      002FA1 A3               [24] 9053 	inc	dptr
      002FA2 12r00r00         [24] 9054 	lcall	__gptrget
      002FA5 FE               [12] 9055 	mov	r6,a
      002FA6 A3               [24] 9056 	inc	dptr
      002FA7 12r00r00         [24] 9057 	lcall	__gptrget
      002FAA FF               [12] 9058 	mov	r7,a
      002FAB 8D 82            [24] 9059 	mov	dpl,r5
      002FAD 8E 83            [24] 9060 	mov	dph,r6
      002FAF 8F F0            [24] 9061 	mov	b,r7
      002FB1 74 E5            [12] 9062 	mov	a,#0xe5
      002FB3 12r00r00         [24] 9063 	lcall	__gptrput
                                   9064 ;	ff15\source\ff.c:2601: fs->wflag = 1;
      002FB6 74 04            [12] 9065 	mov	a,#0x04
      002FB8 25*C0            [12] 9066 	add	a,_dir_remove_sloc0_1_0
      002FBA FD               [12] 9067 	mov	r5,a
      002FBB E4               [12] 9068 	clr	a
      002FBC 35*C1            [12] 9069 	addc	a,(_dir_remove_sloc0_1_0 + 1)
      002FBE FE               [12] 9070 	mov	r6,a
      002FBF AF*C2            [24] 9071 	mov	r7,(_dir_remove_sloc0_1_0 + 2)
      002FC1 8D 82            [24] 9072 	mov	dpl,r5
      002FC3 8E 83            [24] 9073 	mov	dph,r6
      002FC5 8F F0            [24] 9074 	mov	b,r7
      002FC7 74 01            [12] 9075 	mov	a,#0x01
      002FC9 12r00r00         [24] 9076 	lcall	__gptrput
      002FCC                       9077 00102$:
                                   9078 ;	ff15\source\ff.c:2605: return res;
      002FCC 8C 82            [24] 9079 	mov	dpl,r4
                                   9080 ;	ff15\source\ff.c:2606: }
      002FCE 22               [24] 9081 	ret
                                   9082 ;------------------------------------------------------------
                                   9083 ;Allocation info for local variables in function 'get_fileinfo'
                                   9084 ;------------------------------------------------------------
                                   9085 ;sloc0                     Allocated with name '_get_fileinfo_sloc0_1_0'
                                   9086 ;sloc1                     Allocated with name '_get_fileinfo_sloc1_1_0'
                                   9087 ;sloc2                     Allocated with name '_get_fileinfo_sloc2_1_0'
                                   9088 ;sloc3                     Allocated with name '_get_fileinfo_sloc3_1_0'
                                   9089 ;fno                       Allocated with name '_get_fileinfo_PARM_2'
                                   9090 ;dp                        Allocated with name '_get_fileinfo_dp_65536_183'
                                   9091 ;si                        Allocated with name '_get_fileinfo_si_65536_184'
                                   9092 ;di                        Allocated with name '_get_fileinfo_di_65536_184'
                                   9093 ;c                         Allocated with name '_get_fileinfo_c_65536_184'
                                   9094 ;------------------------------------------------------------
                                   9095 ;	ff15\source\ff.c:2617: static void get_fileinfo (
                                   9096 ;	-----------------------------------------
                                   9097 ;	 function get_fileinfo
                                   9098 ;	-----------------------------------------
      002FCF                       9099 _get_fileinfo:
      002FCF AF F0            [24] 9100 	mov	r7,b
      002FD1 AE 83            [24] 9101 	mov	r6,dph
      002FD3 E5 82            [12] 9102 	mov	a,dpl
      002FD5 90r00rAD         [24] 9103 	mov	dptr,#_get_fileinfo_dp_65536_183
      002FD8 F0               [24] 9104 	movx	@dptr,a
      002FD9 EE               [12] 9105 	mov	a,r6
      002FDA A3               [24] 9106 	inc	dptr
      002FDB F0               [24] 9107 	movx	@dptr,a
      002FDC EF               [12] 9108 	mov	a,r7
      002FDD A3               [24] 9109 	inc	dptr
      002FDE F0               [24] 9110 	movx	@dptr,a
                                   9111 ;	ff15\source\ff.c:2633: fno->fname[0] = 0;			/* Invaidate file info */
      002FDF 90r00rAA         [24] 9112 	mov	dptr,#_get_fileinfo_PARM_2
      002FE2 E0               [24] 9113 	movx	a,@dptr
      002FE3 FD               [12] 9114 	mov	r5,a
      002FE4 A3               [24] 9115 	inc	dptr
      002FE5 E0               [24] 9116 	movx	a,@dptr
      002FE6 FE               [12] 9117 	mov	r6,a
      002FE7 A3               [24] 9118 	inc	dptr
      002FE8 E0               [24] 9119 	movx	a,@dptr
      002FE9 FF               [12] 9120 	mov	r7,a
      002FEA 74 09            [12] 9121 	mov	a,#0x09
      002FEC 2D               [12] 9122 	add	a,r5
      002FED FA               [12] 9123 	mov	r2,a
      002FEE E4               [12] 9124 	clr	a
      002FEF 3E               [12] 9125 	addc	a,r6
      002FF0 FB               [12] 9126 	mov	r3,a
      002FF1 8F 04            [24] 9127 	mov	ar4,r7
      002FF3 8A 82            [24] 9128 	mov	dpl,r2
      002FF5 8B 83            [24] 9129 	mov	dph,r3
      002FF7 8C F0            [24] 9130 	mov	b,r4
      002FF9 E4               [12] 9131 	clr	a
      002FFA 12r00r00         [24] 9132 	lcall	__gptrput
                                   9133 ;	ff15\source\ff.c:2634: if (dp->sect == 0) return;	/* Exit if read pointer has reached end of directory */
      002FFD 90r00rAD         [24] 9134 	mov	dptr,#_get_fileinfo_dp_65536_183
      003000 E0               [24] 9135 	movx	a,@dptr
      003001 F5*C3            [12] 9136 	mov	_get_fileinfo_sloc0_1_0,a
      003003 A3               [24] 9137 	inc	dptr
      003004 E0               [24] 9138 	movx	a,@dptr
      003005 F5*C4            [12] 9139 	mov	(_get_fileinfo_sloc0_1_0 + 1),a
      003007 A3               [24] 9140 	inc	dptr
      003008 E0               [24] 9141 	movx	a,@dptr
      003009 F5*C5            [12] 9142 	mov	(_get_fileinfo_sloc0_1_0 + 2),a
      00300B 74 17            [12] 9143 	mov	a,#0x17
      00300D 25*C3            [12] 9144 	add	a,_get_fileinfo_sloc0_1_0
      00300F F8               [12] 9145 	mov	r0,a
      003010 E4               [12] 9146 	clr	a
      003011 35*C4            [12] 9147 	addc	a,(_get_fileinfo_sloc0_1_0 + 1)
      003013 F9               [12] 9148 	mov	r1,a
      003014 AC*C5            [24] 9149 	mov	r4,(_get_fileinfo_sloc0_1_0 + 2)
      003016 88 82            [24] 9150 	mov	dpl,r0
      003018 89 83            [24] 9151 	mov	dph,r1
      00301A 8C F0            [24] 9152 	mov	b,r4
      00301C 12r00r00         [24] 9153 	lcall	__gptrget
      00301F F8               [12] 9154 	mov	r0,a
      003020 A3               [24] 9155 	inc	dptr
      003021 12r00r00         [24] 9156 	lcall	__gptrget
      003024 F9               [12] 9157 	mov	r1,a
      003025 A3               [24] 9158 	inc	dptr
      003026 12r00r00         [24] 9159 	lcall	__gptrget
      003029 FC               [12] 9160 	mov	r4,a
      00302A A3               [24] 9161 	inc	dptr
      00302B 12r00r00         [24] 9162 	lcall	__gptrget
      00302E FB               [12] 9163 	mov	r3,a
      00302F E8               [12] 9164 	mov	a,r0
      003030 49               [12] 9165 	orl	a,r1
      003031 4C               [12] 9166 	orl	a,r4
      003032 4B               [12] 9167 	orl	a,r3
      003033 70 01            [24] 9168 	jnz	00102$
      003035 22               [24] 9169 	ret
      003036                       9170 00102$:
                                   9171 ;	ff15\source\ff.c:2733: si = di = 0;
      003036 90r00rB0         [24] 9172 	mov	dptr,#_get_fileinfo_di_65536_184
      003039 E4               [12] 9173 	clr	a
      00303A F0               [24] 9174 	movx	@dptr,a
      00303B A3               [24] 9175 	inc	dptr
      00303C F0               [24] 9176 	movx	@dptr,a
                                   9177 ;	ff15\source\ff.c:2734: while (si < 11) {		/* Copy name body and extension */
      00303D 74 1B            [12] 9178 	mov	a,#0x1b
      00303F 25*C3            [12] 9179 	add	a,_get_fileinfo_sloc0_1_0
      003041 FA               [12] 9180 	mov	r2,a
      003042 E4               [12] 9181 	clr	a
      003043 35*C4            [12] 9182 	addc	a,(_get_fileinfo_sloc0_1_0 + 1)
      003045 FB               [12] 9183 	mov	r3,a
      003046 AC*C5            [24] 9184 	mov	r4,(_get_fileinfo_sloc0_1_0 + 2)
      003048 74 09            [12] 9185 	mov	a,#0x09
      00304A 2D               [12] 9186 	add	a,r5
      00304B F5*C3            [12] 9187 	mov	_get_fileinfo_sloc0_1_0,a
      00304D E4               [12] 9188 	clr	a
      00304E 3E               [12] 9189 	addc	a,r6
      00304F F5*C4            [12] 9190 	mov	(_get_fileinfo_sloc0_1_0 + 1),a
      003051 8F*C5            [24] 9191 	mov	(_get_fileinfo_sloc0_1_0 + 2),r7
      003053 85*C3*C6         [24] 9192 	mov	_get_fileinfo_sloc1_1_0,_get_fileinfo_sloc0_1_0
      003056 85*C4*C7         [24] 9193 	mov	(_get_fileinfo_sloc1_1_0 + 1),(_get_fileinfo_sloc0_1_0 + 1)
      003059 85*C5*C8         [24] 9194 	mov	(_get_fileinfo_sloc1_1_0 + 2),(_get_fileinfo_sloc0_1_0 + 2)
      00305C 78 00            [12] 9195 	mov	r0,#0x00
      00305E 79 00            [12] 9196 	mov	r1,#0x00
      003060                       9197 00109$:
      003060 C3               [12] 9198 	clr	c
      003061 E8               [12] 9199 	mov	a,r0
      003062 94 0B            [12] 9200 	subb	a,#0x0b
      003064 E9               [12] 9201 	mov	a,r1
      003065 94 00            [12] 9202 	subb	a,#0x00
      003067 40 03            [24] 9203 	jc	00140$
      003069 02r31r37         [24] 9204 	ljmp	00111$
      00306C                       9205 00140$:
                                   9206 ;	ff15\source\ff.c:2735: c = (TCHAR)dp->dir[si++];
      00306C C0 05            [24] 9207 	push	ar5
      00306E C0 06            [24] 9208 	push	ar6
      003070 C0 07            [24] 9209 	push	ar7
      003072 8A 82            [24] 9210 	mov	dpl,r2
      003074 8B 83            [24] 9211 	mov	dph,r3
      003076 8C F0            [24] 9212 	mov	b,r4
      003078 12r00r00         [24] 9213 	lcall	__gptrget
      00307B FD               [12] 9214 	mov	r5,a
      00307C A3               [24] 9215 	inc	dptr
      00307D 12r00r00         [24] 9216 	lcall	__gptrget
      003080 FE               [12] 9217 	mov	r6,a
      003081 A3               [24] 9218 	inc	dptr
      003082 12r00r00         [24] 9219 	lcall	__gptrget
      003085 FF               [12] 9220 	mov	r7,a
      003086 E8               [12] 9221 	mov	a,r0
      003087 2D               [12] 9222 	add	a,r5
      003088 FD               [12] 9223 	mov	r5,a
      003089 E9               [12] 9224 	mov	a,r1
      00308A 3E               [12] 9225 	addc	a,r6
      00308B FE               [12] 9226 	mov	r6,a
      00308C 08               [12] 9227 	inc	r0
      00308D B8 00 01         [24] 9228 	cjne	r0,#0x00,00141$
      003090 09               [12] 9229 	inc	r1
      003091                       9230 00141$:
      003091 8D 82            [24] 9231 	mov	dpl,r5
      003093 8E 83            [24] 9232 	mov	dph,r6
      003095 8F F0            [24] 9233 	mov	b,r7
      003097 12r00r00         [24] 9234 	lcall	__gptrget
      00309A F5*C9            [12] 9235 	mov	_get_fileinfo_sloc2_1_0,a
      00309C 90r00rB2         [24] 9236 	mov	dptr,#_get_fileinfo_c_65536_184
      00309F F0               [24] 9237 	movx	@dptr,a
                                   9238 ;	ff15\source\ff.c:2736: if (c == ' ') continue;		/* Skip padding spaces */
      0030A0 74 20            [12] 9239 	mov	a,#0x20
      0030A2 B5*C9 08         [24] 9240 	cjne	a,_get_fileinfo_sloc2_1_0,00142$
      0030A5 D0 07            [24] 9241 	pop	ar7
      0030A7 D0 06            [24] 9242 	pop	ar6
      0030A9 D0 05            [24] 9243 	pop	ar5
      0030AB 80 B3            [24] 9244 	sjmp	00109$
      0030AD                       9245 00142$:
      0030AD D0 07            [24] 9246 	pop	ar7
      0030AF D0 06            [24] 9247 	pop	ar6
      0030B1 D0 05            [24] 9248 	pop	ar5
                                   9249 ;	ff15\source\ff.c:2737: if (c == RDDEM) c = DDEM;	/* Restore replaced DDEM character */
      0030B3 74 05            [12] 9250 	mov	a,#0x05
      0030B5 B5*C9 06         [24] 9251 	cjne	a,_get_fileinfo_sloc2_1_0,00106$
      0030B8 90r00rB2         [24] 9252 	mov	dptr,#_get_fileinfo_c_65536_184
      0030BB 74 E5            [12] 9253 	mov	a,#0xe5
      0030BD F0               [24] 9254 	movx	@dptr,a
      0030BE                       9255 00106$:
                                   9256 ;	ff15\source\ff.c:2738: if (si == 9) fno->fname[di++] = '.';/* Insert a . if extension is exist */
      0030BE B8 09 37         [24] 9257 	cjne	r0,#0x09,00108$
      0030C1 B9 00 34         [24] 9258 	cjne	r1,#0x00,00108$
      0030C4 C0 02            [24] 9259 	push	ar2
      0030C6 C0 03            [24] 9260 	push	ar3
      0030C8 C0 04            [24] 9261 	push	ar4
      0030CA 90r00rB0         [24] 9262 	mov	dptr,#_get_fileinfo_di_65536_184
      0030CD E0               [24] 9263 	movx	a,@dptr
      0030CE FB               [12] 9264 	mov	r3,a
      0030CF A3               [24] 9265 	inc	dptr
      0030D0 E0               [24] 9266 	movx	a,@dptr
      0030D1 FC               [12] 9267 	mov	r4,a
      0030D2 90r00rB0         [24] 9268 	mov	dptr,#_get_fileinfo_di_65536_184
      0030D5 74 01            [12] 9269 	mov	a,#0x01
      0030D7 2B               [12] 9270 	add	a,r3
      0030D8 F0               [24] 9271 	movx	@dptr,a
      0030D9 E4               [12] 9272 	clr	a
      0030DA 3C               [12] 9273 	addc	a,r4
      0030DB A3               [24] 9274 	inc	dptr
      0030DC F0               [24] 9275 	movx	@dptr,a
      0030DD EB               [12] 9276 	mov	a,r3
      0030DE 25*C3            [12] 9277 	add	a,_get_fileinfo_sloc0_1_0
      0030E0 FB               [12] 9278 	mov	r3,a
      0030E1 EC               [12] 9279 	mov	a,r4
      0030E2 35*C4            [12] 9280 	addc	a,(_get_fileinfo_sloc0_1_0 + 1)
      0030E4 FC               [12] 9281 	mov	r4,a
      0030E5 AA*C5            [24] 9282 	mov	r2,(_get_fileinfo_sloc0_1_0 + 2)
      0030E7 8B 82            [24] 9283 	mov	dpl,r3
      0030E9 8C 83            [24] 9284 	mov	dph,r4
      0030EB 8A F0            [24] 9285 	mov	b,r2
      0030ED 74 2E            [12] 9286 	mov	a,#0x2e
      0030EF 12r00r00         [24] 9287 	lcall	__gptrput
                                   9288 ;	ff15\source\ff.c:2747: fno->fdate = ld_word(dp->dir + DIR_ModTime + 2);	/* Date */
      0030F2 D0 04            [24] 9289 	pop	ar4
      0030F4 D0 03            [24] 9290 	pop	ar3
      0030F6 D0 02            [24] 9291 	pop	ar2
                                   9292 ;	ff15\source\ff.c:2738: if (si == 9) fno->fname[di++] = '.';/* Insert a . if extension is exist */
      0030F8                       9293 00108$:
                                   9294 ;	ff15\source\ff.c:2739: fno->fname[di++] = c;
      0030F8 C0 02            [24] 9295 	push	ar2
      0030FA C0 03            [24] 9296 	push	ar3
      0030FC C0 04            [24] 9297 	push	ar4
      0030FE 90r00rB0         [24] 9298 	mov	dptr,#_get_fileinfo_di_65536_184
      003101 E0               [24] 9299 	movx	a,@dptr
      003102 FB               [12] 9300 	mov	r3,a
      003103 A3               [24] 9301 	inc	dptr
      003104 E0               [24] 9302 	movx	a,@dptr
      003105 FC               [12] 9303 	mov	r4,a
      003106 90r00rB0         [24] 9304 	mov	dptr,#_get_fileinfo_di_65536_184
      003109 74 01            [12] 9305 	mov	a,#0x01
      00310B 2B               [12] 9306 	add	a,r3
      00310C F0               [24] 9307 	movx	@dptr,a
      00310D E4               [12] 9308 	clr	a
      00310E 3C               [12] 9309 	addc	a,r4
      00310F A3               [24] 9310 	inc	dptr
      003110 F0               [24] 9311 	movx	@dptr,a
      003111 EB               [12] 9312 	mov	a,r3
      003112 25*C6            [12] 9313 	add	a,_get_fileinfo_sloc1_1_0
      003114 F5*CA            [12] 9314 	mov	_get_fileinfo_sloc3_1_0,a
      003116 EC               [12] 9315 	mov	a,r4
      003117 35*C7            [12] 9316 	addc	a,(_get_fileinfo_sloc1_1_0 + 1)
      003119 F5*CB            [12] 9317 	mov	(_get_fileinfo_sloc3_1_0 + 1),a
      00311B 85*C8*CC         [24] 9318 	mov	(_get_fileinfo_sloc3_1_0 + 2),(_get_fileinfo_sloc1_1_0 + 2)
      00311E 90r00rB2         [24] 9319 	mov	dptr,#_get_fileinfo_c_65536_184
      003121 E0               [24] 9320 	movx	a,@dptr
      003122 85*CA 82         [24] 9321 	mov	dpl,_get_fileinfo_sloc3_1_0
      003125 85*CB 83         [24] 9322 	mov	dph,(_get_fileinfo_sloc3_1_0 + 1)
      003128 85*CC F0         [24] 9323 	mov	b,(_get_fileinfo_sloc3_1_0 + 2)
      00312B 12r00r00         [24] 9324 	lcall	__gptrput
      00312E D0 04            [24] 9325 	pop	ar4
      003130 D0 03            [24] 9326 	pop	ar3
      003132 D0 02            [24] 9327 	pop	ar2
      003134 02r30r60         [24] 9328 	ljmp	00109$
      003137                       9329 00111$:
                                   9330 ;	ff15\source\ff.c:2741: fno->fname[di] = 0;		/* Terminate the SFN */
      003137 74 09            [12] 9331 	mov	a,#0x09
      003139 2D               [12] 9332 	add	a,r5
      00313A FA               [12] 9333 	mov	r2,a
      00313B E4               [12] 9334 	clr	a
      00313C 3E               [12] 9335 	addc	a,r6
      00313D FB               [12] 9336 	mov	r3,a
      00313E 8F 04            [24] 9337 	mov	ar4,r7
      003140 90r00rB0         [24] 9338 	mov	dptr,#_get_fileinfo_di_65536_184
      003143 E0               [24] 9339 	movx	a,@dptr
      003144 F8               [12] 9340 	mov	r0,a
      003145 A3               [24] 9341 	inc	dptr
      003146 E0               [24] 9342 	movx	a,@dptr
      003147 F9               [12] 9343 	mov	r1,a
      003148 E8               [12] 9344 	mov	a,r0
      003149 2A               [12] 9345 	add	a,r2
      00314A FA               [12] 9346 	mov	r2,a
      00314B E9               [12] 9347 	mov	a,r1
      00314C 3B               [12] 9348 	addc	a,r3
      00314D FB               [12] 9349 	mov	r3,a
      00314E 8A 82            [24] 9350 	mov	dpl,r2
      003150 8B 83            [24] 9351 	mov	dph,r3
      003152 8C F0            [24] 9352 	mov	b,r4
      003154 E4               [12] 9353 	clr	a
      003155 12r00r00         [24] 9354 	lcall	__gptrput
                                   9355 ;	ff15\source\ff.c:2744: fno->fattrib = dp->dir[DIR_Attr] & AM_MASK;			/* Attribute */
      003158 74 08            [12] 9356 	mov	a,#0x08
      00315A 2D               [12] 9357 	add	a,r5
      00315B F5*CA            [12] 9358 	mov	_get_fileinfo_sloc3_1_0,a
      00315D E4               [12] 9359 	clr	a
      00315E 3E               [12] 9360 	addc	a,r6
      00315F F5*CB            [12] 9361 	mov	(_get_fileinfo_sloc3_1_0 + 1),a
      003161 8F*CC            [24] 9362 	mov	(_get_fileinfo_sloc3_1_0 + 2),r7
      003163 90r00rAD         [24] 9363 	mov	dptr,#_get_fileinfo_dp_65536_183
      003166 E0               [24] 9364 	movx	a,@dptr
      003167 F8               [12] 9365 	mov	r0,a
      003168 A3               [24] 9366 	inc	dptr
      003169 E0               [24] 9367 	movx	a,@dptr
      00316A F9               [12] 9368 	mov	r1,a
      00316B A3               [24] 9369 	inc	dptr
      00316C E0               [24] 9370 	movx	a,@dptr
      00316D FC               [12] 9371 	mov	r4,a
      00316E 74 1B            [12] 9372 	mov	a,#0x1b
      003170 28               [12] 9373 	add	a,r0
      003171 F5*C6            [12] 9374 	mov	_get_fileinfo_sloc1_1_0,a
      003173 E4               [12] 9375 	clr	a
      003174 39               [12] 9376 	addc	a,r1
      003175 F5*C7            [12] 9377 	mov	(_get_fileinfo_sloc1_1_0 + 1),a
      003177 8C*C8            [24] 9378 	mov	(_get_fileinfo_sloc1_1_0 + 2),r4
      003179 85*C6 82         [24] 9379 	mov	dpl,_get_fileinfo_sloc1_1_0
      00317C 85*C7 83         [24] 9380 	mov	dph,(_get_fileinfo_sloc1_1_0 + 1)
      00317F 85*C8 F0         [24] 9381 	mov	b,(_get_fileinfo_sloc1_1_0 + 2)
      003182 12r00r00         [24] 9382 	lcall	__gptrget
      003185 FA               [12] 9383 	mov	r2,a
      003186 A3               [24] 9384 	inc	dptr
      003187 12r00r00         [24] 9385 	lcall	__gptrget
      00318A FB               [12] 9386 	mov	r3,a
      00318B A3               [24] 9387 	inc	dptr
      00318C 12r00r00         [24] 9388 	lcall	__gptrget
      00318F FC               [12] 9389 	mov	r4,a
      003190 74 0B            [12] 9390 	mov	a,#0x0b
      003192 2A               [12] 9391 	add	a,r2
      003193 FA               [12] 9392 	mov	r2,a
      003194 E4               [12] 9393 	clr	a
      003195 3B               [12] 9394 	addc	a,r3
      003196 FB               [12] 9395 	mov	r3,a
      003197 8A 82            [24] 9396 	mov	dpl,r2
      003199 8B 83            [24] 9397 	mov	dph,r3
      00319B 8C F0            [24] 9398 	mov	b,r4
      00319D 12r00r00         [24] 9399 	lcall	__gptrget
      0031A0 FA               [12] 9400 	mov	r2,a
      0031A1 53 02 3F         [24] 9401 	anl	ar2,#0x3f
      0031A4 85*CA 82         [24] 9402 	mov	dpl,_get_fileinfo_sloc3_1_0
      0031A7 85*CB 83         [24] 9403 	mov	dph,(_get_fileinfo_sloc3_1_0 + 1)
      0031AA 85*CC F0         [24] 9404 	mov	b,(_get_fileinfo_sloc3_1_0 + 2)
      0031AD EA               [12] 9405 	mov	a,r2
      0031AE 12r00r00         [24] 9406 	lcall	__gptrput
                                   9407 ;	ff15\source\ff.c:2745: fno->fsize = ld_dword(dp->dir + DIR_FileSize);		/* Size */
      0031B1 85*C6 82         [24] 9408 	mov	dpl,_get_fileinfo_sloc1_1_0
      0031B4 85*C7 83         [24] 9409 	mov	dph,(_get_fileinfo_sloc1_1_0 + 1)
      0031B7 85*C8 F0         [24] 9410 	mov	b,(_get_fileinfo_sloc1_1_0 + 2)
      0031BA 12r00r00         [24] 9411 	lcall	__gptrget
      0031BD FA               [12] 9412 	mov	r2,a
      0031BE A3               [24] 9413 	inc	dptr
      0031BF 12r00r00         [24] 9414 	lcall	__gptrget
      0031C2 FB               [12] 9415 	mov	r3,a
      0031C3 A3               [24] 9416 	inc	dptr
      0031C4 12r00r00         [24] 9417 	lcall	__gptrget
      0031C7 FC               [12] 9418 	mov	r4,a
      0031C8 74 1C            [12] 9419 	mov	a,#0x1c
      0031CA 2A               [12] 9420 	add	a,r2
      0031CB FA               [12] 9421 	mov	r2,a
      0031CC E4               [12] 9422 	clr	a
      0031CD 3B               [12] 9423 	addc	a,r3
      0031CE FB               [12] 9424 	mov	r3,a
      0031CF 8A 82            [24] 9425 	mov	dpl,r2
      0031D1 8B 83            [24] 9426 	mov	dph,r3
      0031D3 8C F0            [24] 9427 	mov	b,r4
      0031D5 C0 07            [24] 9428 	push	ar7
      0031D7 C0 06            [24] 9429 	push	ar6
      0031D9 C0 05            [24] 9430 	push	ar5
      0031DB 12r00r45         [24] 9431 	lcall	_ld_dword
      0031DE A9 82            [24] 9432 	mov	r1,dpl
      0031E0 AA 83            [24] 9433 	mov	r2,dph
      0031E2 AB F0            [24] 9434 	mov	r3,b
      0031E4 FC               [12] 9435 	mov	r4,a
      0031E5 D0 05            [24] 9436 	pop	ar5
      0031E7 D0 06            [24] 9437 	pop	ar6
      0031E9 D0 07            [24] 9438 	pop	ar7
      0031EB 8D 82            [24] 9439 	mov	dpl,r5
      0031ED 8E 83            [24] 9440 	mov	dph,r6
      0031EF 8F F0            [24] 9441 	mov	b,r7
      0031F1 E9               [12] 9442 	mov	a,r1
      0031F2 12r00r00         [24] 9443 	lcall	__gptrput
      0031F5 A3               [24] 9444 	inc	dptr
      0031F6 EA               [12] 9445 	mov	a,r2
      0031F7 12r00r00         [24] 9446 	lcall	__gptrput
      0031FA A3               [24] 9447 	inc	dptr
      0031FB EB               [12] 9448 	mov	a,r3
      0031FC 12r00r00         [24] 9449 	lcall	__gptrput
      0031FF A3               [24] 9450 	inc	dptr
      003200 EC               [12] 9451 	mov	a,r4
      003201 12r00r00         [24] 9452 	lcall	__gptrput
                                   9453 ;	ff15\source\ff.c:2746: fno->ftime = ld_word(dp->dir + DIR_ModTime + 0);	/* Time */
      003204 74 06            [12] 9454 	mov	a,#0x06
      003206 2D               [12] 9455 	add	a,r5
      003207 F5*CA            [12] 9456 	mov	_get_fileinfo_sloc3_1_0,a
      003209 E4               [12] 9457 	clr	a
      00320A 3E               [12] 9458 	addc	a,r6
      00320B F5*CB            [12] 9459 	mov	(_get_fileinfo_sloc3_1_0 + 1),a
      00320D 8F*CC            [24] 9460 	mov	(_get_fileinfo_sloc3_1_0 + 2),r7
      00320F 85*C6 82         [24] 9461 	mov	dpl,_get_fileinfo_sloc1_1_0
      003212 85*C7 83         [24] 9462 	mov	dph,(_get_fileinfo_sloc1_1_0 + 1)
      003215 85*C8 F0         [24] 9463 	mov	b,(_get_fileinfo_sloc1_1_0 + 2)
      003218 12r00r00         [24] 9464 	lcall	__gptrget
      00321B F8               [12] 9465 	mov	r0,a
      00321C A3               [24] 9466 	inc	dptr
      00321D 12r00r00         [24] 9467 	lcall	__gptrget
      003220 F9               [12] 9468 	mov	r1,a
      003221 A3               [24] 9469 	inc	dptr
      003222 12r00r00         [24] 9470 	lcall	__gptrget
      003225 FC               [12] 9471 	mov	r4,a
      003226 74 16            [12] 9472 	mov	a,#0x16
      003228 28               [12] 9473 	add	a,r0
      003229 F8               [12] 9474 	mov	r0,a
      00322A E4               [12] 9475 	clr	a
      00322B 39               [12] 9476 	addc	a,r1
      00322C F9               [12] 9477 	mov	r1,a
      00322D 88 82            [24] 9478 	mov	dpl,r0
      00322F 89 83            [24] 9479 	mov	dph,r1
      003231 8C F0            [24] 9480 	mov	b,r4
      003233 C0 07            [24] 9481 	push	ar7
      003235 C0 06            [24] 9482 	push	ar6
      003237 C0 05            [24] 9483 	push	ar5
      003239 12r00r00         [24] 9484 	lcall	_ld_word
      00323C AC 82            [24] 9485 	mov	r4,dpl
      00323E AB 83            [24] 9486 	mov	r3,dph
      003240 D0 05            [24] 9487 	pop	ar5
      003242 D0 06            [24] 9488 	pop	ar6
      003244 85*CA 82         [24] 9489 	mov	dpl,_get_fileinfo_sloc3_1_0
      003247 85*CB 83         [24] 9490 	mov	dph,(_get_fileinfo_sloc3_1_0 + 1)
      00324A 85*CC F0         [24] 9491 	mov	b,(_get_fileinfo_sloc3_1_0 + 2)
      00324D EC               [12] 9492 	mov	a,r4
      00324E 12r00r00         [24] 9493 	lcall	__gptrput
      003251 A3               [24] 9494 	inc	dptr
      003252 EB               [12] 9495 	mov	a,r3
      003253 12r00r00         [24] 9496 	lcall	__gptrput
                                   9497 ;	ff15\source\ff.c:2747: fno->fdate = ld_word(dp->dir + DIR_ModTime + 2);	/* Date */
      003256 74 04            [12] 9498 	mov	a,#0x04
      003258 2D               [12] 9499 	add	a,r5
      003259 FD               [12] 9500 	mov	r5,a
      00325A E4               [12] 9501 	clr	a
      00325B 3E               [12] 9502 	addc	a,r6
      00325C FE               [12] 9503 	mov	r6,a
      00325D 85*C6 82         [24] 9504 	mov	dpl,_get_fileinfo_sloc1_1_0
      003260 85*C7 83         [24] 9505 	mov	dph,(_get_fileinfo_sloc1_1_0 + 1)
      003263 85*C8 F0         [24] 9506 	mov	b,(_get_fileinfo_sloc1_1_0 + 2)
      003266 12r00r00         [24] 9507 	lcall	__gptrget
      003269 FA               [12] 9508 	mov	r2,a
      00326A A3               [24] 9509 	inc	dptr
      00326B 12r00r00         [24] 9510 	lcall	__gptrget
      00326E FB               [12] 9511 	mov	r3,a
      00326F A3               [24] 9512 	inc	dptr
      003270 12r00r00         [24] 9513 	lcall	__gptrget
      003273 FC               [12] 9514 	mov	r4,a
      003274 74 18            [12] 9515 	mov	a,#0x18
      003276 2A               [12] 9516 	add	a,r2
      003277 FA               [12] 9517 	mov	r2,a
      003278 E4               [12] 9518 	clr	a
      003279 3B               [12] 9519 	addc	a,r3
      00327A FB               [12] 9520 	mov	r3,a
      00327B 8A 82            [24] 9521 	mov	dpl,r2
      00327D 8B 83            [24] 9522 	mov	dph,r3
      00327F 8C F0            [24] 9523 	mov	b,r4
      003281 C0 06            [24] 9524 	push	ar6
      003283 C0 05            [24] 9525 	push	ar5
      003285 12r00r00         [24] 9526 	lcall	_ld_word
      003288 AB 82            [24] 9527 	mov	r3,dpl
      00328A AC 83            [24] 9528 	mov	r4,dph
      00328C D0 05            [24] 9529 	pop	ar5
      00328E D0 06            [24] 9530 	pop	ar6
      003290 D0 07            [24] 9531 	pop	ar7
      003292 8D 82            [24] 9532 	mov	dpl,r5
      003294 8E 83            [24] 9533 	mov	dph,r6
      003296 8F F0            [24] 9534 	mov	b,r7
      003298 EB               [12] 9535 	mov	a,r3
      003299 12r00r00         [24] 9536 	lcall	__gptrput
      00329C A3               [24] 9537 	inc	dptr
      00329D EC               [12] 9538 	mov	a,r4
                                   9539 ;	ff15\source\ff.c:2748: }
      00329E 02r00r00         [24] 9540 	ljmp	__gptrput
                                   9541 ;------------------------------------------------------------
                                   9542 ;Allocation info for local variables in function 'create_name'
                                   9543 ;------------------------------------------------------------
                                   9544 ;sloc0                     Allocated with name '_create_name_sloc0_1_0'
                                   9545 ;sloc1                     Allocated with name '_create_name_sloc1_1_0'
                                   9546 ;sloc2                     Allocated with name '_create_name_sloc2_1_0'
                                   9547 ;sloc3                     Allocated with name '_create_name_sloc3_1_0'
                                   9548 ;sloc4                     Allocated with name '_create_name_sloc4_1_0'
                                   9549 ;path                      Allocated with name '_create_name_PARM_2'
                                   9550 ;dp                        Allocated with name '_create_name_dp_65536_186'
                                   9551 ;c                         Allocated with name '_create_name_c_65536_187'
                                   9552 ;d                         Allocated with name '_create_name_d_65536_187'
                                   9553 ;sfn                       Allocated with name '_create_name_sfn_65536_187'
                                   9554 ;ni                        Allocated with name '_create_name_ni_65536_187'
                                   9555 ;si                        Allocated with name '_create_name_si_65536_187'
                                   9556 ;i                         Allocated with name '_create_name_i_65536_187'
                                   9557 ;p                         Allocated with name '_create_name_p_65536_187'
                                   9558 ;------------------------------------------------------------
                                   9559 ;	ff15\source\ff.c:2847: static FRESULT create_name (	/* FR_OK: successful, FR_INVALID_NAME: could not create */
                                   9560 ;	-----------------------------------------
                                   9561 ;	 function create_name
                                   9562 ;	-----------------------------------------
      0032A1                       9563 _create_name:
      0032A1 AF F0            [24] 9564 	mov	r7,b
      0032A3 AE 83            [24] 9565 	mov	r6,dph
      0032A5 E5 82            [12] 9566 	mov	a,dpl
      0032A7 90r00rB6         [24] 9567 	mov	dptr,#_create_name_dp_65536_186
      0032AA F0               [24] 9568 	movx	@dptr,a
      0032AB EE               [12] 9569 	mov	a,r6
      0032AC A3               [24] 9570 	inc	dptr
      0032AD F0               [24] 9571 	movx	@dptr,a
      0032AE EF               [12] 9572 	mov	a,r7
      0032AF A3               [24] 9573 	inc	dptr
      0032B0 F0               [24] 9574 	movx	@dptr,a
                                   9575 ;	ff15\source\ff.c:2986: p = *path; sfn = dp->fn;
      0032B1 90r00rB3         [24] 9576 	mov	dptr,#_create_name_PARM_2
      0032B4 E0               [24] 9577 	movx	a,@dptr
      0032B5 F5*CD            [12] 9578 	mov	_create_name_sloc0_1_0,a
      0032B7 A3               [24] 9579 	inc	dptr
      0032B8 E0               [24] 9580 	movx	a,@dptr
      0032B9 F5*CE            [12] 9581 	mov	(_create_name_sloc0_1_0 + 1),a
      0032BB A3               [24] 9582 	inc	dptr
      0032BC E0               [24] 9583 	movx	a,@dptr
      0032BD F5*CF            [12] 9584 	mov	(_create_name_sloc0_1_0 + 2),a
      0032BF 85*CD 82         [24] 9585 	mov	dpl,_create_name_sloc0_1_0
      0032C2 85*CE 83         [24] 9586 	mov	dph,(_create_name_sloc0_1_0 + 1)
      0032C5 85*CF F0         [24] 9587 	mov	b,(_create_name_sloc0_1_0 + 2)
      0032C8 12r00r00         [24] 9588 	lcall	__gptrget
      0032CB F5*D0            [12] 9589 	mov	_create_name_sloc1_1_0,a
      0032CD A3               [24] 9590 	inc	dptr
      0032CE 12r00r00         [24] 9591 	lcall	__gptrget
      0032D1 F5*D1            [12] 9592 	mov	(_create_name_sloc1_1_0 + 1),a
      0032D3 A3               [24] 9593 	inc	dptr
      0032D4 12r00r00         [24] 9594 	lcall	__gptrget
      0032D7 F5*D2            [12] 9595 	mov	(_create_name_sloc1_1_0 + 2),a
      0032D9 90r00rB6         [24] 9596 	mov	dptr,#_create_name_dp_65536_186
      0032DC E0               [24] 9597 	movx	a,@dptr
      0032DD F8               [12] 9598 	mov	r0,a
      0032DE A3               [24] 9599 	inc	dptr
      0032DF E0               [24] 9600 	movx	a,@dptr
      0032E0 F9               [12] 9601 	mov	r1,a
      0032E1 A3               [24] 9602 	inc	dptr
      0032E2 E0               [24] 9603 	movx	a,@dptr
      0032E3 FF               [12] 9604 	mov	r7,a
      0032E4 74 1E            [12] 9605 	mov	a,#0x1e
      0032E6 28               [12] 9606 	add	a,r0
      0032E7 F5*D6            [12] 9607 	mov	_create_name_sloc4_1_0,a
      0032E9 E4               [12] 9608 	clr	a
      0032EA 39               [12] 9609 	addc	a,r1
      0032EB F5*D7            [12] 9610 	mov	(_create_name_sloc4_1_0 + 1),a
      0032ED 8F*D8            [24] 9611 	mov	(_create_name_sloc4_1_0 + 2),r7
                                   9612 ;	ff15\source\ff.c:2987: memset(sfn, ' ', 11);
      0032EF A8*D6            [24] 9613 	mov	r0,_create_name_sloc4_1_0
      0032F1 A9*D7            [24] 9614 	mov	r1,(_create_name_sloc4_1_0 + 1)
      0032F3 AC*D8            [24] 9615 	mov	r4,(_create_name_sloc4_1_0 + 2)
      0032F5 90r00r00         [24] 9616 	mov	dptr,#_memset_PARM_2
      0032F8 74 20            [12] 9617 	mov	a,#0x20
      0032FA F0               [24] 9618 	movx	@dptr,a
      0032FB 90r00r00         [24] 9619 	mov	dptr,#_memset_PARM_3
      0032FE 74 0B            [12] 9620 	mov	a,#0x0b
      003300 F0               [24] 9621 	movx	@dptr,a
      003301 E4               [12] 9622 	clr	a
      003302 A3               [24] 9623 	inc	dptr
      003303 F0               [24] 9624 	movx	@dptr,a
      003304 88 82            [24] 9625 	mov	dpl,r0
      003306 89 83            [24] 9626 	mov	dph,r1
      003308 8C F0            [24] 9627 	mov	b,r4
      00330A 12r00r00         [24] 9628 	lcall	_memset
                                   9629 ;	ff15\source\ff.c:2988: si = i = 0; ni = 8;
      00330D 90r00rBE         [24] 9630 	mov	dptr,#_create_name_i_65536_187
      003310 E4               [12] 9631 	clr	a
      003311 F0               [24] 9632 	movx	@dptr,a
      003312 A3               [24] 9633 	inc	dptr
      003313 F0               [24] 9634 	movx	@dptr,a
      003314 90r00rBC         [24] 9635 	mov	dptr,#_create_name_si_65536_187
      003317 F0               [24] 9636 	movx	@dptr,a
      003318 A3               [24] 9637 	inc	dptr
      003319 F0               [24] 9638 	movx	@dptr,a
      00331A 90r00rBA         [24] 9639 	mov	dptr,#_create_name_ni_65536_187
      00331D 74 08            [12] 9640 	mov	a,#0x08
      00331F F0               [24] 9641 	movx	@dptr,a
      003320 E4               [12] 9642 	clr	a
      003321 A3               [24] 9643 	inc	dptr
      003322 F0               [24] 9644 	movx	@dptr,a
      003323                       9645 00133$:
                                   9646 ;	ff15\source\ff.c:3003: c = (BYTE)p[si++];				/* Get a byte */
      003323 90r00rBC         [24] 9647 	mov	dptr,#_create_name_si_65536_187
      003326 E0               [24] 9648 	movx	a,@dptr
      003327 FB               [12] 9649 	mov	r3,a
      003328 A3               [24] 9650 	inc	dptr
      003329 E0               [24] 9651 	movx	a,@dptr
      00332A FC               [12] 9652 	mov	r4,a
      00332B 90r00rBC         [24] 9653 	mov	dptr,#_create_name_si_65536_187
      00332E 74 01            [12] 9654 	mov	a,#0x01
      003330 2B               [12] 9655 	add	a,r3
      003331 F0               [24] 9656 	movx	@dptr,a
      003332 E4               [12] 9657 	clr	a
      003333 3C               [12] 9658 	addc	a,r4
      003334 A3               [24] 9659 	inc	dptr
      003335 F0               [24] 9660 	movx	@dptr,a
      003336 EB               [12] 9661 	mov	a,r3
      003337 25*D0            [12] 9662 	add	a,_create_name_sloc1_1_0
      003339 FB               [12] 9663 	mov	r3,a
      00333A EC               [12] 9664 	mov	a,r4
      00333B 35*D1            [12] 9665 	addc	a,(_create_name_sloc1_1_0 + 1)
      00333D FC               [12] 9666 	mov	r4,a
      00333E AA*D2            [24] 9667 	mov	r2,(_create_name_sloc1_1_0 + 2)
      003340 8B 82            [24] 9668 	mov	dpl,r3
      003342 8C 83            [24] 9669 	mov	dph,r4
      003344 8A F0            [24] 9670 	mov	b,r2
      003346 12r00r00         [24] 9671 	lcall	__gptrget
      003349 FC               [12] 9672 	mov	r4,a
      00334A 90r00rB9         [24] 9673 	mov	dptr,#_create_name_c_65536_187
      00334D F0               [24] 9674 	movx	@dptr,a
                                   9675 ;	ff15\source\ff.c:3004: if (c <= ' ') break; 			/* Break if end of the path name */
      00334E EC               [12] 9676 	mov	a,r4
      00334F 24 DF            [12] 9677 	add	a,#0xff - 0x20
      003351 40 03            [24] 9678 	jc	00203$
      003353 02r35r12         [24] 9679 	ljmp	00128$
      003356                       9680 00203$:
                                   9681 ;	ff15\source\ff.c:3005: if (IsSeparator(c)) {			/* Break if a separator is found */
      003356 BC 2F 02         [24] 9682 	cjne	r4,#0x2f,00204$
      003359 80 03            [24] 9683 	sjmp	00144$
      00335B                       9684 00204$:
      00335B BC 5C 35         [24] 9685 	cjne	r4,#0x5c,00108$
                                   9686 ;	ff15\source\ff.c:3006: while (IsSeparator(p[si])) si++;	/* Skip duplicated separator if exist */
      00335E                       9687 00144$:
      00335E 90r00rBC         [24] 9688 	mov	dptr,#_create_name_si_65536_187
      003361 E0               [24] 9689 	movx	a,@dptr
      003362 FA               [12] 9690 	mov	r2,a
      003363 A3               [24] 9691 	inc	dptr
      003364 E0               [24] 9692 	movx	a,@dptr
      003365 FB               [12] 9693 	mov	r3,a
      003366                       9694 00104$:
      003366 EA               [12] 9695 	mov	a,r2
      003367 25*D0            [12] 9696 	add	a,_create_name_sloc1_1_0
      003369 F8               [12] 9697 	mov	r0,a
      00336A EB               [12] 9698 	mov	a,r3
      00336B 35*D1            [12] 9699 	addc	a,(_create_name_sloc1_1_0 + 1)
      00336D F9               [12] 9700 	mov	r1,a
      00336E AF*D2            [24] 9701 	mov	r7,(_create_name_sloc1_1_0 + 2)
      003370 88 82            [24] 9702 	mov	dpl,r0
      003372 89 83            [24] 9703 	mov	dph,r1
      003374 8F F0            [24] 9704 	mov	b,r7
      003376 12r00r00         [24] 9705 	lcall	__gptrget
      003379 F5*D3            [12] 9706 	mov	_create_name_sloc2_1_0,a
      00337B 74 2F            [12] 9707 	mov	a,#0x2f
      00337D B5*D3 02         [24] 9708 	cjne	a,_create_name_sloc2_1_0,00207$
      003380 80 0A            [24] 9709 	sjmp	00105$
      003382                       9710 00207$:
      003382 74 5C            [12] 9711 	mov	a,#0x5c
      003384 B5*D3 02         [24] 9712 	cjne	a,_create_name_sloc2_1_0,00208$
      003387 80 03            [24] 9713 	sjmp	00209$
      003389                       9714 00208$:
      003389 02r35r0A         [24] 9715 	ljmp	00157$
      00338C                       9716 00209$:
      00338C                       9717 00105$:
      00338C 0A               [12] 9718 	inc	r2
                                   9719 ;	ff15\source\ff.c:3007: break;
      00338D BA 00 D6         [24] 9720 	cjne	r2,#0x00,00104$
      003390 0B               [12] 9721 	inc	r3
      003391 80 D3            [24] 9722 	sjmp	00104$
      003393                       9723 00108$:
                                   9724 ;	ff15\source\ff.c:3009: if (c == '.' || i >= ni) {		/* End of body or field overflow? */
      003393 BC 2E 02         [24] 9725 	cjne	r4,#0x2e,00211$
      003396 80 1B            [24] 9726 	sjmp	00113$
      003398                       9727 00211$:
      003398 90r00rBE         [24] 9728 	mov	dptr,#_create_name_i_65536_187
      00339B E0               [24] 9729 	movx	a,@dptr
      00339C F8               [12] 9730 	mov	r0,a
      00339D A3               [24] 9731 	inc	dptr
      00339E E0               [24] 9732 	movx	a,@dptr
      00339F F9               [12] 9733 	mov	r1,a
      0033A0 90r00rBA         [24] 9734 	mov	dptr,#_create_name_ni_65536_187
      0033A3 E0               [24] 9735 	movx	a,@dptr
      0033A4 F5*D4            [12] 9736 	mov	_create_name_sloc3_1_0,a
      0033A6 A3               [24] 9737 	inc	dptr
      0033A7 E0               [24] 9738 	movx	a,@dptr
      0033A8 F5*D5            [12] 9739 	mov	(_create_name_sloc3_1_0 + 1),a
      0033AA C3               [12] 9740 	clr	c
      0033AB E8               [12] 9741 	mov	a,r0
      0033AC 95*D4            [12] 9742 	subb	a,_create_name_sloc3_1_0
      0033AE E9               [12] 9743 	mov	a,r1
      0033AF 95*D5            [12] 9744 	subb	a,(_create_name_sloc3_1_0 + 1)
      0033B1 40 33            [24] 9745 	jc	00114$
      0033B3                       9746 00113$:
                                   9747 ;	ff15\source\ff.c:3010: if (ni == 11 || c != '.') return FR_INVALID_NAME;	/* Field overflow or invalid dot? */
      0033B3 90r00rBA         [24] 9748 	mov	dptr,#_create_name_ni_65536_187
      0033B6 E0               [24] 9749 	movx	a,@dptr
      0033B7 FE               [12] 9750 	mov	r6,a
      0033B8 A3               [24] 9751 	inc	dptr
      0033B9 E0               [24] 9752 	movx	a,@dptr
      0033BA FF               [12] 9753 	mov	r7,a
      0033BB BE 0B 05         [24] 9754 	cjne	r6,#0x0b,00213$
      0033BE BF 00 02         [24] 9755 	cjne	r7,#0x00,00213$
      0033C1 80 0A            [24] 9756 	sjmp	00110$
      0033C3                       9757 00213$:
      0033C3 90r00rB9         [24] 9758 	mov	dptr,#_create_name_c_65536_187
      0033C6 E0               [24] 9759 	movx	a,@dptr
      0033C7 FF               [12] 9760 	mov	r7,a
      0033C8 BF 2E 02         [24] 9761 	cjne	r7,#0x2e,00214$
      0033CB 80 04            [24] 9762 	sjmp	00111$
      0033CD                       9763 00214$:
      0033CD                       9764 00110$:
      0033CD 75 82 06         [24] 9765 	mov	dpl,#0x06
      0033D0 22               [24] 9766 	ret
      0033D1                       9767 00111$:
                                   9768 ;	ff15\source\ff.c:3011: i = 8; ni = 11;				/* Enter file extension field */
      0033D1 90r00rBE         [24] 9769 	mov	dptr,#_create_name_i_65536_187
      0033D4 74 08            [12] 9770 	mov	a,#0x08
      0033D6 F0               [24] 9771 	movx	@dptr,a
      0033D7 E4               [12] 9772 	clr	a
      0033D8 A3               [24] 9773 	inc	dptr
      0033D9 F0               [24] 9774 	movx	@dptr,a
      0033DA 90r00rBA         [24] 9775 	mov	dptr,#_create_name_ni_65536_187
      0033DD 74 0B            [12] 9776 	mov	a,#0x0b
      0033DF F0               [24] 9777 	movx	@dptr,a
      0033E0 E4               [12] 9778 	clr	a
      0033E1 A3               [24] 9779 	inc	dptr
      0033E2 F0               [24] 9780 	movx	@dptr,a
                                   9781 ;	ff15\source\ff.c:3012: continue;
      0033E3 02r33r23         [24] 9782 	ljmp	00133$
      0033E6                       9783 00114$:
                                   9784 ;	ff15\source\ff.c:3023: if (dbc_1st(c)) {				/* Check if it is a DBC 1st byte */
      0033E6 8C 82            [24] 9785 	mov	dpl,r4
      0033E8 C0 04            [24] 9786 	push	ar4
      0033EA C0 01            [24] 9787 	push	ar1
      0033EC C0 00            [24] 9788 	push	ar0
      0033EE 12r02r90         [24] 9789 	lcall	_dbc_1st
      0033F1 E5 82            [12] 9790 	mov	a,dpl
      0033F3 85 83 F0         [24] 9791 	mov	b,dph
      0033F6 D0 00            [24] 9792 	pop	ar0
      0033F8 D0 01            [24] 9793 	pop	ar1
      0033FA D0 04            [24] 9794 	pop	ar4
      0033FC 45 F0            [12] 9795 	orl	a,b
      0033FE 70 03            [24] 9796 	jnz	00215$
      003400 02r34rAD         [24] 9797 	ljmp	00125$
      003403                       9798 00215$:
                                   9799 ;	ff15\source\ff.c:3024: d = (BYTE)p[si++];			/* Get 2nd byte */
      003403 C0 00            [24] 9800 	push	ar0
      003405 C0 01            [24] 9801 	push	ar1
      003407 90r00rBC         [24] 9802 	mov	dptr,#_create_name_si_65536_187
      00340A E0               [24] 9803 	movx	a,@dptr
      00340B F8               [12] 9804 	mov	r0,a
      00340C A3               [24] 9805 	inc	dptr
      00340D E0               [24] 9806 	movx	a,@dptr
      00340E F9               [12] 9807 	mov	r1,a
      00340F 90r00rBC         [24] 9808 	mov	dptr,#_create_name_si_65536_187
      003412 74 01            [12] 9809 	mov	a,#0x01
      003414 28               [12] 9810 	add	a,r0
      003415 F0               [24] 9811 	movx	@dptr,a
      003416 E4               [12] 9812 	clr	a
      003417 39               [12] 9813 	addc	a,r1
      003418 A3               [24] 9814 	inc	dptr
      003419 F0               [24] 9815 	movx	@dptr,a
      00341A E8               [12] 9816 	mov	a,r0
      00341B 25*D0            [12] 9817 	add	a,_create_name_sloc1_1_0
      00341D F8               [12] 9818 	mov	r0,a
      00341E E9               [12] 9819 	mov	a,r1
      00341F 35*D1            [12] 9820 	addc	a,(_create_name_sloc1_1_0 + 1)
      003421 F9               [12] 9821 	mov	r1,a
      003422 AF*D2            [24] 9822 	mov	r7,(_create_name_sloc1_1_0 + 2)
      003424 88 82            [24] 9823 	mov	dpl,r0
      003426 89 83            [24] 9824 	mov	dph,r1
      003428 8F F0            [24] 9825 	mov	b,r7
      00342A 12r00r00         [24] 9826 	lcall	__gptrget
      00342D F5*D3            [12] 9827 	mov	_create_name_sloc2_1_0,a
                                   9828 ;	ff15\source\ff.c:3025: if (!dbc_2nd(d) || i >= ni - 1) return FR_INVALID_NAME;	/* Reject invalid DBC */
      00342F 85*D3 82         [24] 9829 	mov	dpl,_create_name_sloc2_1_0
      003432 C0 04            [24] 9830 	push	ar4
      003434 C0 01            [24] 9831 	push	ar1
      003436 C0 00            [24] 9832 	push	ar0
      003438 12r02rCF         [24] 9833 	lcall	_dbc_2nd
      00343B E5 82            [12] 9834 	mov	a,dpl
      00343D 85 83 F0         [24] 9835 	mov	b,dph
      003440 D0 00            [24] 9836 	pop	ar0
      003442 D0 01            [24] 9837 	pop	ar1
      003444 D0 04            [24] 9838 	pop	ar4
      003446 D0 01            [24] 9839 	pop	ar1
      003448 D0 00            [24] 9840 	pop	ar0
      00344A 45 F0            [12] 9841 	orl	a,b
      00344C 60 11            [24] 9842 	jz	00116$
      00344E E5*D4            [12] 9843 	mov	a,_create_name_sloc3_1_0
      003450 24 FF            [12] 9844 	add	a,#0xff
      003452 FE               [12] 9845 	mov	r6,a
      003453 E5*D5            [12] 9846 	mov	a,(_create_name_sloc3_1_0 + 1)
      003455 34 FF            [12] 9847 	addc	a,#0xff
      003457 FF               [12] 9848 	mov	r7,a
      003458 C3               [12] 9849 	clr	c
      003459 E8               [12] 9850 	mov	a,r0
      00345A 9E               [12] 9851 	subb	a,r6
      00345B E9               [12] 9852 	mov	a,r1
      00345C 9F               [12] 9853 	subb	a,r7
      00345D 40 04            [24] 9854 	jc	00117$
      00345F                       9855 00116$:
      00345F 75 82 06         [24] 9856 	mov	dpl,#0x06
      003462 22               [24] 9857 	ret
      003463                       9858 00117$:
                                   9859 ;	ff15\source\ff.c:3026: sfn[i++] = c;
      003463 90r00rBE         [24] 9860 	mov	dptr,#_create_name_i_65536_187
      003466 74 01            [12] 9861 	mov	a,#0x01
      003468 28               [12] 9862 	add	a,r0
      003469 F0               [24] 9863 	movx	@dptr,a
      00346A E4               [12] 9864 	clr	a
      00346B 39               [12] 9865 	addc	a,r1
      00346C A3               [24] 9866 	inc	dptr
      00346D F0               [24] 9867 	movx	@dptr,a
      00346E E8               [12] 9868 	mov	a,r0
      00346F 25*D6            [12] 9869 	add	a,_create_name_sloc4_1_0
      003471 F8               [12] 9870 	mov	r0,a
      003472 E9               [12] 9871 	mov	a,r1
      003473 35*D7            [12] 9872 	addc	a,(_create_name_sloc4_1_0 + 1)
      003475 F9               [12] 9873 	mov	r1,a
      003476 AF*D8            [24] 9874 	mov	r7,(_create_name_sloc4_1_0 + 2)
      003478 88 82            [24] 9875 	mov	dpl,r0
      00347A 89 83            [24] 9876 	mov	dph,r1
      00347C 8F F0            [24] 9877 	mov	b,r7
      00347E EC               [12] 9878 	mov	a,r4
      00347F 12r00r00         [24] 9879 	lcall	__gptrput
                                   9880 ;	ff15\source\ff.c:3027: sfn[i++] = d;
      003482 90r00rBE         [24] 9881 	mov	dptr,#_create_name_i_65536_187
      003485 E0               [24] 9882 	movx	a,@dptr
      003486 FE               [12] 9883 	mov	r6,a
      003487 A3               [24] 9884 	inc	dptr
      003488 E0               [24] 9885 	movx	a,@dptr
      003489 FF               [12] 9886 	mov	r7,a
      00348A 90r00rBE         [24] 9887 	mov	dptr,#_create_name_i_65536_187
      00348D 74 01            [12] 9888 	mov	a,#0x01
      00348F 2E               [12] 9889 	add	a,r6
      003490 F0               [24] 9890 	movx	@dptr,a
      003491 E4               [12] 9891 	clr	a
      003492 3F               [12] 9892 	addc	a,r7
      003493 A3               [24] 9893 	inc	dptr
      003494 F0               [24] 9894 	movx	@dptr,a
      003495 EE               [12] 9895 	mov	a,r6
      003496 25*D6            [12] 9896 	add	a,_create_name_sloc4_1_0
      003498 FE               [12] 9897 	mov	r6,a
      003499 EF               [12] 9898 	mov	a,r7
      00349A 35*D7            [12] 9899 	addc	a,(_create_name_sloc4_1_0 + 1)
      00349C FF               [12] 9900 	mov	r7,a
      00349D AD*D8            [24] 9901 	mov	r5,(_create_name_sloc4_1_0 + 2)
      00349F 8E 82            [24] 9902 	mov	dpl,r6
      0034A1 8F 83            [24] 9903 	mov	dph,r7
      0034A3 8D F0            [24] 9904 	mov	b,r5
      0034A5 E5*D3            [12] 9905 	mov	a,_create_name_sloc2_1_0
      0034A7 12r00r00         [24] 9906 	lcall	__gptrput
      0034AA 02r33r23         [24] 9907 	ljmp	00133$
      0034AD                       9908 00125$:
                                   9909 ;	ff15\source\ff.c:3029: if (strchr("*+,:;<=>[]|\"\?\x7F", (int)c)) return FR_INVALID_NAME;	/* Reject illegal chrs for SFN */
      0034AD 90r00r00         [24] 9910 	mov	dptr,#_strchr_PARM_2
      0034B0 EC               [12] 9911 	mov	a,r4
      0034B1 F0               [24] 9912 	movx	@dptr,a
      0034B2 90r00r0A         [24] 9913 	mov	dptr,#___str_0
      0034B5 75 F0 80         [24] 9914 	mov	b,#0x80
      0034B8 C0 04            [24] 9915 	push	ar4
      0034BA 12r00r00         [24] 9916 	lcall	_strchr
      0034BD AD 82            [24] 9917 	mov	r5,dpl
      0034BF AE 83            [24] 9918 	mov	r6,dph
      0034C1 D0 04            [24] 9919 	pop	ar4
      0034C3 ED               [12] 9920 	mov	a,r5
      0034C4 4E               [12] 9921 	orl	a,r6
      0034C5 60 04            [24] 9922 	jz	00120$
      0034C7 75 82 06         [24] 9923 	mov	dpl,#0x06
      0034CA 22               [24] 9924 	ret
      0034CB                       9925 00120$:
                                   9926 ;	ff15\source\ff.c:3030: if (IsLower(c)) c -= 0x20;	/* To upper */
      0034CB BC 61 00         [24] 9927 	cjne	r4,#0x61,00219$
      0034CE                       9928 00219$:
      0034CE 40 0C            [24] 9929 	jc	00122$
      0034D0 EC               [12] 9930 	mov	a,r4
      0034D1 24 85            [12] 9931 	add	a,#0xff - 0x7a
      0034D3 40 07            [24] 9932 	jc	00122$
      0034D5 EC               [12] 9933 	mov	a,r4
      0034D6 24 E0            [12] 9934 	add	a,#0xe0
      0034D8 90r00rB9         [24] 9935 	mov	dptr,#_create_name_c_65536_187
      0034DB F0               [24] 9936 	movx	@dptr,a
      0034DC                       9937 00122$:
                                   9938 ;	ff15\source\ff.c:3031: sfn[i++] = c;
      0034DC 90r00rBE         [24] 9939 	mov	dptr,#_create_name_i_65536_187
      0034DF E0               [24] 9940 	movx	a,@dptr
      0034E0 FE               [12] 9941 	mov	r6,a
      0034E1 A3               [24] 9942 	inc	dptr
      0034E2 E0               [24] 9943 	movx	a,@dptr
      0034E3 FF               [12] 9944 	mov	r7,a
      0034E4 90r00rBE         [24] 9945 	mov	dptr,#_create_name_i_65536_187
      0034E7 74 01            [12] 9946 	mov	a,#0x01
      0034E9 2E               [12] 9947 	add	a,r6
      0034EA F0               [24] 9948 	movx	@dptr,a
      0034EB E4               [12] 9949 	clr	a
      0034EC 3F               [12] 9950 	addc	a,r7
      0034ED A3               [24] 9951 	inc	dptr
      0034EE F0               [24] 9952 	movx	@dptr,a
      0034EF EE               [12] 9953 	mov	a,r6
      0034F0 25*D6            [12] 9954 	add	a,_create_name_sloc4_1_0
      0034F2 FE               [12] 9955 	mov	r6,a
      0034F3 EF               [12] 9956 	mov	a,r7
      0034F4 35*D7            [12] 9957 	addc	a,(_create_name_sloc4_1_0 + 1)
      0034F6 FF               [12] 9958 	mov	r7,a
      0034F7 AD*D8            [24] 9959 	mov	r5,(_create_name_sloc4_1_0 + 2)
      0034F9 90r00rB9         [24] 9960 	mov	dptr,#_create_name_c_65536_187
      0034FC E0               [24] 9961 	movx	a,@dptr
      0034FD FC               [12] 9962 	mov	r4,a
      0034FE 8E 82            [24] 9963 	mov	dpl,r6
      003500 8F 83            [24] 9964 	mov	dph,r7
      003502 8D F0            [24] 9965 	mov	b,r5
      003504 12r00r00         [24] 9966 	lcall	__gptrput
      003507 02r33r23         [24] 9967 	ljmp	00133$
      00350A                       9968 00157$:
      00350A 90r00rBC         [24] 9969 	mov	dptr,#_create_name_si_65536_187
      00350D EA               [12] 9970 	mov	a,r2
      00350E F0               [24] 9971 	movx	@dptr,a
      00350F EB               [12] 9972 	mov	a,r3
      003510 A3               [24] 9973 	inc	dptr
      003511 F0               [24] 9974 	movx	@dptr,a
      003512                       9975 00128$:
                                   9976 ;	ff15\source\ff.c:3034: *path = &p[si];						/* Return pointer to the next segment */
      003512 90r00rBC         [24] 9977 	mov	dptr,#_create_name_si_65536_187
      003515 E0               [24] 9978 	movx	a,@dptr
      003516 FF               [12] 9979 	mov	r7,a
      003517 A3               [24] 9980 	inc	dptr
      003518 E0               [24] 9981 	movx	a,@dptr
      003519 FE               [12] 9982 	mov	r6,a
      00351A EF               [12] 9983 	mov	a,r7
      00351B 25*D0            [12] 9984 	add	a,_create_name_sloc1_1_0
      00351D FD               [12] 9985 	mov	r5,a
      00351E EE               [12] 9986 	mov	a,r6
      00351F 35*D1            [12] 9987 	addc	a,(_create_name_sloc1_1_0 + 1)
      003521 FE               [12] 9988 	mov	r6,a
      003522 AF*D2            [24] 9989 	mov	r7,(_create_name_sloc1_1_0 + 2)
      003524 85*CD 82         [24] 9990 	mov	dpl,_create_name_sloc0_1_0
      003527 85*CE 83         [24] 9991 	mov	dph,(_create_name_sloc0_1_0 + 1)
      00352A 85*CF F0         [24] 9992 	mov	b,(_create_name_sloc0_1_0 + 2)
      00352D ED               [12] 9993 	mov	a,r5
      00352E 12r00r00         [24] 9994 	lcall	__gptrput
      003531 A3               [24] 9995 	inc	dptr
      003532 EE               [12] 9996 	mov	a,r6
      003533 12r00r00         [24] 9997 	lcall	__gptrput
      003536 A3               [24] 9998 	inc	dptr
      003537 EF               [12] 9999 	mov	a,r7
      003538 12r00r00         [24]10000 	lcall	__gptrput
                                  10001 ;	ff15\source\ff.c:3035: if (i == 0) return FR_INVALID_NAME;	/* Reject nul string */
      00353B 90r00rBE         [24]10002 	mov	dptr,#_create_name_i_65536_187
      00353E E0               [24]10003 	movx	a,@dptr
      00353F F5 F0            [12]10004 	mov	b,a
      003541 A3               [24]10005 	inc	dptr
      003542 E0               [24]10006 	movx	a,@dptr
      003543 45 F0            [12]10007 	orl	a,b
      003545 70 04            [24]10008 	jnz	00130$
      003547 75 82 06         [24]10009 	mov	dpl,#0x06
      00354A 22               [24]10010 	ret
      00354B                      10011 00130$:
                                  10012 ;	ff15\source\ff.c:3037: if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
      00354B 85*D6 82         [24]10013 	mov	dpl,_create_name_sloc4_1_0
      00354E 85*D7 83         [24]10014 	mov	dph,(_create_name_sloc4_1_0 + 1)
      003551 85*D8 F0         [24]10015 	mov	b,(_create_name_sloc4_1_0 + 2)
      003554 12r00r00         [24]10016 	lcall	__gptrget
      003557 FF               [12]10017 	mov	r7,a
      003558 BF E5 0E         [24]10018 	cjne	r7,#0xe5,00132$
      00355B 85*D6 82         [24]10019 	mov	dpl,_create_name_sloc4_1_0
      00355E 85*D7 83         [24]10020 	mov	dph,(_create_name_sloc4_1_0 + 1)
      003561 85*D8 F0         [24]10021 	mov	b,(_create_name_sloc4_1_0 + 2)
      003564 74 05            [12]10022 	mov	a,#0x05
      003566 12r00r00         [24]10023 	lcall	__gptrput
      003569                      10024 00132$:
                                  10025 ;	ff15\source\ff.c:3038: sfn[NSFLAG] = (c <= ' ' || p[si] <= ' ') ? NS_LAST : 0;	/* Set last segment flag if end of the path */
      003569 74 0B            [12]10026 	mov	a,#0x0b
      00356B 25*D6            [12]10027 	add	a,_create_name_sloc4_1_0
      00356D FD               [12]10028 	mov	r5,a
      00356E E4               [12]10029 	clr	a
      00356F 35*D7            [12]10030 	addc	a,(_create_name_sloc4_1_0 + 1)
      003571 FE               [12]10031 	mov	r6,a
      003572 AF*D8            [24]10032 	mov	r7,(_create_name_sloc4_1_0 + 2)
      003574 90r00rB9         [24]10033 	mov	dptr,#_create_name_c_65536_187
      003577 E0               [24]10034 	movx	a,@dptr
      003578 24 DF            [12]10035 	add	a,#0xff - 0x20
      00357A 92*00            [24]10036 	mov	_create_name_sloc5_1_0,c
      00357C 50 22            [24]10037 	jnc	00139$
      00357E 90r00rBC         [24]10038 	mov	dptr,#_create_name_si_65536_187
      003581 E0               [24]10039 	movx	a,@dptr
      003582 FB               [12]10040 	mov	r3,a
      003583 A3               [24]10041 	inc	dptr
      003584 E0               [24]10042 	movx	a,@dptr
      003585 FC               [12]10043 	mov	r4,a
      003586 EB               [12]10044 	mov	a,r3
      003587 25*D0            [12]10045 	add	a,_create_name_sloc1_1_0
      003589 FB               [12]10046 	mov	r3,a
      00358A EC               [12]10047 	mov	a,r4
      00358B 35*D1            [12]10048 	addc	a,(_create_name_sloc1_1_0 + 1)
      00358D FC               [12]10049 	mov	r4,a
      00358E AA*D2            [24]10050 	mov	r2,(_create_name_sloc1_1_0 + 2)
      003590 8B 82            [24]10051 	mov	dpl,r3
      003592 8C 83            [24]10052 	mov	dph,r4
      003594 8A F0            [24]10053 	mov	b,r2
      003596 12r00r00         [24]10054 	lcall	__gptrget
      003599 FB               [12]10055 	mov  r3,a
      00359A 24 DF            [12]10056 	add	a,#0xff - 0x20
      00359C 92*00            [24]10057 	mov	_create_name_sloc5_1_0,c
      00359E 40 06            [24]10058 	jc	00136$
      0035A0                      10059 00139$:
      0035A0 7B 04            [12]10060 	mov	r3,#0x04
      0035A2 7C 00            [12]10061 	mov	r4,#0x00
      0035A4 80 04            [24]10062 	sjmp	00137$
      0035A6                      10063 00136$:
      0035A6 7B 00            [12]10064 	mov	r3,#0x00
      0035A8 7C 00            [12]10065 	mov	r4,#0x00
      0035AA                      10066 00137$:
      0035AA 8D 82            [24]10067 	mov	dpl,r5
      0035AC 8E 83            [24]10068 	mov	dph,r6
      0035AE 8F F0            [24]10069 	mov	b,r7
      0035B0 EB               [12]10070 	mov	a,r3
      0035B1 12r00r00         [24]10071 	lcall	__gptrput
                                  10072 ;	ff15\source\ff.c:3040: return FR_OK;
      0035B4 75 82 00         [24]10073 	mov	dpl,#0x00
                                  10074 ;	ff15\source\ff.c:3042: }
      0035B7 22               [24]10075 	ret
                                  10076 ;------------------------------------------------------------
                                  10077 ;Allocation info for local variables in function 'follow_path'
                                  10078 ;------------------------------------------------------------
                                  10079 ;sloc0                     Allocated with name '_follow_path_sloc0_1_0'
                                  10080 ;sloc1                     Allocated with name '_follow_path_sloc1_1_0'
                                  10081 ;path                      Allocated with name '_follow_path_PARM_2'
                                  10082 ;dp                        Allocated with name '_follow_path_dp_65536_194'
                                  10083 ;res                       Allocated with name '_follow_path_res_65536_195'
                                  10084 ;ns                        Allocated with name '_follow_path_ns_65536_195'
                                  10085 ;fs                        Allocated with name '_follow_path_fs_65536_195'
                                  10086 ;------------------------------------------------------------
                                  10087 ;	ff15\source\ff.c:3051: static FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
                                  10088 ;	-----------------------------------------
                                  10089 ;	 function follow_path
                                  10090 ;	-----------------------------------------
      0035B8                      10091 _follow_path:
      0035B8 AF F0            [24]10092 	mov	r7,b
      0035BA AE 83            [24]10093 	mov	r6,dph
      0035BC E5 82            [12]10094 	mov	a,dpl
      0035BE 90r00rC3         [24]10095 	mov	dptr,#_follow_path_dp_65536_194
      0035C1 F0               [24]10096 	movx	@dptr,a
      0035C2 EE               [12]10097 	mov	a,r6
      0035C3 A3               [24]10098 	inc	dptr
      0035C4 F0               [24]10099 	movx	@dptr,a
      0035C5 EF               [12]10100 	mov	a,r7
      0035C6 A3               [24]10101 	inc	dptr
      0035C7 F0               [24]10102 	movx	@dptr,a
                                  10103 ;	ff15\source\ff.c:3058: FATFS *fs = dp->obj.fs;
      0035C8 90r00rC3         [24]10104 	mov	dptr,#_follow_path_dp_65536_194
      0035CB E0               [24]10105 	movx	a,@dptr
      0035CC FD               [12]10106 	mov	r5,a
      0035CD A3               [24]10107 	inc	dptr
      0035CE E0               [24]10108 	movx	a,@dptr
      0035CF FE               [12]10109 	mov	r6,a
      0035D0 A3               [24]10110 	inc	dptr
      0035D1 E0               [24]10111 	movx	a,@dptr
      0035D2 FF               [12]10112 	mov	r7,a
      0035D3 8D 82            [24]10113 	mov	dpl,r5
      0035D5 8E 83            [24]10114 	mov	dph,r6
      0035D7 8F F0            [24]10115 	mov	b,r7
      0035D9 12r00r00         [24]10116 	lcall	__gptrget
      0035DC F5*DC            [12]10117 	mov	_follow_path_sloc1_1_0,a
      0035DE A3               [24]10118 	inc	dptr
      0035DF 12r00r00         [24]10119 	lcall	__gptrget
      0035E2 F5*DD            [12]10120 	mov	(_follow_path_sloc1_1_0 + 1),a
      0035E4 A3               [24]10121 	inc	dptr
      0035E5 12r00r00         [24]10122 	lcall	__gptrget
      0035E8 F5*DE            [12]10123 	mov	(_follow_path_sloc1_1_0 + 2),a
                                  10124 ;	ff15\source\ff.c:3067: while (IsSeparator(*path)) path++;	/* Strip separators */
      0035EA 90r00rC0         [24]10125 	mov	dptr,#_follow_path_PARM_2
      0035ED E0               [24]10126 	movx	a,@dptr
      0035EE FA               [12]10127 	mov	r2,a
      0035EF A3               [24]10128 	inc	dptr
      0035F0 E0               [24]10129 	movx	a,@dptr
      0035F1 FB               [12]10130 	mov	r3,a
      0035F2 A3               [24]10131 	inc	dptr
      0035F3 E0               [24]10132 	movx	a,@dptr
      0035F4 FC               [12]10133 	mov	r4,a
      0035F5                      10134 00102$:
      0035F5 8A 82            [24]10135 	mov	dpl,r2
      0035F7 8B 83            [24]10136 	mov	dph,r3
      0035F9 8C F0            [24]10137 	mov	b,r4
      0035FB 12r00r00         [24]10138 	lcall	__gptrget
      0035FE F9               [12]10139 	mov	r1,a
      0035FF B9 2F 02         [24]10140 	cjne	r1,#0x2f,00172$
      003602 80 03            [24]10141 	sjmp	00103$
      003604                      10142 00172$:
      003604 B9 5C 12         [24]10143 	cjne	r1,#0x5c,00141$
      003607                      10144 00103$:
      003607 0A               [12]10145 	inc	r2
      003608 BA 00 01         [24]10146 	cjne	r2,#0x00,00175$
      00360B 0B               [12]10147 	inc	r3
      00360C                      10148 00175$:
      00360C 90r00rC0         [24]10149 	mov	dptr,#_follow_path_PARM_2
      00360F EA               [12]10150 	mov	a,r2
      003610 F0               [24]10151 	movx	@dptr,a
      003611 EB               [12]10152 	mov	a,r3
      003612 A3               [24]10153 	inc	dptr
      003613 F0               [24]10154 	movx	@dptr,a
      003614 EC               [12]10155 	mov	a,r4
      003615 A3               [24]10156 	inc	dptr
      003616 F0               [24]10157 	movx	@dptr,a
      003617 80 DC            [24]10158 	sjmp	00102$
      003619                      10159 00141$:
      003619 90r00rC0         [24]10160 	mov	dptr,#_follow_path_PARM_2
      00361C EA               [12]10161 	mov	a,r2
      00361D F0               [24]10162 	movx	@dptr,a
      00361E EB               [12]10163 	mov	a,r3
      00361F A3               [24]10164 	inc	dptr
      003620 F0               [24]10165 	movx	@dptr,a
      003621 EC               [12]10166 	mov	a,r4
      003622 A3               [24]10167 	inc	dptr
      003623 F0               [24]10168 	movx	@dptr,a
                                  10169 ;	ff15\source\ff.c:3068: dp->obj.sclust = 0;					/* Start from the root directory */
      003624 90r00rC3         [24]10170 	mov	dptr,#_follow_path_dp_65536_194
      003627 E0               [24]10171 	movx	a,@dptr
      003628 F5*D9            [12]10172 	mov	_follow_path_sloc0_1_0,a
      00362A A3               [24]10173 	inc	dptr
      00362B E0               [24]10174 	movx	a,@dptr
      00362C F5*DA            [12]10175 	mov	(_follow_path_sloc0_1_0 + 1),a
      00362E A3               [24]10176 	inc	dptr
      00362F E0               [24]10177 	movx	a,@dptr
      003630 F5*DB            [12]10178 	mov	(_follow_path_sloc0_1_0 + 2),a
      003632 74 07            [12]10179 	mov	a,#0x07
      003634 25*D9            [12]10180 	add	a,_follow_path_sloc0_1_0
      003636 F8               [12]10181 	mov	r0,a
      003637 E4               [12]10182 	clr	a
      003638 35*DA            [12]10183 	addc	a,(_follow_path_sloc0_1_0 + 1)
      00363A F9               [12]10184 	mov	r1,a
      00363B AF*DB            [24]10185 	mov	r7,(_follow_path_sloc0_1_0 + 2)
      00363D 88 82            [24]10186 	mov	dpl,r0
      00363F 89 83            [24]10187 	mov	dph,r1
      003641 8F F0            [24]10188 	mov	b,r7
      003643 E4               [12]10189 	clr	a
      003644 12r00r00         [24]10190 	lcall	__gptrput
      003647 A3               [24]10191 	inc	dptr
      003648 12r00r00         [24]10192 	lcall	__gptrput
      00364B A3               [24]10193 	inc	dptr
      00364C 12r00r00         [24]10194 	lcall	__gptrput
      00364F A3               [24]10195 	inc	dptr
      003650 12r00r00         [24]10196 	lcall	__gptrput
                                  10197 ;	ff15\source\ff.c:3087: if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
      003653 90r00rC0         [24]10198 	mov	dptr,#_follow_path_PARM_2
      003656 E0               [24]10199 	movx	a,@dptr
      003657 FD               [12]10200 	mov	r5,a
      003658 A3               [24]10201 	inc	dptr
      003659 E0               [24]10202 	movx	a,@dptr
      00365A FE               [12]10203 	mov	r6,a
      00365B A3               [24]10204 	inc	dptr
      00365C E0               [24]10205 	movx	a,@dptr
      00365D FF               [12]10206 	mov	r7,a
      00365E 8D 82            [24]10207 	mov	dpl,r5
      003660 8E 83            [24]10208 	mov	dph,r6
      003662 8F F0            [24]10209 	mov	b,r7
      003664 12r00r00         [24]10210 	lcall	__gptrget
      003667 FD               [12]10211 	mov	r5,a
      003668 7F 00            [12]10212 	mov	r7,#0x00
      00366A C3               [12]10213 	clr	c
      00366B ED               [12]10214 	mov	a,r5
      00366C 94 20            [12]10215 	subb	a,#0x20
      00366E EF               [12]10216 	mov	a,r7
      00366F 94 00            [12]10217 	subb	a,#0x00
      003671 50 36            [24]10218 	jnc	00128$
                                  10219 ;	ff15\source\ff.c:3088: dp->fn[NSFLAG] = NS_NONAME;
      003673 74 29            [12]10220 	mov	a,#0x29
      003675 25*D9            [12]10221 	add	a,_follow_path_sloc0_1_0
      003677 F8               [12]10222 	mov	r0,a
      003678 E4               [12]10223 	clr	a
      003679 35*DA            [12]10224 	addc	a,(_follow_path_sloc0_1_0 + 1)
      00367B F9               [12]10225 	mov	r1,a
      00367C AC*DB            [24]10226 	mov	r4,(_follow_path_sloc0_1_0 + 2)
      00367E 88 82            [24]10227 	mov	dpl,r0
      003680 89 83            [24]10228 	mov	dph,r1
      003682 8C F0            [24]10229 	mov	b,r4
      003684 74 80            [12]10230 	mov	a,#0x80
      003686 12r00r00         [24]10231 	lcall	__gptrput
                                  10232 ;	ff15\source\ff.c:3089: res = dir_sdi(dp, 0);
      003689 90r00r69         [24]10233 	mov	dptr,#_dir_sdi_PARM_2
      00368C E4               [12]10234 	clr	a
      00368D F0               [24]10235 	movx	@dptr,a
      00368E A3               [24]10236 	inc	dptr
      00368F F0               [24]10237 	movx	@dptr,a
      003690 A3               [24]10238 	inc	dptr
      003691 F0               [24]10239 	movx	@dptr,a
      003692 A3               [24]10240 	inc	dptr
      003693 F0               [24]10241 	movx	@dptr,a
      003694 85*D9 82         [24]10242 	mov	dpl,_follow_path_sloc0_1_0
      003697 85*DA 83         [24]10243 	mov	dph,(_follow_path_sloc0_1_0 + 1)
      00369A 85*DB F0         [24]10244 	mov	b,(_follow_path_sloc0_1_0 + 2)
      00369D 12r1DrC4         [24]10245 	lcall	_dir_sdi
      0036A0 E5 82            [12]10246 	mov	a,dpl
      0036A2 90r00rC6         [24]10247 	mov	dptr,#_follow_path_res_65536_195
      0036A5 F0               [24]10248 	movx	@dptr,a
      0036A6 02r37rCA         [24]10249 	ljmp	00127$
      0036A9                      10250 00128$:
                                  10251 ;	ff15\source\ff.c:3093: res = create_name(dp, &path);	/* Get a segment name of the path */
      0036A9 90r00rC3         [24]10252 	mov	dptr,#_follow_path_dp_65536_194
      0036AC E0               [24]10253 	movx	a,@dptr
      0036AD FA               [12]10254 	mov	r2,a
      0036AE A3               [24]10255 	inc	dptr
      0036AF E0               [24]10256 	movx	a,@dptr
      0036B0 FB               [12]10257 	mov	r3,a
      0036B1 A3               [24]10258 	inc	dptr
      0036B2 E0               [24]10259 	movx	a,@dptr
      0036B3 FC               [12]10260 	mov	r4,a
      0036B4 90r00rB3         [24]10261 	mov	dptr,#_create_name_PARM_2
      0036B7 74rC0            [12]10262 	mov	a,#_follow_path_PARM_2
      0036B9 F0               [24]10263 	movx	@dptr,a
      0036BA 74s00            [12]10264 	mov	a,#(_follow_path_PARM_2 >> 8)
      0036BC A3               [24]10265 	inc	dptr
      0036BD F0               [24]10266 	movx	@dptr,a
      0036BE E4               [12]10267 	clr	a
      0036BF A3               [24]10268 	inc	dptr
      0036C0 F0               [24]10269 	movx	@dptr,a
      0036C1 8A 82            [24]10270 	mov	dpl,r2
      0036C3 8B 83            [24]10271 	mov	dph,r3
      0036C5 8C F0            [24]10272 	mov	b,r4
      0036C7 12r32rA1         [24]10273 	lcall	_create_name
      0036CA AC 82            [24]10274 	mov	r4,dpl
      0036CC 90r00rC6         [24]10275 	mov	dptr,#_follow_path_res_65536_195
      0036CF EC               [12]10276 	mov	a,r4
      0036D0 F0               [24]10277 	movx	@dptr,a
                                  10278 ;	ff15\source\ff.c:3094: if (res != FR_OK) break;
      0036D1 EC               [12]10279 	mov	a,r4
      0036D2 60 03            [24]10280 	jz	00177$
      0036D4 02r37rCA         [24]10281 	ljmp	00127$
      0036D7                      10282 00177$:
                                  10283 ;	ff15\source\ff.c:3095: res = dir_find(dp);				/* Find an object with the segment name */
      0036D7 90r00rC3         [24]10284 	mov	dptr,#_follow_path_dp_65536_194
      0036DA E0               [24]10285 	movx	a,@dptr
      0036DB FA               [12]10286 	mov	r2,a
      0036DC A3               [24]10287 	inc	dptr
      0036DD E0               [24]10288 	movx	a,@dptr
      0036DE FB               [12]10289 	mov	r3,a
      0036DF A3               [24]10290 	inc	dptr
      0036E0 E0               [24]10291 	movx	a,@dptr
      0036E1 FC               [12]10292 	mov	r4,a
      0036E2 8A 82            [24]10293 	mov	dpl,r2
      0036E4 8B 83            [24]10294 	mov	dph,r3
      0036E6 8C F0            [24]10295 	mov	b,r4
      0036E8 12r2BrA8         [24]10296 	lcall	_dir_find
      0036EB AC 82            [24]10297 	mov	r4,dpl
      0036ED 90r00rC6         [24]10298 	mov	dptr,#_follow_path_res_65536_195
      0036F0 EC               [12]10299 	mov	a,r4
      0036F1 F0               [24]10300 	movx	@dptr,a
                                  10301 ;	ff15\source\ff.c:3096: ns = dp->fn[NSFLAG];
      0036F2 90r00rC3         [24]10302 	mov	dptr,#_follow_path_dp_65536_194
      0036F5 E0               [24]10303 	movx	a,@dptr
      0036F6 F9               [12]10304 	mov	r1,a
      0036F7 A3               [24]10305 	inc	dptr
      0036F8 E0               [24]10306 	movx	a,@dptr
      0036F9 FA               [12]10307 	mov	r2,a
      0036FA A3               [24]10308 	inc	dptr
      0036FB E0               [24]10309 	movx	a,@dptr
      0036FC FB               [12]10310 	mov	r3,a
      0036FD 74 29            [12]10311 	mov	a,#0x29
      0036FF 29               [12]10312 	add	a,r1
      003700 F8               [12]10313 	mov	r0,a
      003701 E4               [12]10314 	clr	a
      003702 3A               [12]10315 	addc	a,r2
      003703 FE               [12]10316 	mov	r6,a
      003704 8B 07            [24]10317 	mov	ar7,r3
      003706 88 82            [24]10318 	mov	dpl,r0
      003708 8E 83            [24]10319 	mov	dph,r6
      00370A 8F F0            [24]10320 	mov	b,r7
      00370C 12r00r00         [24]10321 	lcall	__gptrget
      00370F F5*D9            [12]10322 	mov	_follow_path_sloc0_1_0,a
                                  10323 ;	ff15\source\ff.c:3097: if (res != FR_OK) {				/* Failed to find the object */
      003711 EC               [12]10324 	mov	a,r4
      003712 60 19            [24]10325 	jz	00118$
                                  10326 ;	ff15\source\ff.c:3098: if (res == FR_NO_FILE) {	/* Object is not found */
      003714 BC 04 02         [24]10327 	cjne	r4,#0x04,00179$
      003717 80 03            [24]10328 	sjmp	00180$
      003719                      10329 00179$:
      003719 02r37rCA         [24]10330 	ljmp	00127$
      00371C                      10331 00180$:
                                  10332 ;	ff15\source\ff.c:3104: if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
      00371C E5*D9            [12]10333 	mov	a,_follow_path_sloc0_1_0
      00371E 30 E2 03         [24]10334 	jnb	acc.2,00181$
      003721 02r37rCA         [24]10335 	ljmp	00127$
      003724                      10336 00181$:
      003724 90r00rC6         [24]10337 	mov	dptr,#_follow_path_res_65536_195
      003727 74 05            [12]10338 	mov	a,#0x05
      003729 F0               [24]10339 	movx	@dptr,a
                                  10340 ;	ff15\source\ff.c:3107: break;
      00372A 02r37rCA         [24]10341 	ljmp	00127$
      00372D                      10342 00118$:
                                  10343 ;	ff15\source\ff.c:3109: if (ns & NS_LAST) break;		/* Last segment matched. Function completed. */
      00372D E5*D9            [12]10344 	mov	a,_follow_path_sloc0_1_0
      00372F 30 E2 03         [24]10345 	jnb	acc.2,00182$
      003732 02r37rCA         [24]10346 	ljmp	00127$
      003735                      10347 00182$:
                                  10348 ;	ff15\source\ff.c:3111: if (!(dp->obj.attr & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
      003735 74 05            [12]10349 	mov	a,#0x05
      003737 29               [12]10350 	add	a,r1
      003738 F8               [12]10351 	mov	r0,a
      003739 E4               [12]10352 	clr	a
      00373A 3A               [12]10353 	addc	a,r2
      00373B FC               [12]10354 	mov	r4,a
      00373C 8B 07            [24]10355 	mov	ar7,r3
      00373E 88 82            [24]10356 	mov	dpl,r0
      003740 8C 83            [24]10357 	mov	dph,r4
      003742 8F F0            [24]10358 	mov	b,r7
      003744 12r00r00         [24]10359 	lcall	__gptrget
      003747 F8               [12]10360 	mov	r0,a
      003748 20 E4 09         [24]10361 	jb	acc.4,00122$
                                  10362 ;	ff15\source\ff.c:3112: res = FR_NO_PATH; break;
      00374B 90r00rC6         [24]10363 	mov	dptr,#_follow_path_res_65536_195
      00374E 74 05            [12]10364 	mov	a,#0x05
      003750 F0               [24]10365 	movx	@dptr,a
      003751 02r37rCA         [24]10366 	ljmp	00127$
      003754                      10367 00122$:
                                  10368 ;	ff15\source\ff.c:3123: dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
      003754 74 07            [12]10369 	mov	a,#0x07
      003756 29               [12]10370 	add	a,r1
      003757 F5*D9            [12]10371 	mov	_follow_path_sloc0_1_0,a
      003759 E4               [12]10372 	clr	a
      00375A 3A               [12]10373 	addc	a,r2
      00375B F5*DA            [12]10374 	mov	(_follow_path_sloc0_1_0 + 1),a
      00375D 8B*DB            [24]10375 	mov	(_follow_path_sloc0_1_0 + 2),r3
      00375F 74 30            [12]10376 	mov	a,#0x30
      003761 25*DC            [12]10377 	add	a,_follow_path_sloc1_1_0
      003763 FD               [12]10378 	mov	r5,a
      003764 E4               [12]10379 	clr	a
      003765 35*DD            [12]10380 	addc	a,(_follow_path_sloc1_1_0 + 1)
      003767 FE               [12]10381 	mov	r6,a
      003768 AF*DE            [24]10382 	mov	r7,(_follow_path_sloc1_1_0 + 2)
      00376A 74 0F            [12]10383 	mov	a,#0x0f
      00376C 29               [12]10384 	add	a,r1
      00376D F9               [12]10385 	mov	r1,a
      00376E E4               [12]10386 	clr	a
      00376F 3A               [12]10387 	addc	a,r2
      003770 FA               [12]10388 	mov	r2,a
      003771 89 82            [24]10389 	mov	dpl,r1
      003773 8A 83            [24]10390 	mov	dph,r2
      003775 8B F0            [24]10391 	mov	b,r3
      003777 12r00r00         [24]10392 	lcall	__gptrget
      00377A F9               [12]10393 	mov	r1,a
      00377B A3               [24]10394 	inc	dptr
      00377C 12r00r00         [24]10395 	lcall	__gptrget
      00377F FA               [12]10396 	mov	r2,a
      003780 A3               [24]10397 	inc	dptr
      003781 12r00r00         [24]10398 	lcall	__gptrget
      003784 A3               [24]10399 	inc	dptr
      003785 12r00r00         [24]10400 	lcall	__gptrget
      003788 53 02 01         [24]10401 	anl	ar2,#0x01
      00378B 90r00r85         [24]10402 	mov	dptr,#_ld_clust_PARM_2
      00378E E9               [12]10403 	mov	a,r1
      00378F 2D               [12]10404 	add	a,r5
      003790 F0               [24]10405 	movx	@dptr,a
      003791 EA               [12]10406 	mov	a,r2
      003792 3E               [12]10407 	addc	a,r6
      003793 A3               [24]10408 	inc	dptr
      003794 F0               [24]10409 	movx	@dptr,a
      003795 EF               [12]10410 	mov	a,r7
      003796 A3               [24]10411 	inc	dptr
      003797 F0               [24]10412 	movx	@dptr,a
      003798 85*DC 82         [24]10413 	mov	dpl,_follow_path_sloc1_1_0
      00379B 85*DD 83         [24]10414 	mov	dph,(_follow_path_sloc1_1_0 + 1)
      00379E 85*DE F0         [24]10415 	mov	b,(_follow_path_sloc1_1_0 + 2)
      0037A1 12r28r70         [24]10416 	lcall	_ld_clust
      0037A4 AD 82            [24]10417 	mov	r5,dpl
      0037A6 AC 83            [24]10418 	mov	r4,dph
      0037A8 AE F0            [24]10419 	mov	r6,b
      0037AA FF               [12]10420 	mov	r7,a
      0037AB 85*D9 82         [24]10421 	mov	dpl,_follow_path_sloc0_1_0
      0037AE 85*DA 83         [24]10422 	mov	dph,(_follow_path_sloc0_1_0 + 1)
      0037B1 85*DB F0         [24]10423 	mov	b,(_follow_path_sloc0_1_0 + 2)
      0037B4 ED               [12]10424 	mov	a,r5
      0037B5 12r00r00         [24]10425 	lcall	__gptrput
      0037B8 A3               [24]10426 	inc	dptr
      0037B9 EC               [12]10427 	mov	a,r4
      0037BA 12r00r00         [24]10428 	lcall	__gptrput
      0037BD A3               [24]10429 	inc	dptr
      0037BE EE               [12]10430 	mov	a,r6
      0037BF 12r00r00         [24]10431 	lcall	__gptrput
      0037C2 A3               [24]10432 	inc	dptr
      0037C3 EF               [12]10433 	mov	a,r7
      0037C4 12r00r00         [24]10434 	lcall	__gptrput
      0037C7 02r36rA9         [24]10435 	ljmp	00128$
      0037CA                      10436 00127$:
                                  10437 ;	ff15\source\ff.c:3128: return res;
      0037CA 90r00rC6         [24]10438 	mov	dptr,#_follow_path_res_65536_195
      0037CD E0               [24]10439 	movx	a,@dptr
                                  10440 ;	ff15\source\ff.c:3129: }
      0037CE F5 82            [12]10441 	mov	dpl,a
      0037D0 22               [24]10442 	ret
                                  10443 ;------------------------------------------------------------
                                  10444 ;Allocation info for local variables in function 'get_ldnumber'
                                  10445 ;------------------------------------------------------------
                                  10446 ;path                      Allocated with name '_get_ldnumber_path_65536_207'
                                  10447 ;tp                        Allocated with name '_get_ldnumber_tp_65536_208'
                                  10448 ;tt                        Allocated with name '_get_ldnumber_tt_65536_208'
                                  10449 ;tc                        Allocated with name '_get_ldnumber_tc_65536_208'
                                  10450 ;i                         Allocated with name '_get_ldnumber_i_65536_208'
                                  10451 ;vol                       Allocated with name '_get_ldnumber_vol_65536_208'
                                  10452 ;------------------------------------------------------------
                                  10453 ;	ff15\source\ff.c:3138: static int get_ldnumber (	/* Returns logical drive number (-1:invalid drive number or null pointer) */
                                  10454 ;	-----------------------------------------
                                  10455 ;	 function get_ldnumber
                                  10456 ;	-----------------------------------------
      0037D1                      10457 _get_ldnumber:
      0037D1 AF F0            [24]10458 	mov	r7,b
      0037D3 AE 83            [24]10459 	mov	r6,dph
      0037D5 E5 82            [12]10460 	mov	a,dpl
      0037D7 90r00rC7         [24]10461 	mov	dptr,#_get_ldnumber_path_65536_207
      0037DA F0               [24]10462 	movx	@dptr,a
      0037DB EE               [12]10463 	mov	a,r6
      0037DC A3               [24]10464 	inc	dptr
      0037DD F0               [24]10465 	movx	@dptr,a
      0037DE EF               [12]10466 	mov	a,r7
      0037DF A3               [24]10467 	inc	dptr
      0037E0 F0               [24]10468 	movx	@dptr,a
                                  10469 ;	ff15\source\ff.c:3146: int vol = -1;
      0037E1 90r00rCC         [24]10470 	mov	dptr,#_get_ldnumber_vol_65536_208
      0037E4 74 FF            [12]10471 	mov	a,#0xff
      0037E6 F0               [24]10472 	movx	@dptr,a
      0037E7 A3               [24]10473 	inc	dptr
      0037E8 F0               [24]10474 	movx	@dptr,a
                                  10475 ;	ff15\source\ff.c:3152: tt = tp = *path;
      0037E9 90r00rC7         [24]10476 	mov	dptr,#_get_ldnumber_path_65536_207
      0037EC E0               [24]10477 	movx	a,@dptr
      0037ED FD               [12]10478 	mov	r5,a
      0037EE A3               [24]10479 	inc	dptr
      0037EF E0               [24]10480 	movx	a,@dptr
      0037F0 FE               [12]10481 	mov	r6,a
      0037F1 A3               [24]10482 	inc	dptr
      0037F2 E0               [24]10483 	movx	a,@dptr
      0037F3 FF               [12]10484 	mov	r7,a
      0037F4 8D 82            [24]10485 	mov	dpl,r5
      0037F6 8E 83            [24]10486 	mov	dph,r6
      0037F8 8F F0            [24]10487 	mov	b,r7
      0037FA 12r00r00         [24]10488 	lcall	__gptrget
      0037FD FD               [12]10489 	mov	r5,a
      0037FE A3               [24]10490 	inc	dptr
      0037FF 12r00r00         [24]10491 	lcall	__gptrget
      003802 FE               [12]10492 	mov	r6,a
      003803 A3               [24]10493 	inc	dptr
      003804 12r00r00         [24]10494 	lcall	__gptrget
      003807 FF               [12]10495 	mov	r7,a
                                  10496 ;	ff15\source\ff.c:3153: if (!tp) return vol;	/* Invalid path name? */
      003808 ED               [12]10497 	mov	a,r5
      003809 4E               [12]10498 	orl	a,r6
      00380A 70 04            [24]10499 	jnz	00119$
      00380C 90 FF FF         [24]10500 	mov	dptr,#0xffff
      00380F 22               [24]10501 	ret
                                  10502 ;	ff15\source\ff.c:3154: do {					/* Find a colon in the path */
      003810                      10503 00119$:
      003810 8D 02            [24]10504 	mov	ar2,r5
      003812 8E 03            [24]10505 	mov	ar3,r6
      003814 8F 04            [24]10506 	mov	ar4,r7
      003816                      10507 00104$:
                                  10508 ;	ff15\source\ff.c:3155: tc = *tt++;
      003816 C0 05            [24]10509 	push	ar5
      003818 C0 06            [24]10510 	push	ar6
      00381A C0 07            [24]10511 	push	ar7
      00381C 8A 82            [24]10512 	mov	dpl,r2
      00381E 8B 83            [24]10513 	mov	dph,r3
      003820 8C F0            [24]10514 	mov	b,r4
      003822 12r00r00         [24]10515 	lcall	__gptrget
      003825 F9               [12]10516 	mov	r1,a
      003826 A3               [24]10517 	inc	dptr
      003827 AA 82            [24]10518 	mov	r2,dpl
      003829 AB 83            [24]10519 	mov	r3,dph
                                  10520 ;	ff15\source\ff.c:3156: } while (!IsTerminator(tc) && tc != ':');
      00382B 89 00            [24]10521 	mov	ar0,r1
      00382D 7F 00            [12]10522 	mov	r7,#0x00
      00382F C3               [12]10523 	clr	c
      003830 E8               [12]10524 	mov	a,r0
      003831 94 21            [12]10525 	subb	a,#0x21
      003833 EF               [12]10526 	mov	a,r7
      003834 94 00            [12]10527 	subb	a,#0x00
      003836 D0 07            [24]10528 	pop	ar7
      003838 D0 06            [24]10529 	pop	ar6
      00383A D0 05            [24]10530 	pop	ar5
      00383C 40 03            [24]10531 	jc	00106$
      00383E B9 3A D5         [24]10532 	cjne	r1,#0x3a,00104$
      003841                      10533 00106$:
                                  10534 ;	ff15\source\ff.c:3158: if (tc == ':') {	/* DOS/Windows style volume ID? */
      003841 B9 3A 02         [24]10535 	cjne	r1,#0x3a,00154$
      003844 80 03            [24]10536 	sjmp	00155$
      003846                      10537 00154$:
      003846 02r38rDF         [24]10538 	ljmp	00114$
      003849                      10539 00155$:
                                  10540 ;	ff15\source\ff.c:3159: i = FF_VOLUMES;
      003849 90r00rCA         [24]10541 	mov	dptr,#_get_ldnumber_i_65536_208
      00384C 74 01            [12]10542 	mov	a,#0x01
      00384E F0               [24]10543 	movx	@dptr,a
      00384F E4               [12]10544 	clr	a
      003850 A3               [24]10545 	inc	dptr
      003851 F0               [24]10546 	movx	@dptr,a
                                  10547 ;	ff15\source\ff.c:3160: if (IsDigit(*tp) && tp + 2 == tt) {	/* Is there a numeric volume ID + colon? */
      003852 8D 82            [24]10548 	mov	dpl,r5
      003854 8E 83            [24]10549 	mov	dph,r6
      003856 8F F0            [24]10550 	mov	b,r7
      003858 12r00r00         [24]10551 	lcall	__gptrget
      00385B F9               [12]10552 	mov	r1,a
      00385C B9 30 00         [24]10553 	cjne	r1,#0x30,00156$
      00385F                      10554 00156$:
      00385F 40 37            [24]10555 	jc	00108$
      003861 E9               [12]10556 	mov	a,r1
      003862 24 C6            [12]10557 	add	a,#0xff - 0x39
      003864 40 32            [24]10558 	jc	00108$
      003866 74 02            [12]10559 	mov	a,#0x02
      003868 2D               [12]10560 	add	a,r5
      003869 FD               [12]10561 	mov	r5,a
      00386A E4               [12]10562 	clr	a
      00386B 3E               [12]10563 	addc	a,r6
      00386C FE               [12]10564 	mov	r6,a
      00386D C0 02            [24]10565 	push	ar2
      00386F C0 03            [24]10566 	push	ar3
      003871 C0 04            [24]10567 	push	ar4
      003873 8D 82            [24]10568 	mov	dpl,r5
      003875 8E 83            [24]10569 	mov	dph,r6
      003877 8F F0            [24]10570 	mov	b,r7
      003879 12r00r00         [24]10571 	lcall	___gptr_cmp
      00387C 15 81            [12]10572 	dec	sp
      00387E 15 81            [12]10573 	dec	sp
      003880 15 81            [12]10574 	dec	sp
      003882 60 02            [24]10575 	jz	00160$
      003884 80 12            [24]10576 	sjmp	00108$
      003886                      10577 00160$:
                                  10578 ;	ff15\source\ff.c:3161: i = (int)*tp - '0';	/* Get the LD number */
      003886 7F 00            [12]10579 	mov	r7,#0x00
      003888 E9               [12]10580 	mov	a,r1
      003889 24 D0            [12]10581 	add	a,#0xd0
      00388B F9               [12]10582 	mov	r1,a
      00388C EF               [12]10583 	mov	a,r7
      00388D 34 FF            [12]10584 	addc	a,#0xff
      00388F FF               [12]10585 	mov	r7,a
      003890 90r00rCA         [24]10586 	mov	dptr,#_get_ldnumber_i_65536_208
      003893 E9               [12]10587 	mov	a,r1
      003894 F0               [24]10588 	movx	@dptr,a
      003895 EF               [12]10589 	mov	a,r7
      003896 A3               [24]10590 	inc	dptr
      003897 F0               [24]10591 	movx	@dptr,a
      003898                      10592 00108$:
                                  10593 ;	ff15\source\ff.c:3176: if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
      003898 90r00rCA         [24]10594 	mov	dptr,#_get_ldnumber_i_65536_208
      00389B E0               [24]10595 	movx	a,@dptr
      00389C FE               [12]10596 	mov	r6,a
      00389D A3               [24]10597 	inc	dptr
      00389E E0               [24]10598 	movx	a,@dptr
      00389F FF               [12]10599 	mov	r7,a
      0038A0 C3               [12]10600 	clr	c
      0038A1 EE               [12]10601 	mov	a,r6
      0038A2 94 01            [12]10602 	subb	a,#0x01
      0038A4 EF               [12]10603 	mov	a,r7
      0038A5 64 80            [12]10604 	xrl	a,#0x80
      0038A7 94 80            [12]10605 	subb	a,#0x80
      0038A9 50 27            [24]10606 	jnc	00112$
                                  10607 ;	ff15\source\ff.c:3177: vol = i;		/* Drive number */
      0038AB 90r00rCC         [24]10608 	mov	dptr,#_get_ldnumber_vol_65536_208
      0038AE EE               [12]10609 	mov	a,r6
      0038AF F0               [24]10610 	movx	@dptr,a
      0038B0 EF               [12]10611 	mov	a,r7
      0038B1 A3               [24]10612 	inc	dptr
      0038B2 F0               [24]10613 	movx	@dptr,a
                                  10614 ;	ff15\source\ff.c:3178: *path = tt;		/* Snip the drive prefix off */
      0038B3 90r00rC7         [24]10615 	mov	dptr,#_get_ldnumber_path_65536_207
      0038B6 E0               [24]10616 	movx	a,@dptr
      0038B7 FD               [12]10617 	mov	r5,a
      0038B8 A3               [24]10618 	inc	dptr
      0038B9 E0               [24]10619 	movx	a,@dptr
      0038BA FE               [12]10620 	mov	r6,a
      0038BB A3               [24]10621 	inc	dptr
      0038BC E0               [24]10622 	movx	a,@dptr
      0038BD FF               [12]10623 	mov	r7,a
      0038BE 8D 82            [24]10624 	mov	dpl,r5
      0038C0 8E 83            [24]10625 	mov	dph,r6
      0038C2 8F F0            [24]10626 	mov	b,r7
      0038C4 EA               [12]10627 	mov	a,r2
      0038C5 12r00r00         [24]10628 	lcall	__gptrput
      0038C8 A3               [24]10629 	inc	dptr
      0038C9 EB               [12]10630 	mov	a,r3
      0038CA 12r00r00         [24]10631 	lcall	__gptrput
      0038CD A3               [24]10632 	inc	dptr
      0038CE EC               [12]10633 	mov	a,r4
      0038CF 12r00r00         [24]10634 	lcall	__gptrput
      0038D2                      10635 00112$:
                                  10636 ;	ff15\source\ff.c:3180: return vol;
      0038D2 90r00rCC         [24]10637 	mov	dptr,#_get_ldnumber_vol_65536_208
      0038D5 E0               [24]10638 	movx	a,@dptr
      0038D6 FE               [12]10639 	mov	r6,a
      0038D7 A3               [24]10640 	inc	dptr
      0038D8 E0               [24]10641 	movx	a,@dptr
      0038D9 FF               [12]10642 	mov	r7,a
      0038DA 8E 82            [24]10643 	mov	dpl,r6
      0038DC 8F 83            [24]10644 	mov	dph,r7
      0038DE 22               [24]10645 	ret
      0038DF                      10646 00114$:
                                  10647 ;	ff15\source\ff.c:3207: return vol;		/* Return the default drive */
      0038DF 90 00 00         [24]10648 	mov	dptr,#0x0000
                                  10649 ;	ff15\source\ff.c:3208: }
      0038E2 22               [24]10650 	ret
                                  10651 ;------------------------------------------------------------
                                  10652 ;Allocation info for local variables in function 'check_fs'
                                  10653 ;------------------------------------------------------------
                                  10654 ;sloc0                     Allocated with name '_check_fs_sloc0_1_0'
                                  10655 ;sloc1                     Allocated with name '_check_fs_sloc1_1_0'
                                  10656 ;sect                      Allocated with name '_check_fs_PARM_2'
                                  10657 ;fs                        Allocated with name '_check_fs_fs_65536_213'
                                  10658 ;w                         Allocated with name '_check_fs_w_65536_214'
                                  10659 ;sign                      Allocated with name '_check_fs_sign_65536_214'
                                  10660 ;b                         Allocated with name '_check_fs_b_65536_214'
                                  10661 ;------------------------------------------------------------
                                  10662 ;	ff15\source\ff.c:3291: static UINT check_fs (	/* 0:FAT/FAT32 VBR, 1:exFAT VBR, 2:Not FAT and valid BS, 3:Not FAT and invalid BS, 4:Disk error */
                                  10663 ;	-----------------------------------------
                                  10664 ;	 function check_fs
                                  10665 ;	-----------------------------------------
      0038E3                      10666 _check_fs:
      0038E3 AF F0            [24]10667 	mov	r7,b
      0038E5 AE 83            [24]10668 	mov	r6,dph
      0038E7 E5 82            [12]10669 	mov	a,dpl
      0038E9 90r00rD2         [24]10670 	mov	dptr,#_check_fs_fs_65536_213
      0038EC F0               [24]10671 	movx	@dptr,a
      0038ED EE               [12]10672 	mov	a,r6
      0038EE A3               [24]10673 	inc	dptr
      0038EF F0               [24]10674 	movx	@dptr,a
      0038F0 EF               [12]10675 	mov	a,r7
      0038F1 A3               [24]10676 	inc	dptr
      0038F2 F0               [24]10677 	movx	@dptr,a
                                  10678 ;	ff15\source\ff.c:3300: fs->wflag = 0; fs->winsect = (LBA_t)0 - 1;		/* Invaidate window */
      0038F3 90r00rD2         [24]10679 	mov	dptr,#_check_fs_fs_65536_213
      0038F6 E0               [24]10680 	movx	a,@dptr
      0038F7 FD               [12]10681 	mov	r5,a
      0038F8 A3               [24]10682 	inc	dptr
      0038F9 E0               [24]10683 	movx	a,@dptr
      0038FA FE               [12]10684 	mov	r6,a
      0038FB A3               [24]10685 	inc	dptr
      0038FC E0               [24]10686 	movx	a,@dptr
      0038FD FF               [12]10687 	mov	r7,a
      0038FE 74 04            [12]10688 	mov	a,#0x04
      003900 2D               [12]10689 	add	a,r5
      003901 FA               [12]10690 	mov	r2,a
      003902 E4               [12]10691 	clr	a
      003903 3E               [12]10692 	addc	a,r6
      003904 FB               [12]10693 	mov	r3,a
      003905 8F 04            [24]10694 	mov	ar4,r7
      003907 8A 82            [24]10695 	mov	dpl,r2
      003909 8B 83            [24]10696 	mov	dph,r3
      00390B 8C F0            [24]10697 	mov	b,r4
      00390D E4               [12]10698 	clr	a
      00390E 12r00r00         [24]10699 	lcall	__gptrput
      003911 74 2C            [12]10700 	mov	a,#0x2c
      003913 2D               [12]10701 	add	a,r5
      003914 FA               [12]10702 	mov	r2,a
      003915 E4               [12]10703 	clr	a
      003916 3E               [12]10704 	addc	a,r6
      003917 FB               [12]10705 	mov	r3,a
      003918 8F 04            [24]10706 	mov	ar4,r7
      00391A 8A 82            [24]10707 	mov	dpl,r2
      00391C 8B 83            [24]10708 	mov	dph,r3
      00391E 8C F0            [24]10709 	mov	b,r4
      003920 74 FF            [12]10710 	mov	a,#0xff
      003922 12r00r00         [24]10711 	lcall	__gptrput
      003925 A3               [24]10712 	inc	dptr
      003926 12r00r00         [24]10713 	lcall	__gptrput
      003929 A3               [24]10714 	inc	dptr
      00392A 12r00r00         [24]10715 	lcall	__gptrput
      00392D A3               [24]10716 	inc	dptr
      00392E 12r00r00         [24]10717 	lcall	__gptrput
                                  10718 ;	ff15\source\ff.c:3301: if (move_window(fs, sect) != FR_OK) return 4;	/* Load the boot sector */
      003931 90r00rCE         [24]10719 	mov	dptr,#_check_fs_PARM_2
      003934 E0               [24]10720 	movx	a,@dptr
      003935 F9               [12]10721 	mov	r1,a
      003936 A3               [24]10722 	inc	dptr
      003937 E0               [24]10723 	movx	a,@dptr
      003938 FA               [12]10724 	mov	r2,a
      003939 A3               [24]10725 	inc	dptr
      00393A E0               [24]10726 	movx	a,@dptr
      00393B FB               [12]10727 	mov	r3,a
      00393C A3               [24]10728 	inc	dptr
      00393D E0               [24]10729 	movx	a,@dptr
      00393E FC               [12]10730 	mov	r4,a
      00393F 90r00r1D         [24]10731 	mov	dptr,#_move_window_PARM_2
      003942 E9               [12]10732 	mov	a,r1
      003943 F0               [24]10733 	movx	@dptr,a
      003944 EA               [12]10734 	mov	a,r2
      003945 A3               [24]10735 	inc	dptr
      003946 F0               [24]10736 	movx	@dptr,a
      003947 EB               [12]10737 	mov	a,r3
      003948 A3               [24]10738 	inc	dptr
      003949 F0               [24]10739 	movx	@dptr,a
      00394A EC               [12]10740 	mov	a,r4
      00394B A3               [24]10741 	inc	dptr
      00394C F0               [24]10742 	movx	@dptr,a
      00394D 8D 82            [24]10743 	mov	dpl,r5
      00394F 8E 83            [24]10744 	mov	dph,r6
      003951 8F F0            [24]10745 	mov	b,r7
      003953 12r05r18         [24]10746 	lcall	_move_window
      003956 E5 82            [12]10747 	mov	a,dpl
      003958 60 04            [24]10748 	jz	00102$
      00395A 90 00 04         [24]10749 	mov	dptr,#0x0004
      00395D 22               [24]10750 	ret
      00395E                      10751 00102$:
                                  10752 ;	ff15\source\ff.c:3302: sign = ld_word(fs->win + BS_55AA);
      00395E 90r00rD2         [24]10753 	mov	dptr,#_check_fs_fs_65536_213
      003961 E0               [24]10754 	movx	a,@dptr
      003962 FD               [12]10755 	mov	r5,a
      003963 A3               [24]10756 	inc	dptr
      003964 E0               [24]10757 	movx	a,@dptr
      003965 FE               [12]10758 	mov	r6,a
      003966 A3               [24]10759 	inc	dptr
      003967 E0               [24]10760 	movx	a,@dptr
      003968 FF               [12]10761 	mov	r7,a
      003969 74 30            [12]10762 	mov	a,#0x30
      00396B 2D               [12]10763 	add	a,r5
      00396C FA               [12]10764 	mov	r2,a
      00396D E4               [12]10765 	clr	a
      00396E 3E               [12]10766 	addc	a,r6
      00396F FB               [12]10767 	mov	r3,a
      003970 8F 04            [24]10768 	mov	ar4,r7
      003972 74 2E            [12]10769 	mov	a,#0x2e
      003974 2D               [12]10770 	add	a,r5
      003975 FD               [12]10771 	mov	r5,a
      003976 74 02            [12]10772 	mov	a,#0x02
      003978 3E               [12]10773 	addc	a,r6
      003979 FE               [12]10774 	mov	r6,a
      00397A 8D 82            [24]10775 	mov	dpl,r5
      00397C 8E 83            [24]10776 	mov	dph,r6
      00397E 8F F0            [24]10777 	mov	b,r7
      003980 C0 04            [24]10778 	push	ar4
      003982 C0 03            [24]10779 	push	ar3
      003984 C0 02            [24]10780 	push	ar2
      003986 12r00r00         [24]10781 	lcall	_ld_word
      003989 AE 82            [24]10782 	mov	r6,dpl
      00398B AF 83            [24]10783 	mov	r7,dph
      00398D D0 02            [24]10784 	pop	ar2
      00398F D0 03            [24]10785 	pop	ar3
      003991 D0 04            [24]10786 	pop	ar4
                                  10787 ;	ff15\source\ff.c:3306: b = fs->win[BS_JmpBoot];
      003993 8A 82            [24]10788 	mov	dpl,r2
      003995 8B 83            [24]10789 	mov	dph,r3
      003997 8C F0            [24]10790 	mov	b,r4
      003999 12r00r00         [24]10791 	lcall	__gptrget
      00399C FD               [12]10792 	mov	r5,a
                                  10793 ;	ff15\source\ff.c:3307: if (b == 0xEB || b == 0xE9 || b == 0xE8) {	/* Valid JumpBoot code? (short jump, near jump or near call) */
      00399D BD EB 02         [24]10794 	cjne	r5,#0xeb,00191$
      0039A0 80 0D            [24]10795 	sjmp	00118$
      0039A2                      10796 00191$:
      0039A2 BD E9 02         [24]10797 	cjne	r5,#0xe9,00192$
      0039A5 80 08            [24]10798 	sjmp	00118$
      0039A7                      10799 00192$:
      0039A7 BD E8 02         [24]10800 	cjne	r5,#0xe8,00193$
      0039AA 80 03            [24]10801 	sjmp	00194$
      0039AC                      10802 00193$:
      0039AC 02r3BrBF         [24]10803 	ljmp	00119$
      0039AF                      10804 00194$:
      0039AF                      10805 00118$:
                                  10806 ;	ff15\source\ff.c:3308: if (sign == 0xAA55 && !memcmp(fs->win + BS_FilSysType32, "FAT32   ", 8)) {
      0039AF 8E 04            [24]10807 	mov	ar4,r6
      0039B1 8F 05            [24]10808 	mov	ar5,r7
      0039B3 BC 55 49         [24]10809 	cjne	r4,#0x55,00104$
      0039B6 BD AA 46         [24]10810 	cjne	r5,#0xaa,00104$
      0039B9 90r00rD2         [24]10811 	mov	dptr,#_check_fs_fs_65536_213
      0039BC E0               [24]10812 	movx	a,@dptr
      0039BD FB               [12]10813 	mov	r3,a
      0039BE A3               [24]10814 	inc	dptr
      0039BF E0               [24]10815 	movx	a,@dptr
      0039C0 FC               [12]10816 	mov	r4,a
      0039C1 A3               [24]10817 	inc	dptr
      0039C2 E0               [24]10818 	movx	a,@dptr
      0039C3 FD               [12]10819 	mov	r5,a
      0039C4 74 82            [12]10820 	mov	a,#0x82
      0039C6 2B               [12]10821 	add	a,r3
      0039C7 FB               [12]10822 	mov	r3,a
      0039C8 E4               [12]10823 	clr	a
      0039C9 3C               [12]10824 	addc	a,r4
      0039CA FC               [12]10825 	mov	r4,a
      0039CB 90r00r00         [24]10826 	mov	dptr,#_memcmp_PARM_2
      0039CE 74r19            [12]10827 	mov	a,#___str_1
      0039D0 F0               [24]10828 	movx	@dptr,a
      0039D1 74s00            [12]10829 	mov	a,#(___str_1 >> 8)
      0039D3 A3               [24]10830 	inc	dptr
      0039D4 F0               [24]10831 	movx	@dptr,a
      0039D5 74 80            [12]10832 	mov	a,#0x80
      0039D7 A3               [24]10833 	inc	dptr
      0039D8 F0               [24]10834 	movx	@dptr,a
      0039D9 90r00r00         [24]10835 	mov	dptr,#_memcmp_PARM_3
      0039DC C4               [12]10836 	swap	a
      0039DD F0               [24]10837 	movx	@dptr,a
      0039DE E4               [12]10838 	clr	a
      0039DF A3               [24]10839 	inc	dptr
      0039E0 F0               [24]10840 	movx	@dptr,a
      0039E1 8B 82            [24]10841 	mov	dpl,r3
      0039E3 8C 83            [24]10842 	mov	dph,r4
      0039E5 8D F0            [24]10843 	mov	b,r5
      0039E7 C0 07            [24]10844 	push	ar7
      0039E9 C0 06            [24]10845 	push	ar6
      0039EB 12r00r00         [24]10846 	lcall	_memcmp
      0039EE E5 82            [12]10847 	mov	a,dpl
      0039F0 85 83 F0         [24]10848 	mov	b,dph
      0039F3 D0 06            [24]10849 	pop	ar6
      0039F5 D0 07            [24]10850 	pop	ar7
      0039F7 45 F0            [12]10851 	orl	a,b
      0039F9 70 04            [24]10852 	jnz	00104$
                                  10853 ;	ff15\source\ff.c:3309: return 0;	/* It is an FAT32 VBR */
      0039FB 90 00 00         [24]10854 	mov	dptr,#0x0000
      0039FE 22               [24]10855 	ret
      0039FF                      10856 00104$:
                                  10857 ;	ff15\source\ff.c:3312: w = ld_word(fs->win + BPB_BytsPerSec);
      0039FF C0 06            [24]10858 	push	ar6
      003A01 C0 07            [24]10859 	push	ar7
      003A03 90r00rD2         [24]10860 	mov	dptr,#_check_fs_fs_65536_213
      003A06 E0               [24]10861 	movx	a,@dptr
      003A07 FB               [12]10862 	mov	r3,a
      003A08 A3               [24]10863 	inc	dptr
      003A09 E0               [24]10864 	movx	a,@dptr
      003A0A FC               [12]10865 	mov	r4,a
      003A0B A3               [24]10866 	inc	dptr
      003A0C E0               [24]10867 	movx	a,@dptr
      003A0D FD               [12]10868 	mov	r5,a
      003A0E 74 3B            [12]10869 	mov	a,#0x3b
      003A10 2B               [12]10870 	add	a,r3
      003A11 F8               [12]10871 	mov	r0,a
      003A12 E4               [12]10872 	clr	a
      003A13 3C               [12]10873 	addc	a,r4
      003A14 F9               [12]10874 	mov	r1,a
      003A15 8D 02            [24]10875 	mov	ar2,r5
      003A17 88 82            [24]10876 	mov	dpl,r0
      003A19 89 83            [24]10877 	mov	dph,r1
      003A1B 8A F0            [24]10878 	mov	b,r2
      003A1D C0 07            [24]10879 	push	ar7
      003A1F C0 06            [24]10880 	push	ar6
      003A21 C0 05            [24]10881 	push	ar5
      003A23 C0 04            [24]10882 	push	ar4
      003A25 C0 03            [24]10883 	push	ar3
      003A27 12r00r00         [24]10884 	lcall	_ld_word
      003A2A A9 82            [24]10885 	mov	r1,dpl
      003A2C AA 83            [24]10886 	mov	r2,dph
      003A2E D0 03            [24]10887 	pop	ar3
      003A30 D0 04            [24]10888 	pop	ar4
      003A32 D0 05            [24]10889 	pop	ar5
      003A34 D0 06            [24]10890 	pop	ar6
      003A36 D0 07            [24]10891 	pop	ar7
                                  10892 ;	ff15\source\ff.c:3313: b = fs->win[BPB_SecPerClus];
      003A38 74 3D            [12]10893 	mov	a,#0x3d
      003A3A 2B               [12]10894 	add	a,r3
      003A3B F8               [12]10895 	mov	r0,a
      003A3C E4               [12]10896 	clr	a
      003A3D 3C               [12]10897 	addc	a,r4
      003A3E FE               [12]10898 	mov	r6,a
      003A3F 8D 07            [24]10899 	mov	ar7,r5
      003A41 88 82            [24]10900 	mov	dpl,r0
      003A43 8E 83            [24]10901 	mov	dph,r6
      003A45 8F F0            [24]10902 	mov	b,r7
      003A47 12r00r00         [24]10903 	lcall	__gptrget
      003A4A F5*DF            [12]10904 	mov	_check_fs_sloc0_1_0,a
                                  10905 ;	ff15\source\ff.c:3314: if ((w & (w - 1)) == 0 && w >= FF_MIN_SS && w <= FF_MAX_SS	/* Properness of sector size (512-4096 and 2^n) */
      003A4C 89*E0            [24]10906 	mov	_check_fs_sloc1_1_0,r1
      003A4E 8A*E1            [24]10907 	mov	(_check_fs_sloc1_1_0 + 1),r2
      003A50 E5*E0            [12]10908 	mov	a,_check_fs_sloc1_1_0
      003A52 24 FF            [12]10909 	add	a,#0xff
      003A54 FE               [12]10910 	mov	r6,a
      003A55 E5*E1            [12]10911 	mov	a,(_check_fs_sloc1_1_0 + 1)
      003A57 34 FF            [12]10912 	addc	a,#0xff
      003A59 FF               [12]10913 	mov	r7,a
      003A5A E5*E0            [12]10914 	mov	a,_check_fs_sloc1_1_0
      003A5C 52 06            [12]10915 	anl	ar6,a
      003A5E E5*E1            [12]10916 	mov	a,(_check_fs_sloc1_1_0 + 1)
      003A60 52 07            [12]10917 	anl	ar7,a
      003A62 EE               [12]10918 	mov	a,r6
      003A63 4F               [12]10919 	orl	a,r7
      003A64 D0 07            [24]10920 	pop	ar7
      003A66 D0 06            [24]10921 	pop	ar6
      003A68 60 03            [24]10922 	jz	00198$
      003A6A 02r3BrBF         [24]10923 	ljmp	00119$
      003A6D                      10924 00198$:
      003A6D 74 FE            [12]10925 	mov	a,#0x100 - 0x02
      003A6F 25*E1            [12]10926 	add	a,(_check_fs_sloc1_1_0 + 1)
      003A71 40 03            [24]10927 	jc	00199$
      003A73 02r3BrBF         [24]10928 	ljmp	00119$
      003A76                      10929 00199$:
                                  10930 ;	ff15\source\ff.c:3315: && b != 0 && (b & (b - 1)) == 0				/* Properness of cluster size (2^n) */
      003A76 C3               [12]10931 	clr	c
      003A77 E4               [12]10932 	clr	a
      003A78 95*E0            [12]10933 	subb	a,_check_fs_sloc1_1_0
      003A7A 74 02            [12]10934 	mov	a,#0x02
      003A7C 95*E1            [12]10935 	subb	a,(_check_fs_sloc1_1_0 + 1)
      003A7E 50 03            [24]10936 	jnc	00200$
      003A80 02r3BrBF         [24]10937 	ljmp	00119$
      003A83                      10938 00200$:
      003A83 E5*DF            [12]10939 	mov	a,_check_fs_sloc0_1_0
      003A85 70 03            [24]10940 	jnz	00201$
      003A87 02r3BrBF         [24]10941 	ljmp	00119$
      003A8A                      10942 00201$:
      003A8A C0 06            [24]10943 	push	ar6
      003A8C C0 07            [24]10944 	push	ar7
      003A8E A9*DF            [24]10945 	mov	r1,_check_fs_sloc0_1_0
      003A90 7A 00            [12]10946 	mov	r2,#0x00
      003A92 E9               [12]10947 	mov	a,r1
      003A93 24 FF            [12]10948 	add	a,#0xff
      003A95 F8               [12]10949 	mov	r0,a
      003A96 EA               [12]10950 	mov	a,r2
      003A97 34 FF            [12]10951 	addc	a,#0xff
      003A99 FF               [12]10952 	mov	r7,a
      003A9A E8               [12]10953 	mov	a,r0
      003A9B 52 01            [12]10954 	anl	ar1,a
      003A9D EF               [12]10955 	mov	a,r7
      003A9E 52 02            [12]10956 	anl	ar2,a
      003AA0 D0 07            [24]10957 	pop	ar7
      003AA2 D0 06            [24]10958 	pop	ar6
      003AA4 E9               [12]10959 	mov	a,r1
      003AA5 4A               [12]10960 	orl	a,r2
      003AA6 60 03            [24]10961 	jz	00202$
      003AA8 02r3BrBF         [24]10962 	ljmp	00119$
      003AAB                      10963 00202$:
                                  10964 ;	ff15\source\ff.c:3316: && ld_word(fs->win + BPB_RsvdSecCnt) != 0	/* Properness of reserved sectors (MNBZ) */
      003AAB 74 3E            [12]10965 	mov	a,#0x3e
      003AAD 2B               [12]10966 	add	a,r3
      003AAE F8               [12]10967 	mov	r0,a
      003AAF E4               [12]10968 	clr	a
      003AB0 3C               [12]10969 	addc	a,r4
      003AB1 F9               [12]10970 	mov	r1,a
      003AB2 8D 02            [24]10971 	mov	ar2,r5
      003AB4 88 82            [24]10972 	mov	dpl,r0
      003AB6 89 83            [24]10973 	mov	dph,r1
      003AB8 8A F0            [24]10974 	mov	b,r2
      003ABA C0 07            [24]10975 	push	ar7
      003ABC C0 06            [24]10976 	push	ar6
      003ABE C0 05            [24]10977 	push	ar5
      003AC0 C0 04            [24]10978 	push	ar4
      003AC2 C0 03            [24]10979 	push	ar3
      003AC4 12r00r00         [24]10980 	lcall	_ld_word
      003AC7 E5 82            [12]10981 	mov	a,dpl
      003AC9 85 83 F0         [24]10982 	mov	b,dph
      003ACC D0 03            [24]10983 	pop	ar3
      003ACE D0 04            [24]10984 	pop	ar4
      003AD0 D0 05            [24]10985 	pop	ar5
      003AD2 D0 06            [24]10986 	pop	ar6
      003AD4 D0 07            [24]10987 	pop	ar7
      003AD6 45 F0            [12]10988 	orl	a,b
      003AD8 70 03            [24]10989 	jnz	00203$
      003ADA 02r3BrBF         [24]10990 	ljmp	00119$
      003ADD                      10991 00203$:
                                  10992 ;	ff15\source\ff.c:3317: && (UINT)fs->win[BPB_NumFATs] - 1 <= 1		/* Properness of FATs (1 or 2) */
      003ADD 74 40            [12]10993 	mov	a,#0x40
      003ADF 2B               [12]10994 	add	a,r3
      003AE0 F8               [12]10995 	mov	r0,a
      003AE1 E4               [12]10996 	clr	a
      003AE2 3C               [12]10997 	addc	a,r4
      003AE3 F9               [12]10998 	mov	r1,a
      003AE4 8D 02            [24]10999 	mov	ar2,r5
      003AE6 88 82            [24]11000 	mov	dpl,r0
      003AE8 89 83            [24]11001 	mov	dph,r1
      003AEA 8A F0            [24]11002 	mov	b,r2
      003AEC 12r00r00         [24]11003 	lcall	__gptrget
      003AEF F8               [12]11004 	mov	r0,a
      003AF0 7A 00            [12]11005 	mov	r2,#0x00
      003AF2 18               [12]11006 	dec	r0
      003AF3 B8 FF 01         [24]11007 	cjne	r0,#0xff,00204$
      003AF6 1A               [12]11008 	dec	r2
      003AF7                      11009 00204$:
      003AF7 C3               [12]11010 	clr	c
      003AF8 74 01            [12]11011 	mov	a,#0x01
      003AFA 98               [12]11012 	subb	a,r0
      003AFB E4               [12]11013 	clr	a
      003AFC 9A               [12]11014 	subb	a,r2
      003AFD 50 03            [24]11015 	jnc	00205$
      003AFF 02r3BrBF         [24]11016 	ljmp	00119$
      003B02                      11017 00205$:
                                  11018 ;	ff15\source\ff.c:3318: && ld_word(fs->win + BPB_RootEntCnt) != 0	/* Properness of root dir entries (MNBZ) */
      003B02 74 41            [12]11019 	mov	a,#0x41
      003B04 2B               [12]11020 	add	a,r3
      003B05 F8               [12]11021 	mov	r0,a
      003B06 E4               [12]11022 	clr	a
      003B07 3C               [12]11023 	addc	a,r4
      003B08 F9               [12]11024 	mov	r1,a
      003B09 8D 02            [24]11025 	mov	ar2,r5
      003B0B 88 82            [24]11026 	mov	dpl,r0
      003B0D 89 83            [24]11027 	mov	dph,r1
      003B0F 8A F0            [24]11028 	mov	b,r2
      003B11 C0 07            [24]11029 	push	ar7
      003B13 C0 06            [24]11030 	push	ar6
      003B15 C0 05            [24]11031 	push	ar5
      003B17 C0 04            [24]11032 	push	ar4
      003B19 C0 03            [24]11033 	push	ar3
      003B1B 12r00r00         [24]11034 	lcall	_ld_word
      003B1E E5 82            [12]11035 	mov	a,dpl
      003B20 85 83 F0         [24]11036 	mov	b,dph
      003B23 D0 03            [24]11037 	pop	ar3
      003B25 D0 04            [24]11038 	pop	ar4
      003B27 D0 05            [24]11039 	pop	ar5
      003B29 D0 06            [24]11040 	pop	ar6
      003B2B D0 07            [24]11041 	pop	ar7
      003B2D 45 F0            [12]11042 	orl	a,b
      003B2F 70 03            [24]11043 	jnz	00206$
      003B31 02r3BrBF         [24]11044 	ljmp	00119$
      003B34                      11045 00206$:
                                  11046 ;	ff15\source\ff.c:3319: && (ld_word(fs->win + BPB_TotSec16) >= 128 || ld_dword(fs->win + BPB_TotSec32) >= 0x10000)	/* Properness of volume sectors (>=128) */
      003B34 74 43            [12]11047 	mov	a,#0x43
      003B36 2B               [12]11048 	add	a,r3
      003B37 F8               [12]11049 	mov	r0,a
      003B38 E4               [12]11050 	clr	a
      003B39 3C               [12]11051 	addc	a,r4
      003B3A F9               [12]11052 	mov	r1,a
      003B3B 8D 02            [24]11053 	mov	ar2,r5
      003B3D 88 82            [24]11054 	mov	dpl,r0
      003B3F 89 83            [24]11055 	mov	dph,r1
      003B41 8A F0            [24]11056 	mov	b,r2
      003B43 C0 07            [24]11057 	push	ar7
      003B45 C0 06            [24]11058 	push	ar6
      003B47 C0 05            [24]11059 	push	ar5
      003B49 C0 04            [24]11060 	push	ar4
      003B4B C0 03            [24]11061 	push	ar3
      003B4D 12r00r00         [24]11062 	lcall	_ld_word
      003B50 A9 82            [24]11063 	mov	r1,dpl
      003B52 AA 83            [24]11064 	mov	r2,dph
      003B54 D0 03            [24]11065 	pop	ar3
      003B56 D0 04            [24]11066 	pop	ar4
      003B58 D0 05            [24]11067 	pop	ar5
      003B5A D0 06            [24]11068 	pop	ar6
      003B5C D0 07            [24]11069 	pop	ar7
      003B5E C3               [12]11070 	clr	c
      003B5F E9               [12]11071 	mov	a,r1
      003B60 94 80            [12]11072 	subb	a,#0x80
      003B62 EA               [12]11073 	mov	a,r2
      003B63 94 00            [12]11074 	subb	a,#0x00
      003B65 50 28            [24]11075 	jnc	00117$
      003B67 74 50            [12]11076 	mov	a,#0x50
      003B69 2B               [12]11077 	add	a,r3
      003B6A FB               [12]11078 	mov	r3,a
      003B6B E4               [12]11079 	clr	a
      003B6C 3C               [12]11080 	addc	a,r4
      003B6D FC               [12]11081 	mov	r4,a
      003B6E 8B 82            [24]11082 	mov	dpl,r3
      003B70 8C 83            [24]11083 	mov	dph,r4
      003B72 8D F0            [24]11084 	mov	b,r5
      003B74 C0 07            [24]11085 	push	ar7
      003B76 C0 06            [24]11086 	push	ar6
      003B78 12r00r45         [24]11087 	lcall	_ld_dword
      003B7B AA 82            [24]11088 	mov	r2,dpl
      003B7D AB 83            [24]11089 	mov	r3,dph
      003B7F AC F0            [24]11090 	mov	r4,b
      003B81 FD               [12]11091 	mov	r5,a
      003B82 D0 06            [24]11092 	pop	ar6
      003B84 D0 07            [24]11093 	pop	ar7
      003B86 C3               [12]11094 	clr	c
      003B87 EC               [12]11095 	mov	a,r4
      003B88 94 01            [12]11096 	subb	a,#0x01
      003B8A ED               [12]11097 	mov	a,r5
      003B8B 94 00            [12]11098 	subb	a,#0x00
      003B8D 40 30            [24]11099 	jc	00119$
      003B8F                      11100 00117$:
                                  11101 ;	ff15\source\ff.c:3320: && ld_word(fs->win + BPB_FATSz16) != 0) {	/* Properness of FAT size (MNBZ) */
      003B8F 90r00rD2         [24]11102 	mov	dptr,#_check_fs_fs_65536_213
      003B92 E0               [24]11103 	movx	a,@dptr
      003B93 FB               [12]11104 	mov	r3,a
      003B94 A3               [24]11105 	inc	dptr
      003B95 E0               [24]11106 	movx	a,@dptr
      003B96 FC               [12]11107 	mov	r4,a
      003B97 A3               [24]11108 	inc	dptr
      003B98 E0               [24]11109 	movx	a,@dptr
      003B99 FD               [12]11110 	mov	r5,a
      003B9A 74 46            [12]11111 	mov	a,#0x46
      003B9C 2B               [12]11112 	add	a,r3
      003B9D FB               [12]11113 	mov	r3,a
      003B9E E4               [12]11114 	clr	a
      003B9F 3C               [12]11115 	addc	a,r4
      003BA0 FC               [12]11116 	mov	r4,a
      003BA1 8B 82            [24]11117 	mov	dpl,r3
      003BA3 8C 83            [24]11118 	mov	dph,r4
      003BA5 8D F0            [24]11119 	mov	b,r5
      003BA7 C0 07            [24]11120 	push	ar7
      003BA9 C0 06            [24]11121 	push	ar6
      003BAB 12r00r00         [24]11122 	lcall	_ld_word
      003BAE E5 82            [12]11123 	mov	a,dpl
      003BB0 85 83 F0         [24]11124 	mov	b,dph
      003BB3 D0 06            [24]11125 	pop	ar6
      003BB5 D0 07            [24]11126 	pop	ar7
      003BB7 45 F0            [12]11127 	orl	a,b
      003BB9 60 04            [24]11128 	jz	00119$
                                  11129 ;	ff15\source\ff.c:3321: return 0;	/* It can be presumed an FAT VBR */
      003BBB 90 00 00         [24]11130 	mov	dptr,#0x0000
      003BBE 22               [24]11131 	ret
      003BBF                      11132 00119$:
                                  11133 ;	ff15\source\ff.c:3324: return sign == 0xAA55 ? 2 : 3;	/* Not an FAT VBR (valid or invalid BS) */
      003BBF BE 55 09         [24]11134 	cjne	r6,#0x55,00124$
      003BC2 BF AA 06         [24]11135 	cjne	r7,#0xaa,00124$
      003BC5 7E 02            [12]11136 	mov	r6,#0x02
      003BC7 7F 00            [12]11137 	mov	r7,#0x00
      003BC9 80 04            [24]11138 	sjmp	00125$
      003BCB                      11139 00124$:
      003BCB 7E 03            [12]11140 	mov	r6,#0x03
      003BCD 7F 00            [12]11141 	mov	r7,#0x00
      003BCF                      11142 00125$:
      003BCF 8E 82            [24]11143 	mov	dpl,r6
      003BD1 8F 83            [24]11144 	mov	dph,r7
                                  11145 ;	ff15\source\ff.c:3325: }
      003BD3 22               [24]11146 	ret
                                  11147 ;------------------------------------------------------------
                                  11148 ;Allocation info for local variables in function 'find_volume'
                                  11149 ;------------------------------------------------------------
                                  11150 ;sloc0                     Allocated with name '_find_volume_sloc0_1_0'
                                  11151 ;sloc1                     Allocated with name '_find_volume_sloc1_1_0'
                                  11152 ;sloc2                     Allocated with name '_find_volume_sloc2_1_0'
                                  11153 ;part                      Allocated with name '_find_volume_PARM_2'
                                  11154 ;fs                        Allocated with name '_find_volume_fs_65536_218'
                                  11155 ;fmt                       Allocated with name '_find_volume_fmt_65536_219'
                                  11156 ;i                         Allocated with name '_find_volume_i_65536_219'
                                  11157 ;mbr_pt                    Allocated with name '_find_volume_mbr_pt_65536_219'
                                  11158 ;------------------------------------------------------------
                                  11159 ;	ff15\source\ff.c:3331: static UINT find_volume (	/* Returns BS status found in the hosting drive */
                                  11160 ;	-----------------------------------------
                                  11161 ;	 function find_volume
                                  11162 ;	-----------------------------------------
      003BD4                      11163 _find_volume:
      003BD4 AF F0            [24]11164 	mov	r7,b
      003BD6 AE 83            [24]11165 	mov	r6,dph
      003BD8 E5 82            [12]11166 	mov	a,dpl
      003BDA 90r00rD7         [24]11167 	mov	dptr,#_find_volume_fs_65536_218
      003BDD F0               [24]11168 	movx	@dptr,a
      003BDE EE               [12]11169 	mov	a,r6
      003BDF A3               [24]11170 	inc	dptr
      003BE0 F0               [24]11171 	movx	@dptr,a
      003BE1 EF               [12]11172 	mov	a,r7
      003BE2 A3               [24]11173 	inc	dptr
      003BE3 F0               [24]11174 	movx	@dptr,a
                                  11175 ;	ff15\source\ff.c:3340: fmt = check_fs(fs, 0);				/* Load sector 0 and check if it is an FAT VBR as SFD format */
      003BE4 90r00rD7         [24]11176 	mov	dptr,#_find_volume_fs_65536_218
      003BE7 E0               [24]11177 	movx	a,@dptr
      003BE8 FD               [12]11178 	mov	r5,a
      003BE9 A3               [24]11179 	inc	dptr
      003BEA E0               [24]11180 	movx	a,@dptr
      003BEB FE               [12]11181 	mov	r6,a
      003BEC A3               [24]11182 	inc	dptr
      003BED E0               [24]11183 	movx	a,@dptr
      003BEE FF               [12]11184 	mov	r7,a
      003BEF 90r00rCE         [24]11185 	mov	dptr,#_check_fs_PARM_2
      003BF2 E4               [12]11186 	clr	a
      003BF3 F0               [24]11187 	movx	@dptr,a
      003BF4 A3               [24]11188 	inc	dptr
      003BF5 F0               [24]11189 	movx	@dptr,a
      003BF6 A3               [24]11190 	inc	dptr
      003BF7 F0               [24]11191 	movx	@dptr,a
      003BF8 A3               [24]11192 	inc	dptr
      003BF9 F0               [24]11193 	movx	@dptr,a
      003BFA 8D 82            [24]11194 	mov	dpl,r5
      003BFC 8E 83            [24]11195 	mov	dph,r6
      003BFE 8F F0            [24]11196 	mov	b,r7
      003C00 12r38rE3         [24]11197 	lcall	_check_fs
      003C03 AE 82            [24]11198 	mov	r6,dpl
      003C05 AF 83            [24]11199 	mov	r7,dph
                                  11200 ;	ff15\source\ff.c:3341: if (fmt != 2 && (fmt >= 3 || part == 0)) return fmt;	/* Returns if it is an FAT VBR as auto scan, not a BS or disk error */
      003C07 BE 02 05         [24]11201 	cjne	r6,#0x02,00160$
      003C0A BF 00 02         [24]11202 	cjne	r7,#0x00,00160$
      003C0D 80 1A            [24]11203 	sjmp	00124$
      003C0F                      11204 00160$:
      003C0F C3               [12]11205 	clr	c
      003C10 EE               [12]11206 	mov	a,r6
      003C11 94 03            [12]11207 	subb	a,#0x03
      003C13 EF               [12]11208 	mov	a,r7
      003C14 94 00            [12]11209 	subb	a,#0x00
      003C16 50 0C            [24]11210 	jnc	00101$
      003C18 90r00rD5         [24]11211 	mov	dptr,#_find_volume_PARM_2
      003C1B E0               [24]11212 	movx	a,@dptr
      003C1C F5 F0            [12]11213 	mov	b,a
      003C1E A3               [24]11214 	inc	dptr
      003C1F E0               [24]11215 	movx	a,@dptr
      003C20 45 F0            [12]11216 	orl	a,b
      003C22 70 05            [24]11217 	jnz	00124$
      003C24                      11218 00101$:
      003C24 8E 82            [24]11219 	mov	dpl,r6
      003C26 8F 83            [24]11220 	mov	dph,r7
      003C28 22               [24]11221 	ret
                                  11222 ;	ff15\source\ff.c:3368: for (i = 0; i < 4; i++) {		/* Load partition offset in the MBR */
      003C29                      11223 00124$:
      003C29 90r00rD7         [24]11224 	mov	dptr,#_find_volume_fs_65536_218
      003C2C E0               [24]11225 	movx	a,@dptr
      003C2D FD               [12]11226 	mov	r5,a
      003C2E A3               [24]11227 	inc	dptr
      003C2F E0               [24]11228 	movx	a,@dptr
      003C30 FE               [12]11229 	mov	r6,a
      003C31 A3               [24]11230 	inc	dptr
      003C32 E0               [24]11231 	movx	a,@dptr
      003C33 FF               [12]11232 	mov	r7,a
      003C34 74 30            [12]11233 	mov	a,#0x30
      003C36 2D               [12]11234 	add	a,r5
      003C37 F5*E4            [12]11235 	mov	_find_volume_sloc1_1_0,a
      003C39 E4               [12]11236 	clr	a
      003C3A 3E               [12]11237 	addc	a,r6
      003C3B F5*E5            [12]11238 	mov	(_find_volume_sloc1_1_0 + 1),a
      003C3D 8F*E6            [24]11239 	mov	(_find_volume_sloc1_1_0 + 2),r7
      003C3F 7B 00            [12]11240 	mov	r3,#0x00
      003C41 7C 00            [12]11241 	mov	r4,#0x00
      003C43                      11242 00114$:
                                  11243 ;	ff15\source\ff.c:3369: mbr_pt[i] = ld_dword(fs->win + MBR_Table + i * SZ_PTE + PTE_StLba);
      003C43 EB               [12]11244 	mov	a,r3
      003C44 2B               [12]11245 	add	a,r3
      003C45 F9               [12]11246 	mov	r1,a
      003C46 EC               [12]11247 	mov	a,r4
      003C47 33               [12]11248 	rlc	a
      003C48 FA               [12]11249 	mov	r2,a
      003C49 E9               [12]11250 	mov	a,r1
      003C4A 29               [12]11251 	add	a,r1
      003C4B F9               [12]11252 	mov	r1,a
      003C4C EA               [12]11253 	mov	a,r2
      003C4D 33               [12]11254 	rlc	a
      003C4E FA               [12]11255 	mov	r2,a
      003C4F E9               [12]11256 	mov	a,r1
      003C50 24rDA            [12]11257 	add	a,#_find_volume_mbr_pt_65536_219
      003C52 F5*E2            [12]11258 	mov	_find_volume_sloc0_1_0,a
      003C54 EA               [12]11259 	mov	a,r2
      003C55 34s00            [12]11260 	addc	a,#(_find_volume_mbr_pt_65536_219 >> 8)
      003C57 F5*E3            [12]11261 	mov	(_find_volume_sloc0_1_0 + 1),a
      003C59 8B 00            [24]11262 	mov	ar0,r3
      003C5B EC               [12]11263 	mov	a,r4
      003C5C C4               [12]11264 	swap	a
      003C5D 54 F0            [12]11265 	anl	a,#0xf0
      003C5F C8               [12]11266 	xch	a,r0
      003C60 C4               [12]11267 	swap	a
      003C61 C8               [12]11268 	xch	a,r0
      003C62 68               [12]11269 	xrl	a,r0
      003C63 C8               [12]11270 	xch	a,r0
      003C64 54 F0            [12]11271 	anl	a,#0xf0
      003C66 C8               [12]11272 	xch	a,r0
      003C67 68               [12]11273 	xrl	a,r0
      003C68 FA               [12]11274 	mov	r2,a
      003C69 74 C6            [12]11275 	mov	a,#0xc6
      003C6B 28               [12]11276 	add	a,r0
      003C6C F8               [12]11277 	mov	r0,a
      003C6D 74 01            [12]11278 	mov	a,#0x01
      003C6F 3A               [12]11279 	addc	a,r2
      003C70 FA               [12]11280 	mov	r2,a
      003C71 E8               [12]11281 	mov	a,r0
      003C72 25*E4            [12]11282 	add	a,_find_volume_sloc1_1_0
      003C74 F8               [12]11283 	mov	r0,a
      003C75 EA               [12]11284 	mov	a,r2
      003C76 35*E5            [12]11285 	addc	a,(_find_volume_sloc1_1_0 + 1)
      003C78 F9               [12]11286 	mov	r1,a
      003C79 AA*E6            [24]11287 	mov	r2,(_find_volume_sloc1_1_0 + 2)
      003C7B 88 82            [24]11288 	mov	dpl,r0
      003C7D 89 83            [24]11289 	mov	dph,r1
      003C7F 8A F0            [24]11290 	mov	b,r2
      003C81 C0 04            [24]11291 	push	ar4
      003C83 C0 03            [24]11292 	push	ar3
      003C85 12r00r45         [24]11293 	lcall	_ld_dword
      003C88 A9 82            [24]11294 	mov	r1,dpl
      003C8A A8 83            [24]11295 	mov	r0,dph
      003C8C AA F0            [24]11296 	mov	r2,b
      003C8E FF               [12]11297 	mov	r7,a
      003C8F D0 03            [24]11298 	pop	ar3
      003C91 D0 04            [24]11299 	pop	ar4
      003C93 85*E2 82         [24]11300 	mov	dpl,_find_volume_sloc0_1_0
      003C96 85*E3 83         [24]11301 	mov	dph,(_find_volume_sloc0_1_0 + 1)
      003C99 E9               [12]11302 	mov	a,r1
      003C9A F0               [24]11303 	movx	@dptr,a
      003C9B E8               [12]11304 	mov	a,r0
      003C9C A3               [24]11305 	inc	dptr
      003C9D F0               [24]11306 	movx	@dptr,a
      003C9E EA               [12]11307 	mov	a,r2
      003C9F A3               [24]11308 	inc	dptr
      003CA0 F0               [24]11309 	movx	@dptr,a
      003CA1 EF               [12]11310 	mov	a,r7
      003CA2 A3               [24]11311 	inc	dptr
      003CA3 F0               [24]11312 	movx	@dptr,a
                                  11313 ;	ff15\source\ff.c:3368: for (i = 0; i < 4; i++) {		/* Load partition offset in the MBR */
      003CA4 0B               [12]11314 	inc	r3
      003CA5 BB 00 01         [24]11315 	cjne	r3,#0x00,00163$
      003CA8 0C               [12]11316 	inc	r4
      003CA9                      11317 00163$:
      003CA9 C3               [12]11318 	clr	c
      003CAA EB               [12]11319 	mov	a,r3
      003CAB 94 04            [12]11320 	subb	a,#0x04
      003CAD EC               [12]11321 	mov	a,r4
      003CAE 94 00            [12]11322 	subb	a,#0x00
      003CB0 40 91            [24]11323 	jc	00114$
                                  11324 ;	ff15\source\ff.c:3371: i = part ? part - 1 : 0;		/* Table index to find first */
      003CB2 90r00rD5         [24]11325 	mov	dptr,#_find_volume_PARM_2
      003CB5 E0               [24]11326 	movx	a,@dptr
      003CB6 FE               [12]11327 	mov	r6,a
      003CB7 A3               [24]11328 	inc	dptr
      003CB8 E0               [24]11329 	movx	a,@dptr
      003CB9 FF               [12]11330 	mov	r7,a
      003CBA 4E               [12]11331 	orl	a,r6
      003CBB 60 0A            [24]11332 	jz	00118$
      003CBD EE               [12]11333 	mov	a,r6
      003CBE 24 FF            [12]11334 	add	a,#0xff
      003CC0 FC               [12]11335 	mov	r4,a
      003CC1 EF               [12]11336 	mov	a,r7
      003CC2 34 FF            [12]11337 	addc	a,#0xff
      003CC4 FD               [12]11338 	mov	r5,a
      003CC5 80 04            [24]11339 	sjmp	00130$
      003CC7                      11340 00118$:
      003CC7 7C 00            [12]11341 	mov	r4,#0x00
      003CC9 7D 00            [12]11342 	mov	r5,#0x00
                                  11343 ;	ff15\source\ff.c:3372: do {							/* Find an FAT volume */
      003CCB                      11344 00130$:
      003CCB                      11345 00111$:
                                  11346 ;	ff15\source\ff.c:3373: fmt = mbr_pt[i] ? check_fs(fs, mbr_pt[i]) : 3;	/* Check if the partition is FAT */
      003CCB EC               [12]11347 	mov	a,r4
      003CCC 2C               [12]11348 	add	a,r4
      003CCD FA               [12]11349 	mov	r2,a
      003CCE ED               [12]11350 	mov	a,r5
      003CCF 33               [12]11351 	rlc	a
      003CD0 FB               [12]11352 	mov	r3,a
      003CD1 EA               [12]11353 	mov	a,r2
      003CD2 2A               [12]11354 	add	a,r2
      003CD3 FA               [12]11355 	mov	r2,a
      003CD4 EB               [12]11356 	mov	a,r3
      003CD5 33               [12]11357 	rlc	a
      003CD6 FB               [12]11358 	mov	r3,a
      003CD7 EA               [12]11359 	mov	a,r2
      003CD8 24rDA            [12]11360 	add	a,#_find_volume_mbr_pt_65536_219
      003CDA F5 82            [12]11361 	mov	dpl,a
      003CDC EB               [12]11362 	mov	a,r3
      003CDD 34s00            [12]11363 	addc	a,#(_find_volume_mbr_pt_65536_219 >> 8)
      003CDF F5 83            [12]11364 	mov	dph,a
      003CE1 E0               [24]11365 	movx	a,@dptr
      003CE2 F5*E7            [12]11366 	mov	_find_volume_sloc2_1_0,a
      003CE4 A3               [24]11367 	inc	dptr
      003CE5 E0               [24]11368 	movx	a,@dptr
      003CE6 F5*E8            [12]11369 	mov	(_find_volume_sloc2_1_0 + 1),a
      003CE8 A3               [24]11370 	inc	dptr
      003CE9 E0               [24]11371 	movx	a,@dptr
      003CEA F5*E9            [12]11372 	mov	(_find_volume_sloc2_1_0 + 2),a
      003CEC A3               [24]11373 	inc	dptr
      003CED E0               [24]11374 	movx	a,@dptr
      003CEE F5*EA            [12]11375 	mov	(_find_volume_sloc2_1_0 + 3),a
      003CF0 E5*E7            [12]11376 	mov	a,_find_volume_sloc2_1_0
      003CF2 45*E8            [12]11377 	orl	a,(_find_volume_sloc2_1_0 + 1)
      003CF4 45*E9            [12]11378 	orl	a,(_find_volume_sloc2_1_0 + 2)
      003CF6 45*EA            [12]11379 	orl	a,(_find_volume_sloc2_1_0 + 3)
      003CF8 60 46            [24]11380 	jz	00120$
      003CFA C0 06            [24]11381 	push	ar6
      003CFC C0 07            [24]11382 	push	ar7
      003CFE 90r00rD7         [24]11383 	mov	dptr,#_find_volume_fs_65536_218
      003D01 E0               [24]11384 	movx	a,@dptr
      003D02 FB               [12]11385 	mov	r3,a
      003D03 A3               [24]11386 	inc	dptr
      003D04 E0               [24]11387 	movx	a,@dptr
      003D05 FE               [12]11388 	mov	r6,a
      003D06 A3               [24]11389 	inc	dptr
      003D07 E0               [24]11390 	movx	a,@dptr
      003D08 FF               [12]11391 	mov	r7,a
      003D09 90r00rCE         [24]11392 	mov	dptr,#_check_fs_PARM_2
      003D0C E5*E7            [12]11393 	mov	a,_find_volume_sloc2_1_0
      003D0E F0               [24]11394 	movx	@dptr,a
      003D0F E5*E8            [12]11395 	mov	a,(_find_volume_sloc2_1_0 + 1)
      003D11 A3               [24]11396 	inc	dptr
      003D12 F0               [24]11397 	movx	@dptr,a
      003D13 E5*E9            [12]11398 	mov	a,(_find_volume_sloc2_1_0 + 2)
      003D15 A3               [24]11399 	inc	dptr
      003D16 F0               [24]11400 	movx	@dptr,a
      003D17 E5*EA            [12]11401 	mov	a,(_find_volume_sloc2_1_0 + 3)
      003D19 A3               [24]11402 	inc	dptr
      003D1A F0               [24]11403 	movx	@dptr,a
      003D1B 8B 82            [24]11404 	mov	dpl,r3
      003D1D 8E 83            [24]11405 	mov	dph,r6
      003D1F 8F F0            [24]11406 	mov	b,r7
      003D21 C0 07            [24]11407 	push	ar7
      003D23 C0 06            [24]11408 	push	ar6
      003D25 C0 05            [24]11409 	push	ar5
      003D27 C0 04            [24]11410 	push	ar4
      003D29 12r38rE3         [24]11411 	lcall	_check_fs
      003D2C 85 82*E7         [24]11412 	mov	_find_volume_sloc2_1_0,dpl
      003D2F 85 83*E8         [24]11413 	mov	(_find_volume_sloc2_1_0 + 1),dph
      003D32 D0 04            [24]11414 	pop	ar4
      003D34 D0 05            [24]11415 	pop	ar5
      003D36 D0 06            [24]11416 	pop	ar6
      003D38 D0 07            [24]11417 	pop	ar7
      003D3A D0 07            [24]11418 	pop	ar7
      003D3C D0 06            [24]11419 	pop	ar6
      003D3E 80 06            [24]11420 	sjmp	00121$
      003D40                      11421 00120$:
      003D40 75*E7 03         [24]11422 	mov	_find_volume_sloc2_1_0,#0x03
      003D43 75*E8 00         [24]11423 	mov	(_find_volume_sloc2_1_0 + 1),#0x00
      003D46                      11424 00121$:
                                  11425 ;	ff15\source\ff.c:3374: } while (part == 0 && fmt >= 2 && ++i < 4);
      003D46 EE               [12]11426 	mov	a,r6
      003D47 4F               [12]11427 	orl	a,r7
      003D48 70 1C            [24]11428 	jnz	00113$
      003D4A C3               [12]11429 	clr	c
      003D4B E5*E7            [12]11430 	mov	a,_find_volume_sloc2_1_0
      003D4D 94 02            [12]11431 	subb	a,#0x02
      003D4F E5*E8            [12]11432 	mov	a,(_find_volume_sloc2_1_0 + 1)
      003D51 94 00            [12]11433 	subb	a,#0x00
      003D53 40 11            [24]11434 	jc	00113$
      003D55 0C               [12]11435 	inc	r4
      003D56 BC 00 01         [24]11436 	cjne	r4,#0x00,00169$
      003D59 0D               [12]11437 	inc	r5
      003D5A                      11438 00169$:
      003D5A C3               [12]11439 	clr	c
      003D5B EC               [12]11440 	mov	a,r4
      003D5C 94 04            [12]11441 	subb	a,#0x04
      003D5E ED               [12]11442 	mov	a,r5
      003D5F 94 00            [12]11443 	subb	a,#0x00
      003D61 50 03            [24]11444 	jnc	00170$
      003D63 02r3CrCB         [24]11445 	ljmp	00111$
      003D66                      11446 00170$:
      003D66                      11447 00113$:
                                  11448 ;	ff15\source\ff.c:3375: return fmt;
      003D66 85*E7 82         [24]11449 	mov	dpl,_find_volume_sloc2_1_0
      003D69 85*E8 83         [24]11450 	mov	dph,(_find_volume_sloc2_1_0 + 1)
                                  11451 ;	ff15\source\ff.c:3376: }
      003D6C 22               [24]11452 	ret
                                  11453 ;------------------------------------------------------------
                                  11454 ;Allocation info for local variables in function 'mount_volume'
                                  11455 ;------------------------------------------------------------
                                  11456 ;sloc0                     Allocated with name '_mount_volume_sloc0_1_0'
                                  11457 ;sloc1                     Allocated with name '_mount_volume_sloc1_1_0'
                                  11458 ;sloc2                     Allocated with name '_mount_volume_sloc2_1_0'
                                  11459 ;sloc3                     Allocated with name '_mount_volume_sloc3_1_0'
                                  11460 ;sloc4                     Allocated with name '_mount_volume_sloc4_1_0'
                                  11461 ;sloc5                     Allocated with name '_mount_volume_sloc5_1_0'
                                  11462 ;sloc6                     Allocated with name '_mount_volume_sloc6_1_0'
                                  11463 ;sloc7                     Allocated with name '_mount_volume_sloc7_1_0'
                                  11464 ;rfs                       Allocated with name '_mount_volume_PARM_2'
                                  11465 ;mode                      Allocated with name '_mount_volume_PARM_3'
                                  11466 ;path                      Allocated with name '_mount_volume_path_65536_223'
                                  11467 ;vol                       Allocated with name '_mount_volume_vol_65536_224'
                                  11468 ;fs                        Allocated with name '_mount_volume_fs_65536_224'
                                  11469 ;stat                      Allocated with name '_mount_volume_stat_65536_224'
                                  11470 ;bsect                     Allocated with name '_mount_volume_bsect_65536_224'
                                  11471 ;tsect                     Allocated with name '_mount_volume_tsect_65536_224'
                                  11472 ;sysect                    Allocated with name '_mount_volume_sysect_65536_224'
                                  11473 ;fasize                    Allocated with name '_mount_volume_fasize_65536_224'
                                  11474 ;nclst                     Allocated with name '_mount_volume_nclst_65536_224'
                                  11475 ;szbfat                    Allocated with name '_mount_volume_szbfat_65536_224'
                                  11476 ;nrsv                      Allocated with name '_mount_volume_nrsv_65536_224'
                                  11477 ;fmt                       Allocated with name '_mount_volume_fmt_65536_224'
                                  11478 ;------------------------------------------------------------
                                  11479 ;	ff15\source\ff.c:3385: static FRESULT mount_volume (	/* FR_OK(0): successful, !=0: an error occurred */
                                  11480 ;	-----------------------------------------
                                  11481 ;	 function mount_volume
                                  11482 ;	-----------------------------------------
      003D6D                      11483 _mount_volume:
      003D6D AF F0            [24]11484 	mov	r7,b
      003D6F AE 83            [24]11485 	mov	r6,dph
      003D71 E5 82            [12]11486 	mov	a,dpl
      003D73 90r00rEE         [24]11487 	mov	dptr,#_mount_volume_path_65536_223
      003D76 F0               [24]11488 	movx	@dptr,a
      003D77 EE               [12]11489 	mov	a,r6
      003D78 A3               [24]11490 	inc	dptr
      003D79 F0               [24]11491 	movx	@dptr,a
      003D7A EF               [12]11492 	mov	a,r7
      003D7B A3               [24]11493 	inc	dptr
      003D7C F0               [24]11494 	movx	@dptr,a
                                  11495 ;	ff15\source\ff.c:3401: *rfs = 0;
      003D7D 90r00rEA         [24]11496 	mov	dptr,#_mount_volume_PARM_2
      003D80 E0               [24]11497 	movx	a,@dptr
      003D81 FD               [12]11498 	mov	r5,a
      003D82 A3               [24]11499 	inc	dptr
      003D83 E0               [24]11500 	movx	a,@dptr
      003D84 FE               [12]11501 	mov	r6,a
      003D85 A3               [24]11502 	inc	dptr
      003D86 E0               [24]11503 	movx	a,@dptr
      003D87 FF               [12]11504 	mov	r7,a
      003D88 8D 82            [24]11505 	mov	dpl,r5
      003D8A 8E 83            [24]11506 	mov	dph,r6
      003D8C 8F F0            [24]11507 	mov	b,r7
      003D8E E4               [12]11508 	clr	a
      003D8F 12r00r00         [24]11509 	lcall	__gptrput
      003D92 A3               [24]11510 	inc	dptr
      003D93 12r00r00         [24]11511 	lcall	__gptrput
      003D96 A3               [24]11512 	inc	dptr
      003D97 12r00r00         [24]11513 	lcall	__gptrput
                                  11514 ;	ff15\source\ff.c:3402: vol = get_ldnumber(path);
      003D9A 90r00rEE         [24]11515 	mov	dptr,#_mount_volume_path_65536_223
      003D9D E0               [24]11516 	movx	a,@dptr
      003D9E FA               [12]11517 	mov	r2,a
      003D9F A3               [24]11518 	inc	dptr
      003DA0 E0               [24]11519 	movx	a,@dptr
      003DA1 FB               [12]11520 	mov	r3,a
      003DA2 A3               [24]11521 	inc	dptr
      003DA3 E0               [24]11522 	movx	a,@dptr
      003DA4 FC               [12]11523 	mov	r4,a
      003DA5 8A 82            [24]11524 	mov	dpl,r2
      003DA7 8B 83            [24]11525 	mov	dph,r3
      003DA9 8C F0            [24]11526 	mov	b,r4
      003DAB C0 07            [24]11527 	push	ar7
      003DAD C0 06            [24]11528 	push	ar6
      003DAF C0 05            [24]11529 	push	ar5
      003DB1 12r37rD1         [24]11530 	lcall	_get_ldnumber
      003DB4 AB 82            [24]11531 	mov	r3,dpl
      003DB6 AC 83            [24]11532 	mov	r4,dph
      003DB8 D0 05            [24]11533 	pop	ar5
      003DBA D0 06            [24]11534 	pop	ar6
      003DBC D0 07            [24]11535 	pop	ar7
                                  11536 ;	ff15\source\ff.c:3403: if (vol < 0) return FR_INVALID_DRIVE;
      003DBE EC               [12]11537 	mov	a,r4
      003DBF 30 E7 04         [24]11538 	jnb	acc.7,00102$
      003DC2 75 82 0B         [24]11539 	mov	dpl,#0x0b
      003DC5 22               [24]11540 	ret
      003DC6                      11541 00102$:
                                  11542 ;	ff15\source\ff.c:3406: fs = FatFs[vol];					/* Get pointer to the filesystem object */
      003DC6 90r00r00         [24]11543 	mov	dptr,#__mulint_PARM_2
      003DC9 EB               [12]11544 	mov	a,r3
      003DCA F0               [24]11545 	movx	@dptr,a
      003DCB EC               [12]11546 	mov	a,r4
      003DCC A3               [24]11547 	inc	dptr
      003DCD F0               [24]11548 	movx	@dptr,a
      003DCE 90 00 03         [24]11549 	mov	dptr,#0x0003
      003DD1 C0 07            [24]11550 	push	ar7
      003DD3 C0 06            [24]11551 	push	ar6
      003DD5 C0 05            [24]11552 	push	ar5
      003DD7 12r00r00         [24]11553 	lcall	__mulint
      003DDA AB 82            [24]11554 	mov	r3,dpl
      003DDC AC 83            [24]11555 	mov	r4,dph
      003DDE D0 05            [24]11556 	pop	ar5
      003DE0 D0 06            [24]11557 	pop	ar6
      003DE2 D0 07            [24]11558 	pop	ar7
      003DE4 EB               [12]11559 	mov	a,r3
      003DE5 24r00            [12]11560 	add	a,#_FatFs
      003DE7 F5 82            [12]11561 	mov	dpl,a
      003DE9 EC               [12]11562 	mov	a,r4
      003DEA 34s00            [12]11563 	addc	a,#(_FatFs >> 8)
      003DEC F5 83            [12]11564 	mov	dph,a
      003DEE E0               [24]11565 	movx	a,@dptr
      003DEF FA               [12]11566 	mov	r2,a
      003DF0 A3               [24]11567 	inc	dptr
      003DF1 E0               [24]11568 	movx	a,@dptr
      003DF2 FB               [12]11569 	mov	r3,a
      003DF3 A3               [24]11570 	inc	dptr
      003DF4 E0               [24]11571 	movx	a,@dptr
      003DF5 FC               [12]11572 	mov	r4,a
                                  11573 ;	ff15\source\ff.c:3407: if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
      003DF6 EA               [12]11574 	mov	a,r2
      003DF7 4B               [12]11575 	orl	a,r3
      003DF8 70 04            [24]11576 	jnz	00104$
      003DFA 75 82 0C         [24]11577 	mov	dpl,#0x0c
      003DFD 22               [24]11578 	ret
      003DFE                      11579 00104$:
                                  11580 ;	ff15\source\ff.c:3411: *rfs = fs;							/* Return pointer to the filesystem object */
      003DFE 8D 82            [24]11581 	mov	dpl,r5
      003E00 8E 83            [24]11582 	mov	dph,r6
      003E02 8F F0            [24]11583 	mov	b,r7
      003E04 EA               [12]11584 	mov	a,r2
      003E05 12r00r00         [24]11585 	lcall	__gptrput
      003E08 A3               [24]11586 	inc	dptr
      003E09 EB               [12]11587 	mov	a,r3
      003E0A 12r00r00         [24]11588 	lcall	__gptrput
      003E0D A3               [24]11589 	inc	dptr
      003E0E EC               [12]11590 	mov	a,r4
      003E0F 12r00r00         [24]11591 	lcall	__gptrput
                                  11592 ;	ff15\source\ff.c:3413: mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
      003E12 90r00rED         [24]11593 	mov	dptr,#_mount_volume_PARM_3
      003E15 E0               [24]11594 	movx	a,@dptr
      003E16 53 E0 FE         [24]11595 	anl	acc,#0xfe
      003E19 F0               [24]11596 	movx	@dptr,a
                                  11597 ;	ff15\source\ff.c:3414: if (fs->fs_type != 0) {				/* If the volume has been mounted */
      003E1A 8A 82            [24]11598 	mov	dpl,r2
      003E1C 8B 83            [24]11599 	mov	dph,r3
      003E1E 8C F0            [24]11600 	mov	b,r4
      003E20 12r00r00         [24]11601 	lcall	__gptrget
      003E23 60 3B            [24]11602 	jz	00112$
                                  11603 ;	ff15\source\ff.c:3415: stat = disk_status(fs->pdrv);
      003E25 74 01            [12]11604 	mov	a,#0x01
      003E27 2A               [12]11605 	add	a,r2
      003E28 FD               [12]11606 	mov	r5,a
      003E29 E4               [12]11607 	clr	a
      003E2A 3B               [12]11608 	addc	a,r3
      003E2B FE               [12]11609 	mov	r6,a
      003E2C 8C 07            [24]11610 	mov	ar7,r4
      003E2E 8D 82            [24]11611 	mov	dpl,r5
      003E30 8E 83            [24]11612 	mov	dph,r6
      003E32 8F F0            [24]11613 	mov	b,r7
      003E34 12r00r00         [24]11614 	lcall	__gptrget
      003E37 F5 82            [12]11615 	mov	dpl,a
      003E39 C0 04            [24]11616 	push	ar4
      003E3B C0 03            [24]11617 	push	ar3
      003E3D C0 02            [24]11618 	push	ar2
      003E3F 12r00r00         [24]11619 	lcall	_disk_status
      003E42 AF 82            [24]11620 	mov	r7,dpl
      003E44 D0 02            [24]11621 	pop	ar2
      003E46 D0 03            [24]11622 	pop	ar3
      003E48 D0 04            [24]11623 	pop	ar4
                                  11624 ;	ff15\source\ff.c:3416: if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
      003E4A EF               [12]11625 	mov	a,r7
      003E4B 20 E0 12         [24]11626 	jb	acc.0,00112$
                                  11627 ;	ff15\source\ff.c:3417: if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
      003E4E 90r00rED         [24]11628 	mov	dptr,#_mount_volume_PARM_3
      003E51 E0               [24]11629 	movx	a,@dptr
      003E52 60 08            [24]11630 	jz	00106$
      003E54 EF               [12]11631 	mov	a,r7
      003E55 30 E2 04         [24]11632 	jnb	acc.2,00106$
                                  11633 ;	ff15\source\ff.c:3418: return FR_WRITE_PROTECTED;
      003E58 75 82 0A         [24]11634 	mov	dpl,#0x0a
      003E5B 22               [24]11635 	ret
      003E5C                      11636 00106$:
                                  11637 ;	ff15\source\ff.c:3420: return FR_OK;				/* The filesystem object is already valid */
      003E5C 75 82 00         [24]11638 	mov	dpl,#0x00
      003E5F 22               [24]11639 	ret
      003E60                      11640 00112$:
                                  11641 ;	ff15\source\ff.c:3427: fs->fs_type = 0;					/* Invalidate the filesystem object */
      003E60 8A 82            [24]11642 	mov	dpl,r2
      003E62 8B 83            [24]11643 	mov	dph,r3
      003E64 8C F0            [24]11644 	mov	b,r4
      003E66 E4               [12]11645 	clr	a
      003E67 12r00r00         [24]11646 	lcall	__gptrput
                                  11647 ;	ff15\source\ff.c:3428: stat = disk_initialize(fs->pdrv);	/* Initialize the volume hosting physical drive */
      003E6A 04               [12]11648 	inc	a
      003E6B 2A               [12]11649 	add	a,r2
      003E6C FD               [12]11650 	mov	r5,a
      003E6D E4               [12]11651 	clr	a
      003E6E 3B               [12]11652 	addc	a,r3
      003E6F FE               [12]11653 	mov	r6,a
      003E70 8C 07            [24]11654 	mov	ar7,r4
      003E72 8D 82            [24]11655 	mov	dpl,r5
      003E74 8E 83            [24]11656 	mov	dph,r6
      003E76 8F F0            [24]11657 	mov	b,r7
      003E78 12r00r00         [24]11658 	lcall	__gptrget
      003E7B F5 82            [12]11659 	mov	dpl,a
      003E7D C0 04            [24]11660 	push	ar4
      003E7F C0 03            [24]11661 	push	ar3
      003E81 C0 02            [24]11662 	push	ar2
      003E83 12r00r00         [24]11663 	lcall	_disk_initialize
      003E86 AF 82            [24]11664 	mov	r7,dpl
      003E88 D0 02            [24]11665 	pop	ar2
      003E8A D0 03            [24]11666 	pop	ar3
      003E8C D0 04            [24]11667 	pop	ar4
                                  11668 ;	ff15\source\ff.c:3429: if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
      003E8E EF               [12]11669 	mov	a,r7
      003E8F 30 E0 04         [24]11670 	jnb	acc.0,00117$
                                  11671 ;	ff15\source\ff.c:3430: return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
      003E92 75 82 03         [24]11672 	mov	dpl,#0x03
      003E95 22               [24]11673 	ret
                                  11674 ;	ff15\source\ff.c:3432: if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
      003E96                      11675 00117$:
      003E96 90r00rED         [24]11676 	mov	dptr,#_mount_volume_PARM_3
      003E99 E0               [24]11677 	movx	a,@dptr
      003E9A 60 08            [24]11678 	jz	00116$
      003E9C EF               [12]11679 	mov	a,r7
      003E9D 30 E2 04         [24]11680 	jnb	acc.2,00116$
                                  11681 ;	ff15\source\ff.c:3433: return FR_WRITE_PROTECTED;
      003EA0 75 82 0A         [24]11682 	mov	dpl,#0x0a
      003EA3 22               [24]11683 	ret
      003EA4                      11684 00116$:
                                  11685 ;	ff15\source\ff.c:3441: fmt = find_volume(fs, LD2PT(vol));
      003EA4 90r00rD5         [24]11686 	mov	dptr,#_find_volume_PARM_2
      003EA7 E4               [12]11687 	clr	a
      003EA8 F0               [24]11688 	movx	@dptr,a
      003EA9 A3               [24]11689 	inc	dptr
      003EAA F0               [24]11690 	movx	@dptr,a
      003EAB 8A 82            [24]11691 	mov	dpl,r2
      003EAD 8B 83            [24]11692 	mov	dph,r3
      003EAF 8C F0            [24]11693 	mov	b,r4
      003EB1 C0 04            [24]11694 	push	ar4
      003EB3 C0 03            [24]11695 	push	ar3
      003EB5 C0 02            [24]11696 	push	ar2
      003EB7 12r3BrD4         [24]11697 	lcall	_find_volume
      003EBA AE 82            [24]11698 	mov	r6,dpl
      003EBC AF 83            [24]11699 	mov	r7,dph
      003EBE D0 02            [24]11700 	pop	ar2
      003EC0 D0 03            [24]11701 	pop	ar3
      003EC2 D0 04            [24]11702 	pop	ar4
                                  11703 ;	ff15\source\ff.c:3442: if (fmt == 4) return FR_DISK_ERR;		/* An error occurred in the disk I/O layer */
      003EC4 BE 04 07         [24]11704 	cjne	r6,#0x04,00120$
      003EC7 BF 00 04         [24]11705 	cjne	r7,#0x00,00120$
      003ECA 75 82 01         [24]11706 	mov	dpl,#0x01
      003ECD 22               [24]11707 	ret
      003ECE                      11708 00120$:
                                  11709 ;	ff15\source\ff.c:3443: if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
      003ECE C3               [12]11710 	clr	c
      003ECF EE               [12]11711 	mov	a,r6
      003ED0 94 02            [12]11712 	subb	a,#0x02
      003ED2 EF               [12]11713 	mov	a,r7
      003ED3 94 00            [12]11714 	subb	a,#0x00
      003ED5 40 04            [24]11715 	jc	00122$
      003ED7 75 82 0D         [24]11716 	mov	dpl,#0x0d
      003EDA 22               [24]11717 	ret
      003EDB                      11718 00122$:
                                  11719 ;	ff15\source\ff.c:3444: bsect = fs->winsect;					/* Volume offset in the hosting physical drive */
      003EDB 74 2C            [12]11720 	mov	a,#0x2c
      003EDD 2A               [12]11721 	add	a,r2
      003EDE FF               [12]11722 	mov	r7,a
      003EDF E4               [12]11723 	clr	a
      003EE0 3B               [12]11724 	addc	a,r3
      003EE1 FD               [12]11725 	mov	r5,a
      003EE2 8C 06            [24]11726 	mov	ar6,r4
      003EE4 8F 82            [24]11727 	mov	dpl,r7
      003EE6 8D 83            [24]11728 	mov	dph,r5
      003EE8 8E F0            [24]11729 	mov	b,r6
      003EEA 12r00r00         [24]11730 	lcall	__gptrget
      003EED F5*EB            [12]11731 	mov	_mount_volume_sloc0_1_0,a
      003EEF A3               [24]11732 	inc	dptr
      003EF0 12r00r00         [24]11733 	lcall	__gptrget
      003EF3 F5*EC            [12]11734 	mov	(_mount_volume_sloc0_1_0 + 1),a
      003EF5 A3               [24]11735 	inc	dptr
      003EF6 12r00r00         [24]11736 	lcall	__gptrget
      003EF9 F5*ED            [12]11737 	mov	(_mount_volume_sloc0_1_0 + 2),a
      003EFB A3               [24]11738 	inc	dptr
      003EFC 12r00r00         [24]11739 	lcall	__gptrget
      003EFF F5*EE            [12]11740 	mov	(_mount_volume_sloc0_1_0 + 3),a
                                  11741 ;	ff15\source\ff.c:3512: if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
      003F01 74 30            [12]11742 	mov	a,#0x30
      003F03 2A               [12]11743 	add	a,r2
      003F04 F8               [12]11744 	mov	r0,a
      003F05 E4               [12]11745 	clr	a
      003F06 3B               [12]11746 	addc	a,r3
      003F07 FE               [12]11747 	mov	r6,a
      003F08 8C 07            [24]11748 	mov	ar7,r4
      003F0A 74 0B            [12]11749 	mov	a,#0x0b
      003F0C 28               [12]11750 	add	a,r0
      003F0D F8               [12]11751 	mov	r0,a
      003F0E E4               [12]11752 	clr	a
      003F0F 3E               [12]11753 	addc	a,r6
      003F10 FE               [12]11754 	mov	r6,a
      003F11 88 82            [24]11755 	mov	dpl,r0
      003F13 8E 83            [24]11756 	mov	dph,r6
      003F15 8F F0            [24]11757 	mov	b,r7
      003F17 C0 04            [24]11758 	push	ar4
      003F19 C0 03            [24]11759 	push	ar3
      003F1B C0 02            [24]11760 	push	ar2
      003F1D 12r00r00         [24]11761 	lcall	_ld_word
      003F20 AE 82            [24]11762 	mov	r6,dpl
      003F22 AF 83            [24]11763 	mov	r7,dph
      003F24 D0 02            [24]11764 	pop	ar2
      003F26 D0 03            [24]11765 	pop	ar3
      003F28 D0 04            [24]11766 	pop	ar4
      003F2A BE 00 05         [24]11767 	cjne	r6,#0x00,00334$
      003F2D BF 02 02         [24]11768 	cjne	r7,#0x02,00334$
      003F30 80 04            [24]11769 	sjmp	00124$
      003F32                      11770 00334$:
      003F32 75 82 0D         [24]11771 	mov	dpl,#0x0d
      003F35 22               [24]11772 	ret
      003F36                      11773 00124$:
                                  11774 ;	ff15\source\ff.c:3514: fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
      003F36 74 30            [12]11775 	mov	a,#0x30
      003F38 2A               [12]11776 	add	a,r2
      003F39 FD               [12]11777 	mov	r5,a
      003F3A E4               [12]11778 	clr	a
      003F3B 3B               [12]11779 	addc	a,r3
      003F3C FE               [12]11780 	mov	r6,a
      003F3D 8C 07            [24]11781 	mov	ar7,r4
      003F3F 74 16            [12]11782 	mov	a,#0x16
      003F41 2D               [12]11783 	add	a,r5
      003F42 FD               [12]11784 	mov	r5,a
      003F43 E4               [12]11785 	clr	a
      003F44 3E               [12]11786 	addc	a,r6
      003F45 FE               [12]11787 	mov	r6,a
      003F46 8D 82            [24]11788 	mov	dpl,r5
      003F48 8E 83            [24]11789 	mov	dph,r6
      003F4A 8F F0            [24]11790 	mov	b,r7
      003F4C C0 04            [24]11791 	push	ar4
      003F4E C0 03            [24]11792 	push	ar3
      003F50 C0 02            [24]11793 	push	ar2
      003F52 12r00r00         [24]11794 	lcall	_ld_word
      003F55 AE 82            [24]11795 	mov	r6,dpl
      003F57 AF 83            [24]11796 	mov	r7,dph
      003F59 D0 02            [24]11797 	pop	ar2
      003F5B D0 03            [24]11798 	pop	ar3
      003F5D D0 04            [24]11799 	pop	ar4
      003F5F 8E 01            [24]11800 	mov	ar1,r6
      003F61 8F 05            [24]11801 	mov	ar5,r7
      003F63 7E 00            [12]11802 	mov	r6,#0x00
      003F65 7F 00            [12]11803 	mov	r7,#0x00
      003F67 90r00rF5         [24]11804 	mov	dptr,#_mount_volume_fasize_65536_224
      003F6A E9               [12]11805 	mov	a,r1
      003F6B F0               [24]11806 	movx	@dptr,a
      003F6C ED               [12]11807 	mov	a,r5
      003F6D A3               [24]11808 	inc	dptr
      003F6E F0               [24]11809 	movx	@dptr,a
      003F6F EE               [12]11810 	mov	a,r6
      003F70 A3               [24]11811 	inc	dptr
      003F71 F0               [24]11812 	movx	@dptr,a
      003F72 EF               [12]11813 	mov	a,r7
      003F73 A3               [24]11814 	inc	dptr
      003F74 F0               [24]11815 	movx	@dptr,a
                                  11816 ;	ff15\source\ff.c:3515: if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
      003F75 E9               [12]11817 	mov	a,r1
      003F76 4D               [12]11818 	orl	a,r5
      003F77 4E               [12]11819 	orl	a,r6
      003F78 4F               [12]11820 	orl	a,r7
      003F79 70 3A            [24]11821 	jnz	00126$
      003F7B 74 30            [12]11822 	mov	a,#0x30
      003F7D 2A               [12]11823 	add	a,r2
      003F7E FD               [12]11824 	mov	r5,a
      003F7F E4               [12]11825 	clr	a
      003F80 3B               [12]11826 	addc	a,r3
      003F81 FE               [12]11827 	mov	r6,a
      003F82 8C 07            [24]11828 	mov	ar7,r4
      003F84 74 24            [12]11829 	mov	a,#0x24
      003F86 2D               [12]11830 	add	a,r5
      003F87 FD               [12]11831 	mov	r5,a
      003F88 E4               [12]11832 	clr	a
      003F89 3E               [12]11833 	addc	a,r6
      003F8A FE               [12]11834 	mov	r6,a
      003F8B 8D 82            [24]11835 	mov	dpl,r5
      003F8D 8E 83            [24]11836 	mov	dph,r6
      003F8F 8F F0            [24]11837 	mov	b,r7
      003F91 C0 04            [24]11838 	push	ar4
      003F93 C0 03            [24]11839 	push	ar3
      003F95 C0 02            [24]11840 	push	ar2
      003F97 12r00r45         [24]11841 	lcall	_ld_dword
      003F9A A9 82            [24]11842 	mov	r1,dpl
      003F9C AD 83            [24]11843 	mov	r5,dph
      003F9E AE F0            [24]11844 	mov	r6,b
      003FA0 FF               [12]11845 	mov	r7,a
      003FA1 D0 02            [24]11846 	pop	ar2
      003FA3 D0 03            [24]11847 	pop	ar3
      003FA5 D0 04            [24]11848 	pop	ar4
      003FA7 90r00rF5         [24]11849 	mov	dptr,#_mount_volume_fasize_65536_224
      003FAA E9               [12]11850 	mov	a,r1
      003FAB F0               [24]11851 	movx	@dptr,a
      003FAC ED               [12]11852 	mov	a,r5
      003FAD A3               [24]11853 	inc	dptr
      003FAE F0               [24]11854 	movx	@dptr,a
      003FAF EE               [12]11855 	mov	a,r6
      003FB0 A3               [24]11856 	inc	dptr
      003FB1 F0               [24]11857 	movx	@dptr,a
      003FB2 EF               [12]11858 	mov	a,r7
      003FB3 A3               [24]11859 	inc	dptr
      003FB4 F0               [24]11860 	movx	@dptr,a
      003FB5                      11861 00126$:
                                  11862 ;	ff15\source\ff.c:3516: fs->fsize = fasize;
      003FB5 74 18            [12]11863 	mov	a,#0x18
      003FB7 2A               [12]11864 	add	a,r2
      003FB8 F5*EF            [12]11865 	mov	_mount_volume_sloc1_1_0,a
      003FBA E4               [12]11866 	clr	a
      003FBB 3B               [12]11867 	addc	a,r3
      003FBC F5*F0            [12]11868 	mov	(_mount_volume_sloc1_1_0 + 1),a
      003FBE 8C*F1            [24]11869 	mov	(_mount_volume_sloc1_1_0 + 2),r4
      003FC0 90r00rF5         [24]11870 	mov	dptr,#_mount_volume_fasize_65536_224
      003FC3 E0               [24]11871 	movx	a,@dptr
      003FC4 F8               [12]11872 	mov	r0,a
      003FC5 A3               [24]11873 	inc	dptr
      003FC6 E0               [24]11874 	movx	a,@dptr
      003FC7 FE               [12]11875 	mov	r6,a
      003FC8 A3               [24]11876 	inc	dptr
      003FC9 E0               [24]11877 	movx	a,@dptr
      003FCA F9               [12]11878 	mov	r1,a
      003FCB A3               [24]11879 	inc	dptr
      003FCC E0               [24]11880 	movx	a,@dptr
      003FCD FF               [12]11881 	mov	r7,a
      003FCE 85*EF 82         [24]11882 	mov	dpl,_mount_volume_sloc1_1_0
      003FD1 85*F0 83         [24]11883 	mov	dph,(_mount_volume_sloc1_1_0 + 1)
      003FD4 85*F1 F0         [24]11884 	mov	b,(_mount_volume_sloc1_1_0 + 2)
      003FD7 E8               [12]11885 	mov	a,r0
      003FD8 12r00r00         [24]11886 	lcall	__gptrput
      003FDB A3               [24]11887 	inc	dptr
      003FDC EE               [12]11888 	mov	a,r6
      003FDD 12r00r00         [24]11889 	lcall	__gptrput
      003FE0 A3               [24]11890 	inc	dptr
      003FE1 E9               [12]11891 	mov	a,r1
      003FE2 12r00r00         [24]11892 	lcall	__gptrput
      003FE5 A3               [24]11893 	inc	dptr
      003FE6 EF               [12]11894 	mov	a,r7
      003FE7 12r00r00         [24]11895 	lcall	__gptrput
                                  11896 ;	ff15\source\ff.c:3518: fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
      003FEA 74 03            [12]11897 	mov	a,#0x03
      003FEC 2A               [12]11898 	add	a,r2
      003FED F5*F2            [12]11899 	mov	_mount_volume_sloc2_1_0,a
      003FEF E4               [12]11900 	clr	a
      003FF0 3B               [12]11901 	addc	a,r3
      003FF1 F5*F3            [12]11902 	mov	(_mount_volume_sloc2_1_0 + 1),a
      003FF3 8C*F4            [24]11903 	mov	(_mount_volume_sloc2_1_0 + 2),r4
      003FF5 74 30            [12]11904 	mov	a,#0x30
      003FF7 2A               [12]11905 	add	a,r2
      003FF8 F8               [12]11906 	mov	r0,a
      003FF9 E4               [12]11907 	clr	a
      003FFA 3B               [12]11908 	addc	a,r3
      003FFB F9               [12]11909 	mov	r1,a
      003FFC 8C 07            [24]11910 	mov	ar7,r4
      003FFE 74 10            [12]11911 	mov	a,#0x10
      004000 28               [12]11912 	add	a,r0
      004001 F8               [12]11913 	mov	r0,a
      004002 E4               [12]11914 	clr	a
      004003 39               [12]11915 	addc	a,r1
      004004 F9               [12]11916 	mov	r1,a
      004005 88 82            [24]11917 	mov	dpl,r0
      004007 89 83            [24]11918 	mov	dph,r1
      004009 8F F0            [24]11919 	mov	b,r7
      00400B 12r00r00         [24]11920 	lcall	__gptrget
      00400E F8               [12]11921 	mov	r0,a
      00400F 85*F2 82         [24]11922 	mov	dpl,_mount_volume_sloc2_1_0
      004012 85*F3 83         [24]11923 	mov	dph,(_mount_volume_sloc2_1_0 + 1)
      004015 85*F4 F0         [24]11924 	mov	b,(_mount_volume_sloc2_1_0 + 2)
      004018 12r00r00         [24]11925 	lcall	__gptrput
                                  11926 ;	ff15\source\ff.c:3519: if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
      00401B 85*F2 82         [24]11927 	mov	dpl,_mount_volume_sloc2_1_0
      00401E 85*F3 83         [24]11928 	mov	dph,(_mount_volume_sloc2_1_0 + 1)
      004021 85*F4 F0         [24]11929 	mov	b,(_mount_volume_sloc2_1_0 + 2)
      004024 12r00r00         [24]11930 	lcall	__gptrget
      004027 FF               [12]11931 	mov	r7,a
      004028 B8 01 02         [24]11932 	cjne	r0,#0x01,00336$
      00402B 80 09            [24]11933 	sjmp	00128$
      00402D                      11934 00336$:
      00402D BF 02 02         [24]11935 	cjne	r7,#0x02,00337$
      004030 80 04            [24]11936 	sjmp	00128$
      004032                      11937 00337$:
      004032 75 82 0D         [24]11938 	mov	dpl,#0x0d
      004035 22               [24]11939 	ret
      004036                      11940 00128$:
                                  11941 ;	ff15\source\ff.c:3520: fasize *= fs->n_fats;							/* Number of sectors for FAT area */
      004036 85*F2 82         [24]11942 	mov	dpl,_mount_volume_sloc2_1_0
      004039 85*F3 83         [24]11943 	mov	dph,(_mount_volume_sloc2_1_0 + 1)
      00403C 85*F4 F0         [24]11944 	mov	b,(_mount_volume_sloc2_1_0 + 2)
      00403F 12r00r00         [24]11945 	lcall	__gptrget
      004042 FF               [12]11946 	mov	r7,a
      004043 90r00rF5         [24]11947 	mov	dptr,#_mount_volume_fasize_65536_224
      004046 E0               [24]11948 	movx	a,@dptr
      004047 F8               [12]11949 	mov	r0,a
      004048 A3               [24]11950 	inc	dptr
      004049 E0               [24]11951 	movx	a,@dptr
      00404A F9               [12]11952 	mov	r1,a
      00404B A3               [24]11953 	inc	dptr
      00404C E0               [24]11954 	movx	a,@dptr
      00404D FD               [12]11955 	mov	r5,a
      00404E A3               [24]11956 	inc	dptr
      00404F E0               [24]11957 	movx	a,@dptr
      004050 FE               [12]11958 	mov	r6,a
      004051 90r00r00         [24]11959 	mov	dptr,#__mullong_PARM_2
      004054 EF               [12]11960 	mov	a,r7
      004055 F0               [24]11961 	movx	@dptr,a
      004056 E4               [12]11962 	clr	a
      004057 A3               [24]11963 	inc	dptr
      004058 F0               [24]11964 	movx	@dptr,a
      004059 A3               [24]11965 	inc	dptr
      00405A F0               [24]11966 	movx	@dptr,a
      00405B A3               [24]11967 	inc	dptr
      00405C F0               [24]11968 	movx	@dptr,a
      00405D 88 82            [24]11969 	mov	dpl,r0
      00405F 89 83            [24]11970 	mov	dph,r1
      004061 8D F0            [24]11971 	mov	b,r5
      004063 EE               [12]11972 	mov	a,r6
      004064 C0 04            [24]11973 	push	ar4
      004066 C0 03            [24]11974 	push	ar3
      004068 C0 02            [24]11975 	push	ar2
      00406A 12r00r00         [24]11976 	lcall	__mullong
      00406D A9 82            [24]11977 	mov	r1,dpl
      00406F AD 83            [24]11978 	mov	r5,dph
      004071 AE F0            [24]11979 	mov	r6,b
      004073 FF               [12]11980 	mov	r7,a
      004074 D0 02            [24]11981 	pop	ar2
      004076 D0 03            [24]11982 	pop	ar3
      004078 D0 04            [24]11983 	pop	ar4
      00407A 90r00rF5         [24]11984 	mov	dptr,#_mount_volume_fasize_65536_224
      00407D E9               [12]11985 	mov	a,r1
      00407E F0               [24]11986 	movx	@dptr,a
      00407F ED               [12]11987 	mov	a,r5
      004080 A3               [24]11988 	inc	dptr
      004081 F0               [24]11989 	movx	@dptr,a
      004082 EE               [12]11990 	mov	a,r6
      004083 A3               [24]11991 	inc	dptr
      004084 F0               [24]11992 	movx	@dptr,a
      004085 EF               [12]11993 	mov	a,r7
      004086 A3               [24]11994 	inc	dptr
      004087 F0               [24]11995 	movx	@dptr,a
                                  11996 ;	ff15\source\ff.c:3522: fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
      004088 74 0A            [12]11997 	mov	a,#0x0a
      00408A 2A               [12]11998 	add	a,r2
      00408B F5*F2            [12]11999 	mov	_mount_volume_sloc2_1_0,a
      00408D E4               [12]12000 	clr	a
      00408E 3B               [12]12001 	addc	a,r3
      00408F F5*F3            [12]12002 	mov	(_mount_volume_sloc2_1_0 + 1),a
      004091 8C*F4            [24]12003 	mov	(_mount_volume_sloc2_1_0 + 2),r4
      004093 74 30            [12]12004 	mov	a,#0x30
      004095 2A               [12]12005 	add	a,r2
      004096 F8               [12]12006 	mov	r0,a
      004097 E4               [12]12007 	clr	a
      004098 3B               [12]12008 	addc	a,r3
      004099 F9               [12]12009 	mov	r1,a
      00409A 8C 07            [24]12010 	mov	ar7,r4
      00409C 74 0D            [12]12011 	mov	a,#0x0d
      00409E 28               [12]12012 	add	a,r0
      00409F F8               [12]12013 	mov	r0,a
      0040A0 E4               [12]12014 	clr	a
      0040A1 39               [12]12015 	addc	a,r1
      0040A2 F9               [12]12016 	mov	r1,a
      0040A3 88 82            [24]12017 	mov	dpl,r0
      0040A5 89 83            [24]12018 	mov	dph,r1
      0040A7 8F F0            [24]12019 	mov	b,r7
      0040A9 12r00r00         [24]12020 	lcall	__gptrget
      0040AC F8               [12]12021 	mov	r0,a
      0040AD 7F 00            [12]12022 	mov	r7,#0x00
      0040AF 85*F2 82         [24]12023 	mov	dpl,_mount_volume_sloc2_1_0
      0040B2 85*F3 83         [24]12024 	mov	dph,(_mount_volume_sloc2_1_0 + 1)
      0040B5 85*F4 F0         [24]12025 	mov	b,(_mount_volume_sloc2_1_0 + 2)
      0040B8 E8               [12]12026 	mov	a,r0
      0040B9 12r00r00         [24]12027 	lcall	__gptrput
      0040BC A3               [24]12028 	inc	dptr
      0040BD EF               [12]12029 	mov	a,r7
      0040BE 12r00r00         [24]12030 	lcall	__gptrput
                                  12031 ;	ff15\source\ff.c:3523: if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
      0040C1 85*F2 82         [24]12032 	mov	dpl,_mount_volume_sloc2_1_0
      0040C4 85*F3 83         [24]12033 	mov	dph,(_mount_volume_sloc2_1_0 + 1)
      0040C7 85*F4 F0         [24]12034 	mov	b,(_mount_volume_sloc2_1_0 + 2)
      0040CA 12r00r00         [24]12035 	lcall	__gptrget
      0040CD FD               [12]12036 	mov	r5,a
      0040CE A3               [24]12037 	inc	dptr
      0040CF 12r00r00         [24]12038 	lcall	__gptrget
      0040D2 FE               [12]12039 	mov	r6,a
      0040D3 E8               [12]12040 	mov	a,r0
      0040D4 4F               [12]12041 	orl	a,r7
      0040D5 60 12            [24]12042 	jz	00130$
      0040D7 ED               [12]12043 	mov	a,r5
      0040D8 24 FF            [12]12044 	add	a,#0xff
      0040DA F9               [12]12045 	mov	r1,a
      0040DB EE               [12]12046 	mov	a,r6
      0040DC 34 FF            [12]12047 	addc	a,#0xff
      0040DE FF               [12]12048 	mov	r7,a
      0040DF E9               [12]12049 	mov	a,r1
      0040E0 52 05            [12]12050 	anl	ar5,a
      0040E2 EF               [12]12051 	mov	a,r7
      0040E3 52 06            [12]12052 	anl	ar6,a
      0040E5 ED               [12]12053 	mov	a,r5
      0040E6 4E               [12]12054 	orl	a,r6
      0040E7 60 04            [24]12055 	jz	00131$
      0040E9                      12056 00130$:
      0040E9 75 82 0D         [24]12057 	mov	dpl,#0x0d
      0040EC 22               [24]12058 	ret
      0040ED                      12059 00131$:
                                  12060 ;	ff15\source\ff.c:3525: fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
      0040ED 74 08            [12]12061 	mov	a,#0x08
      0040EF 2A               [12]12062 	add	a,r2
      0040F0 F5*F5            [12]12063 	mov	_mount_volume_sloc3_1_0,a
      0040F2 E4               [12]12064 	clr	a
      0040F3 3B               [12]12065 	addc	a,r3
      0040F4 F5*F6            [12]12066 	mov	(_mount_volume_sloc3_1_0 + 1),a
      0040F6 8C*F7            [24]12067 	mov	(_mount_volume_sloc3_1_0 + 2),r4
      0040F8 74 30            [12]12068 	mov	a,#0x30
      0040FA 2A               [12]12069 	add	a,r2
      0040FB F8               [12]12070 	mov	r0,a
      0040FC E4               [12]12071 	clr	a
      0040FD 3B               [12]12072 	addc	a,r3
      0040FE F9               [12]12073 	mov	r1,a
      0040FF 8C 07            [24]12074 	mov	ar7,r4
      004101 74 11            [12]12075 	mov	a,#0x11
      004103 28               [12]12076 	add	a,r0
      004104 F8               [12]12077 	mov	r0,a
      004105 E4               [12]12078 	clr	a
      004106 39               [12]12079 	addc	a,r1
      004107 F9               [12]12080 	mov	r1,a
      004108 88 82            [24]12081 	mov	dpl,r0
      00410A 89 83            [24]12082 	mov	dph,r1
      00410C 8F F0            [24]12083 	mov	b,r7
      00410E C0 04            [24]12084 	push	ar4
      004110 C0 03            [24]12085 	push	ar3
      004112 C0 02            [24]12086 	push	ar2
      004114 12r00r00         [24]12087 	lcall	_ld_word
      004117 AF 82            [24]12088 	mov	r7,dpl
      004119 AE 83            [24]12089 	mov	r6,dph
      00411B D0 02            [24]12090 	pop	ar2
      00411D D0 03            [24]12091 	pop	ar3
      00411F D0 04            [24]12092 	pop	ar4
      004121 85*F5 82         [24]12093 	mov	dpl,_mount_volume_sloc3_1_0
      004124 85*F6 83         [24]12094 	mov	dph,(_mount_volume_sloc3_1_0 + 1)
      004127 85*F7 F0         [24]12095 	mov	b,(_mount_volume_sloc3_1_0 + 2)
      00412A EF               [12]12096 	mov	a,r7
      00412B 12r00r00         [24]12097 	lcall	__gptrput
      00412E A3               [24]12098 	inc	dptr
      00412F EE               [12]12099 	mov	a,r6
      004130 12r00r00         [24]12100 	lcall	__gptrput
                                  12101 ;	ff15\source\ff.c:3526: if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
      004133 8F 06            [24]12102 	mov	ar6,r7
      004135 EE               [12]12103 	mov	a,r6
      004136 54 0F            [12]12104 	anl	a,#0x0f
      004138 60 04            [24]12105 	jz	00134$
      00413A 75 82 0D         [24]12106 	mov	dpl,#0x0d
      00413D 22               [24]12107 	ret
      00413E                      12108 00134$:
                                  12109 ;	ff15\source\ff.c:3528: tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
      00413E 74 30            [12]12110 	mov	a,#0x30
      004140 2A               [12]12111 	add	a,r2
      004141 FD               [12]12112 	mov	r5,a
      004142 E4               [12]12113 	clr	a
      004143 3B               [12]12114 	addc	a,r3
      004144 FE               [12]12115 	mov	r6,a
      004145 8C 07            [24]12116 	mov	ar7,r4
      004147 74 13            [12]12117 	mov	a,#0x13
      004149 2D               [12]12118 	add	a,r5
      00414A FD               [12]12119 	mov	r5,a
      00414B E4               [12]12120 	clr	a
      00414C 3E               [12]12121 	addc	a,r6
      00414D FE               [12]12122 	mov	r6,a
      00414E 8D 82            [24]12123 	mov	dpl,r5
      004150 8E 83            [24]12124 	mov	dph,r6
      004152 8F F0            [24]12125 	mov	b,r7
      004154 C0 04            [24]12126 	push	ar4
      004156 C0 03            [24]12127 	push	ar3
      004158 C0 02            [24]12128 	push	ar2
      00415A 12r00r00         [24]12129 	lcall	_ld_word
      00415D AE 82            [24]12130 	mov	r6,dpl
      00415F AF 83            [24]12131 	mov	r7,dph
      004161 D0 02            [24]12132 	pop	ar2
      004163 D0 03            [24]12133 	pop	ar3
      004165 D0 04            [24]12134 	pop	ar4
      004167 8E 01            [24]12135 	mov	ar1,r6
      004169 8F 05            [24]12136 	mov	ar5,r7
      00416B 7E 00            [12]12137 	mov	r6,#0x00
      00416D 7F 00            [12]12138 	mov	r7,#0x00
      00416F 90r00rF1         [24]12139 	mov	dptr,#_mount_volume_tsect_65536_224
      004172 E9               [12]12140 	mov	a,r1
      004173 F0               [24]12141 	movx	@dptr,a
      004174 ED               [12]12142 	mov	a,r5
      004175 A3               [24]12143 	inc	dptr
      004176 F0               [24]12144 	movx	@dptr,a
      004177 EE               [12]12145 	mov	a,r6
      004178 A3               [24]12146 	inc	dptr
      004179 F0               [24]12147 	movx	@dptr,a
      00417A EF               [12]12148 	mov	a,r7
      00417B A3               [24]12149 	inc	dptr
      00417C F0               [24]12150 	movx	@dptr,a
                                  12151 ;	ff15\source\ff.c:3529: if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
      00417D E9               [12]12152 	mov	a,r1
      00417E 4D               [12]12153 	orl	a,r5
      00417F 4E               [12]12154 	orl	a,r6
      004180 4F               [12]12155 	orl	a,r7
      004181 70 3A            [24]12156 	jnz	00136$
      004183 74 30            [12]12157 	mov	a,#0x30
      004185 2A               [12]12158 	add	a,r2
      004186 FD               [12]12159 	mov	r5,a
      004187 E4               [12]12160 	clr	a
      004188 3B               [12]12161 	addc	a,r3
      004189 FE               [12]12162 	mov	r6,a
      00418A 8C 07            [24]12163 	mov	ar7,r4
      00418C 74 20            [12]12164 	mov	a,#0x20
      00418E 2D               [12]12165 	add	a,r5
      00418F FD               [12]12166 	mov	r5,a
      004190 E4               [12]12167 	clr	a
      004191 3E               [12]12168 	addc	a,r6
      004192 FE               [12]12169 	mov	r6,a
      004193 8D 82            [24]12170 	mov	dpl,r5
      004195 8E 83            [24]12171 	mov	dph,r6
      004197 8F F0            [24]12172 	mov	b,r7
      004199 C0 04            [24]12173 	push	ar4
      00419B C0 03            [24]12174 	push	ar3
      00419D C0 02            [24]12175 	push	ar2
      00419F 12r00r45         [24]12176 	lcall	_ld_dword
      0041A2 A9 82            [24]12177 	mov	r1,dpl
      0041A4 AD 83            [24]12178 	mov	r5,dph
      0041A6 AE F0            [24]12179 	mov	r6,b
      0041A8 FF               [12]12180 	mov	r7,a
      0041A9 D0 02            [24]12181 	pop	ar2
      0041AB D0 03            [24]12182 	pop	ar3
      0041AD D0 04            [24]12183 	pop	ar4
      0041AF 90r00rF1         [24]12184 	mov	dptr,#_mount_volume_tsect_65536_224
      0041B2 E9               [12]12185 	mov	a,r1
      0041B3 F0               [24]12186 	movx	@dptr,a
      0041B4 ED               [12]12187 	mov	a,r5
      0041B5 A3               [24]12188 	inc	dptr
      0041B6 F0               [24]12189 	movx	@dptr,a
      0041B7 EE               [12]12190 	mov	a,r6
      0041B8 A3               [24]12191 	inc	dptr
      0041B9 F0               [24]12192 	movx	@dptr,a
      0041BA EF               [12]12193 	mov	a,r7
      0041BB A3               [24]12194 	inc	dptr
      0041BC F0               [24]12195 	movx	@dptr,a
      0041BD                      12196 00136$:
                                  12197 ;	ff15\source\ff.c:3531: nrsv = ld_word(fs->win + BPB_RsvdSecCnt);		/* Number of reserved sectors */
      0041BD 74 30            [12]12198 	mov	a,#0x30
      0041BF 2A               [12]12199 	add	a,r2
      0041C0 FD               [12]12200 	mov	r5,a
      0041C1 E4               [12]12201 	clr	a
      0041C2 3B               [12]12202 	addc	a,r3
      0041C3 FE               [12]12203 	mov	r6,a
      0041C4 8C 07            [24]12204 	mov	ar7,r4
      0041C6 74 0E            [12]12205 	mov	a,#0x0e
      0041C8 2D               [12]12206 	add	a,r5
      0041C9 FD               [12]12207 	mov	r5,a
      0041CA E4               [12]12208 	clr	a
      0041CB 3E               [12]12209 	addc	a,r6
      0041CC FE               [12]12210 	mov	r6,a
      0041CD 8D 82            [24]12211 	mov	dpl,r5
      0041CF 8E 83            [24]12212 	mov	dph,r6
      0041D1 8F F0            [24]12213 	mov	b,r7
      0041D3 C0 04            [24]12214 	push	ar4
      0041D5 C0 03            [24]12215 	push	ar3
      0041D7 C0 02            [24]12216 	push	ar2
      0041D9 12r00r00         [24]12217 	lcall	_ld_word
      0041DC AE 82            [24]12218 	mov	r6,dpl
      0041DE AF 83            [24]12219 	mov	r7,dph
      0041E0 D0 02            [24]12220 	pop	ar2
      0041E2 D0 03            [24]12221 	pop	ar3
      0041E4 D0 04            [24]12222 	pop	ar4
                                  12223 ;	ff15\source\ff.c:3532: if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
      0041E6 EE               [12]12224 	mov	a,r6
      0041E7 4F               [12]12225 	orl	a,r7
      0041E8 70 04            [24]12226 	jnz	00138$
      0041EA 75 82 0D         [24]12227 	mov	dpl,#0x0d
      0041ED 22               [24]12228 	ret
      0041EE                      12229 00138$:
                                  12230 ;	ff15\source\ff.c:3535: sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
      0041EE C0 02            [24]12231 	push	ar2
      0041F0 C0 03            [24]12232 	push	ar3
      0041F2 C0 04            [24]12233 	push	ar4
      0041F4 90r00rF5         [24]12234 	mov	dptr,#_mount_volume_fasize_65536_224
      0041F7 E0               [24]12235 	movx	a,@dptr
      0041F8 F8               [12]12236 	mov	r0,a
      0041F9 A3               [24]12237 	inc	dptr
      0041FA E0               [24]12238 	movx	a,@dptr
      0041FB F9               [12]12239 	mov	r1,a
      0041FC A3               [24]12240 	inc	dptr
      0041FD E0               [24]12241 	movx	a,@dptr
      0041FE FC               [12]12242 	mov	r4,a
      0041FF A3               [24]12243 	inc	dptr
      004200 E0               [24]12244 	movx	a,@dptr
      004201 FD               [12]12245 	mov	r5,a
      004202 8E*F8            [24]12246 	mov	_mount_volume_sloc4_1_0,r6
      004204 8F*F9            [24]12247 	mov	(_mount_volume_sloc4_1_0 + 1),r7
      004206 E4               [12]12248 	clr	a
      004207 F5*FA            [12]12249 	mov	(_mount_volume_sloc4_1_0 + 2),a
      004209 F5*FB            [12]12250 	mov	(_mount_volume_sloc4_1_0 + 3),a
      00420B E8               [12]12251 	mov	a,r0
      00420C 25*F8            [12]12252 	add	a,_mount_volume_sloc4_1_0
      00420E F8               [12]12253 	mov	r0,a
      00420F E9               [12]12254 	mov	a,r1
      004210 35*F9            [12]12255 	addc	a,(_mount_volume_sloc4_1_0 + 1)
      004212 F9               [12]12256 	mov	r1,a
      004213 EC               [12]12257 	mov	a,r4
      004214 35*FA            [12]12258 	addc	a,(_mount_volume_sloc4_1_0 + 2)
      004216 FC               [12]12259 	mov	r4,a
      004217 ED               [12]12260 	mov	a,r5
      004218 35*FB            [12]12261 	addc	a,(_mount_volume_sloc4_1_0 + 3)
      00421A FD               [12]12262 	mov	r5,a
      00421B 85*F5 82         [24]12263 	mov	dpl,_mount_volume_sloc3_1_0
      00421E 85*F6 83         [24]12264 	mov	dph,(_mount_volume_sloc3_1_0 + 1)
      004221 85*F7 F0         [24]12265 	mov	b,(_mount_volume_sloc3_1_0 + 2)
      004224 12r00r00         [24]12266 	lcall	__gptrget
      004227 FE               [12]12267 	mov	r6,a
      004228 A3               [24]12268 	inc	dptr
      004229 12r00r00         [24]12269 	lcall	__gptrget
      00422C C4               [12]12270 	swap	a
      00422D CE               [12]12271 	xch	a,r6
      00422E C4               [12]12272 	swap	a
      00422F 54 0F            [12]12273 	anl	a,#0x0f
      004231 6E               [12]12274 	xrl	a,r6
      004232 CE               [12]12275 	xch	a,r6
      004233 54 0F            [12]12276 	anl	a,#0x0f
      004235 CE               [12]12277 	xch	a,r6
      004236 6E               [12]12278 	xrl	a,r6
      004237 CE               [12]12279 	xch	a,r6
      004238 FF               [12]12280 	mov	r7,a
      004239 E4               [12]12281 	clr	a
      00423A FB               [12]12282 	mov	r3,a
      00423B FA               [12]12283 	mov	r2,a
      00423C EE               [12]12284 	mov	a,r6
      00423D 28               [12]12285 	add	a,r0
      00423E F5*FC            [12]12286 	mov	_mount_volume_sloc5_1_0,a
      004240 EF               [12]12287 	mov	a,r7
      004241 39               [12]12288 	addc	a,r1
      004242 F5*FD            [12]12289 	mov	(_mount_volume_sloc5_1_0 + 1),a
      004244 EB               [12]12290 	mov	a,r3
      004245 3C               [12]12291 	addc	a,r4
      004246 F5*FE            [12]12292 	mov	(_mount_volume_sloc5_1_0 + 2),a
      004248 EA               [12]12293 	mov	a,r2
      004249 3D               [12]12294 	addc	a,r5
      00424A F5*FF            [12]12295 	mov	(_mount_volume_sloc5_1_0 + 3),a
                                  12296 ;	ff15\source\ff.c:3536: if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
      00424C 90r00rF1         [24]12297 	mov	dptr,#_mount_volume_tsect_65536_224
      00424F E0               [24]12298 	movx	a,@dptr
      004250 F5*00            [12]12299 	mov	_mount_volume_sloc6_1_0,a
      004252 A3               [24]12300 	inc	dptr
      004253 E0               [24]12301 	movx	a,@dptr
      004254 F5*01            [12]12302 	mov	(_mount_volume_sloc6_1_0 + 1),a
      004256 A3               [24]12303 	inc	dptr
      004257 E0               [24]12304 	movx	a,@dptr
      004258 F5*02            [12]12305 	mov	(_mount_volume_sloc6_1_0 + 2),a
      00425A A3               [24]12306 	inc	dptr
      00425B E0               [24]12307 	movx	a,@dptr
      00425C F5*03            [12]12308 	mov	(_mount_volume_sloc6_1_0 + 3),a
      00425E C3               [12]12309 	clr	c
      00425F E5*00            [12]12310 	mov	a,_mount_volume_sloc6_1_0
      004261 95*FC            [12]12311 	subb	a,_mount_volume_sloc5_1_0
      004263 E5*01            [12]12312 	mov	a,(_mount_volume_sloc6_1_0 + 1)
      004265 95*FD            [12]12313 	subb	a,(_mount_volume_sloc5_1_0 + 1)
      004267 E5*02            [12]12314 	mov	a,(_mount_volume_sloc6_1_0 + 2)
      004269 95*FE            [12]12315 	subb	a,(_mount_volume_sloc5_1_0 + 2)
      00426B E5*03            [12]12316 	mov	a,(_mount_volume_sloc6_1_0 + 3)
      00426D 95*FF            [12]12317 	subb	a,(_mount_volume_sloc5_1_0 + 3)
      00426F D0 04            [24]12318 	pop	ar4
      004271 D0 03            [24]12319 	pop	ar3
      004273 D0 02            [24]12320 	pop	ar2
      004275 50 04            [24]12321 	jnc	00140$
      004277 75 82 0D         [24]12322 	mov	dpl,#0x0d
      00427A 22               [24]12323 	ret
      00427B                      12324 00140$:
                                  12325 ;	ff15\source\ff.c:3537: nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
      00427B C0 02            [24]12326 	push	ar2
      00427D C0 03            [24]12327 	push	ar3
      00427F C0 04            [24]12328 	push	ar4
      004281 E5*00            [12]12329 	mov	a,_mount_volume_sloc6_1_0
      004283 C3               [12]12330 	clr	c
      004284 95*FC            [12]12331 	subb	a,_mount_volume_sloc5_1_0
      004286 F9               [12]12332 	mov	r1,a
      004287 E5*01            [12]12333 	mov	a,(_mount_volume_sloc6_1_0 + 1)
      004289 95*FD            [12]12334 	subb	a,(_mount_volume_sloc5_1_0 + 1)
      00428B FD               [12]12335 	mov	r5,a
      00428C E5*02            [12]12336 	mov	a,(_mount_volume_sloc6_1_0 + 2)
      00428E 95*FE            [12]12337 	subb	a,(_mount_volume_sloc5_1_0 + 2)
      004290 FE               [12]12338 	mov	r6,a
      004291 E5*03            [12]12339 	mov	a,(_mount_volume_sloc6_1_0 + 3)
      004293 95*FF            [12]12340 	subb	a,(_mount_volume_sloc5_1_0 + 3)
      004295 FF               [12]12341 	mov	r7,a
      004296 85*F2 82         [24]12342 	mov	dpl,_mount_volume_sloc2_1_0
      004299 85*F3 83         [24]12343 	mov	dph,(_mount_volume_sloc2_1_0 + 1)
      00429C 85*F4 F0         [24]12344 	mov	b,(_mount_volume_sloc2_1_0 + 2)
      00429F 12r00r00         [24]12345 	lcall	__gptrget
      0042A2 F8               [12]12346 	mov	r0,a
      0042A3 A3               [24]12347 	inc	dptr
      0042A4 12r00r00         [24]12348 	lcall	__gptrget
      0042A7 FC               [12]12349 	mov	r4,a
      0042A8 90r00r00         [24]12350 	mov	dptr,#__divulong_PARM_2
      0042AB E8               [12]12351 	mov	a,r0
      0042AC F0               [24]12352 	movx	@dptr,a
      0042AD EC               [12]12353 	mov	a,r4
      0042AE A3               [24]12354 	inc	dptr
      0042AF F0               [24]12355 	movx	@dptr,a
      0042B0 E4               [12]12356 	clr	a
      0042B1 A3               [24]12357 	inc	dptr
      0042B2 F0               [24]12358 	movx	@dptr,a
      0042B3 A3               [24]12359 	inc	dptr
      0042B4 F0               [24]12360 	movx	@dptr,a
                                  12361 ;	ff15\source\ff.c:3538: if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
      0042B5 89 82            [24]12362 	mov	dpl,r1
      0042B7 8D 83            [24]12363 	mov	dph,r5
      0042B9 8E F0            [24]12364 	mov	b,r6
      0042BB EF               [12]12365 	mov	a,r7
      0042BC C0 04            [24]12366 	push	ar4
      0042BE C0 03            [24]12367 	push	ar3
      0042C0 C0 02            [24]12368 	push	ar2
      0042C2 12r00r00         [24]12369 	lcall	__divulong
      0042C5 85 82*00         [24]12370 	mov	_mount_volume_sloc6_1_0,dpl
      0042C8 85 83*01         [24]12371 	mov	(_mount_volume_sloc6_1_0 + 1),dph
      0042CB 85 F0*02         [24]12372 	mov	(_mount_volume_sloc6_1_0 + 2),b
      0042CE F5*03            [12]12373 	mov	(_mount_volume_sloc6_1_0 + 3),a
      0042D0 D0 02            [24]12374 	pop	ar2
      0042D2 D0 03            [24]12375 	pop	ar3
      0042D4 D0 04            [24]12376 	pop	ar4
      0042D6 D0 04            [24]12377 	pop	ar4
      0042D8 D0 03            [24]12378 	pop	ar3
      0042DA D0 02            [24]12379 	pop	ar2
      0042DC E5*00            [12]12380 	mov	a,_mount_volume_sloc6_1_0
      0042DE 45*01            [12]12381 	orl	a,(_mount_volume_sloc6_1_0 + 1)
      0042E0 45*02            [12]12382 	orl	a,(_mount_volume_sloc6_1_0 + 2)
      0042E2 45*03            [12]12383 	orl	a,(_mount_volume_sloc6_1_0 + 3)
      0042E4 70 04            [24]12384 	jnz	00142$
      0042E6 75 82 0D         [24]12385 	mov	dpl,#0x0d
      0042E9 22               [24]12386 	ret
      0042EA                      12387 00142$:
                                  12388 ;	ff15\source\ff.c:3539: fmt = 0;
      0042EA 90r00rFD         [24]12389 	mov	dptr,#_mount_volume_fmt_65536_224
      0042ED E4               [12]12390 	clr	a
      0042EE F0               [24]12391 	movx	@dptr,a
      0042EF A3               [24]12392 	inc	dptr
      0042F0 F0               [24]12393 	movx	@dptr,a
                                  12394 ;	ff15\source\ff.c:3540: if (nclst <= MAX_FAT32) fmt = FS_FAT32;
      0042F1 C3               [12]12395 	clr	c
      0042F2 74 F5            [12]12396 	mov	a,#0xf5
      0042F4 95*00            [12]12397 	subb	a,_mount_volume_sloc6_1_0
      0042F6 74 FF            [12]12398 	mov	a,#0xff
      0042F8 95*01            [12]12399 	subb	a,(_mount_volume_sloc6_1_0 + 1)
      0042FA 74 FF            [12]12400 	mov	a,#0xff
      0042FC 95*02            [12]12401 	subb	a,(_mount_volume_sloc6_1_0 + 2)
      0042FE 74 0F            [12]12402 	mov	a,#0x0f
      004300 95*03            [12]12403 	subb	a,(_mount_volume_sloc6_1_0 + 3)
      004302 40 09            [24]12404 	jc	00144$
      004304 90r00rFD         [24]12405 	mov	dptr,#_mount_volume_fmt_65536_224
      004307 74 03            [12]12406 	mov	a,#0x03
      004309 F0               [24]12407 	movx	@dptr,a
      00430A E4               [12]12408 	clr	a
      00430B A3               [24]12409 	inc	dptr
      00430C F0               [24]12410 	movx	@dptr,a
      00430D                      12411 00144$:
                                  12412 ;	ff15\source\ff.c:3541: if (nclst <= MAX_FAT16) fmt = FS_FAT16;
      00430D C3               [12]12413 	clr	c
      00430E 74 F5            [12]12414 	mov	a,#0xf5
      004310 95*00            [12]12415 	subb	a,_mount_volume_sloc6_1_0
      004312 74 FF            [12]12416 	mov	a,#0xff
      004314 95*01            [12]12417 	subb	a,(_mount_volume_sloc6_1_0 + 1)
      004316 E4               [12]12418 	clr	a
      004317 95*02            [12]12419 	subb	a,(_mount_volume_sloc6_1_0 + 2)
      004319 E4               [12]12420 	clr	a
      00431A 95*03            [12]12421 	subb	a,(_mount_volume_sloc6_1_0 + 3)
      00431C 40 09            [24]12422 	jc	00146$
      00431E 90r00rFD         [24]12423 	mov	dptr,#_mount_volume_fmt_65536_224
      004321 74 02            [12]12424 	mov	a,#0x02
      004323 F0               [24]12425 	movx	@dptr,a
      004324 E4               [12]12426 	clr	a
      004325 A3               [24]12427 	inc	dptr
      004326 F0               [24]12428 	movx	@dptr,a
      004327                      12429 00146$:
                                  12430 ;	ff15\source\ff.c:3542: if (nclst <= MAX_FAT12) fmt = FS_FAT12;
      004327 C3               [12]12431 	clr	c
      004328 74 F5            [12]12432 	mov	a,#0xf5
      00432A 95*00            [12]12433 	subb	a,_mount_volume_sloc6_1_0
      00432C 74 0F            [12]12434 	mov	a,#0x0f
      00432E 95*01            [12]12435 	subb	a,(_mount_volume_sloc6_1_0 + 1)
      004330 E4               [12]12436 	clr	a
      004331 95*02            [12]12437 	subb	a,(_mount_volume_sloc6_1_0 + 2)
      004333 E4               [12]12438 	clr	a
      004334 95*03            [12]12439 	subb	a,(_mount_volume_sloc6_1_0 + 3)
      004336 40 09            [24]12440 	jc	00148$
      004338 90r00rFD         [24]12441 	mov	dptr,#_mount_volume_fmt_65536_224
      00433B 74 01            [12]12442 	mov	a,#0x01
      00433D F0               [24]12443 	movx	@dptr,a
      00433E E4               [12]12444 	clr	a
      00433F A3               [24]12445 	inc	dptr
      004340 F0               [24]12446 	movx	@dptr,a
      004341                      12447 00148$:
                                  12448 ;	ff15\source\ff.c:3543: if (fmt == 0) return FR_NO_FILESYSTEM;
      004341 90r00rFD         [24]12449 	mov	dptr,#_mount_volume_fmt_65536_224
      004344 E0               [24]12450 	movx	a,@dptr
      004345 F5*F2            [12]12451 	mov	_mount_volume_sloc2_1_0,a
      004347 A3               [24]12452 	inc	dptr
      004348 E0               [24]12453 	movx	a,@dptr
      004349 F5*F3            [12]12454 	mov	(_mount_volume_sloc2_1_0 + 1),a
      00434B E5*F2            [12]12455 	mov	a,_mount_volume_sloc2_1_0
      00434D 45*F3            [12]12456 	orl	a,(_mount_volume_sloc2_1_0 + 1)
      00434F 70 04            [24]12457 	jnz	00150$
      004351 75 82 0D         [24]12458 	mov	dpl,#0x0d
      004354 22               [24]12459 	ret
      004355                      12460 00150$:
                                  12461 ;	ff15\source\ff.c:3546: fs->n_fatent = nclst + 2;						/* Number of FAT entries */
      004355 74 14            [12]12462 	mov	a,#0x14
      004357 2A               [12]12463 	add	a,r2
      004358 F5*04            [12]12464 	mov	_mount_volume_sloc7_1_0,a
      00435A E4               [12]12465 	clr	a
      00435B 3B               [12]12466 	addc	a,r3
      00435C F5*05            [12]12467 	mov	(_mount_volume_sloc7_1_0 + 1),a
      00435E 8C*06            [24]12468 	mov	(_mount_volume_sloc7_1_0 + 2),r4
      004360 74 02            [12]12469 	mov	a,#0x02
      004362 25*00            [12]12470 	add	a,_mount_volume_sloc6_1_0
      004364 FE               [12]12471 	mov	r6,a
      004365 E4               [12]12472 	clr	a
      004366 35*01            [12]12473 	addc	a,(_mount_volume_sloc6_1_0 + 1)
      004368 F9               [12]12474 	mov	r1,a
      004369 E4               [12]12475 	clr	a
      00436A 35*02            [12]12476 	addc	a,(_mount_volume_sloc6_1_0 + 2)
      00436C FD               [12]12477 	mov	r5,a
      00436D E4               [12]12478 	clr	a
      00436E 35*03            [12]12479 	addc	a,(_mount_volume_sloc6_1_0 + 3)
      004370 FF               [12]12480 	mov	r7,a
      004371 85*04 82         [24]12481 	mov	dpl,_mount_volume_sloc7_1_0
      004374 85*05 83         [24]12482 	mov	dph,(_mount_volume_sloc7_1_0 + 1)
      004377 85*06 F0         [24]12483 	mov	b,(_mount_volume_sloc7_1_0 + 2)
      00437A EE               [12]12484 	mov	a,r6
      00437B 12r00r00         [24]12485 	lcall	__gptrput
      00437E A3               [24]12486 	inc	dptr
      00437F E9               [12]12487 	mov	a,r1
      004380 12r00r00         [24]12488 	lcall	__gptrput
      004383 A3               [24]12489 	inc	dptr
      004384 ED               [12]12490 	mov	a,r5
      004385 12r00r00         [24]12491 	lcall	__gptrput
      004388 A3               [24]12492 	inc	dptr
      004389 EF               [12]12493 	mov	a,r7
      00438A 12r00r00         [24]12494 	lcall	__gptrput
                                  12495 ;	ff15\source\ff.c:3547: fs->volbase = bsect;							/* Volume start sector */
      00438D 74 1C            [12]12496 	mov	a,#0x1c
      00438F 2A               [12]12497 	add	a,r2
      004390 FD               [12]12498 	mov	r5,a
      004391 E4               [12]12499 	clr	a
      004392 3B               [12]12500 	addc	a,r3
      004393 FE               [12]12501 	mov	r6,a
      004394 8C 07            [24]12502 	mov	ar7,r4
      004396 8D 82            [24]12503 	mov	dpl,r5
      004398 8E 83            [24]12504 	mov	dph,r6
      00439A 8F F0            [24]12505 	mov	b,r7
      00439C E5*EB            [12]12506 	mov	a,_mount_volume_sloc0_1_0
      00439E 12r00r00         [24]12507 	lcall	__gptrput
      0043A1 A3               [24]12508 	inc	dptr
      0043A2 E5*EC            [12]12509 	mov	a,(_mount_volume_sloc0_1_0 + 1)
      0043A4 12r00r00         [24]12510 	lcall	__gptrput
      0043A7 A3               [24]12511 	inc	dptr
      0043A8 E5*ED            [12]12512 	mov	a,(_mount_volume_sloc0_1_0 + 2)
      0043AA 12r00r00         [24]12513 	lcall	__gptrput
      0043AD A3               [24]12514 	inc	dptr
      0043AE E5*EE            [12]12515 	mov	a,(_mount_volume_sloc0_1_0 + 3)
      0043B0 12r00r00         [24]12516 	lcall	__gptrput
                                  12517 ;	ff15\source\ff.c:3548: fs->fatbase = bsect + nrsv; 					/* FAT start sector */
      0043B3 74 20            [12]12518 	mov	a,#0x20
      0043B5 2A               [12]12519 	add	a,r2
      0043B6 F5*00            [12]12520 	mov	_mount_volume_sloc6_1_0,a
      0043B8 E4               [12]12521 	clr	a
      0043B9 3B               [12]12522 	addc	a,r3
      0043BA F5*01            [12]12523 	mov	(_mount_volume_sloc6_1_0 + 1),a
      0043BC 8C*02            [24]12524 	mov	(_mount_volume_sloc6_1_0 + 2),r4
      0043BE E5*F8            [12]12525 	mov	a,_mount_volume_sloc4_1_0
      0043C0 25*EB            [12]12526 	add	a,_mount_volume_sloc0_1_0
      0043C2 F8               [12]12527 	mov	r0,a
      0043C3 E5*F9            [12]12528 	mov	a,(_mount_volume_sloc4_1_0 + 1)
      0043C5 35*EC            [12]12529 	addc	a,(_mount_volume_sloc0_1_0 + 1)
      0043C7 FE               [12]12530 	mov	r6,a
      0043C8 E5*FA            [12]12531 	mov	a,(_mount_volume_sloc4_1_0 + 2)
      0043CA 35*ED            [12]12532 	addc	a,(_mount_volume_sloc0_1_0 + 2)
      0043CC F9               [12]12533 	mov	r1,a
      0043CD E5*FB            [12]12534 	mov	a,(_mount_volume_sloc4_1_0 + 3)
      0043CF 35*EE            [12]12535 	addc	a,(_mount_volume_sloc0_1_0 + 3)
      0043D1 FF               [12]12536 	mov	r7,a
      0043D2 85*00 82         [24]12537 	mov	dpl,_mount_volume_sloc6_1_0
      0043D5 85*01 83         [24]12538 	mov	dph,(_mount_volume_sloc6_1_0 + 1)
      0043D8 85*02 F0         [24]12539 	mov	b,(_mount_volume_sloc6_1_0 + 2)
      0043DB E8               [12]12540 	mov	a,r0
      0043DC 12r00r00         [24]12541 	lcall	__gptrput
      0043DF A3               [24]12542 	inc	dptr
      0043E0 EE               [12]12543 	mov	a,r6
      0043E1 12r00r00         [24]12544 	lcall	__gptrput
      0043E4 A3               [24]12545 	inc	dptr
      0043E5 E9               [12]12546 	mov	a,r1
      0043E6 12r00r00         [24]12547 	lcall	__gptrput
      0043E9 A3               [24]12548 	inc	dptr
      0043EA EF               [12]12549 	mov	a,r7
      0043EB 12r00r00         [24]12550 	lcall	__gptrput
                                  12551 ;	ff15\source\ff.c:3549: fs->database = bsect + sysect;					/* Data start sector */
      0043EE 74 28            [12]12552 	mov	a,#0x28
      0043F0 2A               [12]12553 	add	a,r2
      0043F1 FD               [12]12554 	mov	r5,a
      0043F2 E4               [12]12555 	clr	a
      0043F3 3B               [12]12556 	addc	a,r3
      0043F4 FE               [12]12557 	mov	r6,a
      0043F5 8C 07            [24]12558 	mov	ar7,r4
      0043F7 C0 02            [24]12559 	push	ar2
      0043F9 C0 03            [24]12560 	push	ar3
      0043FB C0 04            [24]12561 	push	ar4
      0043FD E5*FC            [12]12562 	mov	a,_mount_volume_sloc5_1_0
      0043FF 25*EB            [12]12563 	add	a,_mount_volume_sloc0_1_0
      004401 F8               [12]12564 	mov	r0,a
      004402 E5*FD            [12]12565 	mov	a,(_mount_volume_sloc5_1_0 + 1)
      004404 35*EC            [12]12566 	addc	a,(_mount_volume_sloc0_1_0 + 1)
      004406 F9               [12]12567 	mov	r1,a
      004407 E5*FE            [12]12568 	mov	a,(_mount_volume_sloc5_1_0 + 2)
      004409 35*ED            [12]12569 	addc	a,(_mount_volume_sloc0_1_0 + 2)
      00440B FB               [12]12570 	mov	r3,a
      00440C E5*FF            [12]12571 	mov	a,(_mount_volume_sloc5_1_0 + 3)
      00440E 35*EE            [12]12572 	addc	a,(_mount_volume_sloc0_1_0 + 3)
      004410 FC               [12]12573 	mov	r4,a
      004411 8D 82            [24]12574 	mov	dpl,r5
      004413 8E 83            [24]12575 	mov	dph,r6
      004415 8F F0            [24]12576 	mov	b,r7
      004417 E8               [12]12577 	mov	a,r0
      004418 12r00r00         [24]12578 	lcall	__gptrput
      00441B A3               [24]12579 	inc	dptr
      00441C E9               [12]12580 	mov	a,r1
      00441D 12r00r00         [24]12581 	lcall	__gptrput
      004420 A3               [24]12582 	inc	dptr
      004421 EB               [12]12583 	mov	a,r3
      004422 12r00r00         [24]12584 	lcall	__gptrput
      004425 A3               [24]12585 	inc	dptr
      004426 EC               [12]12586 	mov	a,r4
      004427 12r00r00         [24]12587 	lcall	__gptrput
                                  12588 ;	ff15\source\ff.c:3550: if (fmt == FS_FAT32) {
      00442A 74 03            [12]12589 	mov	a,#0x03
      00442C B5*F2 06         [24]12590 	cjne	a,_mount_volume_sloc2_1_0,00349$
      00442F E4               [12]12591 	clr	a
      004430 B5*F3 02         [24]12592 	cjne	a,(_mount_volume_sloc2_1_0 + 1),00349$
      004433 80 09            [24]12593 	sjmp	00350$
      004435                      12594 00349$:
      004435 D0 04            [24]12595 	pop	ar4
      004437 D0 03            [24]12596 	pop	ar3
      004439 D0 02            [24]12597 	pop	ar2
      00443B 02r45r26         [24]12598 	ljmp	00158$
      00443E                      12599 00350$:
      00443E D0 04            [24]12600 	pop	ar4
      004440 D0 03            [24]12601 	pop	ar3
      004442 D0 02            [24]12602 	pop	ar2
                                  12603 ;	ff15\source\ff.c:3551: if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
      004444 74 30            [12]12604 	mov	a,#0x30
      004446 2A               [12]12605 	add	a,r2
      004447 FD               [12]12606 	mov	r5,a
      004448 E4               [12]12607 	clr	a
      004449 3B               [12]12608 	addc	a,r3
      00444A FE               [12]12609 	mov	r6,a
      00444B 8C 07            [24]12610 	mov	ar7,r4
      00444D 74 2A            [12]12611 	mov	a,#0x2a
      00444F 2D               [12]12612 	add	a,r5
      004450 FD               [12]12613 	mov	r5,a
      004451 E4               [12]12614 	clr	a
      004452 3E               [12]12615 	addc	a,r6
      004453 FE               [12]12616 	mov	r6,a
      004454 8D 82            [24]12617 	mov	dpl,r5
      004456 8E 83            [24]12618 	mov	dph,r6
      004458 8F F0            [24]12619 	mov	b,r7
      00445A C0 04            [24]12620 	push	ar4
      00445C C0 03            [24]12621 	push	ar3
      00445E C0 02            [24]12622 	push	ar2
      004460 12r00r00         [24]12623 	lcall	_ld_word
      004463 E5 82            [12]12624 	mov	a,dpl
      004465 85 83 F0         [24]12625 	mov	b,dph
      004468 D0 02            [24]12626 	pop	ar2
      00446A D0 03            [24]12627 	pop	ar3
      00446C D0 04            [24]12628 	pop	ar4
      00446E 45 F0            [12]12629 	orl	a,b
      004470 60 04            [24]12630 	jz	00152$
      004472 75 82 0D         [24]12631 	mov	dpl,#0x0d
      004475 22               [24]12632 	ret
      004476                      12633 00152$:
                                  12634 ;	ff15\source\ff.c:3552: if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be 0) */
      004476 85*F5 82         [24]12635 	mov	dpl,_mount_volume_sloc3_1_0
      004479 85*F6 83         [24]12636 	mov	dph,(_mount_volume_sloc3_1_0 + 1)
      00447C 85*F7 F0         [24]12637 	mov	b,(_mount_volume_sloc3_1_0 + 2)
      00447F 12r00r00         [24]12638 	lcall	__gptrget
      004482 FE               [12]12639 	mov	r6,a
      004483 A3               [24]12640 	inc	dptr
      004484 12r00r00         [24]12641 	lcall	__gptrget
      004487 4E               [12]12642 	orl	a,r6
      004488 60 04            [24]12643 	jz	00154$
      00448A 75 82 0D         [24]12644 	mov	dpl,#0x0d
      00448D 22               [24]12645 	ret
      00448E                      12646 00154$:
                                  12647 ;	ff15\source\ff.c:3553: fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
      00448E 74 24            [12]12648 	mov	a,#0x24
      004490 2A               [12]12649 	add	a,r2
      004491 F5*FC            [12]12650 	mov	_mount_volume_sloc5_1_0,a
      004493 E4               [12]12651 	clr	a
      004494 3B               [12]12652 	addc	a,r3
      004495 F5*FD            [12]12653 	mov	(_mount_volume_sloc5_1_0 + 1),a
      004497 8C*FE            [24]12654 	mov	(_mount_volume_sloc5_1_0 + 2),r4
      004499 74 30            [12]12655 	mov	a,#0x30
      00449B 2A               [12]12656 	add	a,r2
      00449C F8               [12]12657 	mov	r0,a
      00449D E4               [12]12658 	clr	a
      00449E 3B               [12]12659 	addc	a,r3
      00449F F9               [12]12660 	mov	r1,a
      0044A0 8C 07            [24]12661 	mov	ar7,r4
      0044A2 74 2C            [12]12662 	mov	a,#0x2c
      0044A4 28               [12]12663 	add	a,r0
      0044A5 F8               [12]12664 	mov	r0,a
      0044A6 E4               [12]12665 	clr	a
      0044A7 39               [12]12666 	addc	a,r1
      0044A8 F9               [12]12667 	mov	r1,a
      0044A9 88 82            [24]12668 	mov	dpl,r0
      0044AB 89 83            [24]12669 	mov	dph,r1
      0044AD 8F F0            [24]12670 	mov	b,r7
      0044AF C0 04            [24]12671 	push	ar4
      0044B1 C0 03            [24]12672 	push	ar3
      0044B3 C0 02            [24]12673 	push	ar2
      0044B5 12r00r45         [24]12674 	lcall	_ld_dword
      0044B8 AD 82            [24]12675 	mov	r5,dpl
      0044BA AE 83            [24]12676 	mov	r6,dph
      0044BC A9 F0            [24]12677 	mov	r1,b
      0044BE FF               [12]12678 	mov	r7,a
      0044BF D0 02            [24]12679 	pop	ar2
      0044C1 D0 03            [24]12680 	pop	ar3
      0044C3 D0 04            [24]12681 	pop	ar4
      0044C5 85*FC 82         [24]12682 	mov	dpl,_mount_volume_sloc5_1_0
      0044C8 85*FD 83         [24]12683 	mov	dph,(_mount_volume_sloc5_1_0 + 1)
      0044CB 85*FE F0         [24]12684 	mov	b,(_mount_volume_sloc5_1_0 + 2)
      0044CE ED               [12]12685 	mov	a,r5
      0044CF 12r00r00         [24]12686 	lcall	__gptrput
      0044D2 A3               [24]12687 	inc	dptr
      0044D3 EE               [12]12688 	mov	a,r6
      0044D4 12r00r00         [24]12689 	lcall	__gptrput
      0044D7 A3               [24]12690 	inc	dptr
      0044D8 E9               [12]12691 	mov	a,r1
      0044D9 12r00r00         [24]12692 	lcall	__gptrput
      0044DC A3               [24]12693 	inc	dptr
      0044DD EF               [12]12694 	mov	a,r7
      0044DE 12r00r00         [24]12695 	lcall	__gptrput
                                  12696 ;	ff15\source\ff.c:3554: szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
      0044E1 85*04 82         [24]12697 	mov	dpl,_mount_volume_sloc7_1_0
      0044E4 85*05 83         [24]12698 	mov	dph,(_mount_volume_sloc7_1_0 + 1)
      0044E7 85*06 F0         [24]12699 	mov	b,(_mount_volume_sloc7_1_0 + 2)
      0044EA 12r00r00         [24]12700 	lcall	__gptrget
      0044ED F9               [12]12701 	mov	r1,a
      0044EE A3               [24]12702 	inc	dptr
      0044EF 12r00r00         [24]12703 	lcall	__gptrget
      0044F2 FD               [12]12704 	mov	r5,a
      0044F3 A3               [24]12705 	inc	dptr
      0044F4 12r00r00         [24]12706 	lcall	__gptrget
      0044F7 FE               [12]12707 	mov	r6,a
      0044F8 A3               [24]12708 	inc	dptr
      0044F9 12r00r00         [24]12709 	lcall	__gptrget
      0044FC FF               [12]12710 	mov	r7,a
      0044FD E9               [12]12711 	mov	a,r1
      0044FE 29               [12]12712 	add	a,r1
      0044FF F9               [12]12713 	mov	r1,a
      004500 ED               [12]12714 	mov	a,r5
      004501 33               [12]12715 	rlc	a
      004502 FD               [12]12716 	mov	r5,a
      004503 EE               [12]12717 	mov	a,r6
      004504 33               [12]12718 	rlc	a
      004505 FE               [12]12719 	mov	r6,a
      004506 EF               [12]12720 	mov	a,r7
      004507 33               [12]12721 	rlc	a
      004508 FF               [12]12722 	mov	r7,a
      004509 E9               [12]12723 	mov	a,r1
      00450A 29               [12]12724 	add	a,r1
      00450B F9               [12]12725 	mov	r1,a
      00450C ED               [12]12726 	mov	a,r5
      00450D 33               [12]12727 	rlc	a
      00450E FD               [12]12728 	mov	r5,a
      00450F EE               [12]12729 	mov	a,r6
      004510 33               [12]12730 	rlc	a
      004511 FE               [12]12731 	mov	r6,a
      004512 EF               [12]12732 	mov	a,r7
      004513 33               [12]12733 	rlc	a
      004514 FF               [12]12734 	mov	r7,a
      004515 90r00rF9         [24]12735 	mov	dptr,#_mount_volume_szbfat_65536_224
      004518 E9               [12]12736 	mov	a,r1
      004519 F0               [24]12737 	movx	@dptr,a
      00451A ED               [12]12738 	mov	a,r5
      00451B A3               [24]12739 	inc	dptr
      00451C F0               [24]12740 	movx	@dptr,a
      00451D EE               [12]12741 	mov	a,r6
      00451E A3               [24]12742 	inc	dptr
      00451F F0               [24]12743 	movx	@dptr,a
      004520 EF               [12]12744 	mov	a,r7
      004521 A3               [24]12745 	inc	dptr
      004522 F0               [24]12746 	movx	@dptr,a
      004523 02r46r68         [24]12747 	ljmp	00159$
      004526                      12748 00158$:
                                  12749 ;	ff15\source\ff.c:3556: if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
      004526 85*F5 82         [24]12750 	mov	dpl,_mount_volume_sloc3_1_0
      004529 85*F6 83         [24]12751 	mov	dph,(_mount_volume_sloc3_1_0 + 1)
      00452C 85*F7 F0         [24]12752 	mov	b,(_mount_volume_sloc3_1_0 + 2)
      00452F 12r00r00         [24]12753 	lcall	__gptrget
      004532 FE               [12]12754 	mov	r6,a
      004533 A3               [24]12755 	inc	dptr
      004534 12r00r00         [24]12756 	lcall	__gptrget
      004537 4E               [12]12757 	orl	a,r6
      004538 70 04            [24]12758 	jnz	00156$
      00453A 75 82 0D         [24]12759 	mov	dpl,#0x0d
      00453D 22               [24]12760 	ret
      00453E                      12761 00156$:
                                  12762 ;	ff15\source\ff.c:3557: fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
      00453E 74 24            [12]12763 	mov	a,#0x24
      004540 2A               [12]12764 	add	a,r2
      004541 F5*FC            [12]12765 	mov	_mount_volume_sloc5_1_0,a
      004543 E4               [12]12766 	clr	a
      004544 3B               [12]12767 	addc	a,r3
      004545 F5*FD            [12]12768 	mov	(_mount_volume_sloc5_1_0 + 1),a
      004547 8C*FE            [24]12769 	mov	(_mount_volume_sloc5_1_0 + 2),r4
      004549 C0 02            [24]12770 	push	ar2
      00454B C0 03            [24]12771 	push	ar3
      00454D C0 04            [24]12772 	push	ar4
      00454F 85*00 82         [24]12773 	mov	dpl,_mount_volume_sloc6_1_0
      004552 85*01 83         [24]12774 	mov	dph,(_mount_volume_sloc6_1_0 + 1)
      004555 85*02 F0         [24]12775 	mov	b,(_mount_volume_sloc6_1_0 + 2)
      004558 12r00r00         [24]12776 	lcall	__gptrget
      00455B F8               [12]12777 	mov	r0,a
      00455C A3               [24]12778 	inc	dptr
      00455D 12r00r00         [24]12779 	lcall	__gptrget
      004560 F9               [12]12780 	mov	r1,a
      004561 A3               [24]12781 	inc	dptr
      004562 12r00r00         [24]12782 	lcall	__gptrget
      004565 FB               [12]12783 	mov	r3,a
      004566 A3               [24]12784 	inc	dptr
      004567 12r00r00         [24]12785 	lcall	__gptrget
      00456A FC               [12]12786 	mov	r4,a
      00456B 90r00rF5         [24]12787 	mov	dptr,#_mount_volume_fasize_65536_224
      00456E E0               [24]12788 	movx	a,@dptr
      00456F FA               [12]12789 	mov	r2,a
      004570 A3               [24]12790 	inc	dptr
      004571 E0               [24]12791 	movx	a,@dptr
      004572 FD               [12]12792 	mov	r5,a
      004573 A3               [24]12793 	inc	dptr
      004574 E0               [24]12794 	movx	a,@dptr
      004575 FE               [12]12795 	mov	r6,a
      004576 A3               [24]12796 	inc	dptr
      004577 E0               [24]12797 	movx	a,@dptr
      004578 FF               [12]12798 	mov	r7,a
      004579 EA               [12]12799 	mov	a,r2
      00457A 28               [12]12800 	add	a,r0
      00457B F8               [12]12801 	mov	r0,a
      00457C ED               [12]12802 	mov	a,r5
      00457D 39               [12]12803 	addc	a,r1
      00457E F9               [12]12804 	mov	r1,a
      00457F EE               [12]12805 	mov	a,r6
      004580 3B               [12]12806 	addc	a,r3
      004581 FB               [12]12807 	mov	r3,a
      004582 EF               [12]12808 	mov	a,r7
      004583 3C               [12]12809 	addc	a,r4
      004584 FC               [12]12810 	mov	r4,a
      004585 85*FC 82         [24]12811 	mov	dpl,_mount_volume_sloc5_1_0
      004588 85*FD 83         [24]12812 	mov	dph,(_mount_volume_sloc5_1_0 + 1)
      00458B 85*FE F0         [24]12813 	mov	b,(_mount_volume_sloc5_1_0 + 2)
      00458E E8               [12]12814 	mov	a,r0
      00458F 12r00r00         [24]12815 	lcall	__gptrput
      004592 A3               [24]12816 	inc	dptr
      004593 E9               [12]12817 	mov	a,r1
      004594 12r00r00         [24]12818 	lcall	__gptrput
      004597 A3               [24]12819 	inc	dptr
      004598 EB               [12]12820 	mov	a,r3
      004599 12r00r00         [24]12821 	lcall	__gptrput
      00459C A3               [24]12822 	inc	dptr
      00459D EC               [12]12823 	mov	a,r4
      00459E 12r00r00         [24]12824 	lcall	__gptrput
                                  12825 ;	ff15\source\ff.c:3558: szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
      0045A1 74 02            [12]12826 	mov	a,#0x02
      0045A3 B5*F2 06         [24]12827 	cjne	a,_mount_volume_sloc2_1_0,00354$
      0045A6 E4               [12]12828 	clr	a
      0045A7 B5*F3 02         [24]12829 	cjne	a,(_mount_volume_sloc2_1_0 + 1),00354$
      0045AA 80 08            [24]12830 	sjmp	00355$
      0045AC                      12831 00354$:
      0045AC D0 04            [24]12832 	pop	ar4
      0045AE D0 03            [24]12833 	pop	ar3
      0045B0 D0 02            [24]12834 	pop	ar2
      0045B2 80 30            [24]12835 	sjmp	00172$
      0045B4                      12836 00355$:
      0045B4 D0 04            [24]12837 	pop	ar4
      0045B6 D0 03            [24]12838 	pop	ar3
      0045B8 D0 02            [24]12839 	pop	ar2
                                  12840 ;	ff15\source\ff.c:3559: fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
      0045BA 85*04 82         [24]12841 	mov	dpl,_mount_volume_sloc7_1_0
      0045BD 85*05 83         [24]12842 	mov	dph,(_mount_volume_sloc7_1_0 + 1)
      0045C0 85*06 F0         [24]12843 	mov	b,(_mount_volume_sloc7_1_0 + 2)
      0045C3 12r00r00         [24]12844 	lcall	__gptrget
      0045C6 F9               [12]12845 	mov	r1,a
      0045C7 A3               [24]12846 	inc	dptr
      0045C8 12r00r00         [24]12847 	lcall	__gptrget
      0045CB FD               [12]12848 	mov	r5,a
      0045CC A3               [24]12849 	inc	dptr
      0045CD 12r00r00         [24]12850 	lcall	__gptrget
      0045D0 FE               [12]12851 	mov	r6,a
      0045D1 A3               [24]12852 	inc	dptr
      0045D2 12r00r00         [24]12853 	lcall	__gptrget
      0045D5 FF               [12]12854 	mov	r7,a
      0045D6 E9               [12]12855 	mov	a,r1
      0045D7 29               [12]12856 	add	a,r1
      0045D8 F9               [12]12857 	mov	r1,a
      0045D9 ED               [12]12858 	mov	a,r5
      0045DA 33               [12]12859 	rlc	a
      0045DB FD               [12]12860 	mov	r5,a
      0045DC EE               [12]12861 	mov	a,r6
      0045DD 33               [12]12862 	rlc	a
      0045DE FE               [12]12863 	mov	r6,a
      0045DF EF               [12]12864 	mov	a,r7
      0045E0 33               [12]12865 	rlc	a
      0045E1 FF               [12]12866 	mov	r7,a
      0045E2 80 76            [24]12867 	sjmp	00173$
      0045E4                      12868 00172$:
      0045E4 C0 02            [24]12869 	push	ar2
      0045E6 C0 03            [24]12870 	push	ar3
      0045E8 C0 04            [24]12871 	push	ar4
      0045EA 85*04 82         [24]12872 	mov	dpl,_mount_volume_sloc7_1_0
      0045ED 85*05 83         [24]12873 	mov	dph,(_mount_volume_sloc7_1_0 + 1)
      0045F0 85*06 F0         [24]12874 	mov	b,(_mount_volume_sloc7_1_0 + 2)
      0045F3 12r00r00         [24]12875 	lcall	__gptrget
      0045F6 F5*00            [12]12876 	mov	_mount_volume_sloc6_1_0,a
      0045F8 A3               [24]12877 	inc	dptr
      0045F9 12r00r00         [24]12878 	lcall	__gptrget
      0045FC F5*01            [12]12879 	mov	(_mount_volume_sloc6_1_0 + 1),a
      0045FE A3               [24]12880 	inc	dptr
      0045FF 12r00r00         [24]12881 	lcall	__gptrget
      004602 F5*02            [12]12882 	mov	(_mount_volume_sloc6_1_0 + 2),a
      004604 A3               [24]12883 	inc	dptr
      004605 12r00r00         [24]12884 	lcall	__gptrget
      004608 F5*03            [12]12885 	mov	(_mount_volume_sloc6_1_0 + 3),a
      00460A 90r00r00         [24]12886 	mov	dptr,#__mullong_PARM_2
      00460D E5*00            [12]12887 	mov	a,_mount_volume_sloc6_1_0
      00460F F0               [24]12888 	movx	@dptr,a
      004610 E5*01            [12]12889 	mov	a,(_mount_volume_sloc6_1_0 + 1)
      004612 A3               [24]12890 	inc	dptr
      004613 F0               [24]12891 	movx	@dptr,a
      004614 E5*02            [12]12892 	mov	a,(_mount_volume_sloc6_1_0 + 2)
      004616 A3               [24]12893 	inc	dptr
      004617 F0               [24]12894 	movx	@dptr,a
      004618 E5*03            [12]12895 	mov	a,(_mount_volume_sloc6_1_0 + 3)
      00461A A3               [24]12896 	inc	dptr
      00461B F0               [24]12897 	movx	@dptr,a
      00461C 90 00 03         [24]12898 	mov	dptr,#(0x03&0x00ff)
      00461F E4               [12]12899 	clr	a
      004620 F5 F0            [12]12900 	mov	b,a
      004622 12r00r00         [24]12901 	lcall	__mullong
      004625 A8 82            [24]12902 	mov	r0,dpl
      004627 AA 83            [24]12903 	mov	r2,dph
      004629 AB F0            [24]12904 	mov	r3,b
      00462B C3               [12]12905 	clr	c
      00462C 13               [12]12906 	rrc	a
      00462D F5*FF            [12]12907 	mov	(_mount_volume_sloc5_1_0 + 3),a
      00462F EB               [12]12908 	mov	a,r3
      004630 13               [12]12909 	rrc	a
      004631 F5*FE            [12]12910 	mov	(_mount_volume_sloc5_1_0 + 2),a
      004633 EA               [12]12911 	mov	a,r2
      004634 13               [12]12912 	rrc	a
      004635 F5*FD            [12]12913 	mov	(_mount_volume_sloc5_1_0 + 1),a
      004637 E8               [12]12914 	mov	a,r0
      004638 13               [12]12915 	rrc	a
      004639 F5*FC            [12]12916 	mov	_mount_volume_sloc5_1_0,a
      00463B 74 01            [12]12917 	mov	a,#0x01
      00463D 55*00            [12]12918 	anl	a,_mount_volume_sloc6_1_0
      00463F F8               [12]12919 	mov	r0,a
      004640 E4               [12]12920 	clr	a
      004641 FA               [12]12921 	mov	r2,a
      004642 FB               [12]12922 	mov	r3,a
      004643 FC               [12]12923 	mov	r4,a
      004644 E8               [12]12924 	mov	a,r0
      004645 25*FC            [12]12925 	add	a,_mount_volume_sloc5_1_0
      004647 F9               [12]12926 	mov	r1,a
      004648 EA               [12]12927 	mov	a,r2
      004649 35*FD            [12]12928 	addc	a,(_mount_volume_sloc5_1_0 + 1)
      00464B FD               [12]12929 	mov	r5,a
      00464C EB               [12]12930 	mov	a,r3
      00464D 35*FE            [12]12931 	addc	a,(_mount_volume_sloc5_1_0 + 2)
      00464F FE               [12]12932 	mov	r6,a
      004650 EC               [12]12933 	mov	a,r4
      004651 35*FF            [12]12934 	addc	a,(_mount_volume_sloc5_1_0 + 3)
      004653 FF               [12]12935 	mov	r7,a
                                  12936 ;	ff15\source\ff.c:3603: return FR_OK;
      004654 D0 04            [24]12937 	pop	ar4
      004656 D0 03            [24]12938 	pop	ar3
      004658 D0 02            [24]12939 	pop	ar2
                                  12940 ;	ff15\source\ff.c:3559: fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
      00465A                      12941 00173$:
      00465A 90r00rF9         [24]12942 	mov	dptr,#_mount_volume_szbfat_65536_224
      00465D E9               [12]12943 	mov	a,r1
      00465E F0               [24]12944 	movx	@dptr,a
      00465F ED               [12]12945 	mov	a,r5
      004660 A3               [24]12946 	inc	dptr
      004661 F0               [24]12947 	movx	@dptr,a
      004662 EE               [12]12948 	mov	a,r6
      004663 A3               [24]12949 	inc	dptr
      004664 F0               [24]12950 	movx	@dptr,a
      004665 EF               [12]12951 	mov	a,r7
      004666 A3               [24]12952 	inc	dptr
      004667 F0               [24]12953 	movx	@dptr,a
      004668                      12954 00159$:
                                  12955 ;	ff15\source\ff.c:3561: if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
      004668 C0 02            [24]12956 	push	ar2
      00466A C0 03            [24]12957 	push	ar3
      00466C C0 04            [24]12958 	push	ar4
      00466E 85*EF 82         [24]12959 	mov	dpl,_mount_volume_sloc1_1_0
      004671 85*F0 83         [24]12960 	mov	dph,(_mount_volume_sloc1_1_0 + 1)
      004674 85*F1 F0         [24]12961 	mov	b,(_mount_volume_sloc1_1_0 + 2)
      004677 12r00r00         [24]12962 	lcall	__gptrget
      00467A F9               [12]12963 	mov	r1,a
      00467B A3               [24]12964 	inc	dptr
      00467C 12r00r00         [24]12965 	lcall	__gptrget
      00467F FD               [12]12966 	mov	r5,a
      004680 A3               [24]12967 	inc	dptr
      004681 12r00r00         [24]12968 	lcall	__gptrget
      004684 FE               [12]12969 	mov	r6,a
      004685 A3               [24]12970 	inc	dptr
      004686 12r00r00         [24]12971 	lcall	__gptrget
      004689 FF               [12]12972 	mov	r7,a
      00468A 90r00rF9         [24]12973 	mov	dptr,#_mount_volume_szbfat_65536_224
      00468D E0               [24]12974 	movx	a,@dptr
      00468E F8               [12]12975 	mov	r0,a
      00468F A3               [24]12976 	inc	dptr
      004690 E0               [24]12977 	movx	a,@dptr
      004691 FA               [12]12978 	mov	r2,a
      004692 A3               [24]12979 	inc	dptr
      004693 E0               [24]12980 	movx	a,@dptr
      004694 FB               [12]12981 	mov	r3,a
      004695 A3               [24]12982 	inc	dptr
      004696 E0               [24]12983 	movx	a,@dptr
      004697 FC               [12]12984 	mov	r4,a
      004698 74 FF            [12]12985 	mov	a,#0xff
      00469A 28               [12]12986 	add	a,r0
      00469B 74 01            [12]12987 	mov	a,#0x01
      00469D 3A               [12]12988 	addc	a,r2
      00469E FA               [12]12989 	mov	r2,a
      00469F E4               [12]12990 	clr	a
      0046A0 3B               [12]12991 	addc	a,r3
      0046A1 FB               [12]12992 	mov	r3,a
      0046A2 E4               [12]12993 	clr	a
      0046A3 3C               [12]12994 	addc	a,r4
      0046A4 7C 00            [12]12995 	mov	r4,#0x00
      0046A6 C3               [12]12996 	clr	c
      0046A7 13               [12]12997 	rrc	a
      0046A8 CB               [12]12998 	xch	a,r3
      0046A9 13               [12]12999 	rrc	a
      0046AA CA               [12]13000 	xch	a,r2
      0046AB 13               [12]13001 	rrc	a
      0046AC F8               [12]13002 	mov	r0,a
      0046AD C3               [12]13003 	clr	c
      0046AE E9               [12]13004 	mov	a,r1
      0046AF 98               [12]13005 	subb	a,r0
      0046B0 ED               [12]13006 	mov	a,r5
      0046B1 9A               [12]13007 	subb	a,r2
      0046B2 EE               [12]13008 	mov	a,r6
      0046B3 9B               [12]13009 	subb	a,r3
      0046B4 EF               [12]13010 	mov	a,r7
      0046B5 9C               [12]13011 	subb	a,r4
      0046B6 D0 04            [24]13012 	pop	ar4
      0046B8 D0 03            [24]13013 	pop	ar3
      0046BA D0 02            [24]13014 	pop	ar2
      0046BC 50 04            [24]13015 	jnc	00161$
      0046BE 75 82 0D         [24]13016 	mov	dpl,#0x0d
      0046C1 22               [24]13017 	ret
      0046C2                      13018 00161$:
                                  13019 ;	ff15\source\ff.c:3565: fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
      0046C2 74 0C            [12]13020 	mov	a,#0x0c
      0046C4 2A               [12]13021 	add	a,r2
      0046C5 F5*04            [12]13022 	mov	_mount_volume_sloc7_1_0,a
      0046C7 E4               [12]13023 	clr	a
      0046C8 3B               [12]13024 	addc	a,r3
      0046C9 F5*05            [12]13025 	mov	(_mount_volume_sloc7_1_0 + 1),a
      0046CB 8C*06            [24]13026 	mov	(_mount_volume_sloc7_1_0 + 2),r4
      0046CD 74 10            [12]13027 	mov	a,#0x10
      0046CF 2A               [12]13028 	add	a,r2
      0046D0 F8               [12]13029 	mov	r0,a
      0046D1 E4               [12]13030 	clr	a
      0046D2 3B               [12]13031 	addc	a,r3
      0046D3 F9               [12]13032 	mov	r1,a
      0046D4 8C 07            [24]13033 	mov	ar7,r4
      0046D6 88 82            [24]13034 	mov	dpl,r0
      0046D8 89 83            [24]13035 	mov	dph,r1
      0046DA 8F F0            [24]13036 	mov	b,r7
      0046DC 74 FF            [12]13037 	mov	a,#0xff
      0046DE 12r00r00         [24]13038 	lcall	__gptrput
      0046E1 A3               [24]13039 	inc	dptr
      0046E2 12r00r00         [24]13040 	lcall	__gptrput
      0046E5 A3               [24]13041 	inc	dptr
      0046E6 12r00r00         [24]13042 	lcall	__gptrput
      0046E9 A3               [24]13043 	inc	dptr
      0046EA 12r00r00         [24]13044 	lcall	__gptrput
      0046ED 85*04 82         [24]13045 	mov	dpl,_mount_volume_sloc7_1_0
      0046F0 85*05 83         [24]13046 	mov	dph,(_mount_volume_sloc7_1_0 + 1)
      0046F3 85*06 F0         [24]13047 	mov	b,(_mount_volume_sloc7_1_0 + 2)
      0046F6 12r00r00         [24]13048 	lcall	__gptrput
      0046F9 A3               [24]13049 	inc	dptr
      0046FA 12r00r00         [24]13050 	lcall	__gptrput
      0046FD A3               [24]13051 	inc	dptr
      0046FE 12r00r00         [24]13052 	lcall	__gptrput
      004701 A3               [24]13053 	inc	dptr
      004702 12r00r00         [24]13054 	lcall	__gptrput
                                  13055 ;	ff15\source\ff.c:3566: fs->fsi_flag = 0x80;
      004705 74 05            [12]13056 	mov	a,#0x05
      004707 2A               [12]13057 	add	a,r2
      004708 FD               [12]13058 	mov	r5,a
      004709 E4               [12]13059 	clr	a
      00470A 3B               [12]13060 	addc	a,r3
      00470B FE               [12]13061 	mov	r6,a
      00470C 8C 07            [24]13062 	mov	ar7,r4
      00470E 8D 82            [24]13063 	mov	dpl,r5
      004710 8E 83            [24]13064 	mov	dph,r6
      004712 8F F0            [24]13065 	mov	b,r7
      004714 74 80            [12]13066 	mov	a,#0x80
      004716 12r00r00         [24]13067 	lcall	__gptrput
                                  13068 ;	ff15\source\ff.c:3569: && ld_word(fs->win + BPB_FSInfo32) == 1
      004719 90r00rFD         [24]13069 	mov	dptr,#_mount_volume_fmt_65536_224
      00471C E0               [24]13070 	movx	a,@dptr
      00471D FE               [12]13071 	mov	r6,a
      00471E A3               [24]13072 	inc	dptr
      00471F E0               [24]13073 	movx	a,@dptr
      004720 FF               [12]13074 	mov	r7,a
      004721 BE 03 05         [24]13075 	cjne	r6,#0x03,00357$
      004724 BF 00 02         [24]13076 	cjne	r7,#0x00,00357$
      004727 80 03            [24]13077 	sjmp	00358$
      004729                      13078 00357$:
      004729 02r48rFF         [24]13079 	ljmp	00167$
      00472C                      13080 00358$:
      00472C 74 30            [12]13081 	mov	a,#0x30
      00472E 2A               [12]13082 	add	a,r2
      00472F FD               [12]13083 	mov	r5,a
      004730 E4               [12]13084 	clr	a
      004731 3B               [12]13085 	addc	a,r3
      004732 FE               [12]13086 	mov	r6,a
      004733 8C 07            [24]13087 	mov	ar7,r4
      004735 74 30            [12]13088 	mov	a,#0x30
      004737 2D               [12]13089 	add	a,r5
      004738 FD               [12]13090 	mov	r5,a
      004739 E4               [12]13091 	clr	a
      00473A 3E               [12]13092 	addc	a,r6
      00473B FE               [12]13093 	mov	r6,a
      00473C 8D 82            [24]13094 	mov	dpl,r5
      00473E 8E 83            [24]13095 	mov	dph,r6
      004740 8F F0            [24]13096 	mov	b,r7
      004742 C0 04            [24]13097 	push	ar4
      004744 C0 03            [24]13098 	push	ar3
      004746 C0 02            [24]13099 	push	ar2
      004748 12r00r00         [24]13100 	lcall	_ld_word
      00474B AE 82            [24]13101 	mov	r6,dpl
      00474D AF 83            [24]13102 	mov	r7,dph
      00474F D0 02            [24]13103 	pop	ar2
      004751 D0 03            [24]13104 	pop	ar3
      004753 D0 04            [24]13105 	pop	ar4
      004755 BE 01 05         [24]13106 	cjne	r6,#0x01,00359$
      004758 BF 00 02         [24]13107 	cjne	r7,#0x00,00359$
      00475B 80 03            [24]13108 	sjmp	00360$
      00475D                      13109 00359$:
      00475D 02r48rFF         [24]13110 	ljmp	00167$
      004760                      13111 00360$:
                                  13112 ;	ff15\source\ff.c:3570: && move_window(fs, bsect + 1) == FR_OK)
      004760 90r00r1D         [24]13113 	mov	dptr,#_move_window_PARM_2
      004763 74 01            [12]13114 	mov	a,#0x01
      004765 25*EB            [12]13115 	add	a,_mount_volume_sloc0_1_0
      004767 F0               [24]13116 	movx	@dptr,a
      004768 E4               [12]13117 	clr	a
      004769 35*EC            [12]13118 	addc	a,(_mount_volume_sloc0_1_0 + 1)
      00476B A3               [24]13119 	inc	dptr
      00476C F0               [24]13120 	movx	@dptr,a
      00476D E4               [12]13121 	clr	a
      00476E 35*ED            [12]13122 	addc	a,(_mount_volume_sloc0_1_0 + 2)
      004770 A3               [24]13123 	inc	dptr
      004771 F0               [24]13124 	movx	@dptr,a
      004772 E4               [12]13125 	clr	a
      004773 35*EE            [12]13126 	addc	a,(_mount_volume_sloc0_1_0 + 3)
      004775 A3               [24]13127 	inc	dptr
      004776 F0               [24]13128 	movx	@dptr,a
      004777 8A 82            [24]13129 	mov	dpl,r2
      004779 8B 83            [24]13130 	mov	dph,r3
      00477B 8C F0            [24]13131 	mov	b,r4
      00477D C0 04            [24]13132 	push	ar4
      00477F C0 03            [24]13133 	push	ar3
      004781 C0 02            [24]13134 	push	ar2
      004783 12r05r18         [24]13135 	lcall	_move_window
      004786 E5 82            [12]13136 	mov	a,dpl
      004788 D0 02            [24]13137 	pop	ar2
      00478A D0 03            [24]13138 	pop	ar3
      00478C D0 04            [24]13139 	pop	ar4
      00478E 60 03            [24]13140 	jz	00361$
      004790 02r48rFF         [24]13141 	ljmp	00167$
      004793                      13142 00361$:
                                  13143 ;	ff15\source\ff.c:3572: fs->fsi_flag = 0;
      004793 74 05            [12]13144 	mov	a,#0x05
      004795 2A               [12]13145 	add	a,r2
      004796 FD               [12]13146 	mov	r5,a
      004797 E4               [12]13147 	clr	a
      004798 3B               [12]13148 	addc	a,r3
      004799 FE               [12]13149 	mov	r6,a
      00479A 8C 07            [24]13150 	mov	ar7,r4
      00479C 8D 82            [24]13151 	mov	dpl,r5
      00479E 8E 83            [24]13152 	mov	dph,r6
      0047A0 8F F0            [24]13153 	mov	b,r7
      0047A2 E4               [12]13154 	clr	a
      0047A3 12r00r00         [24]13155 	lcall	__gptrput
                                  13156 ;	ff15\source\ff.c:3573: if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
      0047A6 74 30            [12]13157 	mov	a,#0x30
      0047A8 2A               [12]13158 	add	a,r2
      0047A9 FD               [12]13159 	mov	r5,a
      0047AA E4               [12]13160 	clr	a
      0047AB 3B               [12]13161 	addc	a,r3
      0047AC FE               [12]13162 	mov	r6,a
      0047AD 8C 07            [24]13163 	mov	ar7,r4
      0047AF 74 FE            [12]13164 	mov	a,#0xfe
      0047B1 2D               [12]13165 	add	a,r5
      0047B2 FD               [12]13166 	mov	r5,a
      0047B3 74 01            [12]13167 	mov	a,#0x01
      0047B5 3E               [12]13168 	addc	a,r6
      0047B6 FE               [12]13169 	mov	r6,a
      0047B7 8D 82            [24]13170 	mov	dpl,r5
      0047B9 8E 83            [24]13171 	mov	dph,r6
      0047BB 8F F0            [24]13172 	mov	b,r7
      0047BD C0 04            [24]13173 	push	ar4
      0047BF C0 03            [24]13174 	push	ar3
      0047C1 C0 02            [24]13175 	push	ar2
      0047C3 12r00r00         [24]13176 	lcall	_ld_word
      0047C6 AE 82            [24]13177 	mov	r6,dpl
      0047C8 AF 83            [24]13178 	mov	r7,dph
      0047CA D0 02            [24]13179 	pop	ar2
      0047CC D0 03            [24]13180 	pop	ar3
      0047CE D0 04            [24]13181 	pop	ar4
      0047D0 BE 55 05         [24]13182 	cjne	r6,#0x55,00362$
      0047D3 BF AA 02         [24]13183 	cjne	r7,#0xaa,00362$
      0047D6 80 03            [24]13184 	sjmp	00363$
      0047D8                      13185 00362$:
      0047D8 02r48rFF         [24]13186 	ljmp	00167$
      0047DB                      13187 00363$:
                                  13188 ;	ff15\source\ff.c:3574: && ld_dword(fs->win + FSI_LeadSig) == 0x41615252
      0047DB 74 30            [12]13189 	mov	a,#0x30
      0047DD 2A               [12]13190 	add	a,r2
      0047DE FD               [12]13191 	mov	r5,a
      0047DF E4               [12]13192 	clr	a
      0047E0 3B               [12]13193 	addc	a,r3
      0047E1 FE               [12]13194 	mov	r6,a
      0047E2 8C 07            [24]13195 	mov	ar7,r4
      0047E4 8D 82            [24]13196 	mov	dpl,r5
      0047E6 8E 83            [24]13197 	mov	dph,r6
      0047E8 8F F0            [24]13198 	mov	b,r7
      0047EA C0 04            [24]13199 	push	ar4
      0047EC C0 03            [24]13200 	push	ar3
      0047EE C0 02            [24]13201 	push	ar2
      0047F0 12r00r45         [24]13202 	lcall	_ld_dword
      0047F3 A9 82            [24]13203 	mov	r1,dpl
      0047F5 AD 83            [24]13204 	mov	r5,dph
      0047F7 AE F0            [24]13205 	mov	r6,b
      0047F9 FF               [12]13206 	mov	r7,a
      0047FA D0 02            [24]13207 	pop	ar2
      0047FC D0 03            [24]13208 	pop	ar3
      0047FE D0 04            [24]13209 	pop	ar4
      004800 B9 52 0B         [24]13210 	cjne	r1,#0x52,00364$
      004803 BD 52 08         [24]13211 	cjne	r5,#0x52,00364$
      004806 BE 61 05         [24]13212 	cjne	r6,#0x61,00364$
      004809 BF 41 02         [24]13213 	cjne	r7,#0x41,00364$
      00480C 80 03            [24]13214 	sjmp	00365$
      00480E                      13215 00364$:
      00480E 02r48rFF         [24]13216 	ljmp	00167$
      004811                      13217 00365$:
                                  13218 ;	ff15\source\ff.c:3575: && ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
      004811 74 30            [12]13219 	mov	a,#0x30
      004813 2A               [12]13220 	add	a,r2
      004814 FD               [12]13221 	mov	r5,a
      004815 E4               [12]13222 	clr	a
      004816 3B               [12]13223 	addc	a,r3
      004817 FE               [12]13224 	mov	r6,a
      004818 8C 07            [24]13225 	mov	ar7,r4
      00481A 74 E4            [12]13226 	mov	a,#0xe4
      00481C 2D               [12]13227 	add	a,r5
      00481D FD               [12]13228 	mov	r5,a
      00481E 74 01            [12]13229 	mov	a,#0x01
      004820 3E               [12]13230 	addc	a,r6
      004821 FE               [12]13231 	mov	r6,a
      004822 8D 82            [24]13232 	mov	dpl,r5
      004824 8E 83            [24]13233 	mov	dph,r6
      004826 8F F0            [24]13234 	mov	b,r7
      004828 C0 04            [24]13235 	push	ar4
      00482A C0 03            [24]13236 	push	ar3
      00482C C0 02            [24]13237 	push	ar2
      00482E 12r00r45         [24]13238 	lcall	_ld_dword
      004831 A9 82            [24]13239 	mov	r1,dpl
      004833 AD 83            [24]13240 	mov	r5,dph
      004835 AE F0            [24]13241 	mov	r6,b
      004837 FF               [12]13242 	mov	r7,a
      004838 D0 02            [24]13243 	pop	ar2
      00483A D0 03            [24]13244 	pop	ar3
      00483C D0 04            [24]13245 	pop	ar4
      00483E B9 72 0B         [24]13246 	cjne	r1,#0x72,00366$
      004841 BD 72 08         [24]13247 	cjne	r5,#0x72,00366$
      004844 BE 41 05         [24]13248 	cjne	r6,#0x41,00366$
      004847 BF 61 02         [24]13249 	cjne	r7,#0x61,00366$
      00484A 80 03            [24]13250 	sjmp	00367$
      00484C                      13251 00366$:
      00484C 02r48rFF         [24]13252 	ljmp	00167$
      00484F                      13253 00367$:
                                  13254 ;	ff15\source\ff.c:3578: fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
      00484F 74 10            [12]13255 	mov	a,#0x10
      004851 2A               [12]13256 	add	a,r2
      004852 F5*04            [12]13257 	mov	_mount_volume_sloc7_1_0,a
      004854 E4               [12]13258 	clr	a
      004855 3B               [12]13259 	addc	a,r3
      004856 F5*05            [12]13260 	mov	(_mount_volume_sloc7_1_0 + 1),a
      004858 8C*06            [24]13261 	mov	(_mount_volume_sloc7_1_0 + 2),r4
      00485A 74 30            [12]13262 	mov	a,#0x30
      00485C 2A               [12]13263 	add	a,r2
      00485D F5*00            [12]13264 	mov	_mount_volume_sloc6_1_0,a
      00485F E4               [12]13265 	clr	a
      004860 3B               [12]13266 	addc	a,r3
      004861 F5*01            [12]13267 	mov	(_mount_volume_sloc6_1_0 + 1),a
      004863 8C*02            [24]13268 	mov	(_mount_volume_sloc6_1_0 + 2),r4
      004865 74 E8            [12]13269 	mov	a,#0xe8
      004867 25*00            [12]13270 	add	a,_mount_volume_sloc6_1_0
      004869 FD               [12]13271 	mov	r5,a
      00486A 74 01            [12]13272 	mov	a,#0x01
      00486C 35*01            [12]13273 	addc	a,(_mount_volume_sloc6_1_0 + 1)
      00486E FE               [12]13274 	mov	r6,a
      00486F AF*02            [24]13275 	mov	r7,(_mount_volume_sloc6_1_0 + 2)
      004871 8D 82            [24]13276 	mov	dpl,r5
      004873 8E 83            [24]13277 	mov	dph,r6
      004875 8F F0            [24]13278 	mov	b,r7
      004877 C0 04            [24]13279 	push	ar4
      004879 C0 03            [24]13280 	push	ar3
      00487B C0 02            [24]13281 	push	ar2
      00487D 12r00r45         [24]13282 	lcall	_ld_dword
      004880 AD 82            [24]13283 	mov	r5,dpl
      004882 AE 83            [24]13284 	mov	r6,dph
      004884 A9 F0            [24]13285 	mov	r1,b
      004886 FF               [12]13286 	mov	r7,a
      004887 D0 02            [24]13287 	pop	ar2
      004889 D0 03            [24]13288 	pop	ar3
      00488B D0 04            [24]13289 	pop	ar4
      00488D 85*04 82         [24]13290 	mov	dpl,_mount_volume_sloc7_1_0
      004890 85*05 83         [24]13291 	mov	dph,(_mount_volume_sloc7_1_0 + 1)
      004893 85*06 F0         [24]13292 	mov	b,(_mount_volume_sloc7_1_0 + 2)
      004896 ED               [12]13293 	mov	a,r5
      004897 12r00r00         [24]13294 	lcall	__gptrput
      00489A A3               [24]13295 	inc	dptr
      00489B EE               [12]13296 	mov	a,r6
      00489C 12r00r00         [24]13297 	lcall	__gptrput
      00489F A3               [24]13298 	inc	dptr
      0048A0 E9               [12]13299 	mov	a,r1
      0048A1 12r00r00         [24]13300 	lcall	__gptrput
      0048A4 A3               [24]13301 	inc	dptr
      0048A5 EF               [12]13302 	mov	a,r7
      0048A6 12r00r00         [24]13303 	lcall	__gptrput
                                  13304 ;	ff15\source\ff.c:3581: fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
      0048A9 74 0C            [12]13305 	mov	a,#0x0c
      0048AB 2A               [12]13306 	add	a,r2
      0048AC FD               [12]13307 	mov	r5,a
      0048AD E4               [12]13308 	clr	a
      0048AE 3B               [12]13309 	addc	a,r3
      0048AF FE               [12]13310 	mov	r6,a
      0048B0 8C 07            [24]13311 	mov	ar7,r4
      0048B2 C0 02            [24]13312 	push	ar2
      0048B4 C0 03            [24]13313 	push	ar3
      0048B6 C0 04            [24]13314 	push	ar4
      0048B8 74 EC            [12]13315 	mov	a,#0xec
      0048BA 25*00            [12]13316 	add	a,_mount_volume_sloc6_1_0
      0048BC F8               [12]13317 	mov	r0,a
      0048BD 74 01            [12]13318 	mov	a,#0x01
      0048BF 35*01            [12]13319 	addc	a,(_mount_volume_sloc6_1_0 + 1)
      0048C1 F9               [12]13320 	mov	r1,a
      0048C2 AC*02            [24]13321 	mov	r4,(_mount_volume_sloc6_1_0 + 2)
      0048C4 88 82            [24]13322 	mov	dpl,r0
      0048C6 89 83            [24]13323 	mov	dph,r1
      0048C8 8C F0            [24]13324 	mov	b,r4
      0048CA C0 07            [24]13325 	push	ar7
      0048CC C0 06            [24]13326 	push	ar6
      0048CE C0 05            [24]13327 	push	ar5
      0048D0 12r00r45         [24]13328 	lcall	_ld_dword
      0048D3 A9 82            [24]13329 	mov	r1,dpl
      0048D5 AA 83            [24]13330 	mov	r2,dph
      0048D7 AB F0            [24]13331 	mov	r3,b
      0048D9 FC               [12]13332 	mov	r4,a
      0048DA D0 05            [24]13333 	pop	ar5
      0048DC D0 06            [24]13334 	pop	ar6
      0048DE D0 07            [24]13335 	pop	ar7
      0048E0 8D 82            [24]13336 	mov	dpl,r5
      0048E2 8E 83            [24]13337 	mov	dph,r6
      0048E4 8F F0            [24]13338 	mov	b,r7
      0048E6 E9               [12]13339 	mov	a,r1
      0048E7 12r00r00         [24]13340 	lcall	__gptrput
      0048EA A3               [24]13341 	inc	dptr
      0048EB EA               [12]13342 	mov	a,r2
      0048EC 12r00r00         [24]13343 	lcall	__gptrput
      0048EF A3               [24]13344 	inc	dptr
      0048F0 EB               [12]13345 	mov	a,r3
      0048F1 12r00r00         [24]13346 	lcall	__gptrput
      0048F4 A3               [24]13347 	inc	dptr
      0048F5 EC               [12]13348 	mov	a,r4
      0048F6 12r00r00         [24]13349 	lcall	__gptrput
                                  13350 ;	ff15\source\ff.c:3603: return FR_OK;
      0048F9 D0 04            [24]13351 	pop	ar4
      0048FB D0 03            [24]13352 	pop	ar3
      0048FD D0 02            [24]13353 	pop	ar2
                                  13354 ;	ff15\source\ff.c:3581: fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
      0048FF                      13355 00167$:
                                  13356 ;	ff15\source\ff.c:3589: fs->fs_type = (BYTE)fmt;/* FAT sub-type (the filesystem object gets valid) */
      0048FF 90r00rFD         [24]13357 	mov	dptr,#_mount_volume_fmt_65536_224
      004902 E0               [24]13358 	movx	a,@dptr
      004903 FE               [12]13359 	mov	r6,a
      004904 A3               [24]13360 	inc	dptr
      004905 E0               [24]13361 	movx	a,@dptr
      004906 8A 82            [24]13362 	mov	dpl,r2
      004908 8B 83            [24]13363 	mov	dph,r3
      00490A 8C F0            [24]13364 	mov	b,r4
      00490C EE               [12]13365 	mov	a,r6
      00490D 12r00r00         [24]13366 	lcall	__gptrput
                                  13367 ;	ff15\source\ff.c:3590: fs->id = ++Fsid;		/* Volume mount ID */
      004910 74 06            [12]13368 	mov	a,#0x06
      004912 2A               [12]13369 	add	a,r2
      004913 FA               [12]13370 	mov	r2,a
      004914 E4               [12]13371 	clr	a
      004915 3B               [12]13372 	addc	a,r3
      004916 FB               [12]13373 	mov	r3,a
      004917 90r00r03         [24]13374 	mov	dptr,#_Fsid
      00491A E0               [24]13375 	movx	a,@dptr
      00491B 24 01            [12]13376 	add	a,#0x01
      00491D F0               [24]13377 	movx	@dptr,a
      00491E A3               [24]13378 	inc	dptr
      00491F E0               [24]13379 	movx	a,@dptr
      004920 34 00            [12]13380 	addc	a,#0x00
      004922 F0               [24]13381 	movx	@dptr,a
      004923 90r00r03         [24]13382 	mov	dptr,#_Fsid
      004926 E0               [24]13383 	movx	a,@dptr
      004927 FE               [12]13384 	mov	r6,a
      004928 A3               [24]13385 	inc	dptr
      004929 E0               [24]13386 	movx	a,@dptr
      00492A FF               [12]13387 	mov	r7,a
      00492B 8A 82            [24]13388 	mov	dpl,r2
      00492D 8B 83            [24]13389 	mov	dph,r3
      00492F 8C F0            [24]13390 	mov	b,r4
      004931 EE               [12]13391 	mov	a,r6
      004932 12r00r00         [24]13392 	lcall	__gptrput
      004935 A3               [24]13393 	inc	dptr
      004936 EF               [12]13394 	mov	a,r7
      004937 12r00r00         [24]13395 	lcall	__gptrput
                                  13396 ;	ff15\source\ff.c:3603: return FR_OK;
      00493A 75 82 00         [24]13397 	mov	dpl,#0x00
                                  13398 ;	ff15\source\ff.c:3604: }
      00493D 22               [24]13399 	ret
                                  13400 ;------------------------------------------------------------
                                  13401 ;Allocation info for local variables in function 'validate'
                                  13402 ;------------------------------------------------------------
                                  13403 ;rfs                       Allocated with name '_validate_PARM_2'
                                  13404 ;obj                       Allocated with name '_validate_obj_65536_235'
                                  13405 ;res                       Allocated with name '_validate_res_65536_236'
                                  13406 ;------------------------------------------------------------
                                  13407 ;	ff15\source\ff.c:3613: static FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
                                  13408 ;	-----------------------------------------
                                  13409 ;	 function validate
                                  13410 ;	-----------------------------------------
      00493E                      13411 _validate:
      00493E AF F0            [24]13412 	mov	r7,b
      004940 AE 83            [24]13413 	mov	r6,dph
      004942 E5 82            [12]13414 	mov	a,dpl
      004944 90r01r02         [24]13415 	mov	dptr,#_validate_obj_65536_235
      004947 F0               [24]13416 	movx	@dptr,a
      004948 EE               [12]13417 	mov	a,r6
      004949 A3               [24]13418 	inc	dptr
      00494A F0               [24]13419 	movx	@dptr,a
      00494B EF               [12]13420 	mov	a,r7
      00494C A3               [24]13421 	inc	dptr
      00494D F0               [24]13422 	movx	@dptr,a
                                  13423 ;	ff15\source\ff.c:3618: FRESULT res = FR_INVALID_OBJECT;
      00494E 90r01r05         [24]13424 	mov	dptr,#_validate_res_65536_236
      004951 74 09            [12]13425 	mov	a,#0x09
      004953 F0               [24]13426 	movx	@dptr,a
                                  13427 ;	ff15\source\ff.c:3621: if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid */
      004954 90r01r02         [24]13428 	mov	dptr,#_validate_obj_65536_235
      004957 E0               [24]13429 	movx	a,@dptr
      004958 FD               [12]13430 	mov	r5,a
      004959 A3               [24]13431 	inc	dptr
      00495A E0               [24]13432 	movx	a,@dptr
      00495B FE               [12]13433 	mov	r6,a
      00495C A3               [24]13434 	inc	dptr
      00495D E0               [24]13435 	movx	a,@dptr
      00495E FF               [12]13436 	mov	r7,a
      00495F ED               [12]13437 	mov	a,r5
      004960 4E               [12]13438 	orl	a,r6
      004961 70 03            [24]13439 	jnz	00136$
      004963 02r49rDC         [24]13440 	ljmp	00104$
      004966                      13441 00136$:
      004966 8D 82            [24]13442 	mov	dpl,r5
      004968 8E 83            [24]13443 	mov	dph,r6
      00496A 8F F0            [24]13444 	mov	b,r7
      00496C 12r00r00         [24]13445 	lcall	__gptrget
      00496F FA               [12]13446 	mov	r2,a
      004970 A3               [24]13447 	inc	dptr
      004971 12r00r00         [24]13448 	lcall	__gptrget
      004974 FB               [12]13449 	mov	r3,a
      004975 A3               [24]13450 	inc	dptr
      004976 12r00r00         [24]13451 	lcall	__gptrget
      004979 FC               [12]13452 	mov	r4,a
      00497A EA               [12]13453 	mov	a,r2
      00497B 4B               [12]13454 	orl	a,r3
      00497C 60 5E            [24]13455 	jz	00104$
      00497E 8A 82            [24]13456 	mov	dpl,r2
      004980 8B 83            [24]13457 	mov	dph,r3
      004982 8C F0            [24]13458 	mov	b,r4
      004984 12r00r00         [24]13459 	lcall	__gptrget
      004987 60 53            [24]13460 	jz	00104$
      004989 74 03            [12]13461 	mov	a,#0x03
      00498B 2D               [12]13462 	add	a,r5
      00498C FD               [12]13463 	mov	r5,a
      00498D E4               [12]13464 	clr	a
      00498E 3E               [12]13465 	addc	a,r6
      00498F FE               [12]13466 	mov	r6,a
      004990 8D 82            [24]13467 	mov	dpl,r5
      004992 8E 83            [24]13468 	mov	dph,r6
      004994 8F F0            [24]13469 	mov	b,r7
      004996 12r00r00         [24]13470 	lcall	__gptrget
      004999 FD               [12]13471 	mov	r5,a
      00499A A3               [24]13472 	inc	dptr
      00499B 12r00r00         [24]13473 	lcall	__gptrget
      00499E FE               [12]13474 	mov	r6,a
      00499F 74 06            [12]13475 	mov	a,#0x06
      0049A1 2A               [12]13476 	add	a,r2
      0049A2 F8               [12]13477 	mov	r0,a
      0049A3 E4               [12]13478 	clr	a
      0049A4 3B               [12]13479 	addc	a,r3
      0049A5 F9               [12]13480 	mov	r1,a
      0049A6 8C 07            [24]13481 	mov	ar7,r4
      0049A8 88 82            [24]13482 	mov	dpl,r0
      0049AA 89 83            [24]13483 	mov	dph,r1
      0049AC 8F F0            [24]13484 	mov	b,r7
      0049AE 12r00r00         [24]13485 	lcall	__gptrget
      0049B1 F8               [12]13486 	mov	r0,a
      0049B2 A3               [24]13487 	inc	dptr
      0049B3 12r00r00         [24]13488 	lcall	__gptrget
      0049B6 F9               [12]13489 	mov	r1,a
      0049B7 ED               [12]13490 	mov	a,r5
      0049B8 B5 00 21         [24]13491 	cjne	a,ar0,00104$
      0049BB EE               [12]13492 	mov	a,r6
      0049BC B5 01 1D         [24]13493 	cjne	a,ar1,00104$
                                  13494 ;	ff15\source\ff.c:3633: if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the hosting phsical drive is kept initialized */
      0049BF 0A               [12]13495 	inc	r2
      0049C0 BA 00 01         [24]13496 	cjne	r2,#0x00,00141$
      0049C3 0B               [12]13497 	inc	r3
      0049C4                      13498 00141$:
      0049C4 8A 82            [24]13499 	mov	dpl,r2
      0049C6 8B 83            [24]13500 	mov	dph,r3
      0049C8 8C F0            [24]13501 	mov	b,r4
      0049CA 12r00r00         [24]13502 	lcall	__gptrget
      0049CD F5 82            [12]13503 	mov	dpl,a
      0049CF 12r00r00         [24]13504 	lcall	_disk_status
      0049D2 E5 82            [12]13505 	mov	a,dpl
      0049D4 20 E0 05         [24]13506 	jb	acc.0,00104$
                                  13507 ;	ff15\source\ff.c:3634: res = FR_OK;
      0049D7 90r01r05         [24]13508 	mov	dptr,#_validate_res_65536_236
      0049DA E4               [12]13509 	clr	a
      0049DB F0               [24]13510 	movx	@dptr,a
      0049DC                      13511 00104$:
                                  13512 ;	ff15\source\ff.c:3638: *rfs = (res == FR_OK) ? obj->fs : 0;	/* Return corresponding filesystem object if it is valid */
      0049DC 90r00rFF         [24]13513 	mov	dptr,#_validate_PARM_2
      0049DF E0               [24]13514 	movx	a,@dptr
      0049E0 FD               [12]13515 	mov	r5,a
      0049E1 A3               [24]13516 	inc	dptr
      0049E2 E0               [24]13517 	movx	a,@dptr
      0049E3 FE               [12]13518 	mov	r6,a
      0049E4 A3               [24]13519 	inc	dptr
      0049E5 E0               [24]13520 	movx	a,@dptr
      0049E6 FF               [12]13521 	mov	r7,a
      0049E7 90r01r05         [24]13522 	mov	dptr,#_validate_res_65536_236
      0049EA E0               [24]13523 	movx	a,@dptr
      0049EB 70 21            [24]13524 	jnz	00110$
      0049ED 90r01r02         [24]13525 	mov	dptr,#_validate_obj_65536_235
      0049F0 E0               [24]13526 	movx	a,@dptr
      0049F1 FA               [12]13527 	mov	r2,a
      0049F2 A3               [24]13528 	inc	dptr
      0049F3 E0               [24]13529 	movx	a,@dptr
      0049F4 FB               [12]13530 	mov	r3,a
      0049F5 A3               [24]13531 	inc	dptr
      0049F6 E0               [24]13532 	movx	a,@dptr
      0049F7 FC               [12]13533 	mov	r4,a
      0049F8 8A 82            [24]13534 	mov	dpl,r2
      0049FA 8B 83            [24]13535 	mov	dph,r3
      0049FC 8C F0            [24]13536 	mov	b,r4
      0049FE 12r00r00         [24]13537 	lcall	__gptrget
      004A01 FA               [12]13538 	mov	r2,a
      004A02 A3               [24]13539 	inc	dptr
      004A03 12r00r00         [24]13540 	lcall	__gptrget
      004A06 FB               [12]13541 	mov	r3,a
      004A07 A3               [24]13542 	inc	dptr
      004A08 12r00r00         [24]13543 	lcall	__gptrget
      004A0B FC               [12]13544 	mov	r4,a
      004A0C 80 06            [24]13545 	sjmp	00111$
      004A0E                      13546 00110$:
      004A0E 7A 00            [12]13547 	mov	r2,#0x00
      004A10 7B 00            [12]13548 	mov	r3,#0x00
      004A12 7C 00            [12]13549 	mov	r4,#0x00
      004A14                      13550 00111$:
      004A14 8D 82            [24]13551 	mov	dpl,r5
      004A16 8E 83            [24]13552 	mov	dph,r6
      004A18 8F F0            [24]13553 	mov	b,r7
      004A1A EA               [12]13554 	mov	a,r2
      004A1B 12r00r00         [24]13555 	lcall	__gptrput
      004A1E A3               [24]13556 	inc	dptr
      004A1F EB               [12]13557 	mov	a,r3
      004A20 12r00r00         [24]13558 	lcall	__gptrput
      004A23 A3               [24]13559 	inc	dptr
      004A24 EC               [12]13560 	mov	a,r4
      004A25 12r00r00         [24]13561 	lcall	__gptrput
                                  13562 ;	ff15\source\ff.c:3639: return res;
      004A28 90r01r05         [24]13563 	mov	dptr,#_validate_res_65536_236
      004A2B E0               [24]13564 	movx	a,@dptr
                                  13565 ;	ff15\source\ff.c:3640: }
      004A2C F5 82            [12]13566 	mov	dpl,a
      004A2E 22               [24]13567 	ret
                                  13568 ;------------------------------------------------------------
                                  13569 ;Allocation info for local variables in function 'f_mount'
                                  13570 ;------------------------------------------------------------
                                  13571 ;path                      Allocated with name '_f_mount_PARM_2'
                                  13572 ;opt                       Allocated with name '_f_mount_PARM_3'
                                  13573 ;fs                        Allocated with name '_f_mount_fs_65536_239'
                                  13574 ;cfs                       Allocated with name '_f_mount_cfs_65536_240'
                                  13575 ;vol                       Allocated with name '_f_mount_vol_65536_240'
                                  13576 ;res                       Allocated with name '_f_mount_res_65536_240'
                                  13577 ;rp                        Allocated with name '_f_mount_rp_65536_240'
                                  13578 ;------------------------------------------------------------
                                  13579 ;	ff15\source\ff.c:3657: FRESULT f_mount (
                                  13580 ;	-----------------------------------------
                                  13581 ;	 function f_mount
                                  13582 ;	-----------------------------------------
      004A2F                      13583 _f_mount:
      004A2F AF F0            [24]13584 	mov	r7,b
      004A31 AE 83            [24]13585 	mov	r6,dph
      004A33 E5 82            [12]13586 	mov	a,dpl
      004A35 90r01r0A         [24]13587 	mov	dptr,#_f_mount_fs_65536_239
      004A38 F0               [24]13588 	movx	@dptr,a
      004A39 EE               [12]13589 	mov	a,r6
      004A3A A3               [24]13590 	inc	dptr
      004A3B F0               [24]13591 	movx	@dptr,a
      004A3C EF               [12]13592 	mov	a,r7
      004A3D A3               [24]13593 	inc	dptr
      004A3E F0               [24]13594 	movx	@dptr,a
                                  13595 ;	ff15\source\ff.c:3666: const TCHAR *rp = path;
      004A3F 90r01r06         [24]13596 	mov	dptr,#_f_mount_PARM_2
      004A42 E0               [24]13597 	movx	a,@dptr
      004A43 FD               [12]13598 	mov	r5,a
      004A44 A3               [24]13599 	inc	dptr
      004A45 E0               [24]13600 	movx	a,@dptr
      004A46 FE               [12]13601 	mov	r6,a
      004A47 A3               [24]13602 	inc	dptr
      004A48 E0               [24]13603 	movx	a,@dptr
      004A49 FF               [12]13604 	mov	r7,a
      004A4A 90r01r0D         [24]13605 	mov	dptr,#_f_mount_rp_65536_240
      004A4D ED               [12]13606 	mov	a,r5
      004A4E F0               [24]13607 	movx	@dptr,a
      004A4F EE               [12]13608 	mov	a,r6
      004A50 A3               [24]13609 	inc	dptr
      004A51 F0               [24]13610 	movx	@dptr,a
      004A52 EF               [12]13611 	mov	a,r7
      004A53 A3               [24]13612 	inc	dptr
      004A54 F0               [24]13613 	movx	@dptr,a
                                  13614 ;	ff15\source\ff.c:3670: vol = get_ldnumber(&rp);
      004A55 90r01r0D         [24]13615 	mov	dptr,#_f_mount_rp_65536_240
      004A58 75 F0 00         [24]13616 	mov	b,#0x00
      004A5B 12r37rD1         [24]13617 	lcall	_get_ldnumber
      004A5E AE 82            [24]13618 	mov	r6,dpl
                                  13619 ;	ff15\source\ff.c:3671: if (vol < 0) return FR_INVALID_DRIVE;
      004A60 E5 83            [12]13620 	mov	a,dph
      004A62 FF               [12]13621 	mov	r7,a
      004A63 30 E7 04         [24]13622 	jnb	acc.7,00102$
      004A66 75 82 0B         [24]13623 	mov	dpl,#0x0b
      004A69 22               [24]13624 	ret
      004A6A                      13625 00102$:
                                  13626 ;	ff15\source\ff.c:3672: cfs = FatFs[vol];			/* Pointer to the filesystem object of the volume */
      004A6A 90r00r00         [24]13627 	mov	dptr,#__mulint_PARM_2
      004A6D EE               [12]13628 	mov	a,r6
      004A6E F0               [24]13629 	movx	@dptr,a
      004A6F EF               [12]13630 	mov	a,r7
      004A70 A3               [24]13631 	inc	dptr
      004A71 F0               [24]13632 	movx	@dptr,a
      004A72 90 00 03         [24]13633 	mov	dptr,#0x0003
      004A75 C0 07            [24]13634 	push	ar7
      004A77 C0 06            [24]13635 	push	ar6
      004A79 12r00r00         [24]13636 	lcall	__mulint
      004A7C AC 82            [24]13637 	mov	r4,dpl
      004A7E AD 83            [24]13638 	mov	r5,dph
      004A80 D0 06            [24]13639 	pop	ar6
      004A82 D0 07            [24]13640 	pop	ar7
      004A84 EC               [12]13641 	mov	a,r4
      004A85 24r00            [12]13642 	add	a,#_FatFs
      004A87 FC               [12]13643 	mov	r4,a
      004A88 ED               [12]13644 	mov	a,r5
      004A89 34s00            [12]13645 	addc	a,#(_FatFs >> 8)
      004A8B FD               [12]13646 	mov	r5,a
      004A8C 8C 82            [24]13647 	mov	dpl,r4
      004A8E 8D 83            [24]13648 	mov	dph,r5
      004A90 E0               [24]13649 	movx	a,@dptr
      004A91 F9               [12]13650 	mov	r1,a
      004A92 A3               [24]13651 	inc	dptr
      004A93 E0               [24]13652 	movx	a,@dptr
      004A94 FA               [12]13653 	mov	r2,a
      004A95 A3               [24]13654 	inc	dptr
      004A96 E0               [24]13655 	movx	a,@dptr
      004A97 FB               [12]13656 	mov	r3,a
                                  13657 ;	ff15\source\ff.c:3674: if (cfs) {					/* Unregister current filesystem object if regsitered */
      004A98 E9               [12]13658 	mov	a,r1
      004A99 4A               [12]13659 	orl	a,r2
      004A9A 60 13            [24]13660 	jz	00104$
                                  13661 ;	ff15\source\ff.c:3675: FatFs[vol] = 0;
      004A9C 8C 82            [24]13662 	mov	dpl,r4
      004A9E 8D 83            [24]13663 	mov	dph,r5
      004AA0 E4               [12]13664 	clr	a
      004AA1 F0               [24]13665 	movx	@dptr,a
      004AA2 A3               [24]13666 	inc	dptr
      004AA3 F0               [24]13667 	movx	@dptr,a
      004AA4 A3               [24]13668 	inc	dptr
      004AA5 F0               [24]13669 	movx	@dptr,a
                                  13670 ;	ff15\source\ff.c:3682: cfs->fs_type = 0;		/* Invalidate the filesystem object to be unregistered */
      004AA6 89 82            [24]13671 	mov	dpl,r1
      004AA8 8A 83            [24]13672 	mov	dph,r2
      004AAA 8B F0            [24]13673 	mov	b,r3
      004AAC 12r00r00         [24]13674 	lcall	__gptrput
      004AAF                      13675 00104$:
                                  13676 ;	ff15\source\ff.c:3685: if (fs) {					/* Register new filesystem object */
      004AAF 90r01r0A         [24]13677 	mov	dptr,#_f_mount_fs_65536_239
      004AB2 E0               [24]13678 	movx	a,@dptr
      004AB3 F9               [12]13679 	mov	r1,a
      004AB4 A3               [24]13680 	inc	dptr
      004AB5 E0               [24]13681 	movx	a,@dptr
      004AB6 FA               [12]13682 	mov	r2,a
      004AB7 A3               [24]13683 	inc	dptr
      004AB8 E0               [24]13684 	movx	a,@dptr
      004AB9 FB               [12]13685 	mov	r3,a
      004ABA 90r01r0A         [24]13686 	mov	dptr,#_f_mount_fs_65536_239
      004ABD E0               [24]13687 	movx	a,@dptr
      004ABE F5 F0            [12]13688 	mov	b,a
      004AC0 A3               [24]13689 	inc	dptr
      004AC1 E0               [24]13690 	movx	a,@dptr
      004AC2 45 F0            [12]13691 	orl	a,b
      004AC4 60 3B            [24]13692 	jz	00106$
                                  13693 ;	ff15\source\ff.c:3686: fs->pdrv = LD2PD(vol);	/* Volume hosting physical drive */
      004AC6 09               [12]13694 	inc	r1
      004AC7 B9 00 01         [24]13695 	cjne	r1,#0x00,00130$
      004ACA 0A               [12]13696 	inc	r2
      004ACB                      13697 00130$:
      004ACB 89 82            [24]13698 	mov	dpl,r1
      004ACD 8A 83            [24]13699 	mov	dph,r2
      004ACF 8B F0            [24]13700 	mov	b,r3
      004AD1 EE               [12]13701 	mov	a,r6
      004AD2 12r00r00         [24]13702 	lcall	__gptrput
                                  13703 ;	ff15\source\ff.c:3700: fs->fs_type = 0;		/* Invalidate the new filesystem object */
      004AD5 90r01r0A         [24]13704 	mov	dptr,#_f_mount_fs_65536_239
      004AD8 E0               [24]13705 	movx	a,@dptr
      004AD9 FB               [12]13706 	mov	r3,a
      004ADA A3               [24]13707 	inc	dptr
      004ADB E0               [24]13708 	movx	a,@dptr
      004ADC FE               [12]13709 	mov	r6,a
      004ADD A3               [24]13710 	inc	dptr
      004ADE E0               [24]13711 	movx	a,@dptr
      004ADF FF               [12]13712 	mov	r7,a
      004AE0 8B 82            [24]13713 	mov	dpl,r3
      004AE2 8E 83            [24]13714 	mov	dph,r6
      004AE4 8F F0            [24]13715 	mov	b,r7
      004AE6 E4               [12]13716 	clr	a
      004AE7 12r00r00         [24]13717 	lcall	__gptrput
                                  13718 ;	ff15\source\ff.c:3701: FatFs[vol] = fs;		/* Register new fs object */
      004AEA 90r01r0A         [24]13719 	mov	dptr,#_f_mount_fs_65536_239
      004AED E0               [24]13720 	movx	a,@dptr
      004AEE FB               [12]13721 	mov	r3,a
      004AEF A3               [24]13722 	inc	dptr
      004AF0 E0               [24]13723 	movx	a,@dptr
      004AF1 FE               [12]13724 	mov	r6,a
      004AF2 A3               [24]13725 	inc	dptr
      004AF3 E0               [24]13726 	movx	a,@dptr
      004AF4 FF               [12]13727 	mov	r7,a
      004AF5 8C 82            [24]13728 	mov	dpl,r4
      004AF7 8D 83            [24]13729 	mov	dph,r5
      004AF9 EB               [12]13730 	mov	a,r3
      004AFA F0               [24]13731 	movx	@dptr,a
      004AFB EE               [12]13732 	mov	a,r6
      004AFC A3               [24]13733 	inc	dptr
      004AFD F0               [24]13734 	movx	@dptr,a
      004AFE EF               [12]13735 	mov	a,r7
      004AFF A3               [24]13736 	inc	dptr
      004B00 F0               [24]13737 	movx	@dptr,a
      004B01                      13738 00106$:
                                  13739 ;	ff15\source\ff.c:3704: if (opt == 0) return FR_OK;	/* Do not mount now, it will be mounted in subsequent file functions */
      004B01 90r01r09         [24]13740 	mov	dptr,#_f_mount_PARM_3
      004B04 E0               [24]13741 	movx	a,@dptr
      004B05 70 03            [24]13742 	jnz	00108$
      004B07 F5 82            [12]13743 	mov	dpl,a
      004B09 22               [24]13744 	ret
      004B0A                      13745 00108$:
                                  13746 ;	ff15\source\ff.c:3706: res = mount_volume(&path, &fs, 0);	/* Force mounted the volume */
      004B0A 90r00rEA         [24]13747 	mov	dptr,#_mount_volume_PARM_2
      004B0D 74r0A            [12]13748 	mov	a,#_f_mount_fs_65536_239
      004B0F F0               [24]13749 	movx	@dptr,a
      004B10 74s01            [12]13750 	mov	a,#(_f_mount_fs_65536_239 >> 8)
      004B12 A3               [24]13751 	inc	dptr
      004B13 F0               [24]13752 	movx	@dptr,a
      004B14 E4               [12]13753 	clr	a
      004B15 A3               [24]13754 	inc	dptr
      004B16 F0               [24]13755 	movx	@dptr,a
      004B17 90r00rED         [24]13756 	mov	dptr,#_mount_volume_PARM_3
      004B1A F0               [24]13757 	movx	@dptr,a
      004B1B 90r01r06         [24]13758 	mov	dptr,#_f_mount_PARM_2
      004B1E 75 F0 00         [24]13759 	mov	b,#0x00
                                  13760 ;	ff15\source\ff.c:3707: LEAVE_FF(fs, res);
                                  13761 ;	ff15\source\ff.c:3708: }
      004B21 02r3Dr6D         [24]13762 	ljmp	_mount_volume
                                  13763 ;------------------------------------------------------------
                                  13764 ;Allocation info for local variables in function 'f_open'
                                  13765 ;------------------------------------------------------------
                                  13766 ;sloc0                     Allocated with name '_f_open_sloc0_1_0'
                                  13767 ;sloc1                     Allocated with name '_f_open_sloc1_1_0'
                                  13768 ;sloc2                     Allocated with name '_f_open_sloc2_1_0'
                                  13769 ;sloc3                     Allocated with name '_f_open_sloc3_1_0'
                                  13770 ;path                      Allocated with name '_f_open_PARM_2'
                                  13771 ;mode                      Allocated with name '_f_open_PARM_3'
                                  13772 ;fp                        Allocated with name '_f_open_fp_65536_243'
                                  13773 ;res                       Allocated with name '_f_open_res_65536_244'
                                  13774 ;dj                        Allocated with name '_f_open_dj_65536_244'
                                  13775 ;fs                        Allocated with name '_f_open_fs_65536_244'
                                  13776 ;cl                        Allocated with name '_f_open_cl_65536_244'
                                  13777 ;bcs                       Allocated with name '_f_open_bcs_65536_244'
                                  13778 ;clst                      Allocated with name '_f_open_clst_65536_244'
                                  13779 ;tm                        Allocated with name '_f_open_tm_65536_244'
                                  13780 ;sc                        Allocated with name '_f_open_sc_65536_244'
                                  13781 ;ofs                       Allocated with name '_f_open_ofs_65536_244'
                                  13782 ;------------------------------------------------------------
                                  13783 ;	ff15\source\ff.c:3717: FRESULT f_open (
                                  13784 ;	-----------------------------------------
                                  13785 ;	 function f_open
                                  13786 ;	-----------------------------------------
      004B24                      13787 _f_open:
      004B24 AF F0            [24]13788 	mov	r7,b
      004B26 AE 83            [24]13789 	mov	r6,dph
      004B28 E5 82            [12]13790 	mov	a,dpl
      004B2A 90r01r14         [24]13791 	mov	dptr,#_f_open_fp_65536_243
      004B2D F0               [24]13792 	movx	@dptr,a
      004B2E EE               [12]13793 	mov	a,r6
      004B2F A3               [24]13794 	inc	dptr
      004B30 F0               [24]13795 	movx	@dptr,a
      004B31 EF               [12]13796 	mov	a,r7
      004B32 A3               [24]13797 	inc	dptr
      004B33 F0               [24]13798 	movx	@dptr,a
                                  13799 ;	ff15\source\ff.c:3734: if (!fp) return FR_INVALID_OBJECT;
      004B34 90r01r14         [24]13800 	mov	dptr,#_f_open_fp_65536_243
      004B37 E0               [24]13801 	movx	a,@dptr
      004B38 F5 F0            [12]13802 	mov	b,a
      004B3A A3               [24]13803 	inc	dptr
      004B3B E0               [24]13804 	movx	a,@dptr
      004B3C 45 F0            [12]13805 	orl	a,b
      004B3E 70 04            [24]13806 	jnz	00102$
      004B40 75 82 09         [24]13807 	mov	dpl,#0x09
      004B43 22               [24]13808 	ret
      004B44                      13809 00102$:
                                  13810 ;	ff15\source\ff.c:3737: mode &= FF_FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_ALWAYS | FA_OPEN_APPEND;
      004B44 90r01r13         [24]13811 	mov	dptr,#_f_open_PARM_3
      004B47 E0               [24]13812 	movx	a,@dptr
      004B48 53 E0 3F         [24]13813 	anl	acc,#0x3f
      004B4B F0               [24]13814 	movx	@dptr,a
                                  13815 ;	ff15\source\ff.c:3738: res = mount_volume(&path, &fs, mode);
      004B4C 90r01r13         [24]13816 	mov	dptr,#_f_open_PARM_3
      004B4F E0               [24]13817 	movx	a,@dptr
      004B50 FF               [12]13818 	mov	r7,a
      004B51 90r00rEA         [24]13819 	mov	dptr,#_mount_volume_PARM_2
      004B54 74r42            [12]13820 	mov	a,#_f_open_fs_65536_244
      004B56 F0               [24]13821 	movx	@dptr,a
      004B57 74s01            [12]13822 	mov	a,#(_f_open_fs_65536_244 >> 8)
      004B59 A3               [24]13823 	inc	dptr
      004B5A F0               [24]13824 	movx	@dptr,a
      004B5B E4               [12]13825 	clr	a
      004B5C A3               [24]13826 	inc	dptr
      004B5D F0               [24]13827 	movx	@dptr,a
      004B5E 90r00rED         [24]13828 	mov	dptr,#_mount_volume_PARM_3
      004B61 EF               [12]13829 	mov	a,r7
      004B62 F0               [24]13830 	movx	@dptr,a
      004B63 90r01r10         [24]13831 	mov	dptr,#_f_open_PARM_2
      004B66 75 F0 00         [24]13832 	mov	b,#0x00
      004B69 12r3Dr6D         [24]13833 	lcall	_mount_volume
      004B6C AF 82            [24]13834 	mov	r7,dpl
      004B6E 90r01r17         [24]13835 	mov	dptr,#_f_open_res_65536_244
      004B71 EF               [12]13836 	mov	a,r7
      004B72 F0               [24]13837 	movx	@dptr,a
                                  13838 ;	ff15\source\ff.c:3739: if (res == FR_OK) {
      004B73 EF               [12]13839 	mov	a,r7
      004B74 60 03            [24]13840 	jz	00296$
      004B76 02r54r0D         [24]13841 	ljmp	00158$
      004B79                      13842 00296$:
                                  13843 ;	ff15\source\ff.c:3740: dj.obj.fs = fs;
      004B79 90r01r42         [24]13844 	mov	dptr,#_f_open_fs_65536_244
      004B7C E0               [24]13845 	movx	a,@dptr
      004B7D FD               [12]13846 	mov	r5,a
      004B7E A3               [24]13847 	inc	dptr
      004B7F E0               [24]13848 	movx	a,@dptr
      004B80 FE               [12]13849 	mov	r6,a
      004B81 A3               [24]13850 	inc	dptr
      004B82 E0               [24]13851 	movx	a,@dptr
      004B83 FF               [12]13852 	mov	r7,a
      004B84 90r01r18         [24]13853 	mov	dptr,#_f_open_dj_65536_244
      004B87 ED               [12]13854 	mov	a,r5
      004B88 F0               [24]13855 	movx	@dptr,a
      004B89 EE               [12]13856 	mov	a,r6
      004B8A A3               [24]13857 	inc	dptr
      004B8B F0               [24]13858 	movx	@dptr,a
      004B8C EF               [12]13859 	mov	a,r7
      004B8D A3               [24]13860 	inc	dptr
      004B8E F0               [24]13861 	movx	@dptr,a
                                  13862 ;	ff15\source\ff.c:3742: res = follow_path(&dj, path);	/* Follow the file path */
      004B8F 90r01r10         [24]13863 	mov	dptr,#_f_open_PARM_2
      004B92 E0               [24]13864 	movx	a,@dptr
      004B93 FD               [12]13865 	mov	r5,a
      004B94 A3               [24]13866 	inc	dptr
      004B95 E0               [24]13867 	movx	a,@dptr
      004B96 FE               [12]13868 	mov	r6,a
      004B97 A3               [24]13869 	inc	dptr
      004B98 E0               [24]13870 	movx	a,@dptr
      004B99 FF               [12]13871 	mov	r7,a
      004B9A 90r00rC0         [24]13872 	mov	dptr,#_follow_path_PARM_2
      004B9D ED               [12]13873 	mov	a,r5
      004B9E F0               [24]13874 	movx	@dptr,a
      004B9F EE               [12]13875 	mov	a,r6
      004BA0 A3               [24]13876 	inc	dptr
      004BA1 F0               [24]13877 	movx	@dptr,a
      004BA2 EF               [12]13878 	mov	a,r7
      004BA3 A3               [24]13879 	inc	dptr
      004BA4 F0               [24]13880 	movx	@dptr,a
      004BA5 90r01r18         [24]13881 	mov	dptr,#_f_open_dj_65536_244
      004BA8 75 F0 00         [24]13882 	mov	b,#0x00
      004BAB 12r35rB8         [24]13883 	lcall	_follow_path
      004BAE AF 82            [24]13884 	mov	r7,dpl
      004BB0 90r01r17         [24]13885 	mov	dptr,#_f_open_res_65536_244
      004BB3 EF               [12]13886 	mov	a,r7
      004BB4 F0               [24]13887 	movx	@dptr,a
                                  13888 ;	ff15\source\ff.c:3744: if (res == FR_OK) {
      004BB5 EF               [12]13889 	mov	a,r7
      004BB6 70 0E            [24]13890 	jnz	00106$
                                  13891 ;	ff15\source\ff.c:3745: if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
      004BB8 90r01r41         [24]13892 	mov	dptr,#(_f_open_dj_65536_244 + 0x0029)
      004BBB E0               [24]13893 	movx	a,@dptr
      004BBC FF               [12]13894 	mov	r7,a
      004BBD 30 E7 06         [24]13895 	jnb	acc.7,00106$
                                  13896 ;	ff15\source\ff.c:3746: res = FR_INVALID_NAME;
      004BC0 90r01r17         [24]13897 	mov	dptr,#_f_open_res_65536_244
      004BC3 74 06            [12]13898 	mov	a,#0x06
      004BC5 F0               [24]13899 	movx	@dptr,a
      004BC6                      13900 00106$:
                                  13901 ;	ff15\source\ff.c:3755: if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
      004BC6 90r01r13         [24]13902 	mov	dptr,#_f_open_PARM_3
      004BC9 E0               [24]13903 	movx	a,@dptr
      004BCA FF               [12]13904 	mov	r7,a
      004BCB 54 1C            [12]13905 	anl	a,#0x1c
      004BCD 70 03            [24]13906 	jnz	00299$
      004BCF 02r4Er50         [24]13907 	ljmp	00133$
      004BD2                      13908 00299$:
                                  13909 ;	ff15\source\ff.c:3756: if (res != FR_OK) {					/* No file, create new */
      004BD2 90r01r17         [24]13910 	mov	dptr,#_f_open_res_65536_244
      004BD5 E0               [24]13911 	movx	a,@dptr
      004BD6 FE               [12]13912 	mov	r6,a
      004BD7 E0               [24]13913 	movx	a,@dptr
      004BD8 60 1C            [24]13914 	jz	00115$
                                  13915 ;	ff15\source\ff.c:3757: if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
      004BDA BE 04 0F         [24]13916 	cjne	r6,#0x04,00108$
                                  13917 ;	ff15\source\ff.c:3761: res = dir_register(&dj);
      004BDD 90r01r18         [24]13918 	mov	dptr,#_f_open_dj_65536_244
      004BE0 75 F0 00         [24]13919 	mov	b,#0x00
      004BE3 12r2DrC3         [24]13920 	lcall	_dir_register
      004BE6 E5 82            [12]13921 	mov	a,dpl
      004BE8 90r01r17         [24]13922 	mov	dptr,#_f_open_res_65536_244
      004BEB F0               [24]13923 	movx	@dptr,a
      004BEC                      13924 00108$:
                                  13925 ;	ff15\source\ff.c:3764: mode |= FA_CREATE_ALWAYS;		/* File is created */
      004BEC 90r01r13         [24]13926 	mov	dptr,#_f_open_PARM_3
      004BEF E0               [24]13927 	movx	a,@dptr
      004BF0 43 E0 08         [24]13928 	orl	acc,#0x08
      004BF3 F0               [24]13929 	movx	@dptr,a
      004BF4 80 1B            [24]13930 	sjmp	00116$
      004BF6                      13931 00115$:
                                  13932 ;	ff15\source\ff.c:3767: if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
      004BF6 90r01r1D         [24]13933 	mov	dptr,#(_f_open_dj_65536_244 + 0x0005)
      004BF9 E0               [24]13934 	movx	a,@dptr
      004BFA FE               [12]13935 	mov	r6,a
      004BFB 54 11            [12]13936 	anl	a,#0x11
      004BFD 60 08            [24]13937 	jz	00112$
                                  13938 ;	ff15\source\ff.c:3768: res = FR_DENIED;
      004BFF 90r01r17         [24]13939 	mov	dptr,#_f_open_res_65536_244
      004C02 74 07            [12]13940 	mov	a,#0x07
      004C04 F0               [24]13941 	movx	@dptr,a
      004C05 80 0A            [24]13942 	sjmp	00116$
      004C07                      13943 00112$:
                                  13944 ;	ff15\source\ff.c:3770: if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
      004C07 EF               [12]13945 	mov	a,r7
      004C08 30 E2 06         [24]13946 	jnb	acc.2,00116$
      004C0B 90r01r17         [24]13947 	mov	dptr,#_f_open_res_65536_244
      004C0E 74 08            [12]13948 	mov	a,#0x08
      004C10 F0               [24]13949 	movx	@dptr,a
      004C11                      13950 00116$:
                                  13951 ;	ff15\source\ff.c:3773: if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
      004C11 90r01r17         [24]13952 	mov	dptr,#_f_open_res_65536_244
      004C14 E0               [24]13953 	movx	a,@dptr
      004C15 60 03            [24]13954 	jz	00305$
      004C17 02r4Er74         [24]13955 	ljmp	00134$
      004C1A                      13956 00305$:
      004C1A 90r01r13         [24]13957 	mov	dptr,#_f_open_PARM_3
      004C1D E0               [24]13958 	movx	a,@dptr
      004C1E 20 E3 03         [24]13959 	jb	acc.3,00306$
      004C21 02r4Er74         [24]13960 	ljmp	00134$
      004C24                      13961 00306$:
                                  13962 ;	ff15\source\ff.c:3794: tm = GET_FATTIME();					/* Set created time */
      004C24 12r00r00         [24]13963 	lcall	_get_fattime
      004C27 AB 82            [24]13964 	mov	r3,dpl
      004C29 AC 83            [24]13965 	mov	r4,dph
      004C2B AD F0            [24]13966 	mov	r5,b
      004C2D FE               [12]13967 	mov	r6,a
                                  13968 ;	ff15\source\ff.c:3795: st_dword(dj.dir + DIR_CrtTime, tm);
      004C2E 90r01r33         [24]13969 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004C31 E0               [24]13970 	movx	a,@dptr
      004C32 F8               [12]13971 	mov	r0,a
      004C33 A3               [24]13972 	inc	dptr
      004C34 E0               [24]13973 	movx	a,@dptr
      004C35 F9               [12]13974 	mov	r1,a
      004C36 A3               [24]13975 	inc	dptr
      004C37 E0               [24]13976 	movx	a,@dptr
      004C38 FA               [12]13977 	mov	r2,a
      004C39 74 0E            [12]13978 	mov	a,#0x0e
      004C3B 28               [12]13979 	add	a,r0
      004C3C F8               [12]13980 	mov	r0,a
      004C3D E4               [12]13981 	clr	a
      004C3E 39               [12]13982 	addc	a,r1
      004C3F F9               [12]13983 	mov	r1,a
      004C40 90r00r10         [24]13984 	mov	dptr,#_st_dword_PARM_2
      004C43 EB               [12]13985 	mov	a,r3
      004C44 F0               [24]13986 	movx	@dptr,a
      004C45 EC               [12]13987 	mov	a,r4
      004C46 A3               [24]13988 	inc	dptr
      004C47 F0               [24]13989 	movx	@dptr,a
      004C48 ED               [12]13990 	mov	a,r5
      004C49 A3               [24]13991 	inc	dptr
      004C4A F0               [24]13992 	movx	@dptr,a
      004C4B EE               [12]13993 	mov	a,r6
      004C4C A3               [24]13994 	inc	dptr
      004C4D F0               [24]13995 	movx	@dptr,a
      004C4E 88 82            [24]13996 	mov	dpl,r0
      004C50 89 83            [24]13997 	mov	dph,r1
      004C52 8A F0            [24]13998 	mov	b,r2
      004C54 C0 06            [24]13999 	push	ar6
      004C56 C0 05            [24]14000 	push	ar5
      004C58 C0 04            [24]14001 	push	ar4
      004C5A C0 03            [24]14002 	push	ar3
      004C5C 12r01r76         [24]14003 	lcall	_st_dword
      004C5F D0 03            [24]14004 	pop	ar3
      004C61 D0 04            [24]14005 	pop	ar4
      004C63 D0 05            [24]14006 	pop	ar5
      004C65 D0 06            [24]14007 	pop	ar6
                                  14008 ;	ff15\source\ff.c:3796: st_dword(dj.dir + DIR_ModTime, tm);
      004C67 90r01r33         [24]14009 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004C6A E0               [24]14010 	movx	a,@dptr
      004C6B F8               [12]14011 	mov	r0,a
      004C6C A3               [24]14012 	inc	dptr
      004C6D E0               [24]14013 	movx	a,@dptr
      004C6E F9               [12]14014 	mov	r1,a
      004C6F A3               [24]14015 	inc	dptr
      004C70 E0               [24]14016 	movx	a,@dptr
      004C71 FA               [12]14017 	mov	r2,a
      004C72 74 16            [12]14018 	mov	a,#0x16
      004C74 28               [12]14019 	add	a,r0
      004C75 F8               [12]14020 	mov	r0,a
      004C76 E4               [12]14021 	clr	a
      004C77 39               [12]14022 	addc	a,r1
      004C78 F9               [12]14023 	mov	r1,a
      004C79 90r00r10         [24]14024 	mov	dptr,#_st_dword_PARM_2
      004C7C EB               [12]14025 	mov	a,r3
      004C7D F0               [24]14026 	movx	@dptr,a
      004C7E EC               [12]14027 	mov	a,r4
      004C7F A3               [24]14028 	inc	dptr
      004C80 F0               [24]14029 	movx	@dptr,a
      004C81 ED               [12]14030 	mov	a,r5
      004C82 A3               [24]14031 	inc	dptr
      004C83 F0               [24]14032 	movx	@dptr,a
      004C84 EE               [12]14033 	mov	a,r6
      004C85 A3               [24]14034 	inc	dptr
      004C86 F0               [24]14035 	movx	@dptr,a
      004C87 88 82            [24]14036 	mov	dpl,r0
      004C89 89 83            [24]14037 	mov	dph,r1
      004C8B 8A F0            [24]14038 	mov	b,r2
      004C8D 12r01r76         [24]14039 	lcall	_st_dword
                                  14040 ;	ff15\source\ff.c:3797: cl = ld_clust(fs, dj.dir);			/* Get current cluster chain */
      004C90 90r01r42         [24]14041 	mov	dptr,#_f_open_fs_65536_244
      004C93 E0               [24]14042 	movx	a,@dptr
      004C94 FC               [12]14043 	mov	r4,a
      004C95 A3               [24]14044 	inc	dptr
      004C96 E0               [24]14045 	movx	a,@dptr
      004C97 FD               [12]14046 	mov	r5,a
      004C98 A3               [24]14047 	inc	dptr
      004C99 E0               [24]14048 	movx	a,@dptr
      004C9A FE               [12]14049 	mov	r6,a
      004C9B 90r01r33         [24]14050 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004C9E E0               [24]14051 	movx	a,@dptr
      004C9F F9               [12]14052 	mov	r1,a
      004CA0 A3               [24]14053 	inc	dptr
      004CA1 E0               [24]14054 	movx	a,@dptr
      004CA2 FA               [12]14055 	mov	r2,a
      004CA3 A3               [24]14056 	inc	dptr
      004CA4 E0               [24]14057 	movx	a,@dptr
      004CA5 FB               [12]14058 	mov	r3,a
      004CA6 90r00r85         [24]14059 	mov	dptr,#_ld_clust_PARM_2
      004CA9 E9               [12]14060 	mov	a,r1
      004CAA F0               [24]14061 	movx	@dptr,a
      004CAB EA               [12]14062 	mov	a,r2
      004CAC A3               [24]14063 	inc	dptr
      004CAD F0               [24]14064 	movx	@dptr,a
      004CAE EB               [12]14065 	mov	a,r3
      004CAF A3               [24]14066 	inc	dptr
      004CB0 F0               [24]14067 	movx	@dptr,a
      004CB1 8C 82            [24]14068 	mov	dpl,r4
      004CB3 8D 83            [24]14069 	mov	dph,r5
      004CB5 8E F0            [24]14070 	mov	b,r6
      004CB7 12r28r70         [24]14071 	lcall	_ld_clust
      004CBA 85 82*0A         [24]14072 	mov	_f_open_sloc1_1_0,dpl
      004CBD 85 83*0B         [24]14073 	mov	(_f_open_sloc1_1_0 + 1),dph
      004CC0 85 F0*0C         [24]14074 	mov	(_f_open_sloc1_1_0 + 2),b
      004CC3 F5*0D            [12]14075 	mov	(_f_open_sloc1_1_0 + 3),a
                                  14076 ;	ff15\source\ff.c:3798: dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
      004CC5 90r01r33         [24]14077 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004CC8 E0               [24]14078 	movx	a,@dptr
      004CC9 F8               [12]14079 	mov	r0,a
      004CCA A3               [24]14080 	inc	dptr
      004CCB E0               [24]14081 	movx	a,@dptr
      004CCC F9               [12]14082 	mov	r1,a
      004CCD A3               [24]14083 	inc	dptr
      004CCE E0               [24]14084 	movx	a,@dptr
      004CCF FA               [12]14085 	mov	r2,a
      004CD0 74 0B            [12]14086 	mov	a,#0x0b
      004CD2 28               [12]14087 	add	a,r0
      004CD3 F8               [12]14088 	mov	r0,a
      004CD4 E4               [12]14089 	clr	a
      004CD5 39               [12]14090 	addc	a,r1
      004CD6 F9               [12]14091 	mov	r1,a
      004CD7 88 82            [24]14092 	mov	dpl,r0
      004CD9 89 83            [24]14093 	mov	dph,r1
      004CDB 8A F0            [24]14094 	mov	b,r2
      004CDD 74 20            [12]14095 	mov	a,#0x20
      004CDF 12r00r00         [24]14096 	lcall	__gptrput
                                  14097 ;	ff15\source\ff.c:3799: st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
      004CE2 90r01r42         [24]14098 	mov	dptr,#_f_open_fs_65536_244
      004CE5 E0               [24]14099 	movx	a,@dptr
      004CE6 F5*07            [12]14100 	mov	_f_open_sloc0_1_0,a
      004CE8 A3               [24]14101 	inc	dptr
      004CE9 E0               [24]14102 	movx	a,@dptr
      004CEA F5*08            [12]14103 	mov	(_f_open_sloc0_1_0 + 1),a
      004CEC A3               [24]14104 	inc	dptr
      004CED E0               [24]14105 	movx	a,@dptr
      004CEE F5*09            [12]14106 	mov	(_f_open_sloc0_1_0 + 2),a
      004CF0 90r01r33         [24]14107 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004CF3 E0               [24]14108 	movx	a,@dptr
      004CF4 F8               [12]14109 	mov	r0,a
      004CF5 A3               [24]14110 	inc	dptr
      004CF6 E0               [24]14111 	movx	a,@dptr
      004CF7 F9               [12]14112 	mov	r1,a
      004CF8 A3               [24]14113 	inc	dptr
      004CF9 E0               [24]14114 	movx	a,@dptr
      004CFA FA               [12]14115 	mov	r2,a
      004CFB 90r00r8F         [24]14116 	mov	dptr,#_st_clust_PARM_2
      004CFE E8               [12]14117 	mov	a,r0
      004CFF F0               [24]14118 	movx	@dptr,a
      004D00 E9               [12]14119 	mov	a,r1
      004D01 A3               [24]14120 	inc	dptr
      004D02 F0               [24]14121 	movx	@dptr,a
      004D03 EA               [12]14122 	mov	a,r2
      004D04 A3               [24]14123 	inc	dptr
      004D05 F0               [24]14124 	movx	@dptr,a
      004D06 90r00r92         [24]14125 	mov	dptr,#_st_clust_PARM_3
      004D09 E4               [12]14126 	clr	a
      004D0A F0               [24]14127 	movx	@dptr,a
      004D0B A3               [24]14128 	inc	dptr
      004D0C F0               [24]14129 	movx	@dptr,a
      004D0D A3               [24]14130 	inc	dptr
      004D0E F0               [24]14131 	movx	@dptr,a
      004D0F A3               [24]14132 	inc	dptr
      004D10 F0               [24]14133 	movx	@dptr,a
      004D11 85*07 82         [24]14134 	mov	dpl,_f_open_sloc0_1_0
      004D14 85*08 83         [24]14135 	mov	dph,(_f_open_sloc0_1_0 + 1)
      004D17 85*09 F0         [24]14136 	mov	b,(_f_open_sloc0_1_0 + 2)
      004D1A 12r29r2E         [24]14137 	lcall	_st_clust
                                  14138 ;	ff15\source\ff.c:3800: st_dword(dj.dir + DIR_FileSize, 0);
      004D1D 90r01r33         [24]14139 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004D20 E0               [24]14140 	movx	a,@dptr
      004D21 F8               [12]14141 	mov	r0,a
      004D22 A3               [24]14142 	inc	dptr
      004D23 E0               [24]14143 	movx	a,@dptr
      004D24 F9               [12]14144 	mov	r1,a
      004D25 A3               [24]14145 	inc	dptr
      004D26 E0               [24]14146 	movx	a,@dptr
      004D27 FA               [12]14147 	mov	r2,a
      004D28 74 1C            [12]14148 	mov	a,#0x1c
      004D2A 28               [12]14149 	add	a,r0
      004D2B F8               [12]14150 	mov	r0,a
      004D2C E4               [12]14151 	clr	a
      004D2D 39               [12]14152 	addc	a,r1
      004D2E F9               [12]14153 	mov	r1,a
      004D2F 90r00r10         [24]14154 	mov	dptr,#_st_dword_PARM_2
      004D32 E4               [12]14155 	clr	a
      004D33 F0               [24]14156 	movx	@dptr,a
      004D34 A3               [24]14157 	inc	dptr
      004D35 F0               [24]14158 	movx	@dptr,a
      004D36 A3               [24]14159 	inc	dptr
      004D37 F0               [24]14160 	movx	@dptr,a
      004D38 A3               [24]14161 	inc	dptr
      004D39 F0               [24]14162 	movx	@dptr,a
      004D3A 88 82            [24]14163 	mov	dpl,r0
      004D3C 89 83            [24]14164 	mov	dph,r1
      004D3E 8A F0            [24]14165 	mov	b,r2
      004D40 12r01r76         [24]14166 	lcall	_st_dword
                                  14167 ;	ff15\source\ff.c:3801: fs->wflag = 1;
      004D43 90r01r42         [24]14168 	mov	dptr,#_f_open_fs_65536_244
      004D46 E0               [24]14169 	movx	a,@dptr
      004D47 F8               [12]14170 	mov	r0,a
      004D48 A3               [24]14171 	inc	dptr
      004D49 E0               [24]14172 	movx	a,@dptr
      004D4A F9               [12]14173 	mov	r1,a
      004D4B A3               [24]14174 	inc	dptr
      004D4C E0               [24]14175 	movx	a,@dptr
      004D4D FA               [12]14176 	mov	r2,a
      004D4E 74 04            [12]14177 	mov	a,#0x04
      004D50 28               [12]14178 	add	a,r0
      004D51 F8               [12]14179 	mov	r0,a
      004D52 E4               [12]14180 	clr	a
      004D53 39               [12]14181 	addc	a,r1
      004D54 F9               [12]14182 	mov	r1,a
      004D55 88 82            [24]14183 	mov	dpl,r0
      004D57 89 83            [24]14184 	mov	dph,r1
      004D59 8A F0            [24]14185 	mov	b,r2
      004D5B 74 01            [12]14186 	mov	a,#0x01
      004D5D 12r00r00         [24]14187 	lcall	__gptrput
                                  14188 ;	ff15\source\ff.c:3802: if (cl != 0) {						/* Remove the cluster chain if exist */
      004D60 E5*0A            [12]14189 	mov	a,_f_open_sloc1_1_0
      004D62 45*0B            [12]14190 	orl	a,(_f_open_sloc1_1_0 + 1)
      004D64 45*0C            [12]14191 	orl	a,(_f_open_sloc1_1_0 + 2)
      004D66 45*0D            [12]14192 	orl	a,(_f_open_sloc1_1_0 + 3)
      004D68 70 03            [24]14193 	jnz	00307$
      004D6A 02r4Er74         [24]14194 	ljmp	00134$
      004D6D                      14195 00307$:
                                  14196 ;	ff15\source\ff.c:3803: sc = fs->winsect;
      004D6D 90r01r42         [24]14197 	mov	dptr,#_f_open_fs_65536_244
      004D70 E0               [24]14198 	movx	a,@dptr
      004D71 F8               [12]14199 	mov	r0,a
      004D72 A3               [24]14200 	inc	dptr
      004D73 E0               [24]14201 	movx	a,@dptr
      004D74 F9               [12]14202 	mov	r1,a
      004D75 A3               [24]14203 	inc	dptr
      004D76 E0               [24]14204 	movx	a,@dptr
      004D77 FA               [12]14205 	mov	r2,a
      004D78 74 2C            [12]14206 	mov	a,#0x2c
      004D7A 28               [12]14207 	add	a,r0
      004D7B F8               [12]14208 	mov	r0,a
      004D7C E4               [12]14209 	clr	a
      004D7D 39               [12]14210 	addc	a,r1
      004D7E F9               [12]14211 	mov	r1,a
      004D7F 88 82            [24]14212 	mov	dpl,r0
      004D81 89 83            [24]14213 	mov	dph,r1
      004D83 8A F0            [24]14214 	mov	b,r2
      004D85 12r00r00         [24]14215 	lcall	__gptrget
      004D88 F8               [12]14216 	mov	r0,a
      004D89 A3               [24]14217 	inc	dptr
      004D8A 12r00r00         [24]14218 	lcall	__gptrget
      004D8D F9               [12]14219 	mov	r1,a
      004D8E A3               [24]14220 	inc	dptr
      004D8F 12r00r00         [24]14221 	lcall	__gptrget
      004D92 FA               [12]14222 	mov	r2,a
      004D93 A3               [24]14223 	inc	dptr
      004D94 12r00r00         [24]14224 	lcall	__gptrget
      004D97 FE               [12]14225 	mov	r6,a
      004D98 90r01r49         [24]14226 	mov	dptr,#_f_open_sc_65536_244
      004D9B E8               [12]14227 	mov	a,r0
      004D9C F0               [24]14228 	movx	@dptr,a
      004D9D E9               [12]14229 	mov	a,r1
      004D9E A3               [24]14230 	inc	dptr
      004D9F F0               [24]14231 	movx	@dptr,a
      004DA0 EA               [12]14232 	mov	a,r2
      004DA1 A3               [24]14233 	inc	dptr
      004DA2 F0               [24]14234 	movx	@dptr,a
      004DA3 EE               [12]14235 	mov	a,r6
      004DA4 A3               [24]14236 	inc	dptr
      004DA5 F0               [24]14237 	movx	@dptr,a
                                  14238 ;	ff15\source\ff.c:3804: res = remove_chain(&dj.obj, cl, 0);
      004DA6 90r00r47         [24]14239 	mov	dptr,#_remove_chain_PARM_2
      004DA9 E5*0A            [12]14240 	mov	a,_f_open_sloc1_1_0
      004DAB F0               [24]14241 	movx	@dptr,a
      004DAC E5*0B            [12]14242 	mov	a,(_f_open_sloc1_1_0 + 1)
      004DAE A3               [24]14243 	inc	dptr
      004DAF F0               [24]14244 	movx	@dptr,a
      004DB0 E5*0C            [12]14245 	mov	a,(_f_open_sloc1_1_0 + 2)
      004DB2 A3               [24]14246 	inc	dptr
      004DB3 F0               [24]14247 	movx	@dptr,a
      004DB4 E5*0D            [12]14248 	mov	a,(_f_open_sloc1_1_0 + 3)
      004DB6 A3               [24]14249 	inc	dptr
      004DB7 F0               [24]14250 	movx	@dptr,a
      004DB8 90r00r4B         [24]14251 	mov	dptr,#_remove_chain_PARM_3
      004DBB E4               [12]14252 	clr	a
      004DBC F0               [24]14253 	movx	@dptr,a
      004DBD A3               [24]14254 	inc	dptr
      004DBE F0               [24]14255 	movx	@dptr,a
      004DBF A3               [24]14256 	inc	dptr
      004DC0 F0               [24]14257 	movx	@dptr,a
      004DC1 A3               [24]14258 	inc	dptr
      004DC2 F0               [24]14259 	movx	@dptr,a
      004DC3 90r01r18         [24]14260 	mov	dptr,#_f_open_dj_65536_244
      004DC6 75 F0 00         [24]14261 	mov	b,#0x00
      004DC9 12r13r15         [24]14262 	lcall	_remove_chain
      004DCC AE 82            [24]14263 	mov	r6,dpl
      004DCE 90r01r17         [24]14264 	mov	dptr,#_f_open_res_65536_244
      004DD1 EE               [12]14265 	mov	a,r6
      004DD2 F0               [24]14266 	movx	@dptr,a
                                  14267 ;	ff15\source\ff.c:3805: if (res == FR_OK) {
      004DD3 EE               [12]14268 	mov	a,r6
      004DD4 60 03            [24]14269 	jz	00308$
      004DD6 02r4Er74         [24]14270 	ljmp	00134$
      004DD9                      14271 00308$:
                                  14272 ;	ff15\source\ff.c:3806: res = move_window(fs, sc);
      004DD9 90r01r42         [24]14273 	mov	dptr,#_f_open_fs_65536_244
      004DDC E0               [24]14274 	movx	a,@dptr
      004DDD FC               [12]14275 	mov	r4,a
      004DDE A3               [24]14276 	inc	dptr
      004DDF E0               [24]14277 	movx	a,@dptr
      004DE0 FD               [12]14278 	mov	r5,a
      004DE1 A3               [24]14279 	inc	dptr
      004DE2 E0               [24]14280 	movx	a,@dptr
      004DE3 FE               [12]14281 	mov	r6,a
      004DE4 90r01r49         [24]14282 	mov	dptr,#_f_open_sc_65536_244
      004DE7 E0               [24]14283 	movx	a,@dptr
      004DE8 F8               [12]14284 	mov	r0,a
      004DE9 A3               [24]14285 	inc	dptr
      004DEA E0               [24]14286 	movx	a,@dptr
      004DEB F9               [12]14287 	mov	r1,a
      004DEC A3               [24]14288 	inc	dptr
      004DED E0               [24]14289 	movx	a,@dptr
      004DEE FA               [12]14290 	mov	r2,a
      004DEF A3               [24]14291 	inc	dptr
      004DF0 E0               [24]14292 	movx	a,@dptr
      004DF1 FB               [12]14293 	mov	r3,a
      004DF2 90r00r1D         [24]14294 	mov	dptr,#_move_window_PARM_2
      004DF5 E8               [12]14295 	mov	a,r0
      004DF6 F0               [24]14296 	movx	@dptr,a
      004DF7 E9               [12]14297 	mov	a,r1
      004DF8 A3               [24]14298 	inc	dptr
      004DF9 F0               [24]14299 	movx	@dptr,a
      004DFA EA               [12]14300 	mov	a,r2
      004DFB A3               [24]14301 	inc	dptr
      004DFC F0               [24]14302 	movx	@dptr,a
      004DFD EB               [12]14303 	mov	a,r3
      004DFE A3               [24]14304 	inc	dptr
      004DFF F0               [24]14305 	movx	@dptr,a
      004E00 8C 82            [24]14306 	mov	dpl,r4
      004E02 8D 83            [24]14307 	mov	dph,r5
      004E04 8E F0            [24]14308 	mov	b,r6
      004E06 12r05r18         [24]14309 	lcall	_move_window
      004E09 E5 82            [12]14310 	mov	a,dpl
      004E0B 90r01r17         [24]14311 	mov	dptr,#_f_open_res_65536_244
      004E0E F0               [24]14312 	movx	@dptr,a
                                  14313 ;	ff15\source\ff.c:3807: fs->last_clst = cl - 1;		/* Reuse the cluster hole */
      004E0F 90r01r42         [24]14314 	mov	dptr,#_f_open_fs_65536_244
      004E12 E0               [24]14315 	movx	a,@dptr
      004E13 FC               [12]14316 	mov	r4,a
      004E14 A3               [24]14317 	inc	dptr
      004E15 E0               [24]14318 	movx	a,@dptr
      004E16 FD               [12]14319 	mov	r5,a
      004E17 A3               [24]14320 	inc	dptr
      004E18 E0               [24]14321 	movx	a,@dptr
      004E19 FE               [12]14322 	mov	r6,a
      004E1A 74 0C            [12]14323 	mov	a,#0x0c
      004E1C 2C               [12]14324 	add	a,r4
      004E1D FC               [12]14325 	mov	r4,a
      004E1E E4               [12]14326 	clr	a
      004E1F 3D               [12]14327 	addc	a,r5
      004E20 FD               [12]14328 	mov	r5,a
      004E21 E5*0A            [12]14329 	mov	a,_f_open_sloc1_1_0
      004E23 24 FF            [12]14330 	add	a,#0xff
      004E25 F8               [12]14331 	mov	r0,a
      004E26 E5*0B            [12]14332 	mov	a,(_f_open_sloc1_1_0 + 1)
      004E28 34 FF            [12]14333 	addc	a,#0xff
      004E2A F9               [12]14334 	mov	r1,a
      004E2B E5*0C            [12]14335 	mov	a,(_f_open_sloc1_1_0 + 2)
      004E2D 34 FF            [12]14336 	addc	a,#0xff
      004E2F FA               [12]14337 	mov	r2,a
      004E30 E5*0D            [12]14338 	mov	a,(_f_open_sloc1_1_0 + 3)
      004E32 34 FF            [12]14339 	addc	a,#0xff
      004E34 FB               [12]14340 	mov	r3,a
      004E35 8C 82            [24]14341 	mov	dpl,r4
      004E37 8D 83            [24]14342 	mov	dph,r5
      004E39 8E F0            [24]14343 	mov	b,r6
      004E3B E8               [12]14344 	mov	a,r0
      004E3C 12r00r00         [24]14345 	lcall	__gptrput
      004E3F A3               [24]14346 	inc	dptr
      004E40 E9               [12]14347 	mov	a,r1
      004E41 12r00r00         [24]14348 	lcall	__gptrput
      004E44 A3               [24]14349 	inc	dptr
      004E45 EA               [12]14350 	mov	a,r2
      004E46 12r00r00         [24]14351 	lcall	__gptrput
      004E49 A3               [24]14352 	inc	dptr
      004E4A EB               [12]14353 	mov	a,r3
      004E4B 12r00r00         [24]14354 	lcall	__gptrput
      004E4E 80 24            [24]14355 	sjmp	00134$
      004E50                      14356 00133$:
                                  14357 ;	ff15\source\ff.c:3814: if (res == FR_OK) {					/* Is the object exsiting? */
      004E50 90r01r17         [24]14358 	mov	dptr,#_f_open_res_65536_244
      004E53 E0               [24]14359 	movx	a,@dptr
      004E54 70 1E            [24]14360 	jnz	00134$
                                  14361 ;	ff15\source\ff.c:3815: if (dj.obj.attr & AM_DIR) {		/* File open against a directory */
      004E56 90r01r1D         [24]14362 	mov	dptr,#(_f_open_dj_65536_244 + 0x0005)
      004E59 E0               [24]14363 	movx	a,@dptr
      004E5A FE               [12]14364 	mov	r6,a
      004E5B 30 E4 08         [24]14365 	jnb	acc.4,00128$
                                  14366 ;	ff15\source\ff.c:3816: res = FR_NO_FILE;
      004E5E 90r01r17         [24]14367 	mov	dptr,#_f_open_res_65536_244
      004E61 74 04            [12]14368 	mov	a,#0x04
      004E63 F0               [24]14369 	movx	@dptr,a
      004E64 80 0E            [24]14370 	sjmp	00134$
      004E66                      14371 00128$:
                                  14372 ;	ff15\source\ff.c:3818: if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* Write mode open against R/O file */
      004E66 EF               [12]14373 	mov	a,r7
      004E67 30 E1 0A         [24]14374 	jnb	acc.1,00134$
      004E6A EE               [12]14375 	mov	a,r6
      004E6B 30 E0 06         [24]14376 	jnb	acc.0,00134$
                                  14377 ;	ff15\source\ff.c:3819: res = FR_DENIED;
      004E6E 90r01r17         [24]14378 	mov	dptr,#_f_open_res_65536_244
      004E71 74 07            [12]14379 	mov	a,#0x07
      004E73 F0               [24]14380 	movx	@dptr,a
      004E74                      14381 00134$:
                                  14382 ;	ff15\source\ff.c:3824: if (res == FR_OK) {
      004E74 90r01r17         [24]14383 	mov	dptr,#_f_open_res_65536_244
      004E77 E0               [24]14384 	movx	a,@dptr
      004E78 60 03            [24]14385 	jz	00313$
      004E7A 02r4Fr0F         [24]14386 	ljmp	00138$
      004E7D                      14387 00313$:
                                  14388 ;	ff15\source\ff.c:3825: if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwritten */
      004E7D 90r01r13         [24]14389 	mov	dptr,#_f_open_PARM_3
      004E80 E0               [24]14390 	movx	a,@dptr
      004E81 FF               [12]14391 	mov	r7,a
      004E82 30 E3 07         [24]14392 	jnb	acc.3,00136$
      004E85 90r01r13         [24]14393 	mov	dptr,#_f_open_PARM_3
      004E88 74 40            [12]14394 	mov	a,#0x40
      004E8A 4F               [12]14395 	orl	a,r7
      004E8B F0               [24]14396 	movx	@dptr,a
      004E8C                      14397 00136$:
                                  14398 ;	ff15\source\ff.c:3826: fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
      004E8C 90r01r14         [24]14399 	mov	dptr,#_f_open_fp_65536_243
      004E8F E0               [24]14400 	movx	a,@dptr
      004E90 FD               [12]14401 	mov	r5,a
      004E91 A3               [24]14402 	inc	dptr
      004E92 E0               [24]14403 	movx	a,@dptr
      004E93 FE               [12]14404 	mov	r6,a
      004E94 A3               [24]14405 	inc	dptr
      004E95 E0               [24]14406 	movx	a,@dptr
      004E96 FF               [12]14407 	mov	r7,a
      004E97 74 1D            [12]14408 	mov	a,#0x1d
      004E99 2D               [12]14409 	add	a,r5
      004E9A F5*0A            [12]14410 	mov	_f_open_sloc1_1_0,a
      004E9C E4               [12]14411 	clr	a
      004E9D 3E               [12]14412 	addc	a,r6
      004E9E F5*0B            [12]14413 	mov	(_f_open_sloc1_1_0 + 1),a
      004EA0 8F*0C            [24]14414 	mov	(_f_open_sloc1_1_0 + 2),r7
      004EA2 90r01r42         [24]14415 	mov	dptr,#_f_open_fs_65536_244
      004EA5 E0               [24]14416 	movx	a,@dptr
      004EA6 F8               [12]14417 	mov	r0,a
      004EA7 A3               [24]14418 	inc	dptr
      004EA8 E0               [24]14419 	movx	a,@dptr
      004EA9 F9               [12]14420 	mov	r1,a
      004EAA A3               [24]14421 	inc	dptr
      004EAB E0               [24]14422 	movx	a,@dptr
      004EAC FC               [12]14423 	mov	r4,a
      004EAD 74 2C            [12]14424 	mov	a,#0x2c
      004EAF 28               [12]14425 	add	a,r0
      004EB0 F8               [12]14426 	mov	r0,a
      004EB1 E4               [12]14427 	clr	a
      004EB2 39               [12]14428 	addc	a,r1
      004EB3 F9               [12]14429 	mov	r1,a
      004EB4 88 82            [24]14430 	mov	dpl,r0
      004EB6 89 83            [24]14431 	mov	dph,r1
      004EB8 8C F0            [24]14432 	mov	b,r4
      004EBA 12r00r00         [24]14433 	lcall	__gptrget
      004EBD F8               [12]14434 	mov	r0,a
      004EBE A3               [24]14435 	inc	dptr
      004EBF 12r00r00         [24]14436 	lcall	__gptrget
      004EC2 F9               [12]14437 	mov	r1,a
      004EC3 A3               [24]14438 	inc	dptr
      004EC4 12r00r00         [24]14439 	lcall	__gptrget
      004EC7 FC               [12]14440 	mov	r4,a
      004EC8 A3               [24]14441 	inc	dptr
      004EC9 12r00r00         [24]14442 	lcall	__gptrget
      004ECC FB               [12]14443 	mov	r3,a
      004ECD 85*0A 82         [24]14444 	mov	dpl,_f_open_sloc1_1_0
      004ED0 85*0B 83         [24]14445 	mov	dph,(_f_open_sloc1_1_0 + 1)
      004ED3 85*0C F0         [24]14446 	mov	b,(_f_open_sloc1_1_0 + 2)
      004ED6 E8               [12]14447 	mov	a,r0
      004ED7 12r00r00         [24]14448 	lcall	__gptrput
      004EDA A3               [24]14449 	inc	dptr
      004EDB E9               [12]14450 	mov	a,r1
      004EDC 12r00r00         [24]14451 	lcall	__gptrput
      004EDF A3               [24]14452 	inc	dptr
      004EE0 EC               [12]14453 	mov	a,r4
      004EE1 12r00r00         [24]14454 	lcall	__gptrput
      004EE4 A3               [24]14455 	inc	dptr
      004EE5 EB               [12]14456 	mov	a,r3
      004EE6 12r00r00         [24]14457 	lcall	__gptrput
                                  14458 ;	ff15\source\ff.c:3827: fp->dir_ptr = dj.dir;
      004EE9 74 21            [12]14459 	mov	a,#0x21
      004EEB 2D               [12]14460 	add	a,r5
      004EEC FD               [12]14461 	mov	r5,a
      004EED E4               [12]14462 	clr	a
      004EEE 3E               [12]14463 	addc	a,r6
      004EEF FE               [12]14464 	mov	r6,a
      004EF0 90r01r33         [24]14465 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004EF3 E0               [24]14466 	movx	a,@dptr
      004EF4 FA               [12]14467 	mov	r2,a
      004EF5 A3               [24]14468 	inc	dptr
      004EF6 E0               [24]14469 	movx	a,@dptr
      004EF7 FB               [12]14470 	mov	r3,a
      004EF8 A3               [24]14471 	inc	dptr
      004EF9 E0               [24]14472 	movx	a,@dptr
      004EFA FC               [12]14473 	mov	r4,a
      004EFB 8D 82            [24]14474 	mov	dpl,r5
      004EFD 8E 83            [24]14475 	mov	dph,r6
      004EFF 8F F0            [24]14476 	mov	b,r7
      004F01 EA               [12]14477 	mov	a,r2
      004F02 12r00r00         [24]14478 	lcall	__gptrput
      004F05 A3               [24]14479 	inc	dptr
      004F06 EB               [12]14480 	mov	a,r3
      004F07 12r00r00         [24]14481 	lcall	__gptrput
      004F0A A3               [24]14482 	inc	dptr
      004F0B EC               [12]14483 	mov	a,r4
      004F0C 12r00r00         [24]14484 	lcall	__gptrput
      004F0F                      14485 00138$:
                                  14486 ;	ff15\source\ff.c:3845: if (res == FR_OK) {
      004F0F 90r01r17         [24]14487 	mov	dptr,#_f_open_res_65536_244
      004F12 E0               [24]14488 	movx	a,@dptr
      004F13 60 03            [24]14489 	jz	00315$
      004F15 02r54r0D         [24]14490 	ljmp	00158$
      004F18                      14491 00315$:
                                  14492 ;	ff15\source\ff.c:3855: fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
      004F18 90r01r14         [24]14493 	mov	dptr,#_f_open_fp_65536_243
      004F1B E0               [24]14494 	movx	a,@dptr
      004F1C FD               [12]14495 	mov	r5,a
      004F1D A3               [24]14496 	inc	dptr
      004F1E E0               [24]14497 	movx	a,@dptr
      004F1F FE               [12]14498 	mov	r6,a
      004F20 A3               [24]14499 	inc	dptr
      004F21 E0               [24]14500 	movx	a,@dptr
      004F22 FF               [12]14501 	mov	r7,a
      004F23 74 07            [12]14502 	mov	a,#0x07
      004F25 2D               [12]14503 	add	a,r5
      004F26 F5*0A            [12]14504 	mov	_f_open_sloc1_1_0,a
      004F28 E4               [12]14505 	clr	a
      004F29 3E               [12]14506 	addc	a,r6
      004F2A F5*0B            [12]14507 	mov	(_f_open_sloc1_1_0 + 1),a
      004F2C 8F*0C            [24]14508 	mov	(_f_open_sloc1_1_0 + 2),r7
      004F2E 90r01r42         [24]14509 	mov	dptr,#_f_open_fs_65536_244
      004F31 E0               [24]14510 	movx	a,@dptr
      004F32 F5*07            [12]14511 	mov	_f_open_sloc0_1_0,a
      004F34 A3               [24]14512 	inc	dptr
      004F35 E0               [24]14513 	movx	a,@dptr
      004F36 F5*08            [12]14514 	mov	(_f_open_sloc0_1_0 + 1),a
      004F38 A3               [24]14515 	inc	dptr
      004F39 E0               [24]14516 	movx	a,@dptr
      004F3A F5*09            [12]14517 	mov	(_f_open_sloc0_1_0 + 2),a
      004F3C 90r01r33         [24]14518 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004F3F E0               [24]14519 	movx	a,@dptr
      004F40 FA               [12]14520 	mov	r2,a
      004F41 A3               [24]14521 	inc	dptr
      004F42 E0               [24]14522 	movx	a,@dptr
      004F43 FB               [12]14523 	mov	r3,a
      004F44 A3               [24]14524 	inc	dptr
      004F45 E0               [24]14525 	movx	a,@dptr
      004F46 FC               [12]14526 	mov	r4,a
      004F47 90r00r85         [24]14527 	mov	dptr,#_ld_clust_PARM_2
      004F4A EA               [12]14528 	mov	a,r2
      004F4B F0               [24]14529 	movx	@dptr,a
      004F4C EB               [12]14530 	mov	a,r3
      004F4D A3               [24]14531 	inc	dptr
      004F4E F0               [24]14532 	movx	@dptr,a
      004F4F EC               [12]14533 	mov	a,r4
      004F50 A3               [24]14534 	inc	dptr
      004F51 F0               [24]14535 	movx	@dptr,a
      004F52 85*07 82         [24]14536 	mov	dpl,_f_open_sloc0_1_0
      004F55 85*08 83         [24]14537 	mov	dph,(_f_open_sloc0_1_0 + 1)
      004F58 85*09 F0         [24]14538 	mov	b,(_f_open_sloc0_1_0 + 2)
      004F5B C0 07            [24]14539 	push	ar7
      004F5D C0 06            [24]14540 	push	ar6
      004F5F C0 05            [24]14541 	push	ar5
      004F61 12r28r70         [24]14542 	lcall	_ld_clust
      004F64 AA 82            [24]14543 	mov	r2,dpl
      004F66 AB 83            [24]14544 	mov	r3,dph
      004F68 A9 F0            [24]14545 	mov	r1,b
      004F6A FC               [12]14546 	mov	r4,a
      004F6B D0 05            [24]14547 	pop	ar5
      004F6D D0 06            [24]14548 	pop	ar6
      004F6F D0 07            [24]14549 	pop	ar7
      004F71 85*0A 82         [24]14550 	mov	dpl,_f_open_sloc1_1_0
      004F74 85*0B 83         [24]14551 	mov	dph,(_f_open_sloc1_1_0 + 1)
      004F77 85*0C F0         [24]14552 	mov	b,(_f_open_sloc1_1_0 + 2)
      004F7A EA               [12]14553 	mov	a,r2
      004F7B 12r00r00         [24]14554 	lcall	__gptrput
      004F7E A3               [24]14555 	inc	dptr
      004F7F EB               [12]14556 	mov	a,r3
      004F80 12r00r00         [24]14557 	lcall	__gptrput
      004F83 A3               [24]14558 	inc	dptr
      004F84 E9               [12]14559 	mov	a,r1
      004F85 12r00r00         [24]14560 	lcall	__gptrput
      004F88 A3               [24]14561 	inc	dptr
      004F89 EC               [12]14562 	mov	a,r4
      004F8A 12r00r00         [24]14563 	lcall	__gptrput
                                  14564 ;	ff15\source\ff.c:3856: fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
      004F8D 74 0B            [12]14565 	mov	a,#0x0b
      004F8F 2D               [12]14566 	add	a,r5
      004F90 F5*07            [12]14567 	mov	_f_open_sloc0_1_0,a
      004F92 E4               [12]14568 	clr	a
      004F93 3E               [12]14569 	addc	a,r6
      004F94 F5*08            [12]14570 	mov	(_f_open_sloc0_1_0 + 1),a
      004F96 8F*09            [24]14571 	mov	(_f_open_sloc0_1_0 + 2),r7
      004F98 90r01r33         [24]14572 	mov	dptr,#(_f_open_dj_65536_244 + 0x001b)
      004F9B E0               [24]14573 	movx	a,@dptr
      004F9C F8               [12]14574 	mov	r0,a
      004F9D A3               [24]14575 	inc	dptr
      004F9E E0               [24]14576 	movx	a,@dptr
      004F9F F9               [12]14577 	mov	r1,a
      004FA0 A3               [24]14578 	inc	dptr
      004FA1 E0               [24]14579 	movx	a,@dptr
      004FA2 FC               [12]14580 	mov	r4,a
      004FA3 74 1C            [12]14581 	mov	a,#0x1c
      004FA5 28               [12]14582 	add	a,r0
      004FA6 F8               [12]14583 	mov	r0,a
      004FA7 E4               [12]14584 	clr	a
      004FA8 39               [12]14585 	addc	a,r1
      004FA9 F9               [12]14586 	mov	r1,a
      004FAA 88 82            [24]14587 	mov	dpl,r0
      004FAC 89 83            [24]14588 	mov	dph,r1
      004FAE 8C F0            [24]14589 	mov	b,r4
      004FB0 C0 07            [24]14590 	push	ar7
      004FB2 C0 06            [24]14591 	push	ar6
      004FB4 C0 05            [24]14592 	push	ar5
      004FB6 12r00r45         [24]14593 	lcall	_ld_dword
      004FB9 AA 82            [24]14594 	mov	r2,dpl
      004FBB AB 83            [24]14595 	mov	r3,dph
      004FBD A9 F0            [24]14596 	mov	r1,b
      004FBF FC               [12]14597 	mov	r4,a
      004FC0 D0 05            [24]14598 	pop	ar5
      004FC2 D0 06            [24]14599 	pop	ar6
      004FC4 D0 07            [24]14600 	pop	ar7
      004FC6 85*07 82         [24]14601 	mov	dpl,_f_open_sloc0_1_0
      004FC9 85*08 83         [24]14602 	mov	dph,(_f_open_sloc0_1_0 + 1)
      004FCC 85*09 F0         [24]14603 	mov	b,(_f_open_sloc0_1_0 + 2)
      004FCF EA               [12]14604 	mov	a,r2
      004FD0 12r00r00         [24]14605 	lcall	__gptrput
      004FD3 A3               [24]14606 	inc	dptr
      004FD4 EB               [12]14607 	mov	a,r3
      004FD5 12r00r00         [24]14608 	lcall	__gptrput
      004FD8 A3               [24]14609 	inc	dptr
      004FD9 E9               [12]14610 	mov	a,r1
      004FDA 12r00r00         [24]14611 	lcall	__gptrput
      004FDD A3               [24]14612 	inc	dptr
      004FDE EC               [12]14613 	mov	a,r4
      004FDF 12r00r00         [24]14614 	lcall	__gptrput
                                  14615 ;	ff15\source\ff.c:3861: fp->obj.fs = fs;	/* Validate the file object */
      004FE2 90r01r42         [24]14616 	mov	dptr,#_f_open_fs_65536_244
      004FE5 E0               [24]14617 	movx	a,@dptr
      004FE6 FA               [12]14618 	mov	r2,a
      004FE7 A3               [24]14619 	inc	dptr
      004FE8 E0               [24]14620 	movx	a,@dptr
      004FE9 FB               [12]14621 	mov	r3,a
      004FEA A3               [24]14622 	inc	dptr
      004FEB E0               [24]14623 	movx	a,@dptr
      004FEC FC               [12]14624 	mov	r4,a
      004FED 8D 82            [24]14625 	mov	dpl,r5
      004FEF 8E 83            [24]14626 	mov	dph,r6
      004FF1 8F F0            [24]14627 	mov	b,r7
      004FF3 EA               [12]14628 	mov	a,r2
      004FF4 12r00r00         [24]14629 	lcall	__gptrput
      004FF7 A3               [24]14630 	inc	dptr
      004FF8 EB               [12]14631 	mov	a,r3
      004FF9 12r00r00         [24]14632 	lcall	__gptrput
      004FFC A3               [24]14633 	inc	dptr
      004FFD EC               [12]14634 	mov	a,r4
      004FFE 12r00r00         [24]14635 	lcall	__gptrput
                                  14636 ;	ff15\source\ff.c:3862: fp->obj.id = fs->id;
      005001 74 03            [12]14637 	mov	a,#0x03
      005003 2D               [12]14638 	add	a,r5
      005004 F5*0E            [12]14639 	mov	_f_open_sloc2_1_0,a
      005006 E4               [12]14640 	clr	a
      005007 3E               [12]14641 	addc	a,r6
      005008 F5*0F            [12]14642 	mov	(_f_open_sloc2_1_0 + 1),a
      00500A 8F*10            [24]14643 	mov	(_f_open_sloc2_1_0 + 2),r7
      00500C 90r01r42         [24]14644 	mov	dptr,#_f_open_fs_65536_244
      00500F E0               [24]14645 	movx	a,@dptr
      005010 F8               [12]14646 	mov	r0,a
      005011 A3               [24]14647 	inc	dptr
      005012 E0               [24]14648 	movx	a,@dptr
      005013 F9               [12]14649 	mov	r1,a
      005014 A3               [24]14650 	inc	dptr
      005015 E0               [24]14651 	movx	a,@dptr
      005016 FC               [12]14652 	mov	r4,a
      005017 74 06            [12]14653 	mov	a,#0x06
      005019 28               [12]14654 	add	a,r0
      00501A F8               [12]14655 	mov	r0,a
      00501B E4               [12]14656 	clr	a
      00501C 39               [12]14657 	addc	a,r1
      00501D F9               [12]14658 	mov	r1,a
      00501E 88 82            [24]14659 	mov	dpl,r0
      005020 89 83            [24]14660 	mov	dph,r1
      005022 8C F0            [24]14661 	mov	b,r4
      005024 12r00r00         [24]14662 	lcall	__gptrget
      005027 F8               [12]14663 	mov	r0,a
      005028 A3               [24]14664 	inc	dptr
      005029 12r00r00         [24]14665 	lcall	__gptrget
      00502C F9               [12]14666 	mov	r1,a
      00502D 85*0E 82         [24]14667 	mov	dpl,_f_open_sloc2_1_0
      005030 85*0F 83         [24]14668 	mov	dph,(_f_open_sloc2_1_0 + 1)
      005033 85*10 F0         [24]14669 	mov	b,(_f_open_sloc2_1_0 + 2)
      005036 E8               [12]14670 	mov	a,r0
      005037 12r00r00         [24]14671 	lcall	__gptrput
      00503A A3               [24]14672 	inc	dptr
      00503B E9               [12]14673 	mov	a,r1
      00503C 12r00r00         [24]14674 	lcall	__gptrput
                                  14675 ;	ff15\source\ff.c:3863: fp->flag = mode;	/* Set file access mode */
      00503F 74 0F            [12]14676 	mov	a,#0x0f
      005041 2D               [12]14677 	add	a,r5
      005042 FA               [12]14678 	mov	r2,a
      005043 E4               [12]14679 	clr	a
      005044 3E               [12]14680 	addc	a,r6
      005045 FB               [12]14681 	mov	r3,a
      005046 8F 04            [24]14682 	mov	ar4,r7
      005048 90r01r13         [24]14683 	mov	dptr,#_f_open_PARM_3
      00504B E0               [24]14684 	movx	a,@dptr
      00504C F9               [12]14685 	mov	r1,a
      00504D 8A 82            [24]14686 	mov	dpl,r2
      00504F 8B 83            [24]14687 	mov	dph,r3
      005051 8C F0            [24]14688 	mov	b,r4
      005053 12r00r00         [24]14689 	lcall	__gptrput
                                  14690 ;	ff15\source\ff.c:3864: fp->err = 0;		/* Clear error flag */
      005056 74 10            [12]14691 	mov	a,#0x10
      005058 2D               [12]14692 	add	a,r5
      005059 FA               [12]14693 	mov	r2,a
      00505A E4               [12]14694 	clr	a
      00505B 3E               [12]14695 	addc	a,r6
      00505C FB               [12]14696 	mov	r3,a
      00505D 8F 04            [24]14697 	mov	ar4,r7
      00505F 8A 82            [24]14698 	mov	dpl,r2
      005061 8B 83            [24]14699 	mov	dph,r3
      005063 8C F0            [24]14700 	mov	b,r4
      005065 E4               [12]14701 	clr	a
      005066 12r00r00         [24]14702 	lcall	__gptrput
                                  14703 ;	ff15\source\ff.c:3865: fp->sect = 0;		/* Invalidate current data sector */
      005069 74 19            [12]14704 	mov	a,#0x19
      00506B 2D               [12]14705 	add	a,r5
      00506C FA               [12]14706 	mov	r2,a
      00506D E4               [12]14707 	clr	a
      00506E 3E               [12]14708 	addc	a,r6
      00506F FB               [12]14709 	mov	r3,a
      005070 8F 04            [24]14710 	mov	ar4,r7
      005072 8A 82            [24]14711 	mov	dpl,r2
      005074 8B 83            [24]14712 	mov	dph,r3
      005076 8C F0            [24]14713 	mov	b,r4
      005078 E4               [12]14714 	clr	a
      005079 12r00r00         [24]14715 	lcall	__gptrput
      00507C A3               [24]14716 	inc	dptr
      00507D 12r00r00         [24]14717 	lcall	__gptrput
      005080 A3               [24]14718 	inc	dptr
      005081 12r00r00         [24]14719 	lcall	__gptrput
      005084 A3               [24]14720 	inc	dptr
      005085 12r00r00         [24]14721 	lcall	__gptrput
                                  14722 ;	ff15\source\ff.c:3866: fp->fptr = 0;		/* Set file pointer top of the file */
      005088 74 11            [12]14723 	mov	a,#0x11
      00508A 2D               [12]14724 	add	a,r5
      00508B FA               [12]14725 	mov	r2,a
      00508C E4               [12]14726 	clr	a
      00508D 3E               [12]14727 	addc	a,r6
      00508E FB               [12]14728 	mov	r3,a
      00508F 8F 04            [24]14729 	mov	ar4,r7
      005091 8A 82            [24]14730 	mov	dpl,r2
      005093 8B 83            [24]14731 	mov	dph,r3
      005095 8C F0            [24]14732 	mov	b,r4
      005097 E4               [12]14733 	clr	a
      005098 12r00r00         [24]14734 	lcall	__gptrput
      00509B A3               [24]14735 	inc	dptr
      00509C 12r00r00         [24]14736 	lcall	__gptrput
      00509F A3               [24]14737 	inc	dptr
      0050A0 12r00r00         [24]14738 	lcall	__gptrput
      0050A3 A3               [24]14739 	inc	dptr
      0050A4 12r00r00         [24]14740 	lcall	__gptrput
                                  14741 ;	ff15\source\ff.c:3869: memset(fp->buf, 0, sizeof fp->buf);	/* Clear sector buffer */
      0050A7 74 24            [12]14742 	mov	a,#0x24
      0050A9 2D               [12]14743 	add	a,r5
      0050AA FD               [12]14744 	mov	r5,a
      0050AB E4               [12]14745 	clr	a
      0050AC 3E               [12]14746 	addc	a,r6
      0050AD FE               [12]14747 	mov	r6,a
      0050AE 90r00r00         [24]14748 	mov	dptr,#_memset_PARM_2
      0050B1 E4               [12]14749 	clr	a
      0050B2 F0               [24]14750 	movx	@dptr,a
      0050B3 90r00r00         [24]14751 	mov	dptr,#_memset_PARM_3
      0050B6 F0               [24]14752 	movx	@dptr,a
      0050B7 74 02            [12]14753 	mov	a,#0x02
      0050B9 A3               [24]14754 	inc	dptr
      0050BA F0               [24]14755 	movx	@dptr,a
      0050BB 8D 82            [24]14756 	mov	dpl,r5
      0050BD 8E 83            [24]14757 	mov	dph,r6
      0050BF 8F F0            [24]14758 	mov	b,r7
      0050C1 C0 04            [24]14759 	push	ar4
      0050C3 C0 03            [24]14760 	push	ar3
      0050C5 C0 02            [24]14761 	push	ar2
      0050C7 C0 01            [24]14762 	push	ar1
      0050C9 12r00r00         [24]14763 	lcall	_memset
      0050CC D0 01            [24]14764 	pop	ar1
      0050CE D0 02            [24]14765 	pop	ar2
      0050D0 D0 03            [24]14766 	pop	ar3
      0050D2 D0 04            [24]14767 	pop	ar4
                                  14768 ;	ff15\source\ff.c:3871: if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is specified */
      0050D4 E9               [12]14769 	mov	a,r1
      0050D5 20 E5 03         [24]14770 	jb	acc.5,00316$
      0050D8 02r54r0D         [24]14771 	ljmp	00158$
      0050DB                      14772 00316$:
      0050DB 85*07 82         [24]14773 	mov	dpl,_f_open_sloc0_1_0
      0050DE 85*08 83         [24]14774 	mov	dph,(_f_open_sloc0_1_0 + 1)
      0050E1 85*09 F0         [24]14775 	mov	b,(_f_open_sloc0_1_0 + 2)
      0050E4 12r00r00         [24]14776 	lcall	__gptrget
      0050E7 F9               [12]14777 	mov	r1,a
      0050E8 A3               [24]14778 	inc	dptr
      0050E9 12r00r00         [24]14779 	lcall	__gptrget
      0050EC FD               [12]14780 	mov	r5,a
      0050ED A3               [24]14781 	inc	dptr
      0050EE 12r00r00         [24]14782 	lcall	__gptrget
      0050F1 FE               [12]14783 	mov	r6,a
      0050F2 A3               [24]14784 	inc	dptr
      0050F3 12r00r00         [24]14785 	lcall	__gptrget
      0050F6 FF               [12]14786 	mov	r7,a
      0050F7 E9               [12]14787 	mov	a,r1
      0050F8 4D               [12]14788 	orl	a,r5
      0050F9 4E               [12]14789 	orl	a,r6
      0050FA 4F               [12]14790 	orl	a,r7
      0050FB 70 03            [24]14791 	jnz	00317$
      0050FD 02r54r0D         [24]14792 	ljmp	00158$
      005100                      14793 00317$:
                                  14794 ;	ff15\source\ff.c:3872: fp->fptr = fp->obj.objsize;			/* Offset to seek */
      005100 8A 82            [24]14795 	mov	dpl,r2
      005102 8B 83            [24]14796 	mov	dph,r3
      005104 8C F0            [24]14797 	mov	b,r4
      005106 E9               [12]14798 	mov	a,r1
      005107 12r00r00         [24]14799 	lcall	__gptrput
      00510A A3               [24]14800 	inc	dptr
      00510B ED               [12]14801 	mov	a,r5
      00510C 12r00r00         [24]14802 	lcall	__gptrput
      00510F A3               [24]14803 	inc	dptr
      005110 EE               [12]14804 	mov	a,r6
      005111 12r00r00         [24]14805 	lcall	__gptrput
      005114 A3               [24]14806 	inc	dptr
      005115 EF               [12]14807 	mov	a,r7
      005116 12r00r00         [24]14808 	lcall	__gptrput
                                  14809 ;	ff15\source\ff.c:3873: bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
      005119 90r01r42         [24]14810 	mov	dptr,#_f_open_fs_65536_244
      00511C E0               [24]14811 	movx	a,@dptr
      00511D FD               [12]14812 	mov	r5,a
      00511E A3               [24]14813 	inc	dptr
      00511F E0               [24]14814 	movx	a,@dptr
      005120 FE               [12]14815 	mov	r6,a
      005121 A3               [24]14816 	inc	dptr
      005122 E0               [24]14817 	movx	a,@dptr
      005123 FF               [12]14818 	mov	r7,a
      005124 74 0A            [12]14819 	mov	a,#0x0a
      005126 2D               [12]14820 	add	a,r5
      005127 FD               [12]14821 	mov	r5,a
      005128 E4               [12]14822 	clr	a
      005129 3E               [12]14823 	addc	a,r6
      00512A FE               [12]14824 	mov	r6,a
      00512B 8D 82            [24]14825 	mov	dpl,r5
      00512D 8E 83            [24]14826 	mov	dph,r6
      00512F 8F F0            [24]14827 	mov	b,r7
      005131 12r00r00         [24]14828 	lcall	__gptrget
      005134 FD               [12]14829 	mov	r5,a
      005135 A3               [24]14830 	inc	dptr
      005136 12r00r00         [24]14831 	lcall	__gptrget
      005139 FE               [12]14832 	mov	r6,a
      00513A E4               [12]14833 	clr	a
      00513B FF               [12]14834 	mov	r7,a
      00513C FC               [12]14835 	mov	r4,a
      00513D ED               [12]14836 	mov	a,r5
      00513E 2D               [12]14837 	add	a,r5
      00513F CE               [12]14838 	xch	a,r6
      005140 33               [12]14839 	rlc	a
      005141 CF               [12]14840 	xch	a,r7
      005142 33               [12]14841 	rlc	a
      005143 CC               [12]14842 	xch	a,r4
      005144 7D 00            [12]14843 	mov	r5,#0x00
                                  14844 ;	ff15\source\ff.c:3874: clst = fp->obj.sclust;				/* Follow the cluster chain */
      005146 85*0A 82         [24]14845 	mov	dpl,_f_open_sloc1_1_0
      005149 85*0B 83         [24]14846 	mov	dph,(_f_open_sloc1_1_0 + 1)
      00514C 85*0C F0         [24]14847 	mov	b,(_f_open_sloc1_1_0 + 2)
      00514F 12r00r00         [24]14848 	lcall	__gptrget
      005152 F8               [12]14849 	mov	r0,a
      005153 A3               [24]14850 	inc	dptr
      005154 12r00r00         [24]14851 	lcall	__gptrget
      005157 F9               [12]14852 	mov	r1,a
      005158 A3               [24]14853 	inc	dptr
      005159 12r00r00         [24]14854 	lcall	__gptrget
      00515C FA               [12]14855 	mov	r2,a
      00515D A3               [24]14856 	inc	dptr
      00515E 12r00r00         [24]14857 	lcall	__gptrget
      005161 FB               [12]14858 	mov	r3,a
      005162 90r01r45         [24]14859 	mov	dptr,#_f_open_clst_65536_244
      005165 E8               [12]14860 	mov	a,r0
      005166 F0               [24]14861 	movx	@dptr,a
      005167 E9               [12]14862 	mov	a,r1
      005168 A3               [24]14863 	inc	dptr
      005169 F0               [24]14864 	movx	@dptr,a
      00516A EA               [12]14865 	mov	a,r2
      00516B A3               [24]14866 	inc	dptr
      00516C F0               [24]14867 	movx	@dptr,a
      00516D EB               [12]14868 	mov	a,r3
      00516E A3               [24]14869 	inc	dptr
      00516F F0               [24]14870 	movx	@dptr,a
                                  14871 ;	ff15\source\ff.c:3875: for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
      005170 85*07 82         [24]14872 	mov	dpl,_f_open_sloc0_1_0
      005173 85*08 83         [24]14873 	mov	dph,(_f_open_sloc0_1_0 + 1)
      005176 85*09 F0         [24]14874 	mov	b,(_f_open_sloc0_1_0 + 2)
      005179 12r00r00         [24]14875 	lcall	__gptrget
      00517C F8               [12]14876 	mov	r0,a
      00517D A3               [24]14877 	inc	dptr
      00517E 12r00r00         [24]14878 	lcall	__gptrget
      005181 F9               [12]14879 	mov	r1,a
      005182 A3               [24]14880 	inc	dptr
      005183 12r00r00         [24]14881 	lcall	__gptrget
      005186 FA               [12]14882 	mov	r2,a
      005187 A3               [24]14883 	inc	dptr
      005188 12r00r00         [24]14884 	lcall	__gptrget
      00518B FB               [12]14885 	mov	r3,a
      00518C 90r01r4D         [24]14886 	mov	dptr,#_f_open_ofs_65536_244
      00518F E8               [12]14887 	mov	a,r0
      005190 F0               [24]14888 	movx	@dptr,a
      005191 E9               [12]14889 	mov	a,r1
      005192 A3               [24]14890 	inc	dptr
      005193 F0               [24]14891 	movx	@dptr,a
      005194 EA               [12]14892 	mov	a,r2
      005195 A3               [24]14893 	inc	dptr
      005196 F0               [24]14894 	movx	@dptr,a
      005197 EB               [12]14895 	mov	a,r3
      005198 A3               [24]14896 	inc	dptr
      005199 F0               [24]14897 	movx	@dptr,a
      00519A 8D 00            [24]14898 	mov	ar0,r5
      00519C 8E 01            [24]14899 	mov	ar1,r6
      00519E 8F 02            [24]14900 	mov	ar2,r7
      0051A0 8C 03            [24]14901 	mov	ar3,r4
      0051A2                      14902 00163$:
      0051A2 90r01r17         [24]14903 	mov	dptr,#_f_open_res_65536_244
      0051A5 E0               [24]14904 	movx	a,@dptr
      0051A6 60 03            [24]14905 	jz	00318$
      0051A8 02r52rB5         [24]14906 	ljmp	00143$
      0051AB                      14907 00318$:
      0051AB C0 05            [24]14908 	push	ar5
      0051AD C0 06            [24]14909 	push	ar6
      0051AF C0 07            [24]14910 	push	ar7
      0051B1 C0 04            [24]14911 	push	ar4
      0051B3 90r01r4D         [24]14912 	mov	dptr,#_f_open_ofs_65536_244
      0051B6 E0               [24]14913 	movx	a,@dptr
      0051B7 FC               [12]14914 	mov	r4,a
      0051B8 A3               [24]14915 	inc	dptr
      0051B9 E0               [24]14916 	movx	a,@dptr
      0051BA FD               [12]14917 	mov	r5,a
      0051BB A3               [24]14918 	inc	dptr
      0051BC E0               [24]14919 	movx	a,@dptr
      0051BD FE               [12]14920 	mov	r6,a
      0051BE A3               [24]14921 	inc	dptr
      0051BF E0               [24]14922 	movx	a,@dptr
      0051C0 FF               [12]14923 	mov	r7,a
      0051C1 C3               [12]14924 	clr	c
      0051C2 E8               [12]14925 	mov	a,r0
      0051C3 9C               [12]14926 	subb	a,r4
      0051C4 E9               [12]14927 	mov	a,r1
      0051C5 9D               [12]14928 	subb	a,r5
      0051C6 EA               [12]14929 	mov	a,r2
      0051C7 9E               [12]14930 	subb	a,r6
      0051C8 EB               [12]14931 	mov	a,r3
      0051C9 9F               [12]14932 	subb	a,r7
      0051CA D0 04            [24]14933 	pop	ar4
      0051CC D0 07            [24]14934 	pop	ar7
      0051CE D0 06            [24]14935 	pop	ar6
      0051D0 D0 05            [24]14936 	pop	ar5
      0051D2 40 03            [24]14937 	jc	00319$
      0051D4 02r52rB5         [24]14938 	ljmp	00143$
      0051D7                      14939 00319$:
                                  14940 ;	ff15\source\ff.c:3876: clst = get_fat(&fp->obj, clst);
      0051D7 C0 05            [24]14941 	push	ar5
      0051D9 C0 06            [24]14942 	push	ar6
      0051DB C0 07            [24]14943 	push	ar7
      0051DD C0 04            [24]14944 	push	ar4
      0051DF 90r01r14         [24]14945 	mov	dptr,#_f_open_fp_65536_243
      0051E2 E0               [24]14946 	movx	a,@dptr
      0051E3 F5*0E            [12]14947 	mov	_f_open_sloc2_1_0,a
      0051E5 A3               [24]14948 	inc	dptr
      0051E6 E0               [24]14949 	movx	a,@dptr
      0051E7 F5*0F            [12]14950 	mov	(_f_open_sloc2_1_0 + 1),a
      0051E9 A3               [24]14951 	inc	dptr
      0051EA E0               [24]14952 	movx	a,@dptr
      0051EB F5*10            [12]14953 	mov	(_f_open_sloc2_1_0 + 2),a
      0051ED 90r01r45         [24]14954 	mov	dptr,#_f_open_clst_65536_244
      0051F0 E0               [24]14955 	movx	a,@dptr
      0051F1 FC               [12]14956 	mov	r4,a
      0051F2 A3               [24]14957 	inc	dptr
      0051F3 E0               [24]14958 	movx	a,@dptr
      0051F4 FD               [12]14959 	mov	r5,a
      0051F5 A3               [24]14960 	inc	dptr
      0051F6 E0               [24]14961 	movx	a,@dptr
      0051F7 FE               [12]14962 	mov	r6,a
      0051F8 A3               [24]14963 	inc	dptr
      0051F9 E0               [24]14964 	movx	a,@dptr
      0051FA FF               [12]14965 	mov	r7,a
      0051FB 90r00r30         [24]14966 	mov	dptr,#_get_fat_PARM_2
      0051FE EC               [12]14967 	mov	a,r4
      0051FF F0               [24]14968 	movx	@dptr,a
      005200 ED               [12]14969 	mov	a,r5
      005201 A3               [24]14970 	inc	dptr
      005202 F0               [24]14971 	movx	@dptr,a
      005203 EE               [12]14972 	mov	a,r6
      005204 A3               [24]14973 	inc	dptr
      005205 F0               [24]14974 	movx	@dptr,a
      005206 EF               [12]14975 	mov	a,r7
      005207 A3               [24]14976 	inc	dptr
      005208 F0               [24]14977 	movx	@dptr,a
      005209 85*0E 82         [24]14978 	mov	dpl,_f_open_sloc2_1_0
      00520C 85*0F 83         [24]14979 	mov	dph,(_f_open_sloc2_1_0 + 1)
      00520F 85*10 F0         [24]14980 	mov	b,(_f_open_sloc2_1_0 + 2)
      005212 C0 07            [24]14981 	push	ar7
      005214 C0 06            [24]14982 	push	ar6
      005216 C0 05            [24]14983 	push	ar5
      005218 C0 04            [24]14984 	push	ar4
      00521A C0 03            [24]14985 	push	ar3
      00521C C0 02            [24]14986 	push	ar2
      00521E C0 01            [24]14987 	push	ar1
      005220 C0 00            [24]14988 	push	ar0
      005222 12r09rFE         [24]14989 	lcall	_get_fat
      005225 85 82*0A         [24]14990 	mov	_f_open_sloc1_1_0,dpl
      005228 85 83*0B         [24]14991 	mov	(_f_open_sloc1_1_0 + 1),dph
      00522B 85 F0*0C         [24]14992 	mov	(_f_open_sloc1_1_0 + 2),b
      00522E F5*0D            [12]14993 	mov	(_f_open_sloc1_1_0 + 3),a
      005230 D0 00            [24]14994 	pop	ar0
      005232 D0 01            [24]14995 	pop	ar1
      005234 D0 02            [24]14996 	pop	ar2
      005236 D0 03            [24]14997 	pop	ar3
      005238 D0 04            [24]14998 	pop	ar4
      00523A D0 05            [24]14999 	pop	ar5
      00523C D0 06            [24]15000 	pop	ar6
      00523E D0 07            [24]15001 	pop	ar7
      005240 90r01r45         [24]15002 	mov	dptr,#_f_open_clst_65536_244
      005243 E5*0A            [12]15003 	mov	a,_f_open_sloc1_1_0
      005245 F0               [24]15004 	movx	@dptr,a
      005246 E5*0B            [12]15005 	mov	a,(_f_open_sloc1_1_0 + 1)
      005248 A3               [24]15006 	inc	dptr
      005249 F0               [24]15007 	movx	@dptr,a
      00524A E5*0C            [12]15008 	mov	a,(_f_open_sloc1_1_0 + 2)
      00524C A3               [24]15009 	inc	dptr
      00524D F0               [24]15010 	movx	@dptr,a
      00524E E5*0D            [12]15011 	mov	a,(_f_open_sloc1_1_0 + 3)
      005250 A3               [24]15012 	inc	dptr
      005251 F0               [24]15013 	movx	@dptr,a
                                  15014 ;	ff15\source\ff.c:3877: if (clst <= 1) res = FR_INT_ERR;
      005252 C3               [12]15015 	clr	c
      005253 74 01            [12]15016 	mov	a,#0x01
      005255 95*0A            [12]15017 	subb	a,_f_open_sloc1_1_0
      005257 E4               [12]15018 	clr	a
      005258 95*0B            [12]15019 	subb	a,(_f_open_sloc1_1_0 + 1)
      00525A E4               [12]15020 	clr	a
      00525B 95*0C            [12]15021 	subb	a,(_f_open_sloc1_1_0 + 2)
      00525D E4               [12]15022 	clr	a
      00525E 95*0D            [12]15023 	subb	a,(_f_open_sloc1_1_0 + 3)
      005260 D0 04            [24]15024 	pop	ar4
      005262 D0 07            [24]15025 	pop	ar7
      005264 D0 06            [24]15026 	pop	ar6
      005266 D0 05            [24]15027 	pop	ar5
      005268 40 06            [24]15028 	jc	00140$
      00526A 90r01r17         [24]15029 	mov	dptr,#_f_open_res_65536_244
      00526D 74 02            [12]15030 	mov	a,#0x02
      00526F F0               [24]15031 	movx	@dptr,a
      005270                      15032 00140$:
                                  15033 ;	ff15\source\ff.c:3878: if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
      005270 E5*0A            [12]15034 	mov	a,_f_open_sloc1_1_0
      005272 55*0B            [12]15035 	anl	a,(_f_open_sloc1_1_0 + 1)
      005274 55*0C            [12]15036 	anl	a,(_f_open_sloc1_1_0 + 2)
      005276 55*0D            [12]15037 	anl	a,(_f_open_sloc1_1_0 + 3)
      005278 B4 FF 06         [24]15038 	cjne	a,#0xFF,00164$
      00527B 90r01r17         [24]15039 	mov	dptr,#_f_open_res_65536_244
      00527E 74 01            [12]15040 	mov	a,#0x01
      005280 F0               [24]15041 	movx	@dptr,a
      005281                      15042 00164$:
                                  15043 ;	ff15\source\ff.c:3875: for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
      005281 C0 00            [24]15044 	push	ar0
      005283 C0 01            [24]15045 	push	ar1
      005285 C0 02            [24]15046 	push	ar2
      005287 C0 03            [24]15047 	push	ar3
      005289 90r01r4D         [24]15048 	mov	dptr,#_f_open_ofs_65536_244
      00528C E0               [24]15049 	movx	a,@dptr
      00528D F8               [12]15050 	mov	r0,a
      00528E A3               [24]15051 	inc	dptr
      00528F E0               [24]15052 	movx	a,@dptr
      005290 F9               [12]15053 	mov	r1,a
      005291 A3               [24]15054 	inc	dptr
      005292 E0               [24]15055 	movx	a,@dptr
      005293 FA               [12]15056 	mov	r2,a
      005294 A3               [24]15057 	inc	dptr
      005295 E0               [24]15058 	movx	a,@dptr
      005296 FB               [12]15059 	mov	r3,a
      005297 90r01r4D         [24]15060 	mov	dptr,#_f_open_ofs_65536_244
      00529A E8               [12]15061 	mov	a,r0
      00529B C3               [12]15062 	clr	c
      00529C 9D               [12]15063 	subb	a,r5
      00529D F0               [24]15064 	movx	@dptr,a
      00529E E9               [12]15065 	mov	a,r1
      00529F 9E               [12]15066 	subb	a,r6
      0052A0 A3               [24]15067 	inc	dptr
      0052A1 F0               [24]15068 	movx	@dptr,a
      0052A2 EA               [12]15069 	mov	a,r2
      0052A3 9F               [12]15070 	subb	a,r7
      0052A4 A3               [24]15071 	inc	dptr
      0052A5 F0               [24]15072 	movx	@dptr,a
      0052A6 EB               [12]15073 	mov	a,r3
      0052A7 9C               [12]15074 	subb	a,r4
      0052A8 A3               [24]15075 	inc	dptr
      0052A9 F0               [24]15076 	movx	@dptr,a
      0052AA D0 03            [24]15077 	pop	ar3
      0052AC D0 02            [24]15078 	pop	ar2
      0052AE D0 01            [24]15079 	pop	ar1
      0052B0 D0 00            [24]15080 	pop	ar0
      0052B2 02r51rA2         [24]15081 	ljmp	00163$
      0052B5                      15082 00143$:
                                  15083 ;	ff15\source\ff.c:3880: fp->clust = clst;
      0052B5 90r01r14         [24]15084 	mov	dptr,#_f_open_fp_65536_243
      0052B8 E0               [24]15085 	movx	a,@dptr
      0052B9 FD               [12]15086 	mov	r5,a
      0052BA A3               [24]15087 	inc	dptr
      0052BB E0               [24]15088 	movx	a,@dptr
      0052BC FE               [12]15089 	mov	r6,a
      0052BD A3               [24]15090 	inc	dptr
      0052BE E0               [24]15091 	movx	a,@dptr
      0052BF FF               [12]15092 	mov	r7,a
      0052C0 74 15            [12]15093 	mov	a,#0x15
      0052C2 2D               [12]15094 	add	a,r5
      0052C3 FA               [12]15095 	mov	r2,a
      0052C4 E4               [12]15096 	clr	a
      0052C5 3E               [12]15097 	addc	a,r6
      0052C6 FB               [12]15098 	mov	r3,a
      0052C7 8F 04            [24]15099 	mov	ar4,r7
      0052C9 90r01r45         [24]15100 	mov	dptr,#_f_open_clst_65536_244
      0052CC E0               [24]15101 	movx	a,@dptr
      0052CD F5*0A            [12]15102 	mov	_f_open_sloc1_1_0,a
      0052CF A3               [24]15103 	inc	dptr
      0052D0 E0               [24]15104 	movx	a,@dptr
      0052D1 F5*0B            [12]15105 	mov	(_f_open_sloc1_1_0 + 1),a
      0052D3 A3               [24]15106 	inc	dptr
      0052D4 E0               [24]15107 	movx	a,@dptr
      0052D5 F5*0C            [12]15108 	mov	(_f_open_sloc1_1_0 + 2),a
      0052D7 A3               [24]15109 	inc	dptr
      0052D8 E0               [24]15110 	movx	a,@dptr
      0052D9 F5*0D            [12]15111 	mov	(_f_open_sloc1_1_0 + 3),a
      0052DB 8A 82            [24]15112 	mov	dpl,r2
      0052DD 8B 83            [24]15113 	mov	dph,r3
      0052DF 8C F0            [24]15114 	mov	b,r4
      0052E1 E5*0A            [12]15115 	mov	a,_f_open_sloc1_1_0
      0052E3 12r00r00         [24]15116 	lcall	__gptrput
      0052E6 A3               [24]15117 	inc	dptr
      0052E7 E5*0B            [12]15118 	mov	a,(_f_open_sloc1_1_0 + 1)
      0052E9 12r00r00         [24]15119 	lcall	__gptrput
      0052EC A3               [24]15120 	inc	dptr
      0052ED E5*0C            [12]15121 	mov	a,(_f_open_sloc1_1_0 + 2)
      0052EF 12r00r00         [24]15122 	lcall	__gptrput
      0052F2 A3               [24]15123 	inc	dptr
      0052F3 E5*0D            [12]15124 	mov	a,(_f_open_sloc1_1_0 + 3)
      0052F5 12r00r00         [24]15125 	lcall	__gptrput
                                  15126 ;	ff15\source\ff.c:3881: if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
      0052F8 90r01r17         [24]15127 	mov	dptr,#_f_open_res_65536_244
      0052FB E0               [24]15128 	movx	a,@dptr
      0052FC 60 03            [24]15129 	jz	00323$
      0052FE 02r54r0D         [24]15130 	ljmp	00158$
      005301                      15131 00323$:
      005301 90r01r4D         [24]15132 	mov	dptr,#_f_open_ofs_65536_244
      005304 E0               [24]15133 	movx	a,@dptr
      005305 F5*11            [12]15134 	mov	_f_open_sloc3_1_0,a
      005307 A3               [24]15135 	inc	dptr
      005308 E0               [24]15136 	movx	a,@dptr
      005309 F5*12            [12]15137 	mov	(_f_open_sloc3_1_0 + 1),a
      00530B A3               [24]15138 	inc	dptr
      00530C E0               [24]15139 	movx	a,@dptr
      00530D F5*13            [12]15140 	mov	(_f_open_sloc3_1_0 + 2),a
      00530F A3               [24]15141 	inc	dptr
      005310 E0               [24]15142 	movx	a,@dptr
      005311 F5*14            [12]15143 	mov	(_f_open_sloc3_1_0 + 3),a
      005313 E5*11            [12]15144 	mov	a,_f_open_sloc3_1_0
      005315 70 08            [24]15145 	jnz	00324$
      005317 E5*12            [12]15146 	mov	a,(_f_open_sloc3_1_0 + 1)
      005319 20 E0 03         [24]15147 	jb	acc.0,00324$
      00531C 02r54r0D         [24]15148 	ljmp	00158$
      00531F                      15149 00324$:
                                  15150 ;	ff15\source\ff.c:3882: sc = clst2sect(fs, clst);
      00531F 90r01r42         [24]15151 	mov	dptr,#_f_open_fs_65536_244
      005322 E0               [24]15152 	movx	a,@dptr
      005323 F8               [12]15153 	mov	r0,a
      005324 A3               [24]15154 	inc	dptr
      005325 E0               [24]15155 	movx	a,@dptr
      005326 FB               [12]15156 	mov	r3,a
      005327 A3               [24]15157 	inc	dptr
      005328 E0               [24]15158 	movx	a,@dptr
      005329 FC               [12]15159 	mov	r4,a
      00532A 90r00r29         [24]15160 	mov	dptr,#_clst2sect_PARM_2
      00532D E5*0A            [12]15161 	mov	a,_f_open_sloc1_1_0
      00532F F0               [24]15162 	movx	@dptr,a
      005330 E5*0B            [12]15163 	mov	a,(_f_open_sloc1_1_0 + 1)
      005332 A3               [24]15164 	inc	dptr
      005333 F0               [24]15165 	movx	@dptr,a
      005334 E5*0C            [12]15166 	mov	a,(_f_open_sloc1_1_0 + 2)
      005336 A3               [24]15167 	inc	dptr
      005337 F0               [24]15168 	movx	@dptr,a
      005338 E5*0D            [12]15169 	mov	a,(_f_open_sloc1_1_0 + 3)
      00533A A3               [24]15170 	inc	dptr
      00533B F0               [24]15171 	movx	@dptr,a
      00533C 88 82            [24]15172 	mov	dpl,r0
      00533E 8B 83            [24]15173 	mov	dph,r3
      005340 8C F0            [24]15174 	mov	b,r4
      005342 C0 07            [24]15175 	push	ar7
      005344 C0 06            [24]15176 	push	ar6
      005346 C0 05            [24]15177 	push	ar5
      005348 12r08rDC         [24]15178 	lcall	_clst2sect
      00534B 85 82*0A         [24]15179 	mov	_f_open_sloc1_1_0,dpl
      00534E 85 83*0B         [24]15180 	mov	(_f_open_sloc1_1_0 + 1),dph
      005351 85 F0*0C         [24]15181 	mov	(_f_open_sloc1_1_0 + 2),b
      005354 F5*0D            [12]15182 	mov	(_f_open_sloc1_1_0 + 3),a
      005356 D0 05            [24]15183 	pop	ar5
      005358 D0 06            [24]15184 	pop	ar6
      00535A D0 07            [24]15185 	pop	ar7
                                  15186 ;	ff15\source\ff.c:3883: if (sc == 0) {
      00535C E5*0A            [12]15187 	mov	a,_f_open_sloc1_1_0
      00535E 45*0B            [12]15188 	orl	a,(_f_open_sloc1_1_0 + 1)
      005360 45*0C            [12]15189 	orl	a,(_f_open_sloc1_1_0 + 2)
      005362 45*0D            [12]15190 	orl	a,(_f_open_sloc1_1_0 + 3)
      005364 70 09            [24]15191 	jnz	00147$
                                  15192 ;	ff15\source\ff.c:3884: res = FR_INT_ERR;
      005366 90r01r17         [24]15193 	mov	dptr,#_f_open_res_65536_244
      005369 74 02            [12]15194 	mov	a,#0x02
      00536B F0               [24]15195 	movx	@dptr,a
      00536C 02r54r0D         [24]15196 	ljmp	00158$
      00536F                      15197 00147$:
                                  15198 ;	ff15\source\ff.c:3886: fp->sect = sc + (DWORD)(ofs / SS(fs));
      00536F 74 19            [12]15199 	mov	a,#0x19
      005371 2D               [12]15200 	add	a,r5
      005372 F5*0E            [12]15201 	mov	_f_open_sloc2_1_0,a
      005374 E4               [12]15202 	clr	a
      005375 3E               [12]15203 	addc	a,r6
      005376 F5*0F            [12]15204 	mov	(_f_open_sloc2_1_0 + 1),a
      005378 8F*10            [24]15205 	mov	(_f_open_sloc2_1_0 + 2),r7
      00537A E5*14            [12]15206 	mov	a,(_f_open_sloc3_1_0 + 3)
      00537C 7C 00            [12]15207 	mov	r4,#0x00
      00537E C3               [12]15208 	clr	c
      00537F 13               [12]15209 	rrc	a
      005380 FB               [12]15210 	mov	r3,a
      005381 E5*13            [12]15211 	mov	a,(_f_open_sloc3_1_0 + 2)
      005383 13               [12]15212 	rrc	a
      005384 FA               [12]15213 	mov	r2,a
      005385 E5*12            [12]15214 	mov	a,(_f_open_sloc3_1_0 + 1)
      005387 13               [12]15215 	rrc	a
      005388 25*0A            [12]15216 	add	a,_f_open_sloc1_1_0
      00538A F5*11            [12]15217 	mov	_f_open_sloc3_1_0,a
      00538C EA               [12]15218 	mov	a,r2
      00538D 35*0B            [12]15219 	addc	a,(_f_open_sloc1_1_0 + 1)
      00538F F5*12            [12]15220 	mov	(_f_open_sloc3_1_0 + 1),a
      005391 EB               [12]15221 	mov	a,r3
      005392 35*0C            [12]15222 	addc	a,(_f_open_sloc1_1_0 + 2)
      005394 F5*13            [12]15223 	mov	(_f_open_sloc3_1_0 + 2),a
      005396 EC               [12]15224 	mov	a,r4
      005397 35*0D            [12]15225 	addc	a,(_f_open_sloc1_1_0 + 3)
      005399 F5*14            [12]15226 	mov	(_f_open_sloc3_1_0 + 3),a
      00539B 85*0E 82         [24]15227 	mov	dpl,_f_open_sloc2_1_0
      00539E 85*0F 83         [24]15228 	mov	dph,(_f_open_sloc2_1_0 + 1)
      0053A1 85*10 F0         [24]15229 	mov	b,(_f_open_sloc2_1_0 + 2)
      0053A4 E5*11            [12]15230 	mov	a,_f_open_sloc3_1_0
      0053A6 12r00r00         [24]15231 	lcall	__gptrput
      0053A9 A3               [24]15232 	inc	dptr
      0053AA E5*12            [12]15233 	mov	a,(_f_open_sloc3_1_0 + 1)
      0053AC 12r00r00         [24]15234 	lcall	__gptrput
      0053AF A3               [24]15235 	inc	dptr
      0053B0 E5*13            [12]15236 	mov	a,(_f_open_sloc3_1_0 + 2)
      0053B2 12r00r00         [24]15237 	lcall	__gptrput
      0053B5 A3               [24]15238 	inc	dptr
      0053B6 E5*14            [12]15239 	mov	a,(_f_open_sloc3_1_0 + 3)
      0053B8 12r00r00         [24]15240 	lcall	__gptrput
                                  15241 ;	ff15\source\ff.c:3888: if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
      0053BB 90r01r42         [24]15242 	mov	dptr,#_f_open_fs_65536_244
      0053BE E0               [24]15243 	movx	a,@dptr
      0053BF F8               [12]15244 	mov	r0,a
      0053C0 A3               [24]15245 	inc	dptr
      0053C1 E0               [24]15246 	movx	a,@dptr
      0053C2 FB               [12]15247 	mov	r3,a
      0053C3 A3               [24]15248 	inc	dptr
      0053C4 E0               [24]15249 	movx	a,@dptr
      0053C5 FC               [12]15250 	mov	r4,a
      0053C6 08               [12]15251 	inc	r0
      0053C7 B8 00 01         [24]15252 	cjne	r0,#0x00,00326$
      0053CA 0B               [12]15253 	inc	r3
      0053CB                      15254 00326$:
      0053CB 88 82            [24]15255 	mov	dpl,r0
      0053CD 8B 83            [24]15256 	mov	dph,r3
      0053CF 8C F0            [24]15257 	mov	b,r4
      0053D1 12r00r00         [24]15258 	lcall	__gptrget
      0053D4 F8               [12]15259 	mov	r0,a
      0053D5 90r00r00         [24]15260 	mov	dptr,#_disk_read_PARM_2
      0053D8 74 24            [12]15261 	mov	a,#0x24
      0053DA 2D               [12]15262 	add	a,r5
      0053DB F0               [24]15263 	movx	@dptr,a
      0053DC E4               [12]15264 	clr	a
      0053DD 3E               [12]15265 	addc	a,r6
      0053DE A3               [24]15266 	inc	dptr
      0053DF F0               [24]15267 	movx	@dptr,a
      0053E0 EF               [12]15268 	mov	a,r7
      0053E1 A3               [24]15269 	inc	dptr
      0053E2 F0               [24]15270 	movx	@dptr,a
      0053E3 90r00r00         [24]15271 	mov	dptr,#_disk_read_PARM_3
      0053E6 E5*11            [12]15272 	mov	a,_f_open_sloc3_1_0
      0053E8 F0               [24]15273 	movx	@dptr,a
      0053E9 E5*12            [12]15274 	mov	a,(_f_open_sloc3_1_0 + 1)
      0053EB A3               [24]15275 	inc	dptr
      0053EC F0               [24]15276 	movx	@dptr,a
      0053ED E5*13            [12]15277 	mov	a,(_f_open_sloc3_1_0 + 2)
      0053EF A3               [24]15278 	inc	dptr
      0053F0 F0               [24]15279 	movx	@dptr,a
      0053F1 E5*14            [12]15280 	mov	a,(_f_open_sloc3_1_0 + 3)
      0053F3 A3               [24]15281 	inc	dptr
      0053F4 F0               [24]15282 	movx	@dptr,a
      0053F5 90r00r00         [24]15283 	mov	dptr,#_disk_read_PARM_4
      0053F8 74 01            [12]15284 	mov	a,#0x01
      0053FA F0               [24]15285 	movx	@dptr,a
      0053FB E4               [12]15286 	clr	a
      0053FC A3               [24]15287 	inc	dptr
      0053FD F0               [24]15288 	movx	@dptr,a
      0053FE 88 82            [24]15289 	mov	dpl,r0
      005400 12r00r00         [24]15290 	lcall	_disk_read
      005403 E5 82            [12]15291 	mov	a,dpl
      005405 60 06            [24]15292 	jz	00158$
      005407 90r01r17         [24]15293 	mov	dptr,#_f_open_res_65536_244
      00540A 74 01            [12]15294 	mov	a,#0x01
      00540C F0               [24]15295 	movx	@dptr,a
      00540D                      15296 00158$:
                                  15297 ;	ff15\source\ff.c:3902: if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
      00540D 90r01r17         [24]15298 	mov	dptr,#_f_open_res_65536_244
      005410 E0               [24]15299 	movx	a,@dptr
      005411 60 1D            [24]15300 	jz	00160$
      005413 90r01r14         [24]15301 	mov	dptr,#_f_open_fp_65536_243
      005416 E0               [24]15302 	movx	a,@dptr
      005417 FD               [12]15303 	mov	r5,a
      005418 A3               [24]15304 	inc	dptr
      005419 E0               [24]15305 	movx	a,@dptr
      00541A FE               [12]15306 	mov	r6,a
      00541B A3               [24]15307 	inc	dptr
      00541C E0               [24]15308 	movx	a,@dptr
      00541D FF               [12]15309 	mov	r7,a
      00541E 8D 82            [24]15310 	mov	dpl,r5
      005420 8E 83            [24]15311 	mov	dph,r6
      005422 8F F0            [24]15312 	mov	b,r7
      005424 E4               [12]15313 	clr	a
      005425 12r00r00         [24]15314 	lcall	__gptrput
      005428 A3               [24]15315 	inc	dptr
      005429 12r00r00         [24]15316 	lcall	__gptrput
      00542C A3               [24]15317 	inc	dptr
      00542D 12r00r00         [24]15318 	lcall	__gptrput
      005430                      15319 00160$:
                                  15320 ;	ff15\source\ff.c:3904: LEAVE_FF(fs, res);
      005430 90r01r17         [24]15321 	mov	dptr,#_f_open_res_65536_244
      005433 E0               [24]15322 	movx	a,@dptr
                                  15323 ;	ff15\source\ff.c:3905: }
      005434 F5 82            [12]15324 	mov	dpl,a
      005436 22               [24]15325 	ret
                                  15326 ;------------------------------------------------------------
                                  15327 ;Allocation info for local variables in function 'f_read'
                                  15328 ;------------------------------------------------------------
                                  15329 ;sloc0                     Allocated with name '_f_read_sloc0_1_0'
                                  15330 ;sloc1                     Allocated with name '_f_read_sloc1_1_0'
                                  15331 ;sloc2                     Allocated with name '_f_read_sloc2_1_0'
                                  15332 ;sloc3                     Allocated with name '_f_read_sloc3_1_0'
                                  15333 ;sloc4                     Allocated with name '_f_read_sloc4_1_0'
                                  15334 ;sloc5                     Allocated with name '_f_read_sloc5_1_0'
                                  15335 ;sloc6                     Allocated with name '_f_read_sloc6_1_0'
                                  15336 ;sloc7                     Allocated with name '_f_read_sloc7_1_0'
                                  15337 ;sloc8                     Allocated with name '_f_read_sloc8_1_0'
                                  15338 ;sloc9                     Allocated with name '_f_read_sloc9_1_0'
                                  15339 ;sloc10                    Allocated with name '_f_read_sloc10_1_0'
                                  15340 ;sloc11                    Allocated with name '_f_read_sloc11_1_0'
                                  15341 ;sloc12                    Allocated with name '_f_read_sloc12_1_0'
                                  15342 ;sloc13                    Allocated with name '_f_read_sloc13_1_0'
                                  15343 ;buff                      Allocated with name '_f_read_PARM_2'
                                  15344 ;btr                       Allocated with name '_f_read_PARM_3'
                                  15345 ;br                        Allocated with name '_f_read_PARM_4'
                                  15346 ;fp                        Allocated with name '_f_read_fp_65536_272'
                                  15347 ;res                       Allocated with name '_f_read_res_65536_273'
                                  15348 ;fs                        Allocated with name '_f_read_fs_65536_273'
                                  15349 ;clst                      Allocated with name '_f_read_clst_65536_273'
                                  15350 ;sect                      Allocated with name '_f_read_sect_65536_273'
                                  15351 ;remain                    Allocated with name '_f_read_remain_65536_273'
                                  15352 ;rcnt                      Allocated with name '_f_read_rcnt_65536_273'
                                  15353 ;cc                        Allocated with name '_f_read_cc_65536_273'
                                  15354 ;csect                     Allocated with name '_f_read_csect_65536_273'
                                  15355 ;rbuff                     Allocated with name '_f_read_rbuff_65536_273'
                                  15356 ;------------------------------------------------------------
                                  15357 ;	ff15\source\ff.c:3914: FRESULT f_read (
                                  15358 ;	-----------------------------------------
                                  15359 ;	 function f_read
                                  15360 ;	-----------------------------------------
      005437                      15361 _f_read:
      005437 AF F0            [24]15362 	mov	r7,b
      005439 AE 83            [24]15363 	mov	r6,dph
      00543B E5 82            [12]15364 	mov	a,dpl
      00543D 90r01r59         [24]15365 	mov	dptr,#_f_read_fp_65536_272
      005440 F0               [24]15366 	movx	@dptr,a
      005441 EE               [12]15367 	mov	a,r6
      005442 A3               [24]15368 	inc	dptr
      005443 F0               [24]15369 	movx	@dptr,a
      005444 EF               [12]15370 	mov	a,r7
      005445 A3               [24]15371 	inc	dptr
      005446 F0               [24]15372 	movx	@dptr,a
                                  15373 ;	ff15\source\ff.c:3927: BYTE *rbuff = (BYTE*)buff;
      005447 90r01r51         [24]15374 	mov	dptr,#_f_read_PARM_2
      00544A E0               [24]15375 	movx	a,@dptr
      00544B FD               [12]15376 	mov	r5,a
      00544C A3               [24]15377 	inc	dptr
      00544D E0               [24]15378 	movx	a,@dptr
      00544E FE               [12]15379 	mov	r6,a
      00544F A3               [24]15380 	inc	dptr
      005450 E0               [24]15381 	movx	a,@dptr
      005451 FF               [12]15382 	mov	r7,a
      005452 90r01r6A         [24]15383 	mov	dptr,#_f_read_rbuff_65536_273
      005455 ED               [12]15384 	mov	a,r5
      005456 F0               [24]15385 	movx	@dptr,a
      005457 EE               [12]15386 	mov	a,r6
      005458 A3               [24]15387 	inc	dptr
      005459 F0               [24]15388 	movx	@dptr,a
      00545A EF               [12]15389 	mov	a,r7
      00545B A3               [24]15390 	inc	dptr
      00545C F0               [24]15391 	movx	@dptr,a
                                  15392 ;	ff15\source\ff.c:3930: *br = 0;	/* Clear read byte counter */
      00545D 90r01r56         [24]15393 	mov	dptr,#_f_read_PARM_4
      005460 E0               [24]15394 	movx	a,@dptr
      005461 F5*39            [12]15395 	mov	_f_read_sloc11_1_0,a
      005463 A3               [24]15396 	inc	dptr
      005464 E0               [24]15397 	movx	a,@dptr
      005465 F5*3A            [12]15398 	mov	(_f_read_sloc11_1_0 + 1),a
      005467 A3               [24]15399 	inc	dptr
      005468 E0               [24]15400 	movx	a,@dptr
      005469 F5*3B            [12]15401 	mov	(_f_read_sloc11_1_0 + 2),a
      00546B 85*39 82         [24]15402 	mov	dpl,_f_read_sloc11_1_0
      00546E 85*3A 83         [24]15403 	mov	dph,(_f_read_sloc11_1_0 + 1)
      005471 85*3B F0         [24]15404 	mov	b,(_f_read_sloc11_1_0 + 2)
      005474 E4               [12]15405 	clr	a
      005475 12r00r00         [24]15406 	lcall	__gptrput
      005478 A3               [24]15407 	inc	dptr
      005479 12r00r00         [24]15408 	lcall	__gptrput
                                  15409 ;	ff15\source\ff.c:3931: res = validate(&fp->obj, &fs);				/* Check validity of the file object */
      00547C 90r01r59         [24]15410 	mov	dptr,#_f_read_fp_65536_272
      00547F E0               [24]15411 	movx	a,@dptr
      005480 FA               [12]15412 	mov	r2,a
      005481 A3               [24]15413 	inc	dptr
      005482 E0               [24]15414 	movx	a,@dptr
      005483 FB               [12]15415 	mov	r3,a
      005484 A3               [24]15416 	inc	dptr
      005485 E0               [24]15417 	movx	a,@dptr
      005486 FC               [12]15418 	mov	r4,a
      005487 90r00rFF         [24]15419 	mov	dptr,#_validate_PARM_2
      00548A 74r5D            [12]15420 	mov	a,#_f_read_fs_65536_273
      00548C F0               [24]15421 	movx	@dptr,a
      00548D 74s01            [12]15422 	mov	a,#(_f_read_fs_65536_273 >> 8)
      00548F A3               [24]15423 	inc	dptr
      005490 F0               [24]15424 	movx	@dptr,a
      005491 E4               [12]15425 	clr	a
      005492 A3               [24]15426 	inc	dptr
      005493 F0               [24]15427 	movx	@dptr,a
      005494 8A 82            [24]15428 	mov	dpl,r2
      005496 8B 83            [24]15429 	mov	dph,r3
      005498 8C F0            [24]15430 	mov	b,r4
      00549A 12r49r3E         [24]15431 	lcall	_validate
      00549D AC 82            [24]15432 	mov	r4,dpl
      00549F 90r01r5C         [24]15433 	mov	dptr,#_f_read_res_65536_273
      0054A2 EC               [12]15434 	mov	a,r4
      0054A3 F0               [24]15435 	movx	@dptr,a
                                  15436 ;	ff15\source\ff.c:3932: if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
      0054A4 EC               [12]15437 	mov	a,r4
      0054A5 70 25            [24]15438 	jnz	00101$
      0054A7 90r01r59         [24]15439 	mov	dptr,#_f_read_fp_65536_272
      0054AA E0               [24]15440 	movx	a,@dptr
      0054AB FA               [12]15441 	mov	r2,a
      0054AC A3               [24]15442 	inc	dptr
      0054AD E0               [24]15443 	movx	a,@dptr
      0054AE FB               [12]15444 	mov	r3,a
      0054AF A3               [24]15445 	inc	dptr
      0054B0 E0               [24]15446 	movx	a,@dptr
      0054B1 FC               [12]15447 	mov	r4,a
      0054B2 74 10            [12]15448 	mov	a,#0x10
      0054B4 2A               [12]15449 	add	a,r2
      0054B5 F8               [12]15450 	mov	r0,a
      0054B6 E4               [12]15451 	clr	a
      0054B7 3B               [12]15452 	addc	a,r3
      0054B8 F9               [12]15453 	mov	r1,a
      0054B9 8C 07            [24]15454 	mov	ar7,r4
      0054BB 88 82            [24]15455 	mov	dpl,r0
      0054BD 89 83            [24]15456 	mov	dph,r1
      0054BF 8F F0            [24]15457 	mov	b,r7
      0054C1 12r00r00         [24]15458 	lcall	__gptrget
      0054C4 F8               [12]15459 	mov	r0,a
      0054C5 90r01r5C         [24]15460 	mov	dptr,#_f_read_res_65536_273
      0054C8 F0               [24]15461 	movx	@dptr,a
      0054C9 E8               [12]15462 	mov	a,r0
      0054CA 60 07            [24]15463 	jz	00102$
      0054CC                      15464 00101$:
      0054CC 90r01r5C         [24]15465 	mov	dptr,#_f_read_res_65536_273
      0054CF E0               [24]15466 	movx	a,@dptr
      0054D0 F5 82            [12]15467 	mov	dpl,a
      0054D2 22               [24]15468 	ret
      0054D3                      15469 00102$:
                                  15470 ;	ff15\source\ff.c:3933: if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
      0054D3 74 0F            [12]15471 	mov	a,#0x0f
      0054D5 2A               [12]15472 	add	a,r2
      0054D6 F8               [12]15473 	mov	r0,a
      0054D7 E4               [12]15474 	clr	a
      0054D8 3B               [12]15475 	addc	a,r3
      0054D9 F9               [12]15476 	mov	r1,a
      0054DA 8C 07            [24]15477 	mov	ar7,r4
      0054DC 88 82            [24]15478 	mov	dpl,r0
      0054DE 89 83            [24]15479 	mov	dph,r1
      0054E0 8F F0            [24]15480 	mov	b,r7
      0054E2 12r00r00         [24]15481 	lcall	__gptrget
      0054E5 20 E0 04         [24]15482 	jb	acc.0,00105$
      0054E8 75 82 07         [24]15483 	mov	dpl,#0x07
      0054EB 22               [24]15484 	ret
      0054EC                      15485 00105$:
                                  15486 ;	ff15\source\ff.c:3934: remain = fp->obj.objsize - fp->fptr;
      0054EC 74 0B            [12]15487 	mov	a,#0x0b
      0054EE 2A               [12]15488 	add	a,r2
      0054EF F8               [12]15489 	mov	r0,a
      0054F0 E4               [12]15490 	clr	a
      0054F1 3B               [12]15491 	addc	a,r3
      0054F2 F9               [12]15492 	mov	r1,a
      0054F3 8C 07            [24]15493 	mov	ar7,r4
      0054F5 88 82            [24]15494 	mov	dpl,r0
      0054F7 89 83            [24]15495 	mov	dph,r1
      0054F9 8F F0            [24]15496 	mov	b,r7
      0054FB 12r00r00         [24]15497 	lcall	__gptrget
      0054FE F8               [12]15498 	mov	r0,a
      0054FF A3               [24]15499 	inc	dptr
      005500 12r00r00         [24]15500 	lcall	__gptrget
      005503 F9               [12]15501 	mov	r1,a
      005504 A3               [24]15502 	inc	dptr
      005505 12r00r00         [24]15503 	lcall	__gptrget
      005508 FF               [12]15504 	mov	r7,a
      005509 A3               [24]15505 	inc	dptr
      00550A 12r00r00         [24]15506 	lcall	__gptrget
      00550D FE               [12]15507 	mov	r6,a
      00550E 74 11            [12]15508 	mov	a,#0x11
      005510 2A               [12]15509 	add	a,r2
      005511 FA               [12]15510 	mov	r2,a
      005512 E4               [12]15511 	clr	a
      005513 3B               [12]15512 	addc	a,r3
      005514 FB               [12]15513 	mov	r3,a
      005515 8A 82            [24]15514 	mov	dpl,r2
      005517 8B 83            [24]15515 	mov	dph,r3
      005519 8C F0            [24]15516 	mov	b,r4
      00551B 12r00r00         [24]15517 	lcall	__gptrget
      00551E FA               [12]15518 	mov	r2,a
      00551F A3               [24]15519 	inc	dptr
      005520 12r00r00         [24]15520 	lcall	__gptrget
      005523 FB               [12]15521 	mov	r3,a
      005524 A3               [24]15522 	inc	dptr
      005525 12r00r00         [24]15523 	lcall	__gptrget
      005528 FC               [12]15524 	mov	r4,a
      005529 A3               [24]15525 	inc	dptr
      00552A 12r00r00         [24]15526 	lcall	__gptrget
      00552D FD               [12]15527 	mov	r5,a
      00552E E8               [12]15528 	mov	a,r0
      00552F C3               [12]15529 	clr	c
      005530 9A               [12]15530 	subb	a,r2
      005531 F5*15            [12]15531 	mov	_f_read_sloc0_1_0,a
      005533 E9               [12]15532 	mov	a,r1
      005534 9B               [12]15533 	subb	a,r3
      005535 F5*16            [12]15534 	mov	(_f_read_sloc0_1_0 + 1),a
      005537 EF               [12]15535 	mov	a,r7
      005538 9C               [12]15536 	subb	a,r4
      005539 F5*17            [12]15537 	mov	(_f_read_sloc0_1_0 + 2),a
      00553B EE               [12]15538 	mov	a,r6
      00553C 9D               [12]15539 	subb	a,r5
      00553D F5*18            [12]15540 	mov	(_f_read_sloc0_1_0 + 3),a
                                  15541 ;	ff15\source\ff.c:3935: if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
      00553F 90r01r54         [24]15542 	mov	dptr,#_f_read_PARM_3
      005542 E0               [24]15543 	movx	a,@dptr
      005543 FE               [12]15544 	mov	r6,a
      005544 A3               [24]15545 	inc	dptr
      005545 E0               [24]15546 	movx	a,@dptr
      005546 FF               [12]15547 	mov	r7,a
      005547 7D 00            [12]15548 	mov	r5,#0x00
      005549 7C 00            [12]15549 	mov	r4,#0x00
      00554B C3               [12]15550 	clr	c
      00554C E5*15            [12]15551 	mov	a,_f_read_sloc0_1_0
      00554E 9E               [12]15552 	subb	a,r6
      00554F E5*16            [12]15553 	mov	a,(_f_read_sloc0_1_0 + 1)
      005551 9F               [12]15554 	subb	a,r7
      005552 E5*17            [12]15555 	mov	a,(_f_read_sloc0_1_0 + 2)
      005554 9D               [12]15556 	subb	a,r5
      005555 E5*18            [12]15557 	mov	a,(_f_read_sloc0_1_0 + 3)
      005557 9C               [12]15558 	subb	a,r4
      005558 50 0A            [24]15559 	jnc	00168$
      00555A 90r01r54         [24]15560 	mov	dptr,#_f_read_PARM_3
      00555D E5*15            [12]15561 	mov	a,_f_read_sloc0_1_0
      00555F F0               [24]15562 	movx	@dptr,a
      005560 E5*16            [12]15563 	mov	a,(_f_read_sloc0_1_0 + 1)
      005562 A3               [24]15564 	inc	dptr
      005563 F0               [24]15565 	movx	@dptr,a
      005564                      15566 00168$:
      005564 90r01r59         [24]15567 	mov	dptr,#_f_read_fp_65536_272
      005567 E0               [24]15568 	movx	a,@dptr
      005568 FA               [12]15569 	mov	r2,a
      005569 A3               [24]15570 	inc	dptr
      00556A E0               [24]15571 	movx	a,@dptr
      00556B FB               [12]15572 	mov	r3,a
      00556C A3               [24]15573 	inc	dptr
      00556D E0               [24]15574 	movx	a,@dptr
      00556E FC               [12]15575 	mov	r4,a
      00556F 74 0F            [12]15576 	mov	a,#0x0f
      005571 2A               [12]15577 	add	a,r2
      005572 F5*15            [12]15578 	mov	_f_read_sloc0_1_0,a
      005574 E4               [12]15579 	clr	a
      005575 3B               [12]15580 	addc	a,r3
      005576 F5*16            [12]15581 	mov	(_f_read_sloc0_1_0 + 1),a
      005578 8C*17            [24]15582 	mov	(_f_read_sloc0_1_0 + 2),r4
      00557A 8A*19            [24]15583 	mov	_f_read_sloc1_1_0,r2
      00557C 8B*1A            [24]15584 	mov	(_f_read_sloc1_1_0 + 1),r3
      00557E 8C*1B            [24]15585 	mov	(_f_read_sloc1_1_0 + 2),r4
      005580 8A*1C            [24]15586 	mov	_f_read_sloc2_1_0,r2
      005582 8B*1D            [24]15587 	mov	(_f_read_sloc2_1_0 + 1),r3
      005584 8C*1E            [24]15588 	mov	(_f_read_sloc2_1_0 + 2),r4
      005586 8A*1F            [24]15589 	mov	_f_read_sloc3_1_0,r2
      005588 8B*20            [24]15590 	mov	(_f_read_sloc3_1_0 + 1),r3
      00558A 8C*21            [24]15591 	mov	(_f_read_sloc3_1_0 + 2),r4
      00558C 74 11            [12]15592 	mov	a,#0x11
      00558E 2A               [12]15593 	add	a,r2
      00558F F5*22            [12]15594 	mov	_f_read_sloc4_1_0,a
      005591 E4               [12]15595 	clr	a
      005592 3B               [12]15596 	addc	a,r3
      005593 F5*23            [12]15597 	mov	(_f_read_sloc4_1_0 + 1),a
      005595 8C*24            [24]15598 	mov	(_f_read_sloc4_1_0 + 2),r4
      005597 85*22*25         [24]15599 	mov	_f_read_sloc5_1_0,_f_read_sloc4_1_0
      00559A 85*23*26         [24]15600 	mov	(_f_read_sloc5_1_0 + 1),(_f_read_sloc4_1_0 + 1)
      00559D 85*24*27         [24]15601 	mov	(_f_read_sloc5_1_0 + 2),(_f_read_sloc4_1_0 + 2)
      0055A0 74 24            [12]15602 	mov	a,#0x24
      0055A2 2A               [12]15603 	add	a,r2
      0055A3 F5*28            [12]15604 	mov	_f_read_sloc6_1_0,a
      0055A5 E4               [12]15605 	clr	a
      0055A6 3B               [12]15606 	addc	a,r3
      0055A7 F5*29            [12]15607 	mov	(_f_read_sloc6_1_0 + 1),a
      0055A9 8C*2A            [24]15608 	mov	(_f_read_sloc6_1_0 + 2),r4
      0055AB 85*22*2B         [24]15609 	mov	_f_read_sloc7_1_0,_f_read_sloc4_1_0
      0055AE 85*23*2C         [24]15610 	mov	(_f_read_sloc7_1_0 + 1),(_f_read_sloc4_1_0 + 1)
      0055B1 85*24*2D         [24]15611 	mov	(_f_read_sloc7_1_0 + 2),(_f_read_sloc4_1_0 + 2)
      0055B4 8A*2E            [24]15612 	mov	_f_read_sloc8_1_0,r2
      0055B6 8B*2F            [24]15613 	mov	(_f_read_sloc8_1_0 + 1),r3
      0055B8 8C*30            [24]15614 	mov	(_f_read_sloc8_1_0 + 2),r4
      0055BA                      15615 00143$:
                                  15616 ;	ff15\source\ff.c:3937: for ( ; btr > 0; btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {	/* Repeat until btr bytes read */
      0055BA 90r01r54         [24]15617 	mov	dptr,#_f_read_PARM_3
      0055BD E0               [24]15618 	movx	a,@dptr
      0055BE F5 F0            [12]15619 	mov	b,a
      0055C0 A3               [24]15620 	inc	dptr
      0055C1 E0               [24]15621 	movx	a,@dptr
      0055C2 45 F0            [12]15622 	orl	a,b
      0055C4 70 03            [24]15623 	jnz	00236$
      0055C6 02r5Dr59         [24]15624 	ljmp	00141$
      0055C9                      15625 00236$:
                                  15626 ;	ff15\source\ff.c:3938: if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
      0055C9 85*22 82         [24]15627 	mov	dpl,_f_read_sloc4_1_0
      0055CC 85*23 83         [24]15628 	mov	dph,(_f_read_sloc4_1_0 + 1)
      0055CF 85*24 F0         [24]15629 	mov	b,(_f_read_sloc4_1_0 + 2)
      0055D2 12r00r00         [24]15630 	lcall	__gptrget
      0055D5 F5*31            [12]15631 	mov	_f_read_sloc9_1_0,a
      0055D7 A3               [24]15632 	inc	dptr
      0055D8 12r00r00         [24]15633 	lcall	__gptrget
      0055DB F5*32            [12]15634 	mov	(_f_read_sloc9_1_0 + 1),a
      0055DD A3               [24]15635 	inc	dptr
      0055DE 12r00r00         [24]15636 	lcall	__gptrget
      0055E1 F5*33            [12]15637 	mov	(_f_read_sloc9_1_0 + 2),a
      0055E3 A3               [24]15638 	inc	dptr
      0055E4 12r00r00         [24]15639 	lcall	__gptrget
      0055E7 F5*34            [12]15640 	mov	(_f_read_sloc9_1_0 + 3),a
      0055E9 E5*31            [12]15641 	mov	a,_f_read_sloc9_1_0
      0055EB 70 05            [24]15642 	jnz	00237$
      0055ED E5*32            [12]15643 	mov	a,(_f_read_sloc9_1_0 + 1)
      0055EF 30 E0 03         [24]15644 	jnb	acc.0,00238$
      0055F2                      15645 00237$:
      0055F2 02r5BrE9         [24]15646 	ljmp	00137$
      0055F5                      15647 00238$:
                                  15648 ;	ff15\source\ff.c:3939: csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
      0055F5 E5*34            [12]15649 	mov	a,(_f_read_sloc9_1_0 + 3)
      0055F7 75*38 00         [24]15650 	mov	(_f_read_sloc10_1_0 + 3),#0x00
      0055FA C3               [12]15651 	clr	c
      0055FB 13               [12]15652 	rrc	a
      0055FC F5*37            [12]15653 	mov	(_f_read_sloc10_1_0 + 2),a
      0055FE E5*33            [12]15654 	mov	a,(_f_read_sloc9_1_0 + 2)
      005600 13               [12]15655 	rrc	a
      005601 F5*36            [12]15656 	mov	(_f_read_sloc10_1_0 + 1),a
      005603 E5*32            [12]15657 	mov	a,(_f_read_sloc9_1_0 + 1)
      005605 13               [12]15658 	rrc	a
      005606 F5*35            [12]15659 	mov	_f_read_sloc10_1_0,a
      005608 90r01r5D         [24]15660 	mov	dptr,#_f_read_fs_65536_273
      00560B E0               [24]15661 	movx	a,@dptr
      00560C FD               [12]15662 	mov	r5,a
      00560D A3               [24]15663 	inc	dptr
      00560E E0               [24]15664 	movx	a,@dptr
      00560F FE               [12]15665 	mov	r6,a
      005610 A3               [24]15666 	inc	dptr
      005611 E0               [24]15667 	movx	a,@dptr
      005612 FF               [12]15668 	mov	r7,a
      005613 74 0A            [12]15669 	mov	a,#0x0a
      005615 2D               [12]15670 	add	a,r5
      005616 FD               [12]15671 	mov	r5,a
      005617 E4               [12]15672 	clr	a
      005618 3E               [12]15673 	addc	a,r6
      005619 FE               [12]15674 	mov	r6,a
      00561A 8D 82            [24]15675 	mov	dpl,r5
      00561C 8E 83            [24]15676 	mov	dph,r6
      00561E 8F F0            [24]15677 	mov	b,r7
      005620 12r00r00         [24]15678 	lcall	__gptrget
      005623 FD               [12]15679 	mov	r5,a
      005624 A3               [24]15680 	inc	dptr
      005625 12r00r00         [24]15681 	lcall	__gptrget
      005628 FE               [12]15682 	mov	r6,a
      005629 1D               [12]15683 	dec	r5
      00562A BD FF 01         [24]15684 	cjne	r5,#0xff,00239$
      00562D 1E               [12]15685 	dec	r6
      00562E                      15686 00239$:
      00562E A8*35            [24]15687 	mov	r0,_f_read_sloc10_1_0
      005630 A9*36            [24]15688 	mov	r1,(_f_read_sloc10_1_0 + 1)
      005632 E8               [12]15689 	mov	a,r0
      005633 52 05            [12]15690 	anl	ar5,a
      005635 E9               [12]15691 	mov	a,r1
      005636 52 06            [12]15692 	anl	ar6,a
      005638 90r01r68         [24]15693 	mov	dptr,#_f_read_csect_65536_273
      00563B ED               [12]15694 	mov	a,r5
      00563C F0               [24]15695 	movx	@dptr,a
      00563D EE               [12]15696 	mov	a,r6
      00563E A3               [24]15697 	inc	dptr
      00563F F0               [24]15698 	movx	@dptr,a
                                  15699 ;	ff15\source\ff.c:3940: if (csect == 0) {					/* On the cluster boundary? */
      005640 ED               [12]15700 	mov	a,r5
      005641 4E               [12]15701 	orl	a,r6
      005642 60 03            [24]15702 	jz	00240$
      005644 02r57r92         [24]15703 	ljmp	00116$
      005647                      15704 00240$:
                                  15705 ;	ff15\source\ff.c:3941: if (fp->fptr == 0) {			/* On the top of the file? */
      005647 E5*31            [12]15706 	mov	a,_f_read_sloc9_1_0
      005649 45*32            [12]15707 	orl	a,(_f_read_sloc9_1_0 + 1)
      00564B 45*33            [12]15708 	orl	a,(_f_read_sloc9_1_0 + 2)
      00564D 45*34            [12]15709 	orl	a,(_f_read_sloc9_1_0 + 3)
      00564F 70 34            [24]15710 	jnz	00109$
                                  15711 ;	ff15\source\ff.c:3942: clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
      005651 74 07            [12]15712 	mov	a,#0x07
      005653 25*1F            [12]15713 	add	a,_f_read_sloc3_1_0
      005655 F8               [12]15714 	mov	r0,a
      005656 E4               [12]15715 	clr	a
      005657 35*20            [12]15716 	addc	a,(_f_read_sloc3_1_0 + 1)
      005659 F9               [12]15717 	mov	r1,a
      00565A AF*21            [24]15718 	mov	r7,(_f_read_sloc3_1_0 + 2)
      00565C 88 82            [24]15719 	mov	dpl,r0
      00565E 89 83            [24]15720 	mov	dph,r1
      005660 8F F0            [24]15721 	mov	b,r7
      005662 12r00r00         [24]15722 	lcall	__gptrget
      005665 F8               [12]15723 	mov	r0,a
      005666 A3               [24]15724 	inc	dptr
      005667 12r00r00         [24]15725 	lcall	__gptrget
      00566A F9               [12]15726 	mov	r1,a
      00566B A3               [24]15727 	inc	dptr
      00566C 12r00r00         [24]15728 	lcall	__gptrget
      00566F FF               [12]15729 	mov	r7,a
      005670 A3               [24]15730 	inc	dptr
      005671 12r00r00         [24]15731 	lcall	__gptrget
      005674 FE               [12]15732 	mov	r6,a
      005675 90r01r60         [24]15733 	mov	dptr,#_f_read_clst_65536_273
      005678 E8               [12]15734 	mov	a,r0
      005679 F0               [24]15735 	movx	@dptr,a
      00567A E9               [12]15736 	mov	a,r1
      00567B A3               [24]15737 	inc	dptr
      00567C F0               [24]15738 	movx	@dptr,a
      00567D EF               [12]15739 	mov	a,r7
      00567E A3               [24]15740 	inc	dptr
      00567F F0               [24]15741 	movx	@dptr,a
      005680 EE               [12]15742 	mov	a,r6
      005681 A3               [24]15743 	inc	dptr
      005682 F0               [24]15744 	movx	@dptr,a
      005683 80 5F            [24]15745 	sjmp	00110$
      005685                      15746 00109$:
                                  15747 ;	ff15\source\ff.c:3950: clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
      005685 74 15            [12]15748 	mov	a,#0x15
      005687 25*1F            [12]15749 	add	a,_f_read_sloc3_1_0
      005689 F8               [12]15750 	mov	r0,a
      00568A E4               [12]15751 	clr	a
      00568B 35*20            [12]15752 	addc	a,(_f_read_sloc3_1_0 + 1)
      00568D F9               [12]15753 	mov	r1,a
      00568E AF*21            [24]15754 	mov	r7,(_f_read_sloc3_1_0 + 2)
      005690 88 82            [24]15755 	mov	dpl,r0
      005692 89 83            [24]15756 	mov	dph,r1
      005694 8F F0            [24]15757 	mov	b,r7
      005696 12r00r00         [24]15758 	lcall	__gptrget
      005699 F8               [12]15759 	mov	r0,a
      00569A A3               [24]15760 	inc	dptr
      00569B 12r00r00         [24]15761 	lcall	__gptrget
      00569E F9               [12]15762 	mov	r1,a
      00569F A3               [24]15763 	inc	dptr
      0056A0 12r00r00         [24]15764 	lcall	__gptrget
      0056A3 FF               [12]15765 	mov	r7,a
      0056A4 A3               [24]15766 	inc	dptr
      0056A5 12r00r00         [24]15767 	lcall	__gptrget
      0056A8 FE               [12]15768 	mov	r6,a
      0056A9 90r00r30         [24]15769 	mov	dptr,#_get_fat_PARM_2
      0056AC E8               [12]15770 	mov	a,r0
      0056AD F0               [24]15771 	movx	@dptr,a
      0056AE E9               [12]15772 	mov	a,r1
      0056AF A3               [24]15773 	inc	dptr
      0056B0 F0               [24]15774 	movx	@dptr,a
      0056B1 EF               [12]15775 	mov	a,r7
      0056B2 A3               [24]15776 	inc	dptr
      0056B3 F0               [24]15777 	movx	@dptr,a
      0056B4 EE               [12]15778 	mov	a,r6
      0056B5 A3               [24]15779 	inc	dptr
      0056B6 F0               [24]15780 	movx	@dptr,a
      0056B7 85*1F 82         [24]15781 	mov	dpl,_f_read_sloc3_1_0
      0056BA 85*20 83         [24]15782 	mov	dph,(_f_read_sloc3_1_0 + 1)
      0056BD 85*21 F0         [24]15783 	mov	b,(_f_read_sloc3_1_0 + 2)
      0056C0 C0 04            [24]15784 	push	ar4
      0056C2 C0 03            [24]15785 	push	ar3
      0056C4 C0 02            [24]15786 	push	ar2
      0056C6 12r09rFE         [24]15787 	lcall	_get_fat
      0056C9 A9 82            [24]15788 	mov	r1,dpl
      0056CB AD 83            [24]15789 	mov	r5,dph
      0056CD AE F0            [24]15790 	mov	r6,b
      0056CF FF               [12]15791 	mov	r7,a
      0056D0 D0 02            [24]15792 	pop	ar2
      0056D2 D0 03            [24]15793 	pop	ar3
      0056D4 D0 04            [24]15794 	pop	ar4
      0056D6 90r01r60         [24]15795 	mov	dptr,#_f_read_clst_65536_273
      0056D9 E9               [12]15796 	mov	a,r1
      0056DA F0               [24]15797 	movx	@dptr,a
      0056DB ED               [12]15798 	mov	a,r5
      0056DC A3               [24]15799 	inc	dptr
      0056DD F0               [24]15800 	movx	@dptr,a
      0056DE EE               [12]15801 	mov	a,r6
      0056DF A3               [24]15802 	inc	dptr
      0056E0 F0               [24]15803 	movx	@dptr,a
      0056E1 EF               [12]15804 	mov	a,r7
      0056E2 A3               [24]15805 	inc	dptr
      0056E3 F0               [24]15806 	movx	@dptr,a
                                  15807 ;	ff15\source\ff.c:4003: LEAVE_FF(fs, FR_OK);
                                  15808 ;	ff15\source\ff.c:3950: clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
      0056E4                      15809 00110$:
                                  15810 ;	ff15\source\ff.c:3953: if (clst < 2) ABORT(fs, FR_INT_ERR);
      0056E4 90r01r60         [24]15811 	mov	dptr,#_f_read_clst_65536_273
      0056E7 E0               [24]15812 	movx	a,@dptr
      0056E8 F5*35            [12]15813 	mov	_f_read_sloc10_1_0,a
      0056EA A3               [24]15814 	inc	dptr
      0056EB E0               [24]15815 	movx	a,@dptr
      0056EC F5*36            [12]15816 	mov	(_f_read_sloc10_1_0 + 1),a
      0056EE A3               [24]15817 	inc	dptr
      0056EF E0               [24]15818 	movx	a,@dptr
      0056F0 F5*37            [12]15819 	mov	(_f_read_sloc10_1_0 + 2),a
      0056F2 A3               [24]15820 	inc	dptr
      0056F3 E0               [24]15821 	movx	a,@dptr
      0056F4 F5*38            [12]15822 	mov	(_f_read_sloc10_1_0 + 3),a
      0056F6 C3               [12]15823 	clr	c
      0056F7 E5*35            [12]15824 	mov	a,_f_read_sloc10_1_0
      0056F9 94 02            [12]15825 	subb	a,#0x02
      0056FB E5*36            [12]15826 	mov	a,(_f_read_sloc10_1_0 + 1)
      0056FD 94 00            [12]15827 	subb	a,#0x00
      0056FF E5*37            [12]15828 	mov	a,(_f_read_sloc10_1_0 + 2)
      005701 94 00            [12]15829 	subb	a,#0x00
      005703 E5*38            [12]15830 	mov	a,(_f_read_sloc10_1_0 + 3)
      005705 94 00            [12]15831 	subb	a,#0x00
      005707 50 2B            [24]15832 	jnc	00112$
      005709 90r01r59         [24]15833 	mov	dptr,#_f_read_fp_65536_272
      00570C E0               [24]15834 	movx	a,@dptr
      00570D F5*31            [12]15835 	mov	_f_read_sloc9_1_0,a
      00570F A3               [24]15836 	inc	dptr
      005710 E0               [24]15837 	movx	a,@dptr
      005711 F5*32            [12]15838 	mov	(_f_read_sloc9_1_0 + 1),a
      005713 A3               [24]15839 	inc	dptr
      005714 E0               [24]15840 	movx	a,@dptr
      005715 F5*33            [12]15841 	mov	(_f_read_sloc9_1_0 + 2),a
      005717 74 10            [12]15842 	mov	a,#0x10
      005719 25*31            [12]15843 	add	a,_f_read_sloc9_1_0
      00571B F5*31            [12]15844 	mov	_f_read_sloc9_1_0,a
      00571D E4               [12]15845 	clr	a
      00571E 35*32            [12]15846 	addc	a,(_f_read_sloc9_1_0 + 1)
      005720 F5*32            [12]15847 	mov	(_f_read_sloc9_1_0 + 1),a
      005722 85*31 82         [24]15848 	mov	dpl,_f_read_sloc9_1_0
      005725 85*32 83         [24]15849 	mov	dph,(_f_read_sloc9_1_0 + 1)
      005728 85*33 F0         [24]15850 	mov	b,(_f_read_sloc9_1_0 + 2)
      00572B 74 02            [12]15851 	mov	a,#0x02
      00572D 12r00r00         [24]15852 	lcall	__gptrput
      005730 75 82 02         [24]15853 	mov	dpl,#0x02
      005733 22               [24]15854 	ret
      005734                      15855 00112$:
                                  15856 ;	ff15\source\ff.c:3954: if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
      005734 E5*35            [12]15857 	mov	a,_f_read_sloc10_1_0
      005736 55*36            [12]15858 	anl	a,(_f_read_sloc10_1_0 + 1)
      005738 55*37            [12]15859 	anl	a,(_f_read_sloc10_1_0 + 2)
      00573A 55*38            [12]15860 	anl	a,(_f_read_sloc10_1_0 + 3)
      00573C B4 FF 2B         [24]15861 	cjne	a,#0xFF,00114$
      00573F 90r01r59         [24]15862 	mov	dptr,#_f_read_fp_65536_272
      005742 E0               [24]15863 	movx	a,@dptr
      005743 F5*31            [12]15864 	mov	_f_read_sloc9_1_0,a
      005745 A3               [24]15865 	inc	dptr
      005746 E0               [24]15866 	movx	a,@dptr
      005747 F5*32            [12]15867 	mov	(_f_read_sloc9_1_0 + 1),a
      005749 A3               [24]15868 	inc	dptr
      00574A E0               [24]15869 	movx	a,@dptr
      00574B F5*33            [12]15870 	mov	(_f_read_sloc9_1_0 + 2),a
      00574D 74 10            [12]15871 	mov	a,#0x10
      00574F 25*31            [12]15872 	add	a,_f_read_sloc9_1_0
      005751 F5*31            [12]15873 	mov	_f_read_sloc9_1_0,a
      005753 E4               [12]15874 	clr	a
      005754 35*32            [12]15875 	addc	a,(_f_read_sloc9_1_0 + 1)
      005756 F5*32            [12]15876 	mov	(_f_read_sloc9_1_0 + 1),a
      005758 85*31 82         [24]15877 	mov	dpl,_f_read_sloc9_1_0
      00575B 85*32 83         [24]15878 	mov	dph,(_f_read_sloc9_1_0 + 1)
      00575E 85*33 F0         [24]15879 	mov	b,(_f_read_sloc9_1_0 + 2)
      005761 74 01            [12]15880 	mov	a,#0x01
      005763 12r00r00         [24]15881 	lcall	__gptrput
      005766 75 82 01         [24]15882 	mov	dpl,#0x01
      005769 22               [24]15883 	ret
      00576A                      15884 00114$:
                                  15885 ;	ff15\source\ff.c:3955: fp->clust = clst;				/* Update current cluster */
      00576A 74 15            [12]15886 	mov	a,#0x15
      00576C 25*19            [12]15887 	add	a,_f_read_sloc1_1_0
      00576E F8               [12]15888 	mov	r0,a
      00576F E4               [12]15889 	clr	a
      005770 35*1A            [12]15890 	addc	a,(_f_read_sloc1_1_0 + 1)
      005772 F9               [12]15891 	mov	r1,a
      005773 AF*1B            [24]15892 	mov	r7,(_f_read_sloc1_1_0 + 2)
      005775 88 82            [24]15893 	mov	dpl,r0
      005777 89 83            [24]15894 	mov	dph,r1
      005779 8F F0            [24]15895 	mov	b,r7
      00577B E5*35            [12]15896 	mov	a,_f_read_sloc10_1_0
      00577D 12r00r00         [24]15897 	lcall	__gptrput
      005780 A3               [24]15898 	inc	dptr
      005781 E5*36            [12]15899 	mov	a,(_f_read_sloc10_1_0 + 1)
      005783 12r00r00         [24]15900 	lcall	__gptrput
      005786 A3               [24]15901 	inc	dptr
      005787 E5*37            [12]15902 	mov	a,(_f_read_sloc10_1_0 + 2)
      005789 12r00r00         [24]15903 	lcall	__gptrput
      00578C A3               [24]15904 	inc	dptr
      00578D E5*38            [12]15905 	mov	a,(_f_read_sloc10_1_0 + 3)
      00578F 12r00r00         [24]15906 	lcall	__gptrput
      005792                      15907 00116$:
                                  15908 ;	ff15\source\ff.c:3957: sect = clst2sect(fs, fp->clust);	/* Get current sector */
      005792 C0 02            [24]15909 	push	ar2
      005794 C0 03            [24]15910 	push	ar3
      005796 C0 04            [24]15911 	push	ar4
      005798 90r01r5D         [24]15912 	mov	dptr,#_f_read_fs_65536_273
      00579B E0               [24]15913 	movx	a,@dptr
      00579C FD               [12]15914 	mov	r5,a
      00579D A3               [24]15915 	inc	dptr
      00579E E0               [24]15916 	movx	a,@dptr
      00579F FE               [12]15917 	mov	r6,a
      0057A0 A3               [24]15918 	inc	dptr
      0057A1 E0               [24]15919 	movx	a,@dptr
      0057A2 FF               [12]15920 	mov	r7,a
      0057A3 90r01r59         [24]15921 	mov	dptr,#_f_read_fp_65536_272
      0057A6 E0               [24]15922 	movx	a,@dptr
      0057A7 F5*35            [12]15923 	mov	_f_read_sloc10_1_0,a
      0057A9 A3               [24]15924 	inc	dptr
      0057AA E0               [24]15925 	movx	a,@dptr
      0057AB F5*36            [12]15926 	mov	(_f_read_sloc10_1_0 + 1),a
      0057AD A3               [24]15927 	inc	dptr
      0057AE E0               [24]15928 	movx	a,@dptr
      0057AF F5*37            [12]15929 	mov	(_f_read_sloc10_1_0 + 2),a
      0057B1 74 15            [12]15930 	mov	a,#0x15
      0057B3 25*35            [12]15931 	add	a,_f_read_sloc10_1_0
      0057B5 F8               [12]15932 	mov	r0,a
      0057B6 E4               [12]15933 	clr	a
      0057B7 35*36            [12]15934 	addc	a,(_f_read_sloc10_1_0 + 1)
      0057B9 F9               [12]15935 	mov	r1,a
      0057BA AC*37            [24]15936 	mov	r4,(_f_read_sloc10_1_0 + 2)
      0057BC 88 82            [24]15937 	mov	dpl,r0
      0057BE 89 83            [24]15938 	mov	dph,r1
      0057C0 8C F0            [24]15939 	mov	b,r4
      0057C2 12r00r00         [24]15940 	lcall	__gptrget
      0057C5 F8               [12]15941 	mov	r0,a
      0057C6 A3               [24]15942 	inc	dptr
      0057C7 12r00r00         [24]15943 	lcall	__gptrget
      0057CA F9               [12]15944 	mov	r1,a
      0057CB A3               [24]15945 	inc	dptr
      0057CC 12r00r00         [24]15946 	lcall	__gptrget
      0057CF FC               [12]15947 	mov	r4,a
      0057D0 A3               [24]15948 	inc	dptr
      0057D1 12r00r00         [24]15949 	lcall	__gptrget
      0057D4 FB               [12]15950 	mov	r3,a
      0057D5 90r00r29         [24]15951 	mov	dptr,#_clst2sect_PARM_2
      0057D8 E8               [12]15952 	mov	a,r0
      0057D9 F0               [24]15953 	movx	@dptr,a
      0057DA E9               [12]15954 	mov	a,r1
      0057DB A3               [24]15955 	inc	dptr
      0057DC F0               [24]15956 	movx	@dptr,a
      0057DD EC               [12]15957 	mov	a,r4
      0057DE A3               [24]15958 	inc	dptr
      0057DF F0               [24]15959 	movx	@dptr,a
      0057E0 EB               [12]15960 	mov	a,r3
      0057E1 A3               [24]15961 	inc	dptr
      0057E2 F0               [24]15962 	movx	@dptr,a
      0057E3 8D 82            [24]15963 	mov	dpl,r5
      0057E5 8E 83            [24]15964 	mov	dph,r6
      0057E7 8F F0            [24]15965 	mov	b,r7
      0057E9 C0 04            [24]15966 	push	ar4
      0057EB C0 03            [24]15967 	push	ar3
      0057ED C0 02            [24]15968 	push	ar2
      0057EF 12r08rDC         [24]15969 	lcall	_clst2sect
      0057F2 85 82*31         [24]15970 	mov	_f_read_sloc9_1_0,dpl
      0057F5 85 83*32         [24]15971 	mov	(_f_read_sloc9_1_0 + 1),dph
      0057F8 85 F0*33         [24]15972 	mov	(_f_read_sloc9_1_0 + 2),b
      0057FB F5*34            [12]15973 	mov	(_f_read_sloc9_1_0 + 3),a
      0057FD D0 02            [24]15974 	pop	ar2
      0057FF D0 03            [24]15975 	pop	ar3
      005801 D0 04            [24]15976 	pop	ar4
                                  15977 ;	ff15\source\ff.c:3958: if (sect == 0) ABORT(fs, FR_INT_ERR);
      005803 D0 04            [24]15978 	pop	ar4
      005805 D0 03            [24]15979 	pop	ar3
      005807 D0 02            [24]15980 	pop	ar2
      005809 E5*31            [12]15981 	mov	a,_f_read_sloc9_1_0
      00580B 45*32            [12]15982 	orl	a,(_f_read_sloc9_1_0 + 1)
      00580D 45*33            [12]15983 	orl	a,(_f_read_sloc9_1_0 + 2)
      00580F 45*34            [12]15984 	orl	a,(_f_read_sloc9_1_0 + 3)
      005811 70 1A            [24]15985 	jnz	00118$
      005813 74 10            [12]15986 	mov	a,#0x10
      005815 25*35            [12]15987 	add	a,_f_read_sloc10_1_0
      005817 FD               [12]15988 	mov	r5,a
      005818 E4               [12]15989 	clr	a
      005819 35*36            [12]15990 	addc	a,(_f_read_sloc10_1_0 + 1)
      00581B FE               [12]15991 	mov	r6,a
      00581C AF*37            [24]15992 	mov	r7,(_f_read_sloc10_1_0 + 2)
      00581E 8D 82            [24]15993 	mov	dpl,r5
      005820 8E 83            [24]15994 	mov	dph,r6
      005822 8F F0            [24]15995 	mov	b,r7
      005824 74 02            [12]15996 	mov	a,#0x02
      005826 12r00r00         [24]15997 	lcall	__gptrput
      005829 75 82 02         [24]15998 	mov	dpl,#0x02
      00582C 22               [24]15999 	ret
      00582D                      16000 00118$:
                                  16001 ;	ff15\source\ff.c:3959: sect += csect;
      00582D C0 02            [24]16002 	push	ar2
      00582F C0 03            [24]16003 	push	ar3
      005831 C0 04            [24]16004 	push	ar4
      005833 90r01r68         [24]16005 	mov	dptr,#_f_read_csect_65536_273
      005836 E0               [24]16006 	movx	a,@dptr
      005837 FE               [12]16007 	mov	r6,a
      005838 A3               [24]16008 	inc	dptr
      005839 E0               [24]16009 	movx	a,@dptr
      00583A FF               [12]16010 	mov	r7,a
      00583B 8E 00            [24]16011 	mov	ar0,r6
      00583D 8F 01            [24]16012 	mov	ar1,r7
      00583F E4               [12]16013 	clr	a
      005840 FC               [12]16014 	mov	r4,a
      005841 FD               [12]16015 	mov	r5,a
      005842 E8               [12]16016 	mov	a,r0
      005843 25*31            [12]16017 	add	a,_f_read_sloc9_1_0
      005845 F5*31            [12]16018 	mov	_f_read_sloc9_1_0,a
      005847 E9               [12]16019 	mov	a,r1
      005848 35*32            [12]16020 	addc	a,(_f_read_sloc9_1_0 + 1)
      00584A F5*32            [12]16021 	mov	(_f_read_sloc9_1_0 + 1),a
      00584C EC               [12]16022 	mov	a,r4
      00584D 35*33            [12]16023 	addc	a,(_f_read_sloc9_1_0 + 2)
      00584F F5*33            [12]16024 	mov	(_f_read_sloc9_1_0 + 2),a
      005851 ED               [12]16025 	mov	a,r5
      005852 35*34            [12]16026 	addc	a,(_f_read_sloc9_1_0 + 3)
      005854 F5*34            [12]16027 	mov	(_f_read_sloc9_1_0 + 3),a
                                  16028 ;	ff15\source\ff.c:3960: cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
      005856 90r01r54         [24]16029 	mov	dptr,#_f_read_PARM_3
      005859 E0               [24]16030 	movx	a,@dptr
      00585A A3               [24]16031 	inc	dptr
      00585B E0               [24]16032 	movx	a,@dptr
      00585C FD               [12]16033 	mov	r5,a
      00585D C3               [12]16034 	clr	c
      00585E 13               [12]16035 	rrc	a
      00585F F5*3C            [12]16036 	mov	_f_read_sloc12_1_0,a
      005861 75*3D 00         [24]16037 	mov	(_f_read_sloc12_1_0 + 1),#0x00
      005864 90r01r66         [24]16038 	mov	dptr,#_f_read_cc_65536_273
      005867 E5*3C            [12]16039 	mov	a,_f_read_sloc12_1_0
      005869 F0               [24]16040 	movx	@dptr,a
      00586A E5*3D            [12]16041 	mov	a,(_f_read_sloc12_1_0 + 1)
      00586C A3               [24]16042 	inc	dptr
      00586D F0               [24]16043 	movx	@dptr,a
                                  16044 ;	ff15\source\ff.c:3961: if (cc > 0) {						/* Read maximum contiguous sectors directly */
      00586E D0 04            [24]16045 	pop	ar4
      005870 D0 03            [24]16046 	pop	ar3
      005872 D0 02            [24]16047 	pop	ar2
      005874 E5*3C            [12]16048 	mov	a,_f_read_sloc12_1_0
      005876 45*3D            [12]16049 	orl	a,(_f_read_sloc12_1_0 + 1)
      005878 70 03            [24]16050 	jnz	00246$
      00587A 02r5Ar4A         [24]16051 	ljmp	00127$
      00587D                      16052 00246$:
                                  16053 ;	ff15\source\ff.c:3962: if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
      00587D C0 02            [24]16054 	push	ar2
      00587F C0 03            [24]16055 	push	ar3
      005881 C0 04            [24]16056 	push	ar4
      005883 E5*3C            [12]16057 	mov	a,_f_read_sloc12_1_0
      005885 2E               [12]16058 	add	a,r6
      005886 F9               [12]16059 	mov	r1,a
      005887 E5*3D            [12]16060 	mov	a,(_f_read_sloc12_1_0 + 1)
      005889 3F               [12]16061 	addc	a,r7
      00588A FD               [12]16062 	mov	r5,a
      00588B 90r01r5D         [24]16063 	mov	dptr,#_f_read_fs_65536_273
      00588E E0               [24]16064 	movx	a,@dptr
      00588F F8               [12]16065 	mov	r0,a
      005890 A3               [24]16066 	inc	dptr
      005891 E0               [24]16067 	movx	a,@dptr
      005892 FB               [12]16068 	mov	r3,a
      005893 A3               [24]16069 	inc	dptr
      005894 E0               [24]16070 	movx	a,@dptr
      005895 FC               [12]16071 	mov	r4,a
      005896 74 0A            [12]16072 	mov	a,#0x0a
      005898 28               [12]16073 	add	a,r0
      005899 F8               [12]16074 	mov	r0,a
      00589A E4               [12]16075 	clr	a
      00589B 3B               [12]16076 	addc	a,r3
      00589C FB               [12]16077 	mov	r3,a
      00589D 88 82            [24]16078 	mov	dpl,r0
      00589F 8B 83            [24]16079 	mov	dph,r3
      0058A1 8C F0            [24]16080 	mov	b,r4
      0058A3 12r00r00         [24]16081 	lcall	__gptrget
      0058A6 F5*3C            [12]16082 	mov	_f_read_sloc12_1_0,a
      0058A8 A3               [24]16083 	inc	dptr
      0058A9 12r00r00         [24]16084 	lcall	__gptrget
      0058AC F5*3D            [12]16085 	mov	(_f_read_sloc12_1_0 + 1),a
      0058AE C3               [12]16086 	clr	c
      0058AF E5*3C            [12]16087 	mov	a,_f_read_sloc12_1_0
      0058B1 99               [12]16088 	subb	a,r1
      0058B2 E5*3D            [12]16089 	mov	a,(_f_read_sloc12_1_0 + 1)
      0058B4 9D               [12]16090 	subb	a,r5
      0058B5 D0 04            [24]16091 	pop	ar4
      0058B7 D0 03            [24]16092 	pop	ar3
      0058B9 D0 02            [24]16093 	pop	ar2
      0058BB 50 0F            [24]16094 	jnc	00120$
                                  16095 ;	ff15\source\ff.c:3963: cc = fs->csize - csect;
      0058BD A9*3C            [24]16096 	mov	r1,_f_read_sloc12_1_0
      0058BF AD*3D            [24]16097 	mov	r5,(_f_read_sloc12_1_0 + 1)
      0058C1 90r01r66         [24]16098 	mov	dptr,#_f_read_cc_65536_273
      0058C4 E9               [12]16099 	mov	a,r1
      0058C5 C3               [12]16100 	clr	c
      0058C6 9E               [12]16101 	subb	a,r6
      0058C7 F0               [24]16102 	movx	@dptr,a
      0058C8 ED               [12]16103 	mov	a,r5
      0058C9 9F               [12]16104 	subb	a,r7
      0058CA A3               [24]16105 	inc	dptr
      0058CB F0               [24]16106 	movx	@dptr,a
      0058CC                      16107 00120$:
                                  16108 ;	ff15\source\ff.c:3965: if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
      0058CC 90r01r5D         [24]16109 	mov	dptr,#_f_read_fs_65536_273
      0058CF E0               [24]16110 	movx	a,@dptr
      0058D0 FD               [12]16111 	mov	r5,a
      0058D1 A3               [24]16112 	inc	dptr
      0058D2 E0               [24]16113 	movx	a,@dptr
      0058D3 FE               [12]16114 	mov	r6,a
      0058D4 A3               [24]16115 	inc	dptr
      0058D5 E0               [24]16116 	movx	a,@dptr
      0058D6 FF               [12]16117 	mov	r7,a
      0058D7 0D               [12]16118 	inc	r5
      0058D8 BD 00 01         [24]16119 	cjne	r5,#0x00,00248$
      0058DB 0E               [12]16120 	inc	r6
      0058DC                      16121 00248$:
      0058DC 8D 82            [24]16122 	mov	dpl,r5
      0058DE 8E 83            [24]16123 	mov	dph,r6
      0058E0 8F F0            [24]16124 	mov	b,r7
      0058E2 12r00r00         [24]16125 	lcall	__gptrget
      0058E5 FD               [12]16126 	mov	r5,a
      0058E6 90r01r6A         [24]16127 	mov	dptr,#_f_read_rbuff_65536_273
      0058E9 E0               [24]16128 	movx	a,@dptr
      0058EA F9               [12]16129 	mov	r1,a
      0058EB A3               [24]16130 	inc	dptr
      0058EC E0               [24]16131 	movx	a,@dptr
      0058ED FE               [12]16132 	mov	r6,a
      0058EE A3               [24]16133 	inc	dptr
      0058EF E0               [24]16134 	movx	a,@dptr
      0058F0 FF               [12]16135 	mov	r7,a
      0058F1 90r01r66         [24]16136 	mov	dptr,#_f_read_cc_65536_273
      0058F4 E0               [24]16137 	movx	a,@dptr
      0058F5 F5*3C            [12]16138 	mov	_f_read_sloc12_1_0,a
      0058F7 A3               [24]16139 	inc	dptr
      0058F8 E0               [24]16140 	movx	a,@dptr
      0058F9 F5*3D            [12]16141 	mov	(_f_read_sloc12_1_0 + 1),a
      0058FB 90r00r00         [24]16142 	mov	dptr,#_disk_read_PARM_2
      0058FE E9               [12]16143 	mov	a,r1
      0058FF F0               [24]16144 	movx	@dptr,a
      005900 EE               [12]16145 	mov	a,r6
      005901 A3               [24]16146 	inc	dptr
      005902 F0               [24]16147 	movx	@dptr,a
      005903 EF               [12]16148 	mov	a,r7
      005904 A3               [24]16149 	inc	dptr
      005905 F0               [24]16150 	movx	@dptr,a
      005906 90r00r00         [24]16151 	mov	dptr,#_disk_read_PARM_3
      005909 E5*31            [12]16152 	mov	a,_f_read_sloc9_1_0
      00590B F0               [24]16153 	movx	@dptr,a
      00590C E5*32            [12]16154 	mov	a,(_f_read_sloc9_1_0 + 1)
      00590E A3               [24]16155 	inc	dptr
      00590F F0               [24]16156 	movx	@dptr,a
      005910 E5*33            [12]16157 	mov	a,(_f_read_sloc9_1_0 + 2)
      005912 A3               [24]16158 	inc	dptr
      005913 F0               [24]16159 	movx	@dptr,a
      005914 E5*34            [12]16160 	mov	a,(_f_read_sloc9_1_0 + 3)
      005916 A3               [24]16161 	inc	dptr
      005917 F0               [24]16162 	movx	@dptr,a
      005918 90r00r00         [24]16163 	mov	dptr,#_disk_read_PARM_4
      00591B E5*3C            [12]16164 	mov	a,_f_read_sloc12_1_0
      00591D F0               [24]16165 	movx	@dptr,a
      00591E E5*3D            [12]16166 	mov	a,(_f_read_sloc12_1_0 + 1)
      005920 A3               [24]16167 	inc	dptr
      005921 F0               [24]16168 	movx	@dptr,a
      005922 8D 82            [24]16169 	mov	dpl,r5
      005924 C0 04            [24]16170 	push	ar4
      005926 C0 03            [24]16171 	push	ar3
      005928 C0 02            [24]16172 	push	ar2
      00592A 12r00r00         [24]16173 	lcall	_disk_read
      00592D E5 82            [12]16174 	mov	a,dpl
      00592F D0 02            [24]16175 	pop	ar2
      005931 D0 03            [24]16176 	pop	ar3
      005933 D0 04            [24]16177 	pop	ar4
      005935 60 21            [24]16178 	jz	00122$
      005937 90r01r59         [24]16179 	mov	dptr,#_f_read_fp_65536_272
      00593A E0               [24]16180 	movx	a,@dptr
      00593B FD               [12]16181 	mov	r5,a
      00593C A3               [24]16182 	inc	dptr
      00593D E0               [24]16183 	movx	a,@dptr
      00593E FE               [12]16184 	mov	r6,a
      00593F A3               [24]16185 	inc	dptr
      005940 E0               [24]16186 	movx	a,@dptr
      005941 FF               [12]16187 	mov	r7,a
      005942 74 10            [12]16188 	mov	a,#0x10
      005944 2D               [12]16189 	add	a,r5
      005945 FD               [12]16190 	mov	r5,a
      005946 E4               [12]16191 	clr	a
      005947 3E               [12]16192 	addc	a,r6
      005948 FE               [12]16193 	mov	r6,a
      005949 8D 82            [24]16194 	mov	dpl,r5
      00594B 8E 83            [24]16195 	mov	dph,r6
      00594D 8F F0            [24]16196 	mov	b,r7
      00594F 74 01            [12]16197 	mov	a,#0x01
      005951 12r00r00         [24]16198 	lcall	__gptrput
      005954 75 82 01         [24]16199 	mov	dpl,#0x01
      005957 22               [24]16200 	ret
      005958                      16201 00122$:
                                  16202 ;	ff15\source\ff.c:3972: if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
      005958 85*15 82         [24]16203 	mov	dpl,_f_read_sloc0_1_0
      00595B 85*16 83         [24]16204 	mov	dph,(_f_read_sloc0_1_0 + 1)
      00595E 85*17 F0         [24]16205 	mov	b,(_f_read_sloc0_1_0 + 2)
      005961 12r00r00         [24]16206 	lcall	__gptrget
      005964 FF               [12]16207 	mov	r7,a
      005965 20 E7 03         [24]16208 	jb	acc.7,00250$
      005968 02r5Ar32         [24]16209 	ljmp	00124$
      00596B                      16210 00250$:
      00596B 74 19            [12]16211 	mov	a,#0x19
      00596D 2A               [12]16212 	add	a,r2
      00596E FF               [12]16213 	mov	r7,a
      00596F E4               [12]16214 	clr	a
      005970 3B               [12]16215 	addc	a,r3
      005971 FD               [12]16216 	mov	r5,a
      005972 8C 06            [24]16217 	mov	ar6,r4
      005974 8F 82            [24]16218 	mov	dpl,r7
      005976 8D 83            [24]16219 	mov	dph,r5
      005978 8E F0            [24]16220 	mov	b,r6
      00597A 12r00r00         [24]16221 	lcall	__gptrget
      00597D F9               [12]16222 	mov	r1,a
      00597E A3               [24]16223 	inc	dptr
      00597F 12r00r00         [24]16224 	lcall	__gptrget
      005982 FD               [12]16225 	mov	r5,a
      005983 A3               [24]16226 	inc	dptr
      005984 12r00r00         [24]16227 	lcall	__gptrget
      005987 FE               [12]16228 	mov	r6,a
      005988 A3               [24]16229 	inc	dptr
      005989 12r00r00         [24]16230 	lcall	__gptrget
      00598C FF               [12]16231 	mov	r7,a
      00598D C0 02            [24]16232 	push	ar2
      00598F C0 03            [24]16233 	push	ar3
      005991 C0 04            [24]16234 	push	ar4
      005993 E9               [12]16235 	mov	a,r1
      005994 C3               [12]16236 	clr	c
      005995 95*31            [12]16237 	subb	a,_f_read_sloc9_1_0
      005997 F5*3E            [12]16238 	mov	_f_read_sloc13_1_0,a
      005999 ED               [12]16239 	mov	a,r5
      00599A 95*32            [12]16240 	subb	a,(_f_read_sloc9_1_0 + 1)
      00599C F5*3F            [12]16241 	mov	(_f_read_sloc13_1_0 + 1),a
      00599E EE               [12]16242 	mov	a,r6
      00599F 95*33            [12]16243 	subb	a,(_f_read_sloc9_1_0 + 2)
      0059A1 F5*40            [12]16244 	mov	(_f_read_sloc13_1_0 + 2),a
      0059A3 EF               [12]16245 	mov	a,r7
      0059A4 95*34            [12]16246 	subb	a,(_f_read_sloc9_1_0 + 3)
      0059A6 F5*41            [12]16247 	mov	(_f_read_sloc13_1_0 + 3),a
      0059A8 A8*3C            [24]16248 	mov	r0,_f_read_sloc12_1_0
      0059AA AA*3D            [24]16249 	mov	r2,(_f_read_sloc12_1_0 + 1)
      0059AC 7B 00            [12]16250 	mov	r3,#0x00
      0059AE 7C 00            [12]16251 	mov	r4,#0x00
      0059B0 C3               [12]16252 	clr	c
      0059B1 E5*3E            [12]16253 	mov	a,_f_read_sloc13_1_0
      0059B3 98               [12]16254 	subb	a,r0
      0059B4 E5*3F            [12]16255 	mov	a,(_f_read_sloc13_1_0 + 1)
      0059B6 9A               [12]16256 	subb	a,r2
      0059B7 E5*40            [12]16257 	mov	a,(_f_read_sloc13_1_0 + 2)
      0059B9 9B               [12]16258 	subb	a,r3
      0059BA E5*41            [12]16259 	mov	a,(_f_read_sloc13_1_0 + 3)
      0059BC 9C               [12]16260 	subb	a,r4
      0059BD D0 04            [24]16261 	pop	ar4
      0059BF D0 03            [24]16262 	pop	ar3
      0059C1 D0 02            [24]16263 	pop	ar2
      0059C3 50 6D            [24]16264 	jnc	00124$
                                  16265 ;	ff15\source\ff.c:3973: memcpy(rbuff + ((fp->sect - sect) * SS(fs)), fp->buf, SS(fs));
      0059C5 E9               [12]16266 	mov	a,r1
      0059C6 C3               [12]16267 	clr	c
      0059C7 95*31            [12]16268 	subb	a,_f_read_sloc9_1_0
      0059C9 F9               [12]16269 	mov	r1,a
      0059CA ED               [12]16270 	mov	a,r5
      0059CB 95*32            [12]16271 	subb	a,(_f_read_sloc9_1_0 + 1)
      0059CD FD               [12]16272 	mov	r5,a
      0059CE EE               [12]16273 	mov	a,r6
      0059CF 95*33            [12]16274 	subb	a,(_f_read_sloc9_1_0 + 2)
      0059D1 FE               [12]16275 	mov	r6,a
      0059D2 EF               [12]16276 	mov	a,r7
      0059D3 95*34            [12]16277 	subb	a,(_f_read_sloc9_1_0 + 3)
      0059D5 E9               [12]16278 	mov	a,r1
      0059D6 29               [12]16279 	add	a,r1
      0059D7 F5*3F            [12]16280 	mov	(_f_read_sloc13_1_0 + 1),a
      0059D9 ED               [12]16281 	mov	a,r5
      0059DA 33               [12]16282 	rlc	a
      0059DB F5*40            [12]16283 	mov	(_f_read_sloc13_1_0 + 2),a
      0059DD EE               [12]16284 	mov	a,r6
      0059DE 33               [12]16285 	rlc	a
      0059DF F5*41            [12]16286 	mov	(_f_read_sloc13_1_0 + 3),a
      0059E1 75*3E 00         [24]16287 	mov	_f_read_sloc13_1_0,#0x00
      0059E4 90r01r6A         [24]16288 	mov	dptr,#_f_read_rbuff_65536_273
      0059E7 E0               [24]16289 	movx	a,@dptr
      0059E8 F8               [12]16290 	mov	r0,a
      0059E9 A3               [24]16291 	inc	dptr
      0059EA E0               [24]16292 	movx	a,@dptr
      0059EB FE               [12]16293 	mov	r6,a
      0059EC A3               [24]16294 	inc	dptr
      0059ED E0               [24]16295 	movx	a,@dptr
      0059EE FF               [12]16296 	mov	r7,a
      0059EF E5*3E            [12]16297 	mov	a,_f_read_sloc13_1_0
      0059F1 28               [12]16298 	add	a,r0
      0059F2 F8               [12]16299 	mov	r0,a
      0059F3 E5*3F            [12]16300 	mov	a,(_f_read_sloc13_1_0 + 1)
      0059F5 3E               [12]16301 	addc	a,r6
      0059F6 FE               [12]16302 	mov	r6,a
      0059F7 88*3E            [24]16303 	mov	_f_read_sloc13_1_0,r0
      0059F9 8E*3F            [24]16304 	mov	(_f_read_sloc13_1_0 + 1),r6
      0059FB 8F*40            [24]16305 	mov	(_f_read_sloc13_1_0 + 2),r7
      0059FD 74 24            [12]16306 	mov	a,#0x24
      0059FF 2A               [12]16307 	add	a,r2
      005A00 F9               [12]16308 	mov	r1,a
      005A01 E4               [12]16309 	clr	a
      005A02 3B               [12]16310 	addc	a,r3
      005A03 FD               [12]16311 	mov	r5,a
      005A04 8C 07            [24]16312 	mov	ar7,r4
      005A06 90r00r00         [24]16313 	mov	dptr,#___memcpy_PARM_2
      005A09 E9               [12]16314 	mov	a,r1
      005A0A F0               [24]16315 	movx	@dptr,a
      005A0B ED               [12]16316 	mov	a,r5
      005A0C A3               [24]16317 	inc	dptr
      005A0D F0               [24]16318 	movx	@dptr,a
      005A0E EF               [12]16319 	mov	a,r7
      005A0F A3               [24]16320 	inc	dptr
      005A10 F0               [24]16321 	movx	@dptr,a
      005A11 90r00r00         [24]16322 	mov	dptr,#___memcpy_PARM_3
      005A14 E4               [12]16323 	clr	a
      005A15 F0               [24]16324 	movx	@dptr,a
      005A16 74 02            [12]16325 	mov	a,#0x02
      005A18 A3               [24]16326 	inc	dptr
      005A19 F0               [24]16327 	movx	@dptr,a
      005A1A 85*3E 82         [24]16328 	mov	dpl,_f_read_sloc13_1_0
      005A1D 85*3F 83         [24]16329 	mov	dph,(_f_read_sloc13_1_0 + 1)
      005A20 85*40 F0         [24]16330 	mov	b,(_f_read_sloc13_1_0 + 2)
      005A23 C0 04            [24]16331 	push	ar4
      005A25 C0 03            [24]16332 	push	ar3
      005A27 C0 02            [24]16333 	push	ar2
      005A29 12r00r00         [24]16334 	lcall	___memcpy
      005A2C D0 02            [24]16335 	pop	ar2
      005A2E D0 03            [24]16336 	pop	ar3
      005A30 D0 04            [24]16337 	pop	ar4
      005A32                      16338 00124$:
                                  16339 ;	ff15\source\ff.c:3977: rcnt = SS(fs) * cc;				/* Number of bytes transferred */
      005A32 90r01r66         [24]16340 	mov	dptr,#_f_read_cc_65536_273
      005A35 E0               [24]16341 	movx	a,@dptr
      005A36 FE               [12]16342 	mov	r6,a
      005A37 A3               [24]16343 	inc	dptr
      005A38 E0               [24]16344 	movx	a,@dptr
      005A39 FF               [12]16345 	mov	r7,a
      005A3A EE               [12]16346 	mov	a,r6
      005A3B 2E               [12]16347 	add	a,r6
      005A3C CF               [12]16348 	xch	a,r7
      005A3D 7E 00            [12]16349 	mov	r6,#0x00
      005A3F 90r01r64         [24]16350 	mov	dptr,#_f_read_rcnt_65536_273
      005A42 EE               [12]16351 	mov	a,r6
      005A43 F0               [24]16352 	movx	@dptr,a
      005A44 EF               [12]16353 	mov	a,r7
      005A45 A3               [24]16354 	inc	dptr
      005A46 F0               [24]16355 	movx	@dptr,a
                                  16356 ;	ff15\source\ff.c:3978: continue;
      005A47 02r5Cr94         [24]16357 	ljmp	00140$
      005A4A                      16358 00127$:
                                  16359 ;	ff15\source\ff.c:3981: if (fp->sect != sect) {			/* Load data sector if not in cache */
      005A4A 74 19            [12]16360 	mov	a,#0x19
      005A4C 25*35            [12]16361 	add	a,_f_read_sloc10_1_0
      005A4E FF               [12]16362 	mov	r7,a
      005A4F E4               [12]16363 	clr	a
      005A50 35*36            [12]16364 	addc	a,(_f_read_sloc10_1_0 + 1)
      005A52 FD               [12]16365 	mov	r5,a
      005A53 AE*37            [24]16366 	mov	r6,(_f_read_sloc10_1_0 + 2)
      005A55 8F 82            [24]16367 	mov	dpl,r7
      005A57 8D 83            [24]16368 	mov	dph,r5
      005A59 8E F0            [24]16369 	mov	b,r6
      005A5B 12r00r00         [24]16370 	lcall	__gptrget
      005A5E F9               [12]16371 	mov	r1,a
      005A5F A3               [24]16372 	inc	dptr
      005A60 12r00r00         [24]16373 	lcall	__gptrget
      005A63 FD               [12]16374 	mov	r5,a
      005A64 A3               [24]16375 	inc	dptr
      005A65 12r00r00         [24]16376 	lcall	__gptrget
      005A68 FE               [12]16377 	mov	r6,a
      005A69 A3               [24]16378 	inc	dptr
      005A6A 12r00r00         [24]16379 	lcall	__gptrget
      005A6D FF               [12]16380 	mov	r7,a
      005A6E E9               [12]16381 	mov	a,r1
      005A6F B5*31 0F         [24]16382 	cjne	a,_f_read_sloc9_1_0,00252$
      005A72 ED               [12]16383 	mov	a,r5
      005A73 B5*32 0B         [24]16384 	cjne	a,(_f_read_sloc9_1_0 + 1),00252$
      005A76 EE               [12]16385 	mov	a,r6
      005A77 B5*33 07         [24]16386 	cjne	a,(_f_read_sloc9_1_0 + 2),00252$
      005A7A EF               [12]16387 	mov	a,r7
      005A7B B5*34 03         [24]16388 	cjne	a,(_f_read_sloc9_1_0 + 3),00252$
      005A7E 02r5BrC1         [24]16389 	ljmp	00135$
      005A81                      16390 00252$:
                                  16391 ;	ff15\source\ff.c:3983: if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
      005A81 74 0F            [12]16392 	mov	a,#0x0f
      005A83 25*35            [12]16393 	add	a,_f_read_sloc10_1_0
      005A85 F5*3E            [12]16394 	mov	_f_read_sloc13_1_0,a
      005A87 E4               [12]16395 	clr	a
      005A88 35*36            [12]16396 	addc	a,(_f_read_sloc10_1_0 + 1)
      005A8A F5*3F            [12]16397 	mov	(_f_read_sloc13_1_0 + 1),a
      005A8C 85*37*40         [24]16398 	mov	(_f_read_sloc13_1_0 + 2),(_f_read_sloc10_1_0 + 2)
      005A8F 85*3E 82         [24]16399 	mov	dpl,_f_read_sloc13_1_0
      005A92 85*3F 83         [24]16400 	mov	dph,(_f_read_sloc13_1_0 + 1)
      005A95 85*40 F0         [24]16401 	mov	b,(_f_read_sloc13_1_0 + 2)
      005A98 12r00r00         [24]16402 	lcall	__gptrget
      005A9B F8               [12]16403 	mov	r0,a
      005A9C 20 E7 03         [24]16404 	jb	acc.7,00253$
      005A9F 02r5Br3C         [24]16405 	ljmp	00131$
      005AA2                      16406 00253$:
                                  16407 ;	ff15\source\ff.c:3984: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
      005AA2 C0 02            [24]16408 	push	ar2
      005AA4 C0 03            [24]16409 	push	ar3
      005AA6 C0 04            [24]16410 	push	ar4
      005AA8 90r01r5D         [24]16411 	mov	dptr,#_f_read_fs_65536_273
      005AAB E0               [24]16412 	movx	a,@dptr
      005AAC F8               [12]16413 	mov	r0,a
      005AAD A3               [24]16414 	inc	dptr
      005AAE E0               [24]16415 	movx	a,@dptr
      005AAF FB               [12]16416 	mov	r3,a
      005AB0 A3               [24]16417 	inc	dptr
      005AB1 E0               [24]16418 	movx	a,@dptr
      005AB2 FC               [12]16419 	mov	r4,a
      005AB3 08               [12]16420 	inc	r0
      005AB4 B8 00 01         [24]16421 	cjne	r0,#0x00,00254$
      005AB7 0B               [12]16422 	inc	r3
      005AB8                      16423 00254$:
      005AB8 88 82            [24]16424 	mov	dpl,r0
      005ABA 8B 83            [24]16425 	mov	dph,r3
      005ABC 8C F0            [24]16426 	mov	b,r4
      005ABE 12r00r00         [24]16427 	lcall	__gptrget
      005AC1 F8               [12]16428 	mov	r0,a
      005AC2 90r00r00         [24]16429 	mov	dptr,#_disk_write_PARM_2
      005AC5 74 24            [12]16430 	mov	a,#0x24
      005AC7 25*35            [12]16431 	add	a,_f_read_sloc10_1_0
      005AC9 F0               [24]16432 	movx	@dptr,a
      005ACA E4               [12]16433 	clr	a
      005ACB 35*36            [12]16434 	addc	a,(_f_read_sloc10_1_0 + 1)
      005ACD A3               [24]16435 	inc	dptr
      005ACE F0               [24]16436 	movx	@dptr,a
      005ACF E5*37            [12]16437 	mov	a,(_f_read_sloc10_1_0 + 2)
      005AD1 A3               [24]16438 	inc	dptr
      005AD2 F0               [24]16439 	movx	@dptr,a
      005AD3 90r00r00         [24]16440 	mov	dptr,#_disk_write_PARM_3
      005AD6 E9               [12]16441 	mov	a,r1
      005AD7 F0               [24]16442 	movx	@dptr,a
      005AD8 ED               [12]16443 	mov	a,r5
      005AD9 A3               [24]16444 	inc	dptr
      005ADA F0               [24]16445 	movx	@dptr,a
      005ADB EE               [12]16446 	mov	a,r6
      005ADC A3               [24]16447 	inc	dptr
      005ADD F0               [24]16448 	movx	@dptr,a
      005ADE EF               [12]16449 	mov	a,r7
      005ADF A3               [24]16450 	inc	dptr
      005AE0 F0               [24]16451 	movx	@dptr,a
      005AE1 90r00r00         [24]16452 	mov	dptr,#_disk_write_PARM_4
      005AE4 74 01            [12]16453 	mov	a,#0x01
      005AE6 F0               [24]16454 	movx	@dptr,a
      005AE7 E4               [12]16455 	clr	a
      005AE8 A3               [24]16456 	inc	dptr
      005AE9 F0               [24]16457 	movx	@dptr,a
      005AEA 88 82            [24]16458 	mov	dpl,r0
      005AEC C0 04            [24]16459 	push	ar4
      005AEE C0 03            [24]16460 	push	ar3
      005AF0 C0 02            [24]16461 	push	ar2
      005AF2 12r00r00         [24]16462 	lcall	_disk_write
      005AF5 E5 82            [12]16463 	mov	a,dpl
      005AF7 D0 02            [24]16464 	pop	ar2
      005AF9 D0 03            [24]16465 	pop	ar3
      005AFB D0 04            [24]16466 	pop	ar4
      005AFD D0 04            [24]16467 	pop	ar4
      005AFF D0 03            [24]16468 	pop	ar3
      005B01 D0 02            [24]16469 	pop	ar2
      005B03 60 1A            [24]16470 	jz	00129$
      005B05 74 10            [12]16471 	mov	a,#0x10
      005B07 25*35            [12]16472 	add	a,_f_read_sloc10_1_0
      005B09 FD               [12]16473 	mov	r5,a
      005B0A E4               [12]16474 	clr	a
      005B0B 35*36            [12]16475 	addc	a,(_f_read_sloc10_1_0 + 1)
      005B0D FE               [12]16476 	mov	r6,a
      005B0E AF*37            [24]16477 	mov	r7,(_f_read_sloc10_1_0 + 2)
      005B10 8D 82            [24]16478 	mov	dpl,r5
      005B12 8E 83            [24]16479 	mov	dph,r6
      005B14 8F F0            [24]16480 	mov	b,r7
      005B16 74 01            [12]16481 	mov	a,#0x01
      005B18 12r00r00         [24]16482 	lcall	__gptrput
      005B1B 75 82 01         [24]16483 	mov	dpl,#0x01
      005B1E 22               [24]16484 	ret
      005B1F                      16485 00129$:
                                  16486 ;	ff15\source\ff.c:3985: fp->flag &= (BYTE)~FA_DIRTY;
      005B1F 85*3E 82         [24]16487 	mov	dpl,_f_read_sloc13_1_0
      005B22 85*3F 83         [24]16488 	mov	dph,(_f_read_sloc13_1_0 + 1)
      005B25 85*40 F0         [24]16489 	mov	b,(_f_read_sloc13_1_0 + 2)
      005B28 12r00r00         [24]16490 	lcall	__gptrget
      005B2B FF               [12]16491 	mov	r7,a
      005B2C 53 07 7F         [24]16492 	anl	ar7,#0x7f
      005B2F 85*3E 82         [24]16493 	mov	dpl,_f_read_sloc13_1_0
      005B32 85*3F 83         [24]16494 	mov	dph,(_f_read_sloc13_1_0 + 1)
      005B35 85*40 F0         [24]16495 	mov	b,(_f_read_sloc13_1_0 + 2)
      005B38 EF               [12]16496 	mov	a,r7
      005B39 12r00r00         [24]16497 	lcall	__gptrput
      005B3C                      16498 00131$:
                                  16499 ;	ff15\source\ff.c:3988: if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cache */
      005B3C 90r01r5D         [24]16500 	mov	dptr,#_f_read_fs_65536_273
      005B3F E0               [24]16501 	movx	a,@dptr
      005B40 FD               [12]16502 	mov	r5,a
      005B41 A3               [24]16503 	inc	dptr
      005B42 E0               [24]16504 	movx	a,@dptr
      005B43 FE               [12]16505 	mov	r6,a
      005B44 A3               [24]16506 	inc	dptr
      005B45 E0               [24]16507 	movx	a,@dptr
      005B46 FF               [12]16508 	mov	r7,a
      005B47 0D               [12]16509 	inc	r5
      005B48 BD 00 01         [24]16510 	cjne	r5,#0x00,00256$
      005B4B 0E               [12]16511 	inc	r6
      005B4C                      16512 00256$:
      005B4C 8D 82            [24]16513 	mov	dpl,r5
      005B4E 8E 83            [24]16514 	mov	dph,r6
      005B50 8F F0            [24]16515 	mov	b,r7
      005B52 12r00r00         [24]16516 	lcall	__gptrget
      005B55 FD               [12]16517 	mov	r5,a
      005B56 90r01r59         [24]16518 	mov	dptr,#_f_read_fp_65536_272
      005B59 E0               [24]16519 	movx	a,@dptr
      005B5A F9               [12]16520 	mov	r1,a
      005B5B A3               [24]16521 	inc	dptr
      005B5C E0               [24]16522 	movx	a,@dptr
      005B5D FE               [12]16523 	mov	r6,a
      005B5E A3               [24]16524 	inc	dptr
      005B5F E0               [24]16525 	movx	a,@dptr
      005B60 FF               [12]16526 	mov	r7,a
      005B61 90r00r00         [24]16527 	mov	dptr,#_disk_read_PARM_2
      005B64 74 24            [12]16528 	mov	a,#0x24
      005B66 29               [12]16529 	add	a,r1
      005B67 F0               [24]16530 	movx	@dptr,a
      005B68 E4               [12]16531 	clr	a
      005B69 3E               [12]16532 	addc	a,r6
      005B6A A3               [24]16533 	inc	dptr
      005B6B F0               [24]16534 	movx	@dptr,a
      005B6C EF               [12]16535 	mov	a,r7
      005B6D A3               [24]16536 	inc	dptr
      005B6E F0               [24]16537 	movx	@dptr,a
      005B6F 90r00r00         [24]16538 	mov	dptr,#_disk_read_PARM_3
      005B72 E5*31            [12]16539 	mov	a,_f_read_sloc9_1_0
      005B74 F0               [24]16540 	movx	@dptr,a
      005B75 E5*32            [12]16541 	mov	a,(_f_read_sloc9_1_0 + 1)
      005B77 A3               [24]16542 	inc	dptr
      005B78 F0               [24]16543 	movx	@dptr,a
      005B79 E5*33            [12]16544 	mov	a,(_f_read_sloc9_1_0 + 2)
      005B7B A3               [24]16545 	inc	dptr
      005B7C F0               [24]16546 	movx	@dptr,a
      005B7D E5*34            [12]16547 	mov	a,(_f_read_sloc9_1_0 + 3)
      005B7F A3               [24]16548 	inc	dptr
      005B80 F0               [24]16549 	movx	@dptr,a
      005B81 90r00r00         [24]16550 	mov	dptr,#_disk_read_PARM_4
      005B84 74 01            [12]16551 	mov	a,#0x01
      005B86 F0               [24]16552 	movx	@dptr,a
      005B87 E4               [12]16553 	clr	a
      005B88 A3               [24]16554 	inc	dptr
      005B89 F0               [24]16555 	movx	@dptr,a
      005B8A 8D 82            [24]16556 	mov	dpl,r5
      005B8C C0 07            [24]16557 	push	ar7
      005B8E C0 06            [24]16558 	push	ar6
      005B90 C0 04            [24]16559 	push	ar4
      005B92 C0 03            [24]16560 	push	ar3
      005B94 C0 02            [24]16561 	push	ar2
      005B96 C0 01            [24]16562 	push	ar1
      005B98 12r00r00         [24]16563 	lcall	_disk_read
      005B9B E5 82            [12]16564 	mov	a,dpl
      005B9D D0 01            [24]16565 	pop	ar1
      005B9F D0 02            [24]16566 	pop	ar2
      005BA1 D0 03            [24]16567 	pop	ar3
      005BA3 D0 04            [24]16568 	pop	ar4
      005BA5 D0 06            [24]16569 	pop	ar6
      005BA7 D0 07            [24]16570 	pop	ar7
      005BA9 60 16            [24]16571 	jz	00135$
      005BAB 74 10            [12]16572 	mov	a,#0x10
      005BAD 29               [12]16573 	add	a,r1
      005BAE F9               [12]16574 	mov	r1,a
      005BAF E4               [12]16575 	clr	a
      005BB0 3E               [12]16576 	addc	a,r6
      005BB1 FE               [12]16577 	mov	r6,a
      005BB2 89 82            [24]16578 	mov	dpl,r1
      005BB4 8E 83            [24]16579 	mov	dph,r6
      005BB6 8F F0            [24]16580 	mov	b,r7
      005BB8 74 01            [12]16581 	mov	a,#0x01
      005BBA 12r00r00         [24]16582 	lcall	__gptrput
      005BBD 75 82 01         [24]16583 	mov	dpl,#0x01
      005BC0 22               [24]16584 	ret
      005BC1                      16585 00135$:
                                  16586 ;	ff15\source\ff.c:3991: fp->sect = sect;
      005BC1 74 19            [12]16587 	mov	a,#0x19
      005BC3 25*1C            [12]16588 	add	a,_f_read_sloc2_1_0
      005BC5 FD               [12]16589 	mov	r5,a
      005BC6 E4               [12]16590 	clr	a
      005BC7 35*1D            [12]16591 	addc	a,(_f_read_sloc2_1_0 + 1)
      005BC9 FE               [12]16592 	mov	r6,a
      005BCA AF*1E            [24]16593 	mov	r7,(_f_read_sloc2_1_0 + 2)
      005BCC 8D 82            [24]16594 	mov	dpl,r5
      005BCE 8E 83            [24]16595 	mov	dph,r6
      005BD0 8F F0            [24]16596 	mov	b,r7
      005BD2 E5*31            [12]16597 	mov	a,_f_read_sloc9_1_0
      005BD4 12r00r00         [24]16598 	lcall	__gptrput
      005BD7 A3               [24]16599 	inc	dptr
      005BD8 E5*32            [12]16600 	mov	a,(_f_read_sloc9_1_0 + 1)
      005BDA 12r00r00         [24]16601 	lcall	__gptrput
      005BDD A3               [24]16602 	inc	dptr
      005BDE E5*33            [12]16603 	mov	a,(_f_read_sloc9_1_0 + 2)
      005BE0 12r00r00         [24]16604 	lcall	__gptrput
      005BE3 A3               [24]16605 	inc	dptr
      005BE4 E5*34            [12]16606 	mov	a,(_f_read_sloc9_1_0 + 3)
      005BE6 12r00r00         [24]16607 	lcall	__gptrput
      005BE9                      16608 00137$:
                                  16609 ;	ff15\source\ff.c:3993: rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes remains in the sector */
      005BE9 85*25 82         [24]16610 	mov	dpl,_f_read_sloc5_1_0
      005BEC 85*26 83         [24]16611 	mov	dph,(_f_read_sloc5_1_0 + 1)
      005BEF 85*27 F0         [24]16612 	mov	b,(_f_read_sloc5_1_0 + 2)
      005BF2 12r00r00         [24]16613 	lcall	__gptrget
      005BF5 FE               [12]16614 	mov	r6,a
      005BF6 A3               [24]16615 	inc	dptr
      005BF7 12r00r00         [24]16616 	lcall	__gptrget
      005BFA FF               [12]16617 	mov	r7,a
      005BFB 53 07 01         [24]16618 	anl	ar7,#0x01
      005BFE E4               [12]16619 	clr	a
      005BFF C3               [12]16620 	clr	c
      005C00 9E               [12]16621 	subb	a,r6
      005C01 FE               [12]16622 	mov	r6,a
      005C02 74 02            [12]16623 	mov	a,#0x02
      005C04 9F               [12]16624 	subb	a,r7
      005C05 FF               [12]16625 	mov	r7,a
      005C06 90r01r64         [24]16626 	mov	dptr,#_f_read_rcnt_65536_273
      005C09 EE               [12]16627 	mov	a,r6
      005C0A F0               [24]16628 	movx	@dptr,a
      005C0B EF               [12]16629 	mov	a,r7
      005C0C A3               [24]16630 	inc	dptr
      005C0D F0               [24]16631 	movx	@dptr,a
                                  16632 ;	ff15\source\ff.c:3994: if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
      005C0E 90r01r54         [24]16633 	mov	dptr,#_f_read_PARM_3
      005C11 E0               [24]16634 	movx	a,@dptr
      005C12 F9               [12]16635 	mov	r1,a
      005C13 A3               [24]16636 	inc	dptr
      005C14 E0               [24]16637 	movx	a,@dptr
      005C15 FD               [12]16638 	mov	r5,a
      005C16 C3               [12]16639 	clr	c
      005C17 E9               [12]16640 	mov	a,r1
      005C18 9E               [12]16641 	subb	a,r6
      005C19 ED               [12]16642 	mov	a,r5
      005C1A 9F               [12]16643 	subb	a,r7
      005C1B 50 08            [24]16644 	jnc	00139$
      005C1D 90r01r64         [24]16645 	mov	dptr,#_f_read_rcnt_65536_273
      005C20 E9               [12]16646 	mov	a,r1
      005C21 F0               [24]16647 	movx	@dptr,a
      005C22 ED               [12]16648 	mov	a,r5
      005C23 A3               [24]16649 	inc	dptr
      005C24 F0               [24]16650 	movx	@dptr,a
      005C25                      16651 00139$:
                                  16652 ;	ff15\source\ff.c:3999: memcpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
      005C25 C0 02            [24]16653 	push	ar2
      005C27 C0 03            [24]16654 	push	ar3
      005C29 C0 04            [24]16655 	push	ar4
      005C2B 90r01r6A         [24]16656 	mov	dptr,#_f_read_rbuff_65536_273
      005C2E E0               [24]16657 	movx	a,@dptr
      005C2F FD               [12]16658 	mov	r5,a
      005C30 A3               [24]16659 	inc	dptr
      005C31 E0               [24]16660 	movx	a,@dptr
      005C32 FE               [12]16661 	mov	r6,a
      005C33 A3               [24]16662 	inc	dptr
      005C34 E0               [24]16663 	movx	a,@dptr
      005C35 FF               [12]16664 	mov	r7,a
      005C36 85*2B 82         [24]16665 	mov	dpl,_f_read_sloc7_1_0
      005C39 85*2C 83         [24]16666 	mov	dph,(_f_read_sloc7_1_0 + 1)
      005C3C 85*2D F0         [24]16667 	mov	b,(_f_read_sloc7_1_0 + 2)
      005C3F 12r00r00         [24]16668 	lcall	__gptrget
      005C42 F8               [12]16669 	mov	r0,a
      005C43 A3               [24]16670 	inc	dptr
      005C44 12r00r00         [24]16671 	lcall	__gptrget
      005C47 F9               [12]16672 	mov	r1,a
      005C48 A3               [24]16673 	inc	dptr
      005C49 12r00r00         [24]16674 	lcall	__gptrget
      005C4C A3               [24]16675 	inc	dptr
      005C4D 12r00r00         [24]16676 	lcall	__gptrget
      005C50 53 01 01         [24]16677 	anl	ar1,#0x01
      005C53 E4               [12]16678 	clr	a
      005C54 E8               [12]16679 	mov	a,r0
      005C55 25*28            [12]16680 	add	a,_f_read_sloc6_1_0
      005C57 F8               [12]16681 	mov	r0,a
      005C58 E9               [12]16682 	mov	a,r1
      005C59 35*29            [12]16683 	addc	a,(_f_read_sloc6_1_0 + 1)
      005C5B F9               [12]16684 	mov	r1,a
      005C5C AB*2A            [24]16685 	mov	r3,(_f_read_sloc6_1_0 + 2)
      005C5E 90r01r64         [24]16686 	mov	dptr,#_f_read_rcnt_65536_273
      005C61 E0               [24]16687 	movx	a,@dptr
      005C62 FA               [12]16688 	mov	r2,a
      005C63 A3               [24]16689 	inc	dptr
      005C64 E0               [24]16690 	movx	a,@dptr
      005C65 FC               [12]16691 	mov	r4,a
      005C66 90r00r00         [24]16692 	mov	dptr,#___memcpy_PARM_2
      005C69 E8               [12]16693 	mov	a,r0
      005C6A F0               [24]16694 	movx	@dptr,a
      005C6B E9               [12]16695 	mov	a,r1
      005C6C A3               [24]16696 	inc	dptr
      005C6D F0               [24]16697 	movx	@dptr,a
      005C6E EB               [12]16698 	mov	a,r3
      005C6F A3               [24]16699 	inc	dptr
      005C70 F0               [24]16700 	movx	@dptr,a
      005C71 90r00r00         [24]16701 	mov	dptr,#___memcpy_PARM_3
      005C74 EA               [12]16702 	mov	a,r2
      005C75 F0               [24]16703 	movx	@dptr,a
      005C76 EC               [12]16704 	mov	a,r4
      005C77 A3               [24]16705 	inc	dptr
      005C78 F0               [24]16706 	movx	@dptr,a
      005C79 8D 82            [24]16707 	mov	dpl,r5
      005C7B 8E 83            [24]16708 	mov	dph,r6
      005C7D 8F F0            [24]16709 	mov	b,r7
      005C7F C0 04            [24]16710 	push	ar4
      005C81 C0 03            [24]16711 	push	ar3
      005C83 C0 02            [24]16712 	push	ar2
      005C85 12r00r00         [24]16713 	lcall	___memcpy
      005C88 D0 02            [24]16714 	pop	ar2
      005C8A D0 03            [24]16715 	pop	ar3
      005C8C D0 04            [24]16716 	pop	ar4
                                  16717 ;	ff15\source\ff.c:4003: LEAVE_FF(fs, FR_OK);
      005C8E D0 04            [24]16718 	pop	ar4
      005C90 D0 03            [24]16719 	pop	ar3
      005C92 D0 02            [24]16720 	pop	ar2
                                  16721 ;	ff15\source\ff.c:3999: memcpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
      005C94                      16722 00140$:
                                  16723 ;	ff15\source\ff.c:3937: for ( ; btr > 0; btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {	/* Repeat until btr bytes read */
      005C94 C0 02            [24]16724 	push	ar2
      005C96 C0 03            [24]16725 	push	ar3
      005C98 C0 04            [24]16726 	push	ar4
      005C9A 90r01r64         [24]16727 	mov	dptr,#_f_read_rcnt_65536_273
      005C9D E0               [24]16728 	movx	a,@dptr
      005C9E FE               [12]16729 	mov	r6,a
      005C9F A3               [24]16730 	inc	dptr
      005CA0 E0               [24]16731 	movx	a,@dptr
      005CA1 FF               [12]16732 	mov	r7,a
      005CA2 90r01r54         [24]16733 	mov	dptr,#_f_read_PARM_3
      005CA5 E0               [24]16734 	movx	a,@dptr
      005CA6 F9               [12]16735 	mov	r1,a
      005CA7 A3               [24]16736 	inc	dptr
      005CA8 E0               [24]16737 	movx	a,@dptr
      005CA9 FD               [12]16738 	mov	r5,a
      005CAA 90r01r54         [24]16739 	mov	dptr,#_f_read_PARM_3
      005CAD E9               [12]16740 	mov	a,r1
      005CAE C3               [12]16741 	clr	c
      005CAF 9E               [12]16742 	subb	a,r6
      005CB0 F0               [24]16743 	movx	@dptr,a
      005CB1 ED               [12]16744 	mov	a,r5
      005CB2 9F               [12]16745 	subb	a,r7
      005CB3 A3               [24]16746 	inc	dptr
      005CB4 F0               [24]16747 	movx	@dptr,a
      005CB5 85*39 82         [24]16748 	mov	dpl,_f_read_sloc11_1_0
      005CB8 85*3A 83         [24]16749 	mov	dph,(_f_read_sloc11_1_0 + 1)
      005CBB 85*3B F0         [24]16750 	mov	b,(_f_read_sloc11_1_0 + 2)
      005CBE 12r00r00         [24]16751 	lcall	__gptrget
      005CC1 FD               [12]16752 	mov	r5,a
      005CC2 A3               [24]16753 	inc	dptr
      005CC3 12r00r00         [24]16754 	lcall	__gptrget
      005CC6 F9               [12]16755 	mov	r1,a
      005CC7 EE               [12]16756 	mov	a,r6
      005CC8 2D               [12]16757 	add	a,r5
      005CC9 FD               [12]16758 	mov	r5,a
      005CCA EF               [12]16759 	mov	a,r7
      005CCB 39               [12]16760 	addc	a,r1
      005CCC F9               [12]16761 	mov	r1,a
      005CCD 85*39 82         [24]16762 	mov	dpl,_f_read_sloc11_1_0
      005CD0 85*3A 83         [24]16763 	mov	dph,(_f_read_sloc11_1_0 + 1)
      005CD3 85*3B F0         [24]16764 	mov	b,(_f_read_sloc11_1_0 + 2)
      005CD6 ED               [12]16765 	mov	a,r5
      005CD7 12r00r00         [24]16766 	lcall	__gptrput
      005CDA A3               [24]16767 	inc	dptr
      005CDB E9               [12]16768 	mov	a,r1
      005CDC 12r00r00         [24]16769 	lcall	__gptrput
      005CDF 90r01r6A         [24]16770 	mov	dptr,#_f_read_rbuff_65536_273
      005CE2 E0               [24]16771 	movx	a,@dptr
      005CE3 F8               [12]16772 	mov	r0,a
      005CE4 A3               [24]16773 	inc	dptr
      005CE5 E0               [24]16774 	movx	a,@dptr
      005CE6 F9               [12]16775 	mov	r1,a
      005CE7 A3               [24]16776 	inc	dptr
      005CE8 E0               [24]16777 	movx	a,@dptr
      005CE9 FD               [12]16778 	mov	r5,a
      005CEA 90r01r6A         [24]16779 	mov	dptr,#_f_read_rbuff_65536_273
      005CED EE               [12]16780 	mov	a,r6
      005CEE 28               [12]16781 	add	a,r0
      005CEF F0               [24]16782 	movx	@dptr,a
      005CF0 EF               [12]16783 	mov	a,r7
      005CF1 39               [12]16784 	addc	a,r1
      005CF2 A3               [24]16785 	inc	dptr
      005CF3 F0               [24]16786 	movx	@dptr,a
      005CF4 ED               [12]16787 	mov	a,r5
      005CF5 A3               [24]16788 	inc	dptr
      005CF6 F0               [24]16789 	movx	@dptr,a
      005CF7 74 11            [12]16790 	mov	a,#0x11
      005CF9 25*2E            [12]16791 	add	a,_f_read_sloc8_1_0
      005CFB F5*3E            [12]16792 	mov	_f_read_sloc13_1_0,a
      005CFD E4               [12]16793 	clr	a
      005CFE 35*2F            [12]16794 	addc	a,(_f_read_sloc8_1_0 + 1)
      005D00 F5*3F            [12]16795 	mov	(_f_read_sloc13_1_0 + 1),a
      005D02 85*30*40         [24]16796 	mov	(_f_read_sloc13_1_0 + 2),(_f_read_sloc8_1_0 + 2)
      005D05 85*3E 82         [24]16797 	mov	dpl,_f_read_sloc13_1_0
      005D08 85*3F 83         [24]16798 	mov	dph,(_f_read_sloc13_1_0 + 1)
      005D0B 85*40 F0         [24]16799 	mov	b,(_f_read_sloc13_1_0 + 2)
      005D0E 12r00r00         [24]16800 	lcall	__gptrget
      005D11 FA               [12]16801 	mov	r2,a
      005D12 A3               [24]16802 	inc	dptr
      005D13 12r00r00         [24]16803 	lcall	__gptrget
      005D16 FB               [12]16804 	mov	r3,a
      005D17 A3               [24]16805 	inc	dptr
      005D18 12r00r00         [24]16806 	lcall	__gptrget
      005D1B FC               [12]16807 	mov	r4,a
      005D1C A3               [24]16808 	inc	dptr
      005D1D 12r00r00         [24]16809 	lcall	__gptrget
      005D20 FD               [12]16810 	mov	r5,a
      005D21 8E 00            [24]16811 	mov	ar0,r6
      005D23 8F 01            [24]16812 	mov	ar1,r7
      005D25 E4               [12]16813 	clr	a
      005D26 FE               [12]16814 	mov	r6,a
      005D27 FF               [12]16815 	mov	r7,a
      005D28 E8               [12]16816 	mov	a,r0
      005D29 2A               [12]16817 	add	a,r2
      005D2A FA               [12]16818 	mov	r2,a
      005D2B E9               [12]16819 	mov	a,r1
      005D2C 3B               [12]16820 	addc	a,r3
      005D2D FB               [12]16821 	mov	r3,a
      005D2E EE               [12]16822 	mov	a,r6
      005D2F 3C               [12]16823 	addc	a,r4
      005D30 FC               [12]16824 	mov	r4,a
      005D31 EF               [12]16825 	mov	a,r7
      005D32 3D               [12]16826 	addc	a,r5
      005D33 FD               [12]16827 	mov	r5,a
      005D34 85*3E 82         [24]16828 	mov	dpl,_f_read_sloc13_1_0
      005D37 85*3F 83         [24]16829 	mov	dph,(_f_read_sloc13_1_0 + 1)
      005D3A 85*40 F0         [24]16830 	mov	b,(_f_read_sloc13_1_0 + 2)
      005D3D EA               [12]16831 	mov	a,r2
      005D3E 12r00r00         [24]16832 	lcall	__gptrput
      005D41 A3               [24]16833 	inc	dptr
      005D42 EB               [12]16834 	mov	a,r3
      005D43 12r00r00         [24]16835 	lcall	__gptrput
      005D46 A3               [24]16836 	inc	dptr
      005D47 EC               [12]16837 	mov	a,r4
      005D48 12r00r00         [24]16838 	lcall	__gptrput
      005D4B A3               [24]16839 	inc	dptr
      005D4C ED               [12]16840 	mov	a,r5
      005D4D 12r00r00         [24]16841 	lcall	__gptrput
      005D50 D0 04            [24]16842 	pop	ar4
      005D52 D0 03            [24]16843 	pop	ar3
      005D54 D0 02            [24]16844 	pop	ar2
      005D56 02r55rBA         [24]16845 	ljmp	00143$
      005D59                      16846 00141$:
                                  16847 ;	ff15\source\ff.c:4003: LEAVE_FF(fs, FR_OK);
      005D59 75 82 00         [24]16848 	mov	dpl,#0x00
                                  16849 ;	ff15\source\ff.c:4004: }
      005D5C 22               [24]16850 	ret
                                  16851 ;------------------------------------------------------------
                                  16852 ;Allocation info for local variables in function 'f_write'
                                  16853 ;------------------------------------------------------------
                                  16854 ;sloc0                     Allocated with name '_f_write_sloc0_1_0'
                                  16855 ;sloc1                     Allocated with name '_f_write_sloc1_1_0'
                                  16856 ;sloc2                     Allocated with name '_f_write_sloc2_1_0'
                                  16857 ;sloc3                     Allocated with name '_f_write_sloc3_1_0'
                                  16858 ;sloc4                     Allocated with name '_f_write_sloc4_1_0'
                                  16859 ;sloc5                     Allocated with name '_f_write_sloc5_1_0'
                                  16860 ;sloc6                     Allocated with name '_f_write_sloc6_1_0'
                                  16861 ;sloc7                     Allocated with name '_f_write_sloc7_1_0'
                                  16862 ;sloc8                     Allocated with name '_f_write_sloc8_1_0'
                                  16863 ;sloc9                     Allocated with name '_f_write_sloc9_1_0'
                                  16864 ;sloc10                    Allocated with name '_f_write_sloc10_1_0'
                                  16865 ;sloc11                    Allocated with name '_f_write_sloc11_1_0'
                                  16866 ;sloc12                    Allocated with name '_f_write_sloc12_1_0'
                                  16867 ;sloc13                    Allocated with name '_f_write_sloc13_1_0'
                                  16868 ;sloc14                    Allocated with name '_f_write_sloc14_1_0'
                                  16869 ;sloc15                    Allocated with name '_f_write_sloc15_1_0'
                                  16870 ;sloc16                    Allocated with name '_f_write_sloc16_1_0'
                                  16871 ;sloc17                    Allocated with name '_f_write_sloc17_1_0'
                                  16872 ;buff                      Allocated with name '_f_write_PARM_2'
                                  16873 ;btw                       Allocated with name '_f_write_PARM_3'
                                  16874 ;bw                        Allocated with name '_f_write_PARM_4'
                                  16875 ;fp                        Allocated with name '_f_write_fp_65536_292'
                                  16876 ;res                       Allocated with name '_f_write_res_65536_293'
                                  16877 ;fs                        Allocated with name '_f_write_fs_65536_293'
                                  16878 ;clst                      Allocated with name '_f_write_clst_65536_293'
                                  16879 ;sect                      Allocated with name '_f_write_sect_65536_293'
                                  16880 ;wcnt                      Allocated with name '_f_write_wcnt_65536_293'
                                  16881 ;cc                        Allocated with name '_f_write_cc_65536_293'
                                  16882 ;csect                     Allocated with name '_f_write_csect_65536_293'
                                  16883 ;wbuff                     Allocated with name '_f_write_wbuff_65536_293'
                                  16884 ;------------------------------------------------------------
                                  16885 ;	ff15\source\ff.c:4014: FRESULT f_write (
                                  16886 ;	-----------------------------------------
                                  16887 ;	 function f_write
                                  16888 ;	-----------------------------------------
      005D5D                      16889 _f_write:
      005D5D AF F0            [24]16890 	mov	r7,b
      005D5F AE 83            [24]16891 	mov	r6,dph
      005D61 E5 82            [12]16892 	mov	a,dpl
      005D63 90r01r75         [24]16893 	mov	dptr,#_f_write_fp_65536_292
      005D66 F0               [24]16894 	movx	@dptr,a
      005D67 EE               [12]16895 	mov	a,r6
      005D68 A3               [24]16896 	inc	dptr
      005D69 F0               [24]16897 	movx	@dptr,a
      005D6A EF               [12]16898 	mov	a,r7
      005D6B A3               [24]16899 	inc	dptr
      005D6C F0               [24]16900 	movx	@dptr,a
                                  16901 ;	ff15\source\ff.c:4026: const BYTE *wbuff = (const BYTE*)buff;
      005D6D 90r01r6D         [24]16902 	mov	dptr,#_f_write_PARM_2
      005D70 E0               [24]16903 	movx	a,@dptr
      005D71 FD               [12]16904 	mov	r5,a
      005D72 A3               [24]16905 	inc	dptr
      005D73 E0               [24]16906 	movx	a,@dptr
      005D74 FE               [12]16907 	mov	r6,a
      005D75 A3               [24]16908 	inc	dptr
      005D76 E0               [24]16909 	movx	a,@dptr
      005D77 FF               [12]16910 	mov	r7,a
      005D78 90r01r86         [24]16911 	mov	dptr,#_f_write_wbuff_65536_293
      005D7B ED               [12]16912 	mov	a,r5
      005D7C F0               [24]16913 	movx	@dptr,a
      005D7D EE               [12]16914 	mov	a,r6
      005D7E A3               [24]16915 	inc	dptr
      005D7F F0               [24]16916 	movx	@dptr,a
      005D80 EF               [12]16917 	mov	a,r7
      005D81 A3               [24]16918 	inc	dptr
      005D82 F0               [24]16919 	movx	@dptr,a
                                  16920 ;	ff15\source\ff.c:4029: *bw = 0;	/* Clear write byte counter */
      005D83 90r01r72         [24]16921 	mov	dptr,#_f_write_PARM_4
      005D86 E0               [24]16922 	movx	a,@dptr
      005D87 F5*75            [12]16923 	mov	_f_write_sloc17_1_0,a
      005D89 A3               [24]16924 	inc	dptr
      005D8A E0               [24]16925 	movx	a,@dptr
      005D8B F5*76            [12]16926 	mov	(_f_write_sloc17_1_0 + 1),a
      005D8D A3               [24]16927 	inc	dptr
      005D8E E0               [24]16928 	movx	a,@dptr
      005D8F F5*77            [12]16929 	mov	(_f_write_sloc17_1_0 + 2),a
      005D91 85*75 82         [24]16930 	mov	dpl,_f_write_sloc17_1_0
      005D94 85*76 83         [24]16931 	mov	dph,(_f_write_sloc17_1_0 + 1)
      005D97 85*77 F0         [24]16932 	mov	b,(_f_write_sloc17_1_0 + 2)
      005D9A E4               [12]16933 	clr	a
      005D9B 12r00r00         [24]16934 	lcall	__gptrput
      005D9E A3               [24]16935 	inc	dptr
      005D9F 12r00r00         [24]16936 	lcall	__gptrput
                                  16937 ;	ff15\source\ff.c:4030: res = validate(&fp->obj, &fs);			/* Check validity of the file object */
      005DA2 90r01r75         [24]16938 	mov	dptr,#_f_write_fp_65536_292
      005DA5 E0               [24]16939 	movx	a,@dptr
      005DA6 FA               [12]16940 	mov	r2,a
      005DA7 A3               [24]16941 	inc	dptr
      005DA8 E0               [24]16942 	movx	a,@dptr
      005DA9 FB               [12]16943 	mov	r3,a
      005DAA A3               [24]16944 	inc	dptr
      005DAB E0               [24]16945 	movx	a,@dptr
      005DAC FC               [12]16946 	mov	r4,a
      005DAD 90r00rFF         [24]16947 	mov	dptr,#_validate_PARM_2
      005DB0 74r79            [12]16948 	mov	a,#_f_write_fs_65536_293
      005DB2 F0               [24]16949 	movx	@dptr,a
      005DB3 74s01            [12]16950 	mov	a,#(_f_write_fs_65536_293 >> 8)
      005DB5 A3               [24]16951 	inc	dptr
      005DB6 F0               [24]16952 	movx	@dptr,a
      005DB7 E4               [12]16953 	clr	a
      005DB8 A3               [24]16954 	inc	dptr
      005DB9 F0               [24]16955 	movx	@dptr,a
      005DBA 8A 82            [24]16956 	mov	dpl,r2
      005DBC 8B 83            [24]16957 	mov	dph,r3
      005DBE 8C F0            [24]16958 	mov	b,r4
      005DC0 12r49r3E         [24]16959 	lcall	_validate
      005DC3 AC 82            [24]16960 	mov	r4,dpl
      005DC5 90r01r78         [24]16961 	mov	dptr,#_f_write_res_65536_293
      005DC8 EC               [12]16962 	mov	a,r4
      005DC9 F0               [24]16963 	movx	@dptr,a
                                  16964 ;	ff15\source\ff.c:4031: if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
      005DCA EC               [12]16965 	mov	a,r4
      005DCB 70 25            [24]16966 	jnz	00101$
      005DCD 90r01r75         [24]16967 	mov	dptr,#_f_write_fp_65536_292
      005DD0 E0               [24]16968 	movx	a,@dptr
      005DD1 FC               [12]16969 	mov	r4,a
      005DD2 A3               [24]16970 	inc	dptr
      005DD3 E0               [24]16971 	movx	a,@dptr
      005DD4 FA               [12]16972 	mov	r2,a
      005DD5 A3               [24]16973 	inc	dptr
      005DD6 E0               [24]16974 	movx	a,@dptr
      005DD7 FB               [12]16975 	mov	r3,a
      005DD8 74 10            [12]16976 	mov	a,#0x10
      005DDA 2C               [12]16977 	add	a,r4
      005DDB F8               [12]16978 	mov	r0,a
      005DDC E4               [12]16979 	clr	a
      005DDD 3A               [12]16980 	addc	a,r2
      005DDE F9               [12]16981 	mov	r1,a
      005DDF 8B 07            [24]16982 	mov	ar7,r3
      005DE1 88 82            [24]16983 	mov	dpl,r0
      005DE3 89 83            [24]16984 	mov	dph,r1
      005DE5 8F F0            [24]16985 	mov	b,r7
      005DE7 12r00r00         [24]16986 	lcall	__gptrget
      005DEA F8               [12]16987 	mov	r0,a
      005DEB 90r01r78         [24]16988 	mov	dptr,#_f_write_res_65536_293
      005DEE F0               [24]16989 	movx	@dptr,a
      005DEF E8               [12]16990 	mov	a,r0
      005DF0 60 07            [24]16991 	jz	00102$
      005DF2                      16992 00101$:
      005DF2 90r01r78         [24]16993 	mov	dptr,#_f_write_res_65536_293
      005DF5 E0               [24]16994 	movx	a,@dptr
      005DF6 F5 82            [12]16995 	mov	dpl,a
      005DF8 22               [24]16996 	ret
      005DF9                      16997 00102$:
                                  16998 ;	ff15\source\ff.c:4032: if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
      005DF9 74 0F            [12]16999 	mov	a,#0x0f
      005DFB 2C               [12]17000 	add	a,r4
      005DFC F8               [12]17001 	mov	r0,a
      005DFD E4               [12]17002 	clr	a
      005DFE 3A               [12]17003 	addc	a,r2
      005DFF F9               [12]17004 	mov	r1,a
      005E00 8B 07            [24]17005 	mov	ar7,r3
      005E02 88 82            [24]17006 	mov	dpl,r0
      005E04 89 83            [24]17007 	mov	dph,r1
      005E06 8F F0            [24]17008 	mov	b,r7
      005E08 12r00r00         [24]17009 	lcall	__gptrget
      005E0B 20 E1 04         [24]17010 	jb	acc.1,00109$
      005E0E 75 82 07         [24]17011 	mov	dpl,#0x07
      005E11 22               [24]17012 	ret
                                  17013 ;	ff15\source\ff.c:4035: if ((!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
      005E12                      17014 00109$:
      005E12 74 11            [12]17015 	mov	a,#0x11
      005E14 2C               [12]17016 	add	a,r4
      005E15 FC               [12]17017 	mov	r4,a
      005E16 E4               [12]17018 	clr	a
      005E17 3A               [12]17019 	addc	a,r2
      005E18 FA               [12]17020 	mov	r2,a
      005E19 8C 82            [24]17021 	mov	dpl,r4
      005E1B 8A 83            [24]17022 	mov	dph,r2
      005E1D 8B F0            [24]17023 	mov	b,r3
      005E1F 12r00r00         [24]17024 	lcall	__gptrget
      005E22 F9               [12]17025 	mov	r1,a
      005E23 A3               [24]17026 	inc	dptr
      005E24 12r00r00         [24]17027 	lcall	__gptrget
      005E27 FA               [12]17028 	mov	r2,a
      005E28 A3               [24]17029 	inc	dptr
      005E29 12r00r00         [24]17030 	lcall	__gptrget
      005E2C FB               [12]17031 	mov	r3,a
      005E2D A3               [24]17032 	inc	dptr
      005E2E 12r00r00         [24]17033 	lcall	__gptrget
      005E31 FC               [12]17034 	mov	r4,a
      005E32 90r01r70         [24]17035 	mov	dptr,#_f_write_PARM_3
      005E35 E0               [24]17036 	movx	a,@dptr
      005E36 F8               [12]17037 	mov	r0,a
      005E37 A3               [24]17038 	inc	dptr
      005E38 E0               [24]17039 	movx	a,@dptr
      005E39 FF               [12]17040 	mov	r7,a
      005E3A E4               [12]17041 	clr	a
      005E3B FE               [12]17042 	mov	r6,a
      005E3C FD               [12]17043 	mov	r5,a
      005E3D E8               [12]17044 	mov	a,r0
      005E3E 29               [12]17045 	add	a,r1
      005E3F F8               [12]17046 	mov	r0,a
      005E40 EF               [12]17047 	mov	a,r7
      005E41 3A               [12]17048 	addc	a,r2
      005E42 FF               [12]17049 	mov	r7,a
      005E43 EE               [12]17050 	mov	a,r6
      005E44 3B               [12]17051 	addc	a,r3
      005E45 FE               [12]17052 	mov	r6,a
      005E46 ED               [12]17053 	mov	a,r5
      005E47 3C               [12]17054 	addc	a,r4
      005E48 FD               [12]17055 	mov	r5,a
      005E49 C3               [12]17056 	clr	c
      005E4A E8               [12]17057 	mov	a,r0
      005E4B 99               [12]17058 	subb	a,r1
      005E4C EF               [12]17059 	mov	a,r7
      005E4D 9A               [12]17060 	subb	a,r2
      005E4E EE               [12]17061 	mov	a,r6
      005E4F 9B               [12]17062 	subb	a,r3
      005E50 ED               [12]17063 	mov	a,r5
      005E51 9C               [12]17064 	subb	a,r4
      005E52 50 0D            [24]17065 	jnc	00181$
                                  17066 ;	ff15\source\ff.c:4036: btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
      005E54 90r01r70         [24]17067 	mov	dptr,#_f_write_PARM_3
      005E57 74 FF            [12]17068 	mov	a,#0xff
      005E59 C3               [12]17069 	clr	c
      005E5A 99               [12]17070 	subb	a,r1
      005E5B F0               [24]17071 	movx	@dptr,a
      005E5C 74 FF            [12]17072 	mov	a,#0xff
      005E5E 9A               [12]17073 	subb	a,r2
      005E5F A3               [24]17074 	inc	dptr
      005E60 F0               [24]17075 	movx	@dptr,a
      005E61                      17076 00181$:
      005E61 90r01r75         [24]17077 	mov	dptr,#_f_write_fp_65536_292
      005E64 E0               [24]17078 	movx	a,@dptr
      005E65 FA               [12]17079 	mov	r2,a
      005E66 A3               [24]17080 	inc	dptr
      005E67 E0               [24]17081 	movx	a,@dptr
      005E68 FB               [12]17082 	mov	r3,a
      005E69 A3               [24]17083 	inc	dptr
      005E6A E0               [24]17084 	movx	a,@dptr
      005E6B FC               [12]17085 	mov	r4,a
      005E6C 74 19            [12]17086 	mov	a,#0x19
      005E6E 2A               [12]17087 	add	a,r2
      005E6F F5*42            [12]17088 	mov	_f_write_sloc0_1_0,a
      005E71 E4               [12]17089 	clr	a
      005E72 3B               [12]17090 	addc	a,r3
      005E73 F5*43            [12]17091 	mov	(_f_write_sloc0_1_0 + 1),a
      005E75 8C*44            [24]17092 	mov	(_f_write_sloc0_1_0 + 2),r4
      005E77 8A*45            [24]17093 	mov	_f_write_sloc1_1_0,r2
      005E79 8B*46            [24]17094 	mov	(_f_write_sloc1_1_0 + 1),r3
      005E7B 8C*47            [24]17095 	mov	(_f_write_sloc1_1_0 + 2),r4
      005E7D 8A*48            [24]17096 	mov	_f_write_sloc2_1_0,r2
      005E7F 8B*49            [24]17097 	mov	(_f_write_sloc2_1_0 + 1),r3
      005E81 8C*4A            [24]17098 	mov	(_f_write_sloc2_1_0 + 2),r4
      005E83 8A*4B            [24]17099 	mov	_f_write_sloc3_1_0,r2
      005E85 8B*4C            [24]17100 	mov	(_f_write_sloc3_1_0 + 1),r3
      005E87 8C*4D            [24]17101 	mov	(_f_write_sloc3_1_0 + 2),r4
      005E89 74 11            [12]17102 	mov	a,#0x11
      005E8B 2A               [12]17103 	add	a,r2
      005E8C F5*4E            [12]17104 	mov	_f_write_sloc4_1_0,a
      005E8E E4               [12]17105 	clr	a
      005E8F 3B               [12]17106 	addc	a,r3
      005E90 F5*4F            [12]17107 	mov	(_f_write_sloc4_1_0 + 1),a
      005E92 8C*50            [24]17108 	mov	(_f_write_sloc4_1_0 + 2),r4
      005E94 85*4E*51         [24]17109 	mov	_f_write_sloc5_1_0,_f_write_sloc4_1_0
      005E97 85*4F*52         [24]17110 	mov	(_f_write_sloc5_1_0 + 1),(_f_write_sloc4_1_0 + 1)
      005E9A 85*50*53         [24]17111 	mov	(_f_write_sloc5_1_0 + 2),(_f_write_sloc4_1_0 + 2)
      005E9D 8A*54            [24]17112 	mov	_f_write_sloc6_1_0,r2
      005E9F 8B*55            [24]17113 	mov	(_f_write_sloc6_1_0 + 1),r3
      005EA1 8C*56            [24]17114 	mov	(_f_write_sloc6_1_0 + 2),r4
      005EA3 74 24            [12]17115 	mov	a,#0x24
      005EA5 2A               [12]17116 	add	a,r2
      005EA6 F5*57            [12]17117 	mov	_f_write_sloc7_1_0,a
      005EA8 E4               [12]17118 	clr	a
      005EA9 3B               [12]17119 	addc	a,r3
      005EAA F5*58            [12]17120 	mov	(_f_write_sloc7_1_0 + 1),a
      005EAC 8C*59            [24]17121 	mov	(_f_write_sloc7_1_0 + 2),r4
      005EAE 85*4E*5A         [24]17122 	mov	_f_write_sloc8_1_0,_f_write_sloc4_1_0
      005EB1 85*4F*5B         [24]17123 	mov	(_f_write_sloc8_1_0 + 1),(_f_write_sloc4_1_0 + 1)
      005EB4 85*50*5C         [24]17124 	mov	(_f_write_sloc8_1_0 + 2),(_f_write_sloc4_1_0 + 2)
      005EB7 8A*5D            [24]17125 	mov	_f_write_sloc9_1_0,r2
      005EB9 8B*5E            [24]17126 	mov	(_f_write_sloc9_1_0 + 1),r3
      005EBB 8C*5F            [24]17127 	mov	(_f_write_sloc9_1_0 + 2),r4
      005EBD                      17128 00150$:
                                  17129 ;	ff15\source\ff.c:4039: for ( ; btw > 0; btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) {	/* Repeat until all data written */
      005EBD 90r01r70         [24]17130 	mov	dptr,#_f_write_PARM_3
      005EC0 E0               [24]17131 	movx	a,@dptr
      005EC1 F5 F0            [12]17132 	mov	b,a
      005EC3 A3               [24]17133 	inc	dptr
      005EC4 E0               [24]17134 	movx	a,@dptr
      005EC5 45 F0            [12]17135 	orl	a,b
      005EC7 70 03            [24]17136 	jnz	00261$
      005EC9 02r68r29         [24]17137 	ljmp	00148$
      005ECC                      17138 00261$:
                                  17139 ;	ff15\source\ff.c:4040: if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
      005ECC 85*4E 82         [24]17140 	mov	dpl,_f_write_sloc4_1_0
      005ECF 85*4F 83         [24]17141 	mov	dph,(_f_write_sloc4_1_0 + 1)
      005ED2 85*50 F0         [24]17142 	mov	b,(_f_write_sloc4_1_0 + 2)
      005ED5 12r00r00         [24]17143 	lcall	__gptrget
      005ED8 F5*60            [12]17144 	mov	_f_write_sloc10_1_0,a
      005EDA A3               [24]17145 	inc	dptr
      005EDB 12r00r00         [24]17146 	lcall	__gptrget
      005EDE F5*61            [12]17147 	mov	(_f_write_sloc10_1_0 + 1),a
      005EE0 A3               [24]17148 	inc	dptr
      005EE1 12r00r00         [24]17149 	lcall	__gptrget
      005EE4 F5*62            [12]17150 	mov	(_f_write_sloc10_1_0 + 2),a
      005EE6 A3               [24]17151 	inc	dptr
      005EE7 12r00r00         [24]17152 	lcall	__gptrget
      005EEA F5*63            [12]17153 	mov	(_f_write_sloc10_1_0 + 3),a
      005EEC E5*60            [12]17154 	mov	a,_f_write_sloc10_1_0
      005EEE 70 05            [24]17155 	jnz	00262$
      005EF0 E5*61            [12]17156 	mov	a,(_f_write_sloc10_1_0 + 1)
      005EF2 30 E0 03         [24]17157 	jnb	acc.0,00263$
      005EF5                      17158 00262$:
      005EF5 02r66r0C         [24]17159 	ljmp	00144$
      005EF8                      17160 00263$:
                                  17161 ;	ff15\source\ff.c:4041: csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
      005EF8 E5*63            [12]17162 	mov	a,(_f_write_sloc10_1_0 + 3)
      005EFA C3               [12]17163 	clr	c
      005EFB 13               [12]17164 	rrc	a
      005EFC E5*62            [12]17165 	mov	a,(_f_write_sloc10_1_0 + 2)
      005EFE 13               [12]17166 	rrc	a
      005EFF F9               [12]17167 	mov	r1,a
      005F00 E5*61            [12]17168 	mov	a,(_f_write_sloc10_1_0 + 1)
      005F02 13               [12]17169 	rrc	a
      005F03 F8               [12]17170 	mov	r0,a
      005F04 90r01r79         [24]17171 	mov	dptr,#_f_write_fs_65536_293
      005F07 E0               [24]17172 	movx	a,@dptr
      005F08 FD               [12]17173 	mov	r5,a
      005F09 A3               [24]17174 	inc	dptr
      005F0A E0               [24]17175 	movx	a,@dptr
      005F0B FE               [12]17176 	mov	r6,a
      005F0C A3               [24]17177 	inc	dptr
      005F0D E0               [24]17178 	movx	a,@dptr
      005F0E FF               [12]17179 	mov	r7,a
      005F0F 74 0A            [12]17180 	mov	a,#0x0a
      005F11 2D               [12]17181 	add	a,r5
      005F12 FD               [12]17182 	mov	r5,a
      005F13 E4               [12]17183 	clr	a
      005F14 3E               [12]17184 	addc	a,r6
      005F15 FE               [12]17185 	mov	r6,a
      005F16 8D 82            [24]17186 	mov	dpl,r5
      005F18 8E 83            [24]17187 	mov	dph,r6
      005F1A 8F F0            [24]17188 	mov	b,r7
      005F1C 12r00r00         [24]17189 	lcall	__gptrget
      005F1F FD               [12]17190 	mov	r5,a
      005F20 A3               [24]17191 	inc	dptr
      005F21 12r00r00         [24]17192 	lcall	__gptrget
      005F24 FE               [12]17193 	mov	r6,a
      005F25 1D               [12]17194 	dec	r5
      005F26 BD FF 01         [24]17195 	cjne	r5,#0xff,00264$
      005F29 1E               [12]17196 	dec	r6
      005F2A                      17197 00264$:
      005F2A ED               [12]17198 	mov	a,r5
      005F2B 52 00            [12]17199 	anl	ar0,a
      005F2D EE               [12]17200 	mov	a,r6
      005F2E 52 01            [12]17201 	anl	ar1,a
      005F30 90r01r84         [24]17202 	mov	dptr,#_f_write_csect_65536_293
      005F33 E8               [12]17203 	mov	a,r0
      005F34 F0               [24]17204 	movx	@dptr,a
      005F35 E9               [12]17205 	mov	a,r1
      005F36 A3               [24]17206 	inc	dptr
      005F37 F0               [24]17207 	movx	@dptr,a
                                  17208 ;	ff15\source\ff.c:4042: if (csect == 0) {				/* On the cluster boundary? */
      005F38 E8               [12]17209 	mov	a,r0
      005F39 49               [12]17210 	orl	a,r1
      005F3A 60 03            [24]17211 	jz	00265$
      005F3C 02r61r28         [24]17212 	ljmp	00124$
      005F3F                      17213 00265$:
                                  17214 ;	ff15\source\ff.c:4043: if (fp->fptr == 0) {		/* On the top of the file? */
      005F3F E5*60            [12]17215 	mov	a,_f_write_sloc10_1_0
      005F41 45*61            [12]17216 	orl	a,(_f_write_sloc10_1_0 + 1)
      005F43 45*62            [12]17217 	orl	a,(_f_write_sloc10_1_0 + 2)
      005F45 45*63            [12]17218 	orl	a,(_f_write_sloc10_1_0 + 3)
      005F47 70 75            [24]17219 	jnz	00113$
                                  17220 ;	ff15\source\ff.c:4044: clst = fp->obj.sclust;	/* Follow from the origin */
      005F49 74 07            [12]17221 	mov	a,#0x07
      005F4B 25*4B            [12]17222 	add	a,_f_write_sloc3_1_0
      005F4D F8               [12]17223 	mov	r0,a
      005F4E E4               [12]17224 	clr	a
      005F4F 35*4C            [12]17225 	addc	a,(_f_write_sloc3_1_0 + 1)
      005F51 F9               [12]17226 	mov	r1,a
      005F52 AF*4D            [24]17227 	mov	r7,(_f_write_sloc3_1_0 + 2)
      005F54 88 82            [24]17228 	mov	dpl,r0
      005F56 89 83            [24]17229 	mov	dph,r1
      005F58 8F F0            [24]17230 	mov	b,r7
      005F5A 12r00r00         [24]17231 	lcall	__gptrget
      005F5D F8               [12]17232 	mov	r0,a
      005F5E A3               [24]17233 	inc	dptr
      005F5F 12r00r00         [24]17234 	lcall	__gptrget
      005F62 F9               [12]17235 	mov	r1,a
      005F63 A3               [24]17236 	inc	dptr
      005F64 12r00r00         [24]17237 	lcall	__gptrget
      005F67 FF               [12]17238 	mov	r7,a
      005F68 A3               [24]17239 	inc	dptr
      005F69 12r00r00         [24]17240 	lcall	__gptrget
      005F6C FE               [12]17241 	mov	r6,a
      005F6D 90r01r7C         [24]17242 	mov	dptr,#_f_write_clst_65536_293
      005F70 E8               [12]17243 	mov	a,r0
      005F71 F0               [24]17244 	movx	@dptr,a
      005F72 E9               [12]17245 	mov	a,r1
      005F73 A3               [24]17246 	inc	dptr
      005F74 F0               [24]17247 	movx	@dptr,a
      005F75 EF               [12]17248 	mov	a,r7
      005F76 A3               [24]17249 	inc	dptr
      005F77 F0               [24]17250 	movx	@dptr,a
      005F78 EE               [12]17251 	mov	a,r6
      005F79 A3               [24]17252 	inc	dptr
      005F7A F0               [24]17253 	movx	@dptr,a
                                  17254 ;	ff15\source\ff.c:4045: if (clst == 0) {		/* If no cluster is allocated, */
      005F7B E8               [12]17255 	mov	a,r0
      005F7C 49               [12]17256 	orl	a,r1
      005F7D 4F               [12]17257 	orl	a,r7
      005F7E 4E               [12]17258 	orl	a,r6
      005F7F 60 03            [24]17259 	jz	00267$
      005F81 02r60r1D         [24]17260 	ljmp	00114$
      005F84                      17261 00267$:
                                  17262 ;	ff15\source\ff.c:4046: clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
      005F84 90r00r52         [24]17263 	mov	dptr,#_create_chain_PARM_2
      005F87 E4               [12]17264 	clr	a
      005F88 F0               [24]17265 	movx	@dptr,a
      005F89 A3               [24]17266 	inc	dptr
      005F8A F0               [24]17267 	movx	@dptr,a
      005F8B A3               [24]17268 	inc	dptr
      005F8C F0               [24]17269 	movx	@dptr,a
      005F8D A3               [24]17270 	inc	dptr
      005F8E F0               [24]17271 	movx	@dptr,a
      005F8F 85*4B 82         [24]17272 	mov	dpl,_f_write_sloc3_1_0
      005F92 85*4C 83         [24]17273 	mov	dph,(_f_write_sloc3_1_0 + 1)
      005F95 85*4D F0         [24]17274 	mov	b,(_f_write_sloc3_1_0 + 2)
      005F98 C0 04            [24]17275 	push	ar4
      005F9A C0 03            [24]17276 	push	ar3
      005F9C C0 02            [24]17277 	push	ar2
      005F9E 12r15rF5         [24]17278 	lcall	_create_chain
      005FA1 A8 82            [24]17279 	mov	r0,dpl
      005FA3 A9 83            [24]17280 	mov	r1,dph
      005FA5 AE F0            [24]17281 	mov	r6,b
      005FA7 FF               [12]17282 	mov	r7,a
      005FA8 D0 02            [24]17283 	pop	ar2
      005FAA D0 03            [24]17284 	pop	ar3
      005FAC D0 04            [24]17285 	pop	ar4
      005FAE 90r01r7C         [24]17286 	mov	dptr,#_f_write_clst_65536_293
      005FB1 E8               [12]17287 	mov	a,r0
      005FB2 F0               [24]17288 	movx	@dptr,a
      005FB3 E9               [12]17289 	mov	a,r1
      005FB4 A3               [24]17290 	inc	dptr
      005FB5 F0               [24]17291 	movx	@dptr,a
      005FB6 EE               [12]17292 	mov	a,r6
      005FB7 A3               [24]17293 	inc	dptr
      005FB8 F0               [24]17294 	movx	@dptr,a
      005FB9 EF               [12]17295 	mov	a,r7
      005FBA A3               [24]17296 	inc	dptr
      005FBB F0               [24]17297 	movx	@dptr,a
      005FBC 80 5F            [24]17298 	sjmp	00114$
      005FBE                      17299 00113$:
                                  17300 ;	ff15\source\ff.c:4055: clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
      005FBE 74 15            [12]17301 	mov	a,#0x15
      005FC0 25*4B            [12]17302 	add	a,_f_write_sloc3_1_0
      005FC2 F8               [12]17303 	mov	r0,a
      005FC3 E4               [12]17304 	clr	a
      005FC4 35*4C            [12]17305 	addc	a,(_f_write_sloc3_1_0 + 1)
      005FC6 F9               [12]17306 	mov	r1,a
      005FC7 AF*4D            [24]17307 	mov	r7,(_f_write_sloc3_1_0 + 2)
      005FC9 88 82            [24]17308 	mov	dpl,r0
      005FCB 89 83            [24]17309 	mov	dph,r1
      005FCD 8F F0            [24]17310 	mov	b,r7
      005FCF 12r00r00         [24]17311 	lcall	__gptrget
      005FD2 F8               [12]17312 	mov	r0,a
      005FD3 A3               [24]17313 	inc	dptr
      005FD4 12r00r00         [24]17314 	lcall	__gptrget
      005FD7 F9               [12]17315 	mov	r1,a
      005FD8 A3               [24]17316 	inc	dptr
      005FD9 12r00r00         [24]17317 	lcall	__gptrget
      005FDC FF               [12]17318 	mov	r7,a
      005FDD A3               [24]17319 	inc	dptr
      005FDE 12r00r00         [24]17320 	lcall	__gptrget
      005FE1 FE               [12]17321 	mov	r6,a
      005FE2 90r00r52         [24]17322 	mov	dptr,#_create_chain_PARM_2
      005FE5 E8               [12]17323 	mov	a,r0
      005FE6 F0               [24]17324 	movx	@dptr,a
      005FE7 E9               [12]17325 	mov	a,r1
      005FE8 A3               [24]17326 	inc	dptr
      005FE9 F0               [24]17327 	movx	@dptr,a
      005FEA EF               [12]17328 	mov	a,r7
      005FEB A3               [24]17329 	inc	dptr
      005FEC F0               [24]17330 	movx	@dptr,a
      005FED EE               [12]17331 	mov	a,r6
      005FEE A3               [24]17332 	inc	dptr
      005FEF F0               [24]17333 	movx	@dptr,a
      005FF0 85*4B 82         [24]17334 	mov	dpl,_f_write_sloc3_1_0
      005FF3 85*4C 83         [24]17335 	mov	dph,(_f_write_sloc3_1_0 + 1)
      005FF6 85*4D F0         [24]17336 	mov	b,(_f_write_sloc3_1_0 + 2)
      005FF9 C0 04            [24]17337 	push	ar4
      005FFB C0 03            [24]17338 	push	ar3
      005FFD C0 02            [24]17339 	push	ar2
      005FFF 12r15rF5         [24]17340 	lcall	_create_chain
      006002 A9 82            [24]17341 	mov	r1,dpl
      006004 AD 83            [24]17342 	mov	r5,dph
      006006 AE F0            [24]17343 	mov	r6,b
      006008 FF               [12]17344 	mov	r7,a
      006009 D0 02            [24]17345 	pop	ar2
      00600B D0 03            [24]17346 	pop	ar3
      00600D D0 04            [24]17347 	pop	ar4
      00600F 90r01r7C         [24]17348 	mov	dptr,#_f_write_clst_65536_293
      006012 E9               [12]17349 	mov	a,r1
      006013 F0               [24]17350 	movx	@dptr,a
      006014 ED               [12]17351 	mov	a,r5
      006015 A3               [24]17352 	inc	dptr
      006016 F0               [24]17353 	movx	@dptr,a
      006017 EE               [12]17354 	mov	a,r6
      006018 A3               [24]17355 	inc	dptr
      006019 F0               [24]17356 	movx	@dptr,a
      00601A EF               [12]17357 	mov	a,r7
      00601B A3               [24]17358 	inc	dptr
      00601C F0               [24]17359 	movx	@dptr,a
                                  17360 ;	ff15\source\ff.c:4125: LEAVE_FF(fs, FR_OK);
                                  17361 ;	ff15\source\ff.c:4055: clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
      00601D                      17362 00114$:
                                  17363 ;	ff15\source\ff.c:4058: if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
      00601D 90r01r7C         [24]17364 	mov	dptr,#_f_write_clst_65536_293
      006020 E0               [24]17365 	movx	a,@dptr
      006021 F5*60            [12]17366 	mov	_f_write_sloc10_1_0,a
      006023 A3               [24]17367 	inc	dptr
      006024 E0               [24]17368 	movx	a,@dptr
      006025 F5*61            [12]17369 	mov	(_f_write_sloc10_1_0 + 1),a
      006027 A3               [24]17370 	inc	dptr
      006028 E0               [24]17371 	movx	a,@dptr
      006029 F5*62            [12]17372 	mov	(_f_write_sloc10_1_0 + 2),a
      00602B A3               [24]17373 	inc	dptr
      00602C E0               [24]17374 	movx	a,@dptr
      00602D F5*63            [12]17375 	mov	(_f_write_sloc10_1_0 + 3),a
      00602F E5*60            [12]17376 	mov	a,_f_write_sloc10_1_0
      006031 45*61            [12]17377 	orl	a,(_f_write_sloc10_1_0 + 1)
      006033 45*62            [12]17378 	orl	a,(_f_write_sloc10_1_0 + 2)
      006035 45*63            [12]17379 	orl	a,(_f_write_sloc10_1_0 + 3)
      006037 70 03            [24]17380 	jnz	00268$
      006039 02r68r29         [24]17381 	ljmp	00148$
      00603C                      17382 00268$:
                                  17383 ;	ff15\source\ff.c:4059: if (clst == 1) ABORT(fs, FR_INT_ERR);
      00603C 74 01            [12]17384 	mov	a,#0x01
      00603E B5*60 0C         [24]17385 	cjne	a,_f_write_sloc10_1_0,00269$
      006041 14               [12]17386 	dec	a
      006042 B5*61 08         [24]17387 	cjne	a,(_f_write_sloc10_1_0 + 1),00269$
      006045 B5*62 05         [24]17388 	cjne	a,(_f_write_sloc10_1_0 + 2),00269$
      006048 B5*63 02         [24]17389 	cjne	a,(_f_write_sloc10_1_0 + 3),00269$
      00604B 80 02            [24]17390 	sjmp	00270$
      00604D                      17391 00269$:
      00604D 80 2B            [24]17392 	sjmp	00118$
      00604F                      17393 00270$:
      00604F 90r01r75         [24]17394 	mov	dptr,#_f_write_fp_65536_292
      006052 E0               [24]17395 	movx	a,@dptr
      006053 F5*64            [12]17396 	mov	_f_write_sloc11_1_0,a
      006055 A3               [24]17397 	inc	dptr
      006056 E0               [24]17398 	movx	a,@dptr
      006057 F5*65            [12]17399 	mov	(_f_write_sloc11_1_0 + 1),a
      006059 A3               [24]17400 	inc	dptr
      00605A E0               [24]17401 	movx	a,@dptr
      00605B F5*66            [12]17402 	mov	(_f_write_sloc11_1_0 + 2),a
      00605D 74 10            [12]17403 	mov	a,#0x10
      00605F 25*64            [12]17404 	add	a,_f_write_sloc11_1_0
      006061 F5*64            [12]17405 	mov	_f_write_sloc11_1_0,a
      006063 E4               [12]17406 	clr	a
      006064 35*65            [12]17407 	addc	a,(_f_write_sloc11_1_0 + 1)
      006066 F5*65            [12]17408 	mov	(_f_write_sloc11_1_0 + 1),a
      006068 85*64 82         [24]17409 	mov	dpl,_f_write_sloc11_1_0
      00606B 85*65 83         [24]17410 	mov	dph,(_f_write_sloc11_1_0 + 1)
      00606E 85*66 F0         [24]17411 	mov	b,(_f_write_sloc11_1_0 + 2)
      006071 74 02            [12]17412 	mov	a,#0x02
      006073 12r00r00         [24]17413 	lcall	__gptrput
      006076 75 82 02         [24]17414 	mov	dpl,#0x02
      006079 22               [24]17415 	ret
      00607A                      17416 00118$:
                                  17417 ;	ff15\source\ff.c:4060: if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
      00607A E5*60            [12]17418 	mov	a,_f_write_sloc10_1_0
      00607C 55*61            [12]17419 	anl	a,(_f_write_sloc10_1_0 + 1)
      00607E 55*62            [12]17420 	anl	a,(_f_write_sloc10_1_0 + 2)
      006080 55*63            [12]17421 	anl	a,(_f_write_sloc10_1_0 + 3)
      006082 B4 FF 2B         [24]17422 	cjne	a,#0xFF,00120$
      006085 90r01r75         [24]17423 	mov	dptr,#_f_write_fp_65536_292
      006088 E0               [24]17424 	movx	a,@dptr
      006089 F5*64            [12]17425 	mov	_f_write_sloc11_1_0,a
      00608B A3               [24]17426 	inc	dptr
      00608C E0               [24]17427 	movx	a,@dptr
      00608D F5*65            [12]17428 	mov	(_f_write_sloc11_1_0 + 1),a
      00608F A3               [24]17429 	inc	dptr
      006090 E0               [24]17430 	movx	a,@dptr
      006091 F5*66            [12]17431 	mov	(_f_write_sloc11_1_0 + 2),a
      006093 74 10            [12]17432 	mov	a,#0x10
      006095 25*64            [12]17433 	add	a,_f_write_sloc11_1_0
      006097 F5*64            [12]17434 	mov	_f_write_sloc11_1_0,a
      006099 E4               [12]17435 	clr	a
      00609A 35*65            [12]17436 	addc	a,(_f_write_sloc11_1_0 + 1)
      00609C F5*65            [12]17437 	mov	(_f_write_sloc11_1_0 + 1),a
      00609E 85*64 82         [24]17438 	mov	dpl,_f_write_sloc11_1_0
      0060A1 85*65 83         [24]17439 	mov	dph,(_f_write_sloc11_1_0 + 1)
      0060A4 85*66 F0         [24]17440 	mov	b,(_f_write_sloc11_1_0 + 2)
      0060A7 74 01            [12]17441 	mov	a,#0x01
      0060A9 12r00r00         [24]17442 	lcall	__gptrput
      0060AC 75 82 01         [24]17443 	mov	dpl,#0x01
      0060AF 22               [24]17444 	ret
      0060B0                      17445 00120$:
                                  17446 ;	ff15\source\ff.c:4061: fp->clust = clst;			/* Update current cluster */
      0060B0 74 15            [12]17447 	mov	a,#0x15
      0060B2 25*45            [12]17448 	add	a,_f_write_sloc1_1_0
      0060B4 F8               [12]17449 	mov	r0,a
      0060B5 E4               [12]17450 	clr	a
      0060B6 35*46            [12]17451 	addc	a,(_f_write_sloc1_1_0 + 1)
      0060B8 F9               [12]17452 	mov	r1,a
      0060B9 AF*47            [24]17453 	mov	r7,(_f_write_sloc1_1_0 + 2)
      0060BB 88 82            [24]17454 	mov	dpl,r0
      0060BD 89 83            [24]17455 	mov	dph,r1
      0060BF 8F F0            [24]17456 	mov	b,r7
      0060C1 E5*60            [12]17457 	mov	a,_f_write_sloc10_1_0
      0060C3 12r00r00         [24]17458 	lcall	__gptrput
      0060C6 A3               [24]17459 	inc	dptr
      0060C7 E5*61            [12]17460 	mov	a,(_f_write_sloc10_1_0 + 1)
      0060C9 12r00r00         [24]17461 	lcall	__gptrput
      0060CC A3               [24]17462 	inc	dptr
      0060CD E5*62            [12]17463 	mov	a,(_f_write_sloc10_1_0 + 2)
      0060CF 12r00r00         [24]17464 	lcall	__gptrput
      0060D2 A3               [24]17465 	inc	dptr
      0060D3 E5*63            [12]17466 	mov	a,(_f_write_sloc10_1_0 + 3)
      0060D5 12r00r00         [24]17467 	lcall	__gptrput
                                  17468 ;	ff15\source\ff.c:4062: if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
      0060D8 74 07            [12]17469 	mov	a,#0x07
      0060DA 25*45            [12]17470 	add	a,_f_write_sloc1_1_0
      0060DC F5*64            [12]17471 	mov	_f_write_sloc11_1_0,a
      0060DE E4               [12]17472 	clr	a
      0060DF 35*46            [12]17473 	addc	a,(_f_write_sloc1_1_0 + 1)
      0060E1 F5*65            [12]17474 	mov	(_f_write_sloc11_1_0 + 1),a
      0060E3 85*47*66         [24]17475 	mov	(_f_write_sloc11_1_0 + 2),(_f_write_sloc1_1_0 + 2)
      0060E6 85*64 82         [24]17476 	mov	dpl,_f_write_sloc11_1_0
      0060E9 85*65 83         [24]17477 	mov	dph,(_f_write_sloc11_1_0 + 1)
      0060EC 85*66 F0         [24]17478 	mov	b,(_f_write_sloc11_1_0 + 2)
      0060EF 12r00r00         [24]17479 	lcall	__gptrget
      0060F2 F9               [12]17480 	mov	r1,a
      0060F3 A3               [24]17481 	inc	dptr
      0060F4 12r00r00         [24]17482 	lcall	__gptrget
      0060F7 FD               [12]17483 	mov	r5,a
      0060F8 A3               [24]17484 	inc	dptr
      0060F9 12r00r00         [24]17485 	lcall	__gptrget
      0060FC FE               [12]17486 	mov	r6,a
      0060FD A3               [24]17487 	inc	dptr
      0060FE 12r00r00         [24]17488 	lcall	__gptrget
      006101 FF               [12]17489 	mov	r7,a
      006102 E9               [12]17490 	mov	a,r1
      006103 4D               [12]17491 	orl	a,r5
      006104 4E               [12]17492 	orl	a,r6
      006105 4F               [12]17493 	orl	a,r7
      006106 70 20            [24]17494 	jnz	00124$
      006108 85*64 82         [24]17495 	mov	dpl,_f_write_sloc11_1_0
      00610B 85*65 83         [24]17496 	mov	dph,(_f_write_sloc11_1_0 + 1)
      00610E 85*66 F0         [24]17497 	mov	b,(_f_write_sloc11_1_0 + 2)
      006111 E5*60            [12]17498 	mov	a,_f_write_sloc10_1_0
      006113 12r00r00         [24]17499 	lcall	__gptrput
      006116 A3               [24]17500 	inc	dptr
      006117 E5*61            [12]17501 	mov	a,(_f_write_sloc10_1_0 + 1)
      006119 12r00r00         [24]17502 	lcall	__gptrput
      00611C A3               [24]17503 	inc	dptr
      00611D E5*62            [12]17504 	mov	a,(_f_write_sloc10_1_0 + 2)
      00611F 12r00r00         [24]17505 	lcall	__gptrput
      006122 A3               [24]17506 	inc	dptr
      006123 E5*63            [12]17507 	mov	a,(_f_write_sloc10_1_0 + 3)
      006125 12r00r00         [24]17508 	lcall	__gptrput
      006128                      17509 00124$:
                                  17510 ;	ff15\source\ff.c:4067: if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
      006128 90r01r75         [24]17511 	mov	dptr,#_f_write_fp_65536_292
      00612B E0               [24]17512 	movx	a,@dptr
      00612C F5*64            [12]17513 	mov	_f_write_sloc11_1_0,a
      00612E A3               [24]17514 	inc	dptr
      00612F E0               [24]17515 	movx	a,@dptr
      006130 F5*65            [12]17516 	mov	(_f_write_sloc11_1_0 + 1),a
      006132 A3               [24]17517 	inc	dptr
      006133 E0               [24]17518 	movx	a,@dptr
      006134 F5*66            [12]17519 	mov	(_f_write_sloc11_1_0 + 2),a
      006136 74 0F            [12]17520 	mov	a,#0x0f
      006138 25*64            [12]17521 	add	a,_f_write_sloc11_1_0
      00613A F5*60            [12]17522 	mov	_f_write_sloc10_1_0,a
      00613C E4               [12]17523 	clr	a
      00613D 35*65            [12]17524 	addc	a,(_f_write_sloc11_1_0 + 1)
      00613F F5*61            [12]17525 	mov	(_f_write_sloc10_1_0 + 1),a
      006141 85*66*62         [24]17526 	mov	(_f_write_sloc10_1_0 + 2),(_f_write_sloc11_1_0 + 2)
      006144 85*60 82         [24]17527 	mov	dpl,_f_write_sloc10_1_0
      006147 85*61 83         [24]17528 	mov	dph,(_f_write_sloc10_1_0 + 1)
      00614A 85*62 F0         [24]17529 	mov	b,(_f_write_sloc10_1_0 + 2)
      00614D 12r00r00         [24]17530 	lcall	__gptrget
      006150 F9               [12]17531 	mov	r1,a
      006151 20 E7 03         [24]17532 	jb	acc.7,00274$
      006154 02r62r1C         [24]17533 	ljmp	00128$
      006157                      17534 00274$:
                                  17535 ;	ff15\source\ff.c:4068: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
      006157 90r01r79         [24]17536 	mov	dptr,#_f_write_fs_65536_293
      00615A E0               [24]17537 	movx	a,@dptr
      00615B F8               [12]17538 	mov	r0,a
      00615C A3               [24]17539 	inc	dptr
      00615D E0               [24]17540 	movx	a,@dptr
      00615E F9               [12]17541 	mov	r1,a
      00615F A3               [24]17542 	inc	dptr
      006160 E0               [24]17543 	movx	a,@dptr
      006161 FF               [12]17544 	mov	r7,a
      006162 08               [12]17545 	inc	r0
      006163 B8 00 01         [24]17546 	cjne	r0,#0x00,00275$
      006166 09               [12]17547 	inc	r1
      006167                      17548 00275$:
      006167 88 82            [24]17549 	mov	dpl,r0
      006169 89 83            [24]17550 	mov	dph,r1
      00616B 8F F0            [24]17551 	mov	b,r7
      00616D 12r00r00         [24]17552 	lcall	__gptrget
      006170 F5*67            [12]17553 	mov	_f_write_sloc12_1_0,a
      006172 74 24            [12]17554 	mov	a,#0x24
      006174 25*64            [12]17555 	add	a,_f_write_sloc11_1_0
      006176 F5*68            [12]17556 	mov	_f_write_sloc13_1_0,a
      006178 E4               [12]17557 	clr	a
      006179 35*65            [12]17558 	addc	a,(_f_write_sloc11_1_0 + 1)
      00617B F5*69            [12]17559 	mov	(_f_write_sloc13_1_0 + 1),a
      00617D 85*66*6A         [24]17560 	mov	(_f_write_sloc13_1_0 + 2),(_f_write_sloc11_1_0 + 2)
      006180 74 19            [12]17561 	mov	a,#0x19
      006182 25*64            [12]17562 	add	a,_f_write_sloc11_1_0
      006184 F8               [12]17563 	mov	r0,a
      006185 E4               [12]17564 	clr	a
      006186 35*65            [12]17565 	addc	a,(_f_write_sloc11_1_0 + 1)
      006188 F9               [12]17566 	mov	r1,a
      006189 AF*66            [24]17567 	mov	r7,(_f_write_sloc11_1_0 + 2)
      00618B 88 82            [24]17568 	mov	dpl,r0
      00618D 89 83            [24]17569 	mov	dph,r1
      00618F 8F F0            [24]17570 	mov	b,r7
      006191 12r00r00         [24]17571 	lcall	__gptrget
      006194 F8               [12]17572 	mov	r0,a
      006195 A3               [24]17573 	inc	dptr
      006196 12r00r00         [24]17574 	lcall	__gptrget
      006199 F9               [12]17575 	mov	r1,a
      00619A A3               [24]17576 	inc	dptr
      00619B 12r00r00         [24]17577 	lcall	__gptrget
      00619E FF               [12]17578 	mov	r7,a
      00619F A3               [24]17579 	inc	dptr
      0061A0 12r00r00         [24]17580 	lcall	__gptrget
      0061A3 FE               [12]17581 	mov	r6,a
      0061A4 90r00r00         [24]17582 	mov	dptr,#_disk_write_PARM_2
      0061A7 E5*68            [12]17583 	mov	a,_f_write_sloc13_1_0
      0061A9 F0               [24]17584 	movx	@dptr,a
      0061AA E5*69            [12]17585 	mov	a,(_f_write_sloc13_1_0 + 1)
      0061AC A3               [24]17586 	inc	dptr
      0061AD F0               [24]17587 	movx	@dptr,a
      0061AE E5*6A            [12]17588 	mov	a,(_f_write_sloc13_1_0 + 2)
      0061B0 A3               [24]17589 	inc	dptr
      0061B1 F0               [24]17590 	movx	@dptr,a
      0061B2 90r00r00         [24]17591 	mov	dptr,#_disk_write_PARM_3
      0061B5 E8               [12]17592 	mov	a,r0
      0061B6 F0               [24]17593 	movx	@dptr,a
      0061B7 E9               [12]17594 	mov	a,r1
      0061B8 A3               [24]17595 	inc	dptr
      0061B9 F0               [24]17596 	movx	@dptr,a
      0061BA EF               [12]17597 	mov	a,r7
      0061BB A3               [24]17598 	inc	dptr
      0061BC F0               [24]17599 	movx	@dptr,a
      0061BD EE               [12]17600 	mov	a,r6
      0061BE A3               [24]17601 	inc	dptr
      0061BF F0               [24]17602 	movx	@dptr,a
      0061C0 90r00r00         [24]17603 	mov	dptr,#_disk_write_PARM_4
      0061C3 74 01            [12]17604 	mov	a,#0x01
      0061C5 F0               [24]17605 	movx	@dptr,a
      0061C6 E4               [12]17606 	clr	a
      0061C7 A3               [24]17607 	inc	dptr
      0061C8 F0               [24]17608 	movx	@dptr,a
      0061C9 85*67 82         [24]17609 	mov	dpl,_f_write_sloc12_1_0
      0061CC C0 04            [24]17610 	push	ar4
      0061CE C0 03            [24]17611 	push	ar3
      0061D0 C0 02            [24]17612 	push	ar2
      0061D2 12r00r00         [24]17613 	lcall	_disk_write
      0061D5 E5 82            [12]17614 	mov	a,dpl
      0061D7 D0 02            [24]17615 	pop	ar2
      0061D9 D0 03            [24]17616 	pop	ar3
      0061DB D0 04            [24]17617 	pop	ar4
      0061DD 60 20            [24]17618 	jz	00126$
      0061DF 74 10            [12]17619 	mov	a,#0x10
      0061E1 25*64            [12]17620 	add	a,_f_write_sloc11_1_0
      0061E3 F5*68            [12]17621 	mov	_f_write_sloc13_1_0,a
      0061E5 E4               [12]17622 	clr	a
      0061E6 35*65            [12]17623 	addc	a,(_f_write_sloc11_1_0 + 1)
      0061E8 F5*69            [12]17624 	mov	(_f_write_sloc13_1_0 + 1),a
      0061EA 85*66*6A         [24]17625 	mov	(_f_write_sloc13_1_0 + 2),(_f_write_sloc11_1_0 + 2)
      0061ED 85*68 82         [24]17626 	mov	dpl,_f_write_sloc13_1_0
      0061F0 85*69 83         [24]17627 	mov	dph,(_f_write_sloc13_1_0 + 1)
      0061F3 85*6A F0         [24]17628 	mov	b,(_f_write_sloc13_1_0 + 2)
      0061F6 74 01            [12]17629 	mov	a,#0x01
      0061F8 12r00r00         [24]17630 	lcall	__gptrput
      0061FB 75 82 01         [24]17631 	mov	dpl,#0x01
      0061FE 22               [24]17632 	ret
      0061FF                      17633 00126$:
                                  17634 ;	ff15\source\ff.c:4069: fp->flag &= (BYTE)~FA_DIRTY;
      0061FF 85*60 82         [24]17635 	mov	dpl,_f_write_sloc10_1_0
      006202 85*61 83         [24]17636 	mov	dph,(_f_write_sloc10_1_0 + 1)
      006205 85*62 F0         [24]17637 	mov	b,(_f_write_sloc10_1_0 + 2)
      006208 12r00r00         [24]17638 	lcall	__gptrget
      00620B F9               [12]17639 	mov	r1,a
      00620C 53 01 7F         [24]17640 	anl	ar1,#0x7f
      00620F 85*60 82         [24]17641 	mov	dpl,_f_write_sloc10_1_0
      006212 85*61 83         [24]17642 	mov	dph,(_f_write_sloc10_1_0 + 1)
      006215 85*62 F0         [24]17643 	mov	b,(_f_write_sloc10_1_0 + 2)
      006218 E9               [12]17644 	mov	a,r1
      006219 12r00r00         [24]17645 	lcall	__gptrput
      00621C                      17646 00128$:
                                  17647 ;	ff15\source\ff.c:4072: sect = clst2sect(fs, fp->clust);	/* Get current sector */
      00621C 90r01r79         [24]17648 	mov	dptr,#_f_write_fs_65536_293
      00621F E0               [24]17649 	movx	a,@dptr
      006220 F5*64            [12]17650 	mov	_f_write_sloc11_1_0,a
      006222 A3               [24]17651 	inc	dptr
      006223 E0               [24]17652 	movx	a,@dptr
      006224 F5*65            [12]17653 	mov	(_f_write_sloc11_1_0 + 1),a
      006226 A3               [24]17654 	inc	dptr
      006227 E0               [24]17655 	movx	a,@dptr
      006228 F5*66            [12]17656 	mov	(_f_write_sloc11_1_0 + 2),a
      00622A 90r01r75         [24]17657 	mov	dptr,#_f_write_fp_65536_292
      00622D E0               [24]17658 	movx	a,@dptr
      00622E F5*68            [12]17659 	mov	_f_write_sloc13_1_0,a
      006230 A3               [24]17660 	inc	dptr
      006231 E0               [24]17661 	movx	a,@dptr
      006232 F5*69            [12]17662 	mov	(_f_write_sloc13_1_0 + 1),a
      006234 A3               [24]17663 	inc	dptr
      006235 E0               [24]17664 	movx	a,@dptr
      006236 F5*6A            [12]17665 	mov	(_f_write_sloc13_1_0 + 2),a
      006238 74 15            [12]17666 	mov	a,#0x15
      00623A 25*68            [12]17667 	add	a,_f_write_sloc13_1_0
      00623C FF               [12]17668 	mov	r7,a
      00623D E4               [12]17669 	clr	a
      00623E 35*69            [12]17670 	addc	a,(_f_write_sloc13_1_0 + 1)
      006240 FD               [12]17671 	mov	r5,a
      006241 AE*6A            [24]17672 	mov	r6,(_f_write_sloc13_1_0 + 2)
      006243 8F 82            [24]17673 	mov	dpl,r7
      006245 8D 83            [24]17674 	mov	dph,r5
      006247 8E F0            [24]17675 	mov	b,r6
      006249 12r00r00         [24]17676 	lcall	__gptrget
      00624C F9               [12]17677 	mov	r1,a
      00624D A3               [24]17678 	inc	dptr
      00624E 12r00r00         [24]17679 	lcall	__gptrget
      006251 FD               [12]17680 	mov	r5,a
      006252 A3               [24]17681 	inc	dptr
      006253 12r00r00         [24]17682 	lcall	__gptrget
      006256 FE               [12]17683 	mov	r6,a
      006257 A3               [24]17684 	inc	dptr
      006258 12r00r00         [24]17685 	lcall	__gptrget
      00625B FF               [12]17686 	mov	r7,a
      00625C 90r00r29         [24]17687 	mov	dptr,#_clst2sect_PARM_2
      00625F E9               [12]17688 	mov	a,r1
      006260 F0               [24]17689 	movx	@dptr,a
      006261 ED               [12]17690 	mov	a,r5
      006262 A3               [24]17691 	inc	dptr
      006263 F0               [24]17692 	movx	@dptr,a
      006264 EE               [12]17693 	mov	a,r6
      006265 A3               [24]17694 	inc	dptr
      006266 F0               [24]17695 	movx	@dptr,a
      006267 EF               [12]17696 	mov	a,r7
      006268 A3               [24]17697 	inc	dptr
      006269 F0               [24]17698 	movx	@dptr,a
      00626A 85*64 82         [24]17699 	mov	dpl,_f_write_sloc11_1_0
      00626D 85*65 83         [24]17700 	mov	dph,(_f_write_sloc11_1_0 + 1)
      006270 85*66 F0         [24]17701 	mov	b,(_f_write_sloc11_1_0 + 2)
      006273 C0 04            [24]17702 	push	ar4
      006275 C0 03            [24]17703 	push	ar3
      006277 C0 02            [24]17704 	push	ar2
      006279 12r08rDC         [24]17705 	lcall	_clst2sect
      00627C 85 82*60         [24]17706 	mov	_f_write_sloc10_1_0,dpl
      00627F 85 83*61         [24]17707 	mov	(_f_write_sloc10_1_0 + 1),dph
      006282 85 F0*62         [24]17708 	mov	(_f_write_sloc10_1_0 + 2),b
      006285 F5*63            [12]17709 	mov	(_f_write_sloc10_1_0 + 3),a
      006287 D0 02            [24]17710 	pop	ar2
      006289 D0 03            [24]17711 	pop	ar3
      00628B D0 04            [24]17712 	pop	ar4
                                  17713 ;	ff15\source\ff.c:4073: if (sect == 0) ABORT(fs, FR_INT_ERR);
      00628D E5*60            [12]17714 	mov	a,_f_write_sloc10_1_0
      00628F 45*61            [12]17715 	orl	a,(_f_write_sloc10_1_0 + 1)
      006291 45*62            [12]17716 	orl	a,(_f_write_sloc10_1_0 + 2)
      006293 45*63            [12]17717 	orl	a,(_f_write_sloc10_1_0 + 3)
      006295 70 20            [24]17718 	jnz	00130$
      006297 74 10            [12]17719 	mov	a,#0x10
      006299 25*68            [12]17720 	add	a,_f_write_sloc13_1_0
      00629B F5*64            [12]17721 	mov	_f_write_sloc11_1_0,a
      00629D E4               [12]17722 	clr	a
      00629E 35*69            [12]17723 	addc	a,(_f_write_sloc13_1_0 + 1)
      0062A0 F5*65            [12]17724 	mov	(_f_write_sloc11_1_0 + 1),a
      0062A2 85*6A*66         [24]17725 	mov	(_f_write_sloc11_1_0 + 2),(_f_write_sloc13_1_0 + 2)
      0062A5 85*64 82         [24]17726 	mov	dpl,_f_write_sloc11_1_0
      0062A8 85*65 83         [24]17727 	mov	dph,(_f_write_sloc11_1_0 + 1)
      0062AB 85*66 F0         [24]17728 	mov	b,(_f_write_sloc11_1_0 + 2)
      0062AE 74 02            [12]17729 	mov	a,#0x02
      0062B0 12r00r00         [24]17730 	lcall	__gptrput
      0062B3 75 82 02         [24]17731 	mov	dpl,#0x02
      0062B6 22               [24]17732 	ret
      0062B7                      17733 00130$:
                                  17734 ;	ff15\source\ff.c:4074: sect += csect;
      0062B7 90r01r84         [24]17735 	mov	dptr,#_f_write_csect_65536_293
      0062BA E0               [24]17736 	movx	a,@dptr
      0062BB F5*64            [12]17737 	mov	_f_write_sloc11_1_0,a
      0062BD A3               [24]17738 	inc	dptr
      0062BE E0               [24]17739 	movx	a,@dptr
      0062BF F5*65            [12]17740 	mov	(_f_write_sloc11_1_0 + 1),a
      0062C1 A9*64            [24]17741 	mov	r1,_f_write_sloc11_1_0
      0062C3 AD*65            [24]17742 	mov	r5,(_f_write_sloc11_1_0 + 1)
      0062C5 E4               [12]17743 	clr	a
      0062C6 FE               [12]17744 	mov	r6,a
      0062C7 FF               [12]17745 	mov	r7,a
      0062C8 E9               [12]17746 	mov	a,r1
      0062C9 25*60            [12]17747 	add	a,_f_write_sloc10_1_0
      0062CB F5*60            [12]17748 	mov	_f_write_sloc10_1_0,a
      0062CD ED               [12]17749 	mov	a,r5
      0062CE 35*61            [12]17750 	addc	a,(_f_write_sloc10_1_0 + 1)
      0062D0 F5*61            [12]17751 	mov	(_f_write_sloc10_1_0 + 1),a
      0062D2 EE               [12]17752 	mov	a,r6
      0062D3 35*62            [12]17753 	addc	a,(_f_write_sloc10_1_0 + 2)
      0062D5 F5*62            [12]17754 	mov	(_f_write_sloc10_1_0 + 2),a
      0062D7 EF               [12]17755 	mov	a,r7
      0062D8 35*63            [12]17756 	addc	a,(_f_write_sloc10_1_0 + 3)
      0062DA F5*63            [12]17757 	mov	(_f_write_sloc10_1_0 + 3),a
                                  17758 ;	ff15\source\ff.c:4075: cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
      0062DC 90r01r70         [24]17759 	mov	dptr,#_f_write_PARM_3
      0062DF E0               [24]17760 	movx	a,@dptr
      0062E0 FE               [12]17761 	mov	r6,a
      0062E1 A3               [24]17762 	inc	dptr
      0062E2 E0               [24]17763 	movx	a,@dptr
      0062E3 FF               [12]17764 	mov	r7,a
      0062E4 C3               [12]17765 	clr	c
      0062E5 13               [12]17766 	rrc	a
      0062E6 F5*6B            [12]17767 	mov	_f_write_sloc14_1_0,a
      0062E8 75*6C 00         [24]17768 	mov	(_f_write_sloc14_1_0 + 1),#0x00
      0062EB 90r01r82         [24]17769 	mov	dptr,#_f_write_cc_65536_293
      0062EE E5*6B            [12]17770 	mov	a,_f_write_sloc14_1_0
      0062F0 F0               [24]17771 	movx	@dptr,a
      0062F1 E5*6C            [12]17772 	mov	a,(_f_write_sloc14_1_0 + 1)
      0062F3 A3               [24]17773 	inc	dptr
      0062F4 F0               [24]17774 	movx	@dptr,a
                                  17775 ;	ff15\source\ff.c:4076: if (cc > 0) {					/* Write maximum contiguous sectors directly */
      0062F5 E5*6B            [12]17776 	mov	a,_f_write_sloc14_1_0
      0062F7 45*6C            [12]17777 	orl	a,(_f_write_sloc14_1_0 + 1)
      0062F9 70 03            [24]17778 	jnz	00278$
      0062FB 02r64rD7         [24]17779 	ljmp	00138$
      0062FE                      17780 00278$:
                                  17781 ;	ff15\source\ff.c:4077: if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
      0062FE E5*6B            [12]17782 	mov	a,_f_write_sloc14_1_0
      006300 25*64            [12]17783 	add	a,_f_write_sloc11_1_0
      006302 F8               [12]17784 	mov	r0,a
      006303 E5*6C            [12]17785 	mov	a,(_f_write_sloc14_1_0 + 1)
      006305 35*65            [12]17786 	addc	a,(_f_write_sloc11_1_0 + 1)
      006307 F9               [12]17787 	mov	r1,a
      006308 90r01r79         [24]17788 	mov	dptr,#_f_write_fs_65536_293
      00630B E0               [24]17789 	movx	a,@dptr
      00630C FD               [12]17790 	mov	r5,a
      00630D A3               [24]17791 	inc	dptr
      00630E E0               [24]17792 	movx	a,@dptr
      00630F FE               [12]17793 	mov	r6,a
      006310 A3               [24]17794 	inc	dptr
      006311 E0               [24]17795 	movx	a,@dptr
      006312 FF               [12]17796 	mov	r7,a
      006313 74 0A            [12]17797 	mov	a,#0x0a
      006315 2D               [12]17798 	add	a,r5
      006316 FD               [12]17799 	mov	r5,a
      006317 E4               [12]17800 	clr	a
      006318 3E               [12]17801 	addc	a,r6
      006319 FE               [12]17802 	mov	r6,a
      00631A 8D 82            [24]17803 	mov	dpl,r5
      00631C 8E 83            [24]17804 	mov	dph,r6
      00631E 8F F0            [24]17805 	mov	b,r7
      006320 12r00r00         [24]17806 	lcall	__gptrget
      006323 F5*6B            [12]17807 	mov	_f_write_sloc14_1_0,a
      006325 A3               [24]17808 	inc	dptr
      006326 12r00r00         [24]17809 	lcall	__gptrget
      006329 F5*6C            [12]17810 	mov	(_f_write_sloc14_1_0 + 1),a
      00632B C3               [12]17811 	clr	c
      00632C E5*6B            [12]17812 	mov	a,_f_write_sloc14_1_0
      00632E 98               [12]17813 	subb	a,r0
      00632F E5*6C            [12]17814 	mov	a,(_f_write_sloc14_1_0 + 1)
      006331 99               [12]17815 	subb	a,r1
      006332 50 11            [24]17816 	jnc	00132$
                                  17817 ;	ff15\source\ff.c:4078: cc = fs->csize - csect;
      006334 A8*6B            [24]17818 	mov	r0,_f_write_sloc14_1_0
      006336 A9*6C            [24]17819 	mov	r1,(_f_write_sloc14_1_0 + 1)
      006338 90r01r82         [24]17820 	mov	dptr,#_f_write_cc_65536_293
      00633B E8               [12]17821 	mov	a,r0
      00633C C3               [12]17822 	clr	c
      00633D 95*64            [12]17823 	subb	a,_f_write_sloc11_1_0
      00633F F0               [24]17824 	movx	@dptr,a
      006340 E9               [12]17825 	mov	a,r1
      006341 95*65            [12]17826 	subb	a,(_f_write_sloc11_1_0 + 1)
      006343 A3               [24]17827 	inc	dptr
      006344 F0               [24]17828 	movx	@dptr,a
      006345                      17829 00132$:
                                  17830 ;	ff15\source\ff.c:4080: if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
      006345 90r01r79         [24]17831 	mov	dptr,#_f_write_fs_65536_293
      006348 E0               [24]17832 	movx	a,@dptr
      006349 F8               [12]17833 	mov	r0,a
      00634A A3               [24]17834 	inc	dptr
      00634B E0               [24]17835 	movx	a,@dptr
      00634C F9               [12]17836 	mov	r1,a
      00634D A3               [24]17837 	inc	dptr
      00634E E0               [24]17838 	movx	a,@dptr
      00634F FF               [12]17839 	mov	r7,a
      006350 08               [12]17840 	inc	r0
      006351 B8 00 01         [24]17841 	cjne	r0,#0x00,00280$
      006354 09               [12]17842 	inc	r1
      006355                      17843 00280$:
      006355 88 82            [24]17844 	mov	dpl,r0
      006357 89 83            [24]17845 	mov	dph,r1
      006359 8F F0            [24]17846 	mov	b,r7
      00635B 12r00r00         [24]17847 	lcall	__gptrget
      00635E F8               [12]17848 	mov	r0,a
      00635F 90r01r86         [24]17849 	mov	dptr,#_f_write_wbuff_65536_293
      006362 E0               [24]17850 	movx	a,@dptr
      006363 FD               [12]17851 	mov	r5,a
      006364 A3               [24]17852 	inc	dptr
      006365 E0               [24]17853 	movx	a,@dptr
      006366 FE               [12]17854 	mov	r6,a
      006367 A3               [24]17855 	inc	dptr
      006368 E0               [24]17856 	movx	a,@dptr
      006369 FF               [12]17857 	mov	r7,a
      00636A 90r01r82         [24]17858 	mov	dptr,#_f_write_cc_65536_293
      00636D E0               [24]17859 	movx	a,@dptr
      00636E F5*6B            [12]17860 	mov	_f_write_sloc14_1_0,a
      006370 A3               [24]17861 	inc	dptr
      006371 E0               [24]17862 	movx	a,@dptr
      006372 F5*6C            [12]17863 	mov	(_f_write_sloc14_1_0 + 1),a
      006374 90r00r00         [24]17864 	mov	dptr,#_disk_write_PARM_2
      006377 ED               [12]17865 	mov	a,r5
      006378 F0               [24]17866 	movx	@dptr,a
      006379 EE               [12]17867 	mov	a,r6
      00637A A3               [24]17868 	inc	dptr
      00637B F0               [24]17869 	movx	@dptr,a
      00637C EF               [12]17870 	mov	a,r7
      00637D A3               [24]17871 	inc	dptr
      00637E F0               [24]17872 	movx	@dptr,a
      00637F 90r00r00         [24]17873 	mov	dptr,#_disk_write_PARM_3
      006382 E5*60            [12]17874 	mov	a,_f_write_sloc10_1_0
      006384 F0               [24]17875 	movx	@dptr,a
      006385 E5*61            [12]17876 	mov	a,(_f_write_sloc10_1_0 + 1)
      006387 A3               [24]17877 	inc	dptr
      006388 F0               [24]17878 	movx	@dptr,a
      006389 E5*62            [12]17879 	mov	a,(_f_write_sloc10_1_0 + 2)
      00638B A3               [24]17880 	inc	dptr
      00638C F0               [24]17881 	movx	@dptr,a
      00638D E5*63            [12]17882 	mov	a,(_f_write_sloc10_1_0 + 3)
      00638F A3               [24]17883 	inc	dptr
      006390 F0               [24]17884 	movx	@dptr,a
      006391 90r00r00         [24]17885 	mov	dptr,#_disk_write_PARM_4
      006394 E5*6B            [12]17886 	mov	a,_f_write_sloc14_1_0
      006396 F0               [24]17887 	movx	@dptr,a
      006397 E5*6C            [12]17888 	mov	a,(_f_write_sloc14_1_0 + 1)
      006399 A3               [24]17889 	inc	dptr
      00639A F0               [24]17890 	movx	@dptr,a
      00639B 88 82            [24]17891 	mov	dpl,r0
      00639D C0 04            [24]17892 	push	ar4
      00639F C0 03            [24]17893 	push	ar3
      0063A1 C0 02            [24]17894 	push	ar2
      0063A3 12r00r00         [24]17895 	lcall	_disk_write
      0063A6 E5 82            [12]17896 	mov	a,dpl
      0063A8 D0 02            [24]17897 	pop	ar2
      0063AA D0 03            [24]17898 	pop	ar3
      0063AC D0 04            [24]17899 	pop	ar4
      0063AE 60 2B            [24]17900 	jz	00134$
      0063B0 90r01r75         [24]17901 	mov	dptr,#_f_write_fp_65536_292
      0063B3 E0               [24]17902 	movx	a,@dptr
      0063B4 F5*64            [12]17903 	mov	_f_write_sloc11_1_0,a
      0063B6 A3               [24]17904 	inc	dptr
      0063B7 E0               [24]17905 	movx	a,@dptr
      0063B8 F5*65            [12]17906 	mov	(_f_write_sloc11_1_0 + 1),a
      0063BA A3               [24]17907 	inc	dptr
      0063BB E0               [24]17908 	movx	a,@dptr
      0063BC F5*66            [12]17909 	mov	(_f_write_sloc11_1_0 + 2),a
      0063BE 74 10            [12]17910 	mov	a,#0x10
      0063C0 25*64            [12]17911 	add	a,_f_write_sloc11_1_0
      0063C2 F5*64            [12]17912 	mov	_f_write_sloc11_1_0,a
      0063C4 E4               [12]17913 	clr	a
      0063C5 35*65            [12]17914 	addc	a,(_f_write_sloc11_1_0 + 1)
      0063C7 F5*65            [12]17915 	mov	(_f_write_sloc11_1_0 + 1),a
      0063C9 85*64 82         [24]17916 	mov	dpl,_f_write_sloc11_1_0
      0063CC 85*65 83         [24]17917 	mov	dph,(_f_write_sloc11_1_0 + 1)
      0063CF 85*66 F0         [24]17918 	mov	b,(_f_write_sloc11_1_0 + 2)
      0063D2 74 01            [12]17919 	mov	a,#0x01
      0063D4 12r00r00         [24]17920 	lcall	__gptrput
      0063D7 75 82 01         [24]17921 	mov	dpl,#0x01
      0063DA 22               [24]17922 	ret
      0063DB                      17923 00134$:
                                  17924 ;	ff15\source\ff.c:4088: if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
      0063DB 85*42 82         [24]17925 	mov	dpl,_f_write_sloc0_1_0
      0063DE 85*43 83         [24]17926 	mov	dph,(_f_write_sloc0_1_0 + 1)
      0063E1 85*44 F0         [24]17927 	mov	b,(_f_write_sloc0_1_0 + 2)
      0063E4 12r00r00         [24]17928 	lcall	__gptrget
      0063E7 F5*6D            [12]17929 	mov	_f_write_sloc15_1_0,a
      0063E9 A3               [24]17930 	inc	dptr
      0063EA 12r00r00         [24]17931 	lcall	__gptrget
      0063ED F5*6E            [12]17932 	mov	(_f_write_sloc15_1_0 + 1),a
      0063EF A3               [24]17933 	inc	dptr
      0063F0 12r00r00         [24]17934 	lcall	__gptrget
      0063F3 F5*6F            [12]17935 	mov	(_f_write_sloc15_1_0 + 2),a
      0063F5 A3               [24]17936 	inc	dptr
      0063F6 12r00r00         [24]17937 	lcall	__gptrget
      0063F9 F5*70            [12]17938 	mov	(_f_write_sloc15_1_0 + 3),a
      0063FB E5*6D            [12]17939 	mov	a,_f_write_sloc15_1_0
      0063FD C3               [12]17940 	clr	c
      0063FE 95*60            [12]17941 	subb	a,_f_write_sloc10_1_0
      006400 F5*71            [12]17942 	mov	_f_write_sloc16_1_0,a
      006402 E5*6E            [12]17943 	mov	a,(_f_write_sloc15_1_0 + 1)
      006404 95*61            [12]17944 	subb	a,(_f_write_sloc10_1_0 + 1)
      006406 F5*72            [12]17945 	mov	(_f_write_sloc16_1_0 + 1),a
      006408 E5*6F            [12]17946 	mov	a,(_f_write_sloc15_1_0 + 2)
      00640A 95*62            [12]17947 	subb	a,(_f_write_sloc10_1_0 + 2)
      00640C F5*73            [12]17948 	mov	(_f_write_sloc16_1_0 + 2),a
      00640E E5*70            [12]17949 	mov	a,(_f_write_sloc15_1_0 + 3)
      006410 95*63            [12]17950 	subb	a,(_f_write_sloc10_1_0 + 3)
      006412 F5*74            [12]17951 	mov	(_f_write_sloc16_1_0 + 3),a
      006414 A9*6B            [24]17952 	mov	r1,_f_write_sloc14_1_0
      006416 AD*6C            [24]17953 	mov	r5,(_f_write_sloc14_1_0 + 1)
      006418 7E 00            [12]17954 	mov	r6,#0x00
      00641A 7F 00            [12]17955 	mov	r7,#0x00
      00641C C3               [12]17956 	clr	c
      00641D E5*71            [12]17957 	mov	a,_f_write_sloc16_1_0
      00641F 99               [12]17958 	subb	a,r1
      006420 E5*72            [12]17959 	mov	a,(_f_write_sloc16_1_0 + 1)
      006422 9D               [12]17960 	subb	a,r5
      006423 E5*73            [12]17961 	mov	a,(_f_write_sloc16_1_0 + 2)
      006425 9E               [12]17962 	subb	a,r6
      006426 E5*74            [12]17963 	mov	a,(_f_write_sloc16_1_0 + 3)
      006428 9F               [12]17964 	subb	a,r7
      006429 40 03            [24]17965 	jc	00282$
      00642B 02r64rBF         [24]17966 	ljmp	00136$
      00642E                      17967 00282$:
                                  17968 ;	ff15\source\ff.c:4089: memcpy(fp->buf, wbuff + ((fp->sect - sect) * SS(fs)), SS(fs));
      00642E 74 24            [12]17969 	mov	a,#0x24
      006430 2A               [12]17970 	add	a,r2
      006431 F8               [12]17971 	mov	r0,a
      006432 E4               [12]17972 	clr	a
      006433 3B               [12]17973 	addc	a,r3
      006434 F9               [12]17974 	mov	r1,a
      006435 8C 07            [24]17975 	mov	ar7,r4
      006437 88*71            [24]17976 	mov	_f_write_sloc16_1_0,r0
      006439 89*72            [24]17977 	mov	(_f_write_sloc16_1_0 + 1),r1
      00643B 8F*73            [24]17978 	mov	(_f_write_sloc16_1_0 + 2),r7
      00643D E5*6D            [12]17979 	mov	a,_f_write_sloc15_1_0
      00643F C3               [12]17980 	clr	c
      006440 95*60            [12]17981 	subb	a,_f_write_sloc10_1_0
      006442 F9               [12]17982 	mov	r1,a
      006443 E5*6E            [12]17983 	mov	a,(_f_write_sloc15_1_0 + 1)
      006445 95*61            [12]17984 	subb	a,(_f_write_sloc10_1_0 + 1)
      006447 FD               [12]17985 	mov	r5,a
      006448 E5*6F            [12]17986 	mov	a,(_f_write_sloc15_1_0 + 2)
      00644A 95*62            [12]17987 	subb	a,(_f_write_sloc10_1_0 + 2)
      00644C FE               [12]17988 	mov	r6,a
      00644D E5*70            [12]17989 	mov	a,(_f_write_sloc15_1_0 + 3)
      00644F 95*63            [12]17990 	subb	a,(_f_write_sloc10_1_0 + 3)
      006451 E9               [12]17991 	mov	a,r1
      006452 29               [12]17992 	add	a,r1
      006453 F5*6E            [12]17993 	mov	(_f_write_sloc15_1_0 + 1),a
      006455 ED               [12]17994 	mov	a,r5
      006456 33               [12]17995 	rlc	a
      006457 F5*6F            [12]17996 	mov	(_f_write_sloc15_1_0 + 2),a
      006459 EE               [12]17997 	mov	a,r6
      00645A 33               [12]17998 	rlc	a
      00645B F5*70            [12]17999 	mov	(_f_write_sloc15_1_0 + 3),a
      00645D 75*6D 00         [24]18000 	mov	_f_write_sloc15_1_0,#0x00
      006460 90r01r86         [24]18001 	mov	dptr,#_f_write_wbuff_65536_293
      006463 E0               [24]18002 	movx	a,@dptr
      006464 F8               [12]18003 	mov	r0,a
      006465 A3               [24]18004 	inc	dptr
      006466 E0               [24]18005 	movx	a,@dptr
      006467 FE               [12]18006 	mov	r6,a
      006468 A3               [24]18007 	inc	dptr
      006469 E0               [24]18008 	movx	a,@dptr
      00646A FF               [12]18009 	mov	r7,a
      00646B E5*6D            [12]18010 	mov	a,_f_write_sloc15_1_0
      00646D 28               [12]18011 	add	a,r0
      00646E F8               [12]18012 	mov	r0,a
      00646F E5*6E            [12]18013 	mov	a,(_f_write_sloc15_1_0 + 1)
      006471 3E               [12]18014 	addc	a,r6
      006472 FE               [12]18015 	mov	r6,a
      006473 90r00r00         [24]18016 	mov	dptr,#___memcpy_PARM_2
      006476 E8               [12]18017 	mov	a,r0
      006477 F0               [24]18018 	movx	@dptr,a
      006478 EE               [12]18019 	mov	a,r6
      006479 A3               [24]18020 	inc	dptr
      00647A F0               [24]18021 	movx	@dptr,a
      00647B EF               [12]18022 	mov	a,r7
      00647C A3               [24]18023 	inc	dptr
      00647D F0               [24]18024 	movx	@dptr,a
      00647E 90r00r00         [24]18025 	mov	dptr,#___memcpy_PARM_3
      006481 E4               [12]18026 	clr	a
      006482 F0               [24]18027 	movx	@dptr,a
      006483 74 02            [12]18028 	mov	a,#0x02
      006485 A3               [24]18029 	inc	dptr
      006486 F0               [24]18030 	movx	@dptr,a
      006487 85*71 82         [24]18031 	mov	dpl,_f_write_sloc16_1_0
      00648A 85*72 83         [24]18032 	mov	dph,(_f_write_sloc16_1_0 + 1)
      00648D 85*73 F0         [24]18033 	mov	b,(_f_write_sloc16_1_0 + 2)
      006490 C0 04            [24]18034 	push	ar4
      006492 C0 03            [24]18035 	push	ar3
      006494 C0 02            [24]18036 	push	ar2
      006496 12r00r00         [24]18037 	lcall	___memcpy
      006499 D0 02            [24]18038 	pop	ar2
      00649B D0 03            [24]18039 	pop	ar3
      00649D D0 04            [24]18040 	pop	ar4
                                  18041 ;	ff15\source\ff.c:4090: fp->flag &= (BYTE)~FA_DIRTY;
      00649F 74 0F            [12]18042 	mov	a,#0x0f
      0064A1 2A               [12]18043 	add	a,r2
      0064A2 FD               [12]18044 	mov	r5,a
      0064A3 E4               [12]18045 	clr	a
      0064A4 3B               [12]18046 	addc	a,r3
      0064A5 FE               [12]18047 	mov	r6,a
      0064A6 8C 07            [24]18048 	mov	ar7,r4
      0064A8 8D 82            [24]18049 	mov	dpl,r5
      0064AA 8E 83            [24]18050 	mov	dph,r6
      0064AC 8F F0            [24]18051 	mov	b,r7
      0064AE 12r00r00         [24]18052 	lcall	__gptrget
      0064B1 F9               [12]18053 	mov	r1,a
      0064B2 53 01 7F         [24]18054 	anl	ar1,#0x7f
      0064B5 8D 82            [24]18055 	mov	dpl,r5
      0064B7 8E 83            [24]18056 	mov	dph,r6
      0064B9 8F F0            [24]18057 	mov	b,r7
      0064BB E9               [12]18058 	mov	a,r1
      0064BC 12r00r00         [24]18059 	lcall	__gptrput
                                  18060 ;	ff15\source\ff.c:4125: LEAVE_FF(fs, FR_OK);
                                  18061 ;	ff15\source\ff.c:4090: fp->flag &= (BYTE)~FA_DIRTY;
      0064BF                      18062 00136$:
                                  18063 ;	ff15\source\ff.c:4094: wcnt = SS(fs) * cc;		/* Number of bytes transferred */
      0064BF 90r01r82         [24]18064 	mov	dptr,#_f_write_cc_65536_293
      0064C2 E0               [24]18065 	movx	a,@dptr
      0064C3 F8               [12]18066 	mov	r0,a
      0064C4 A3               [24]18067 	inc	dptr
      0064C5 E0               [24]18068 	movx	a,@dptr
      0064C6 F9               [12]18069 	mov	r1,a
      0064C7 E8               [12]18070 	mov	a,r0
      0064C8 28               [12]18071 	add	a,r0
      0064C9 C9               [12]18072 	xch	a,r1
      0064CA 78 00            [12]18073 	mov	r0,#0x00
      0064CC 90r01r80         [24]18074 	mov	dptr,#_f_write_wcnt_65536_293
      0064CF E8               [12]18075 	mov	a,r0
      0064D0 F0               [24]18076 	movx	@dptr,a
      0064D1 E9               [12]18077 	mov	a,r1
      0064D2 A3               [24]18078 	inc	dptr
      0064D3 F0               [24]18079 	movx	@dptr,a
                                  18080 ;	ff15\source\ff.c:4095: continue;
      0064D4 02r66rD9         [24]18081 	ljmp	00147$
      0064D7                      18082 00138$:
                                  18083 ;	ff15\source\ff.c:4103: if (fp->sect != sect && 		/* Fill sector cache with file data */
      0064D7 74 19            [12]18084 	mov	a,#0x19
      0064D9 25*68            [12]18085 	add	a,_f_write_sloc13_1_0
      0064DB F8               [12]18086 	mov	r0,a
      0064DC E4               [12]18087 	clr	a
      0064DD 35*69            [12]18088 	addc	a,(_f_write_sloc13_1_0 + 1)
      0064DF F9               [12]18089 	mov	r1,a
      0064E0 AF*6A            [24]18090 	mov	r7,(_f_write_sloc13_1_0 + 2)
      0064E2 88 82            [24]18091 	mov	dpl,r0
      0064E4 89 83            [24]18092 	mov	dph,r1
      0064E6 8F F0            [24]18093 	mov	b,r7
      0064E8 12r00r00         [24]18094 	lcall	__gptrget
      0064EB F8               [12]18095 	mov	r0,a
      0064EC A3               [24]18096 	inc	dptr
      0064ED 12r00r00         [24]18097 	lcall	__gptrget
      0064F0 F9               [12]18098 	mov	r1,a
      0064F1 A3               [24]18099 	inc	dptr
      0064F2 12r00r00         [24]18100 	lcall	__gptrget
      0064F5 FF               [12]18101 	mov	r7,a
      0064F6 A3               [24]18102 	inc	dptr
      0064F7 12r00r00         [24]18103 	lcall	__gptrget
      0064FA FE               [12]18104 	mov	r6,a
      0064FB E8               [12]18105 	mov	a,r0
      0064FC B5*60 0F         [24]18106 	cjne	a,_f_write_sloc10_1_0,00283$
      0064FF E9               [12]18107 	mov	a,r1
      006500 B5*61 0B         [24]18108 	cjne	a,(_f_write_sloc10_1_0 + 1),00283$
      006503 EF               [12]18109 	mov	a,r7
      006504 B5*62 07         [24]18110 	cjne	a,(_f_write_sloc10_1_0 + 2),00283$
      006507 EE               [12]18111 	mov	a,r6
      006508 B5*63 03         [24]18112 	cjne	a,(_f_write_sloc10_1_0 + 3),00283$
      00650B 02r65rE4         [24]18113 	ljmp	00140$
      00650E                      18114 00283$:
                                  18115 ;	ff15\source\ff.c:4104: fp->fptr < fp->obj.objsize &&
      00650E 74 11            [12]18116 	mov	a,#0x11
      006510 25*68            [12]18117 	add	a,_f_write_sloc13_1_0
      006512 F8               [12]18118 	mov	r0,a
      006513 E4               [12]18119 	clr	a
      006514 35*69            [12]18120 	addc	a,(_f_write_sloc13_1_0 + 1)
      006516 F9               [12]18121 	mov	r1,a
      006517 AF*6A            [24]18122 	mov	r7,(_f_write_sloc13_1_0 + 2)
      006519 88 82            [24]18123 	mov	dpl,r0
      00651B 89 83            [24]18124 	mov	dph,r1
      00651D 8F F0            [24]18125 	mov	b,r7
      00651F 12r00r00         [24]18126 	lcall	__gptrget
      006522 F5*71            [12]18127 	mov	_f_write_sloc16_1_0,a
      006524 A3               [24]18128 	inc	dptr
      006525 12r00r00         [24]18129 	lcall	__gptrget
      006528 F5*72            [12]18130 	mov	(_f_write_sloc16_1_0 + 1),a
      00652A A3               [24]18131 	inc	dptr
      00652B 12r00r00         [24]18132 	lcall	__gptrget
      00652E F5*73            [12]18133 	mov	(_f_write_sloc16_1_0 + 2),a
      006530 A3               [24]18134 	inc	dptr
      006531 12r00r00         [24]18135 	lcall	__gptrget
      006534 F5*74            [12]18136 	mov	(_f_write_sloc16_1_0 + 3),a
      006536 74 0B            [12]18137 	mov	a,#0x0b
      006538 25*68            [12]18138 	add	a,_f_write_sloc13_1_0
      00653A FF               [12]18139 	mov	r7,a
      00653B E4               [12]18140 	clr	a
      00653C 35*69            [12]18141 	addc	a,(_f_write_sloc13_1_0 + 1)
      00653E FD               [12]18142 	mov	r5,a
      00653F AE*6A            [24]18143 	mov	r6,(_f_write_sloc13_1_0 + 2)
      006541 8F 82            [24]18144 	mov	dpl,r7
      006543 8D 83            [24]18145 	mov	dph,r5
      006545 8E F0            [24]18146 	mov	b,r6
      006547 12r00r00         [24]18147 	lcall	__gptrget
      00654A F9               [12]18148 	mov	r1,a
      00654B A3               [24]18149 	inc	dptr
      00654C 12r00r00         [24]18150 	lcall	__gptrget
      00654F FD               [12]18151 	mov	r5,a
      006550 A3               [24]18152 	inc	dptr
      006551 12r00r00         [24]18153 	lcall	__gptrget
      006554 FE               [12]18154 	mov	r6,a
      006555 A3               [24]18155 	inc	dptr
      006556 12r00r00         [24]18156 	lcall	__gptrget
      006559 FF               [12]18157 	mov	r7,a
      00655A C3               [12]18158 	clr	c
      00655B E5*71            [12]18159 	mov	a,_f_write_sloc16_1_0
      00655D 99               [12]18160 	subb	a,r1
      00655E E5*72            [12]18161 	mov	a,(_f_write_sloc16_1_0 + 1)
      006560 9D               [12]18162 	subb	a,r5
      006561 E5*73            [12]18163 	mov	a,(_f_write_sloc16_1_0 + 2)
      006563 9E               [12]18164 	subb	a,r6
      006564 E5*74            [12]18165 	mov	a,(_f_write_sloc16_1_0 + 3)
      006566 9F               [12]18166 	subb	a,r7
      006567 50 7B            [24]18167 	jnc	00140$
                                  18168 ;	ff15\source\ff.c:4105: disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
      006569 90r01r79         [24]18169 	mov	dptr,#_f_write_fs_65536_293
      00656C E0               [24]18170 	movx	a,@dptr
      00656D F8               [12]18171 	mov	r0,a
      00656E A3               [24]18172 	inc	dptr
      00656F E0               [24]18173 	movx	a,@dptr
      006570 F9               [12]18174 	mov	r1,a
      006571 A3               [24]18175 	inc	dptr
      006572 E0               [24]18176 	movx	a,@dptr
      006573 FF               [12]18177 	mov	r7,a
      006574 08               [12]18178 	inc	r0
      006575 B8 00 01         [24]18179 	cjne	r0,#0x00,00285$
      006578 09               [12]18180 	inc	r1
      006579                      18181 00285$:
      006579 88 82            [24]18182 	mov	dpl,r0
      00657B 89 83            [24]18183 	mov	dph,r1
      00657D 8F F0            [24]18184 	mov	b,r7
      00657F 12r00r00         [24]18185 	lcall	__gptrget
      006582 F8               [12]18186 	mov	r0,a
      006583 90r00r00         [24]18187 	mov	dptr,#_disk_read_PARM_2
      006586 74 24            [12]18188 	mov	a,#0x24
      006588 25*68            [12]18189 	add	a,_f_write_sloc13_1_0
      00658A F0               [24]18190 	movx	@dptr,a
      00658B E4               [12]18191 	clr	a
      00658C 35*69            [12]18192 	addc	a,(_f_write_sloc13_1_0 + 1)
      00658E A3               [24]18193 	inc	dptr
      00658F F0               [24]18194 	movx	@dptr,a
      006590 E5*6A            [12]18195 	mov	a,(_f_write_sloc13_1_0 + 2)
      006592 A3               [24]18196 	inc	dptr
      006593 F0               [24]18197 	movx	@dptr,a
      006594 90r00r00         [24]18198 	mov	dptr,#_disk_read_PARM_3
      006597 E5*60            [12]18199 	mov	a,_f_write_sloc10_1_0
      006599 F0               [24]18200 	movx	@dptr,a
      00659A E5*61            [12]18201 	mov	a,(_f_write_sloc10_1_0 + 1)
      00659C A3               [24]18202 	inc	dptr
      00659D F0               [24]18203 	movx	@dptr,a
      00659E E5*62            [12]18204 	mov	a,(_f_write_sloc10_1_0 + 2)
      0065A0 A3               [24]18205 	inc	dptr
      0065A1 F0               [24]18206 	movx	@dptr,a
      0065A2 E5*63            [12]18207 	mov	a,(_f_write_sloc10_1_0 + 3)
      0065A4 A3               [24]18208 	inc	dptr
      0065A5 F0               [24]18209 	movx	@dptr,a
      0065A6 90r00r00         [24]18210 	mov	dptr,#_disk_read_PARM_4
      0065A9 74 01            [12]18211 	mov	a,#0x01
      0065AB F0               [24]18212 	movx	@dptr,a
      0065AC E4               [12]18213 	clr	a
      0065AD A3               [24]18214 	inc	dptr
      0065AE F0               [24]18215 	movx	@dptr,a
      0065AF 88 82            [24]18216 	mov	dpl,r0
      0065B1 C0 04            [24]18217 	push	ar4
      0065B3 C0 03            [24]18218 	push	ar3
      0065B5 C0 02            [24]18219 	push	ar2
      0065B7 12r00r00         [24]18220 	lcall	_disk_read
      0065BA E5 82            [12]18221 	mov	a,dpl
      0065BC D0 02            [24]18222 	pop	ar2
      0065BE D0 03            [24]18223 	pop	ar3
      0065C0 D0 04            [24]18224 	pop	ar4
      0065C2 60 20            [24]18225 	jz	00140$
                                  18226 ;	ff15\source\ff.c:4106: ABORT(fs, FR_DISK_ERR);
      0065C4 74 10            [12]18227 	mov	a,#0x10
      0065C6 25*68            [12]18228 	add	a,_f_write_sloc13_1_0
      0065C8 F5*71            [12]18229 	mov	_f_write_sloc16_1_0,a
      0065CA E4               [12]18230 	clr	a
      0065CB 35*69            [12]18231 	addc	a,(_f_write_sloc13_1_0 + 1)
      0065CD F5*72            [12]18232 	mov	(_f_write_sloc16_1_0 + 1),a
      0065CF 85*6A*73         [24]18233 	mov	(_f_write_sloc16_1_0 + 2),(_f_write_sloc13_1_0 + 2)
      0065D2 85*71 82         [24]18234 	mov	dpl,_f_write_sloc16_1_0
      0065D5 85*72 83         [24]18235 	mov	dph,(_f_write_sloc16_1_0 + 1)
      0065D8 85*73 F0         [24]18236 	mov	b,(_f_write_sloc16_1_0 + 2)
      0065DB 74 01            [12]18237 	mov	a,#0x01
      0065DD 12r00r00         [24]18238 	lcall	__gptrput
      0065E0 75 82 01         [24]18239 	mov	dpl,#0x01
      0065E3 22               [24]18240 	ret
      0065E4                      18241 00140$:
                                  18242 ;	ff15\source\ff.c:4109: fp->sect = sect;
      0065E4 74 19            [12]18243 	mov	a,#0x19
      0065E6 25*48            [12]18244 	add	a,_f_write_sloc2_1_0
      0065E8 F8               [12]18245 	mov	r0,a
      0065E9 E4               [12]18246 	clr	a
      0065EA 35*49            [12]18247 	addc	a,(_f_write_sloc2_1_0 + 1)
      0065EC F9               [12]18248 	mov	r1,a
      0065ED AF*4A            [24]18249 	mov	r7,(_f_write_sloc2_1_0 + 2)
      0065EF 88 82            [24]18250 	mov	dpl,r0
      0065F1 89 83            [24]18251 	mov	dph,r1
      0065F3 8F F0            [24]18252 	mov	b,r7
      0065F5 E5*60            [12]18253 	mov	a,_f_write_sloc10_1_0
      0065F7 12r00r00         [24]18254 	lcall	__gptrput
      0065FA A3               [24]18255 	inc	dptr
      0065FB E5*61            [12]18256 	mov	a,(_f_write_sloc10_1_0 + 1)
      0065FD 12r00r00         [24]18257 	lcall	__gptrput
      006600 A3               [24]18258 	inc	dptr
      006601 E5*62            [12]18259 	mov	a,(_f_write_sloc10_1_0 + 2)
      006603 12r00r00         [24]18260 	lcall	__gptrput
      006606 A3               [24]18261 	inc	dptr
      006607 E5*63            [12]18262 	mov	a,(_f_write_sloc10_1_0 + 3)
      006609 12r00r00         [24]18263 	lcall	__gptrput
      00660C                      18264 00144$:
                                  18265 ;	ff15\source\ff.c:4111: wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes remains in the sector */
      00660C 85*51 82         [24]18266 	mov	dpl,_f_write_sloc5_1_0
      00660F 85*52 83         [24]18267 	mov	dph,(_f_write_sloc5_1_0 + 1)
      006612 85*53 F0         [24]18268 	mov	b,(_f_write_sloc5_1_0 + 2)
      006615 12r00r00         [24]18269 	lcall	__gptrget
      006618 FE               [12]18270 	mov	r6,a
      006619 A3               [24]18271 	inc	dptr
      00661A 12r00r00         [24]18272 	lcall	__gptrget
      00661D FF               [12]18273 	mov	r7,a
      00661E 53 07 01         [24]18274 	anl	ar7,#0x01
      006621 E4               [12]18275 	clr	a
      006622 C3               [12]18276 	clr	c
      006623 9E               [12]18277 	subb	a,r6
      006624 FE               [12]18278 	mov	r6,a
      006625 74 02            [12]18279 	mov	a,#0x02
      006627 9F               [12]18280 	subb	a,r7
      006628 FF               [12]18281 	mov	r7,a
      006629 90r01r80         [24]18282 	mov	dptr,#_f_write_wcnt_65536_293
      00662C EE               [12]18283 	mov	a,r6
      00662D F0               [24]18284 	movx	@dptr,a
      00662E EF               [12]18285 	mov	a,r7
      00662F A3               [24]18286 	inc	dptr
      006630 F0               [24]18287 	movx	@dptr,a
                                  18288 ;	ff15\source\ff.c:4112: if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
      006631 90r01r70         [24]18289 	mov	dptr,#_f_write_PARM_3
      006634 E0               [24]18290 	movx	a,@dptr
      006635 F9               [12]18291 	mov	r1,a
      006636 A3               [24]18292 	inc	dptr
      006637 E0               [24]18293 	movx	a,@dptr
      006638 FD               [12]18294 	mov	r5,a
      006639 C3               [12]18295 	clr	c
      00663A E9               [12]18296 	mov	a,r1
      00663B 9E               [12]18297 	subb	a,r6
      00663C ED               [12]18298 	mov	a,r5
      00663D 9F               [12]18299 	subb	a,r7
      00663E 50 08            [24]18300 	jnc	00146$
      006640 90r01r80         [24]18301 	mov	dptr,#_f_write_wcnt_65536_293
      006643 E9               [12]18302 	mov	a,r1
      006644 F0               [24]18303 	movx	@dptr,a
      006645 ED               [12]18304 	mov	a,r5
      006646 A3               [24]18305 	inc	dptr
      006647 F0               [24]18306 	movx	@dptr,a
      006648                      18307 00146$:
                                  18308 ;	ff15\source\ff.c:4118: memcpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
      006648 C0 02            [24]18309 	push	ar2
      00664A C0 03            [24]18310 	push	ar3
      00664C C0 04            [24]18311 	push	ar4
      00664E 85*5A 82         [24]18312 	mov	dpl,_f_write_sloc8_1_0
      006651 85*5B 83         [24]18313 	mov	dph,(_f_write_sloc8_1_0 + 1)
      006654 85*5C F0         [24]18314 	mov	b,(_f_write_sloc8_1_0 + 2)
      006657 12r00r00         [24]18315 	lcall	__gptrget
      00665A F9               [12]18316 	mov	r1,a
      00665B A3               [24]18317 	inc	dptr
      00665C 12r00r00         [24]18318 	lcall	__gptrget
      00665F FD               [12]18319 	mov	r5,a
      006660 A3               [24]18320 	inc	dptr
      006661 12r00r00         [24]18321 	lcall	__gptrget
      006664 A3               [24]18322 	inc	dptr
      006665 12r00r00         [24]18323 	lcall	__gptrget
      006668 53 05 01         [24]18324 	anl	ar5,#0x01
      00666B E4               [12]18325 	clr	a
      00666C E9               [12]18326 	mov	a,r1
      00666D 25*57            [12]18327 	add	a,_f_write_sloc7_1_0
      00666F F9               [12]18328 	mov	r1,a
      006670 ED               [12]18329 	mov	a,r5
      006671 35*58            [12]18330 	addc	a,(_f_write_sloc7_1_0 + 1)
      006673 FD               [12]18331 	mov	r5,a
      006674 AE*59            [24]18332 	mov	r6,(_f_write_sloc7_1_0 + 2)
      006676 90r01r86         [24]18333 	mov	dptr,#_f_write_wbuff_65536_293
      006679 E0               [24]18334 	movx	a,@dptr
      00667A F8               [12]18335 	mov	r0,a
      00667B A3               [24]18336 	inc	dptr
      00667C E0               [24]18337 	movx	a,@dptr
      00667D FC               [12]18338 	mov	r4,a
      00667E A3               [24]18339 	inc	dptr
      00667F E0               [24]18340 	movx	a,@dptr
      006680 FF               [12]18341 	mov	r7,a
      006681 90r01r80         [24]18342 	mov	dptr,#_f_write_wcnt_65536_293
      006684 E0               [24]18343 	movx	a,@dptr
      006685 FA               [12]18344 	mov	r2,a
      006686 A3               [24]18345 	inc	dptr
      006687 E0               [24]18346 	movx	a,@dptr
      006688 FB               [12]18347 	mov	r3,a
      006689 90r00r00         [24]18348 	mov	dptr,#___memcpy_PARM_2
      00668C E8               [12]18349 	mov	a,r0
      00668D F0               [24]18350 	movx	@dptr,a
      00668E EC               [12]18351 	mov	a,r4
      00668F A3               [24]18352 	inc	dptr
      006690 F0               [24]18353 	movx	@dptr,a
      006691 EF               [12]18354 	mov	a,r7
      006692 A3               [24]18355 	inc	dptr
      006693 F0               [24]18356 	movx	@dptr,a
      006694 90r00r00         [24]18357 	mov	dptr,#___memcpy_PARM_3
      006697 EA               [12]18358 	mov	a,r2
      006698 F0               [24]18359 	movx	@dptr,a
      006699 EB               [12]18360 	mov	a,r3
      00669A A3               [24]18361 	inc	dptr
      00669B F0               [24]18362 	movx	@dptr,a
      00669C 89 82            [24]18363 	mov	dpl,r1
      00669E 8D 83            [24]18364 	mov	dph,r5
      0066A0 8E F0            [24]18365 	mov	b,r6
      0066A2 C0 04            [24]18366 	push	ar4
      0066A4 C0 03            [24]18367 	push	ar3
      0066A6 C0 02            [24]18368 	push	ar2
      0066A8 12r00r00         [24]18369 	lcall	___memcpy
      0066AB D0 02            [24]18370 	pop	ar2
      0066AD D0 03            [24]18371 	pop	ar3
      0066AF D0 04            [24]18372 	pop	ar4
                                  18373 ;	ff15\source\ff.c:4119: fp->flag |= FA_DIRTY;
      0066B1 74 0F            [12]18374 	mov	a,#0x0f
      0066B3 25*54            [12]18375 	add	a,_f_write_sloc6_1_0
      0066B5 FD               [12]18376 	mov	r5,a
      0066B6 E4               [12]18377 	clr	a
      0066B7 35*55            [12]18378 	addc	a,(_f_write_sloc6_1_0 + 1)
      0066B9 FE               [12]18379 	mov	r6,a
      0066BA AF*56            [24]18380 	mov	r7,(_f_write_sloc6_1_0 + 2)
      0066BC 8D 82            [24]18381 	mov	dpl,r5
      0066BE 8E 83            [24]18382 	mov	dph,r6
      0066C0 8F F0            [24]18383 	mov	b,r7
      0066C2 12r00r00         [24]18384 	lcall	__gptrget
      0066C5 FC               [12]18385 	mov	r4,a
      0066C6 43 04 80         [24]18386 	orl	ar4,#0x80
      0066C9 8D 82            [24]18387 	mov	dpl,r5
      0066CB 8E 83            [24]18388 	mov	dph,r6
      0066CD 8F F0            [24]18389 	mov	b,r7
      0066CF EC               [12]18390 	mov	a,r4
      0066D0 12r00r00         [24]18391 	lcall	__gptrput
                                  18392 ;	ff15\source\ff.c:4125: LEAVE_FF(fs, FR_OK);
      0066D3 D0 04            [24]18393 	pop	ar4
      0066D5 D0 03            [24]18394 	pop	ar3
      0066D7 D0 02            [24]18395 	pop	ar2
                                  18396 ;	ff15\source\ff.c:4119: fp->flag |= FA_DIRTY;
      0066D9                      18397 00147$:
                                  18398 ;	ff15\source\ff.c:4039: for ( ; btw > 0; btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) {	/* Repeat until all data written */
      0066D9 C0 02            [24]18399 	push	ar2
      0066DB C0 03            [24]18400 	push	ar3
      0066DD C0 04            [24]18401 	push	ar4
      0066DF 90r01r80         [24]18402 	mov	dptr,#_f_write_wcnt_65536_293
      0066E2 E0               [24]18403 	movx	a,@dptr
      0066E3 FE               [12]18404 	mov	r6,a
      0066E4 A3               [24]18405 	inc	dptr
      0066E5 E0               [24]18406 	movx	a,@dptr
      0066E6 FF               [12]18407 	mov	r7,a
      0066E7 90r01r70         [24]18408 	mov	dptr,#_f_write_PARM_3
      0066EA E0               [24]18409 	movx	a,@dptr
      0066EB F9               [12]18410 	mov	r1,a
      0066EC A3               [24]18411 	inc	dptr
      0066ED E0               [24]18412 	movx	a,@dptr
      0066EE FD               [12]18413 	mov	r5,a
      0066EF 90r01r70         [24]18414 	mov	dptr,#_f_write_PARM_3
      0066F2 E9               [12]18415 	mov	a,r1
      0066F3 C3               [12]18416 	clr	c
      0066F4 9E               [12]18417 	subb	a,r6
      0066F5 F0               [24]18418 	movx	@dptr,a
      0066F6 ED               [12]18419 	mov	a,r5
      0066F7 9F               [12]18420 	subb	a,r7
      0066F8 A3               [24]18421 	inc	dptr
      0066F9 F0               [24]18422 	movx	@dptr,a
      0066FA 85*75 82         [24]18423 	mov	dpl,_f_write_sloc17_1_0
      0066FD 85*76 83         [24]18424 	mov	dph,(_f_write_sloc17_1_0 + 1)
      006700 85*77 F0         [24]18425 	mov	b,(_f_write_sloc17_1_0 + 2)
      006703 12r00r00         [24]18426 	lcall	__gptrget
      006706 FD               [12]18427 	mov	r5,a
      006707 A3               [24]18428 	inc	dptr
      006708 12r00r00         [24]18429 	lcall	__gptrget
      00670B F9               [12]18430 	mov	r1,a
      00670C EE               [12]18431 	mov	a,r6
      00670D 2D               [12]18432 	add	a,r5
      00670E FD               [12]18433 	mov	r5,a
      00670F EF               [12]18434 	mov	a,r7
      006710 39               [12]18435 	addc	a,r1
      006711 F9               [12]18436 	mov	r1,a
      006712 85*75 82         [24]18437 	mov	dpl,_f_write_sloc17_1_0
      006715 85*76 83         [24]18438 	mov	dph,(_f_write_sloc17_1_0 + 1)
      006718 85*77 F0         [24]18439 	mov	b,(_f_write_sloc17_1_0 + 2)
      00671B ED               [12]18440 	mov	a,r5
      00671C 12r00r00         [24]18441 	lcall	__gptrput
      00671F A3               [24]18442 	inc	dptr
      006720 E9               [12]18443 	mov	a,r1
      006721 12r00r00         [24]18444 	lcall	__gptrput
      006724 90r01r86         [24]18445 	mov	dptr,#_f_write_wbuff_65536_293
      006727 E0               [24]18446 	movx	a,@dptr
      006728 F8               [12]18447 	mov	r0,a
      006729 A3               [24]18448 	inc	dptr
      00672A E0               [24]18449 	movx	a,@dptr
      00672B F9               [12]18450 	mov	r1,a
      00672C A3               [24]18451 	inc	dptr
      00672D E0               [24]18452 	movx	a,@dptr
      00672E FD               [12]18453 	mov	r5,a
      00672F 90r01r86         [24]18454 	mov	dptr,#_f_write_wbuff_65536_293
      006732 EE               [12]18455 	mov	a,r6
      006733 28               [12]18456 	add	a,r0
      006734 F0               [24]18457 	movx	@dptr,a
      006735 EF               [12]18458 	mov	a,r7
      006736 39               [12]18459 	addc	a,r1
      006737 A3               [24]18460 	inc	dptr
      006738 F0               [24]18461 	movx	@dptr,a
      006739 ED               [12]18462 	mov	a,r5
      00673A A3               [24]18463 	inc	dptr
      00673B F0               [24]18464 	movx	@dptr,a
      00673C 74 11            [12]18465 	mov	a,#0x11
      00673E 25*5D            [12]18466 	add	a,_f_write_sloc9_1_0
      006740 F5*71            [12]18467 	mov	_f_write_sloc16_1_0,a
      006742 E4               [12]18468 	clr	a
      006743 35*5E            [12]18469 	addc	a,(_f_write_sloc9_1_0 + 1)
      006745 F5*72            [12]18470 	mov	(_f_write_sloc16_1_0 + 1),a
      006747 85*5F*73         [24]18471 	mov	(_f_write_sloc16_1_0 + 2),(_f_write_sloc9_1_0 + 2)
      00674A 85*71 82         [24]18472 	mov	dpl,_f_write_sloc16_1_0
      00674D 85*72 83         [24]18473 	mov	dph,(_f_write_sloc16_1_0 + 1)
      006750 85*73 F0         [24]18474 	mov	b,(_f_write_sloc16_1_0 + 2)
      006753 12r00r00         [24]18475 	lcall	__gptrget
      006756 FA               [12]18476 	mov	r2,a
      006757 A3               [24]18477 	inc	dptr
      006758 12r00r00         [24]18478 	lcall	__gptrget
      00675B FB               [12]18479 	mov	r3,a
      00675C A3               [24]18480 	inc	dptr
      00675D 12r00r00         [24]18481 	lcall	__gptrget
      006760 FC               [12]18482 	mov	r4,a
      006761 A3               [24]18483 	inc	dptr
      006762 12r00r00         [24]18484 	lcall	__gptrget
      006765 FD               [12]18485 	mov	r5,a
      006766 8E 00            [24]18486 	mov	ar0,r6
      006768 8F 01            [24]18487 	mov	ar1,r7
      00676A E4               [12]18488 	clr	a
      00676B FE               [12]18489 	mov	r6,a
      00676C FF               [12]18490 	mov	r7,a
      00676D E8               [12]18491 	mov	a,r0
      00676E 2A               [12]18492 	add	a,r2
      00676F FA               [12]18493 	mov	r2,a
      006770 E9               [12]18494 	mov	a,r1
      006771 3B               [12]18495 	addc	a,r3
      006772 FB               [12]18496 	mov	r3,a
      006773 EE               [12]18497 	mov	a,r6
      006774 3C               [12]18498 	addc	a,r4
      006775 FC               [12]18499 	mov	r4,a
      006776 EF               [12]18500 	mov	a,r7
      006777 3D               [12]18501 	addc	a,r5
      006778 FD               [12]18502 	mov	r5,a
      006779 85*71 82         [24]18503 	mov	dpl,_f_write_sloc16_1_0
      00677C 85*72 83         [24]18504 	mov	dph,(_f_write_sloc16_1_0 + 1)
      00677F 85*73 F0         [24]18505 	mov	b,(_f_write_sloc16_1_0 + 2)
      006782 EA               [12]18506 	mov	a,r2
      006783 12r00r00         [24]18507 	lcall	__gptrput
      006786 A3               [24]18508 	inc	dptr
      006787 EB               [12]18509 	mov	a,r3
      006788 12r00r00         [24]18510 	lcall	__gptrput
      00678B A3               [24]18511 	inc	dptr
      00678C EC               [12]18512 	mov	a,r4
      00678D 12r00r00         [24]18513 	lcall	__gptrput
      006790 A3               [24]18514 	inc	dptr
      006791 ED               [12]18515 	mov	a,r5
      006792 12r00r00         [24]18516 	lcall	__gptrput
      006795 74 0B            [12]18517 	mov	a,#0x0b
      006797 25*5D            [12]18518 	add	a,_f_write_sloc9_1_0
      006799 F5*6D            [12]18519 	mov	_f_write_sloc15_1_0,a
      00679B E4               [12]18520 	clr	a
      00679C 35*5E            [12]18521 	addc	a,(_f_write_sloc9_1_0 + 1)
      00679E F5*6E            [12]18522 	mov	(_f_write_sloc15_1_0 + 1),a
      0067A0 85*5F*6F         [24]18523 	mov	(_f_write_sloc15_1_0 + 2),(_f_write_sloc9_1_0 + 2)
      0067A3 85*6D 82         [24]18524 	mov	dpl,_f_write_sloc15_1_0
      0067A6 85*6E 83         [24]18525 	mov	dph,(_f_write_sloc15_1_0 + 1)
      0067A9 85*6F F0         [24]18526 	mov	b,(_f_write_sloc15_1_0 + 2)
      0067AC 12r00r00         [24]18527 	lcall	__gptrget
      0067AF F8               [12]18528 	mov	r0,a
      0067B0 A3               [24]18529 	inc	dptr
      0067B1 12r00r00         [24]18530 	lcall	__gptrget
      0067B4 F9               [12]18531 	mov	r1,a
      0067B5 A3               [24]18532 	inc	dptr
      0067B6 12r00r00         [24]18533 	lcall	__gptrget
      0067B9 FE               [12]18534 	mov	r6,a
      0067BA A3               [24]18535 	inc	dptr
      0067BB 12r00r00         [24]18536 	lcall	__gptrget
      0067BE FF               [12]18537 	mov	r7,a
      0067BF C3               [12]18538 	clr	c
      0067C0 E8               [12]18539 	mov	a,r0
      0067C1 9A               [12]18540 	subb	a,r2
      0067C2 E9               [12]18541 	mov	a,r1
      0067C3 9B               [12]18542 	subb	a,r3
      0067C4 EE               [12]18543 	mov	a,r6
      0067C5 9C               [12]18544 	subb	a,r4
      0067C6 EF               [12]18545 	mov	a,r7
      0067C7 9D               [12]18546 	subb	a,r5
      0067C8 D0 04            [24]18547 	pop	ar4
      0067CA D0 03            [24]18548 	pop	ar3
      0067CC D0 02            [24]18549 	pop	ar2
      0067CE 50 1E            [24]18550 	jnc	00155$
      0067D0 85*71 82         [24]18551 	mov	dpl,_f_write_sloc16_1_0
      0067D3 85*72 83         [24]18552 	mov	dph,(_f_write_sloc16_1_0 + 1)
      0067D6 85*73 F0         [24]18553 	mov	b,(_f_write_sloc16_1_0 + 2)
      0067D9 12r00r00         [24]18554 	lcall	__gptrget
      0067DC F9               [12]18555 	mov	r1,a
      0067DD A3               [24]18556 	inc	dptr
      0067DE 12r00r00         [24]18557 	lcall	__gptrget
      0067E1 FD               [12]18558 	mov	r5,a
      0067E2 A3               [24]18559 	inc	dptr
      0067E3 12r00r00         [24]18560 	lcall	__gptrget
      0067E6 FE               [12]18561 	mov	r6,a
      0067E7 A3               [24]18562 	inc	dptr
      0067E8 12r00r00         [24]18563 	lcall	__gptrget
      0067EB FF               [12]18564 	mov	r7,a
      0067EC 80 1C            [24]18565 	sjmp	00156$
      0067EE                      18566 00155$:
      0067EE 85*6D 82         [24]18567 	mov	dpl,_f_write_sloc15_1_0
      0067F1 85*6E 83         [24]18568 	mov	dph,(_f_write_sloc15_1_0 + 1)
      0067F4 85*6F F0         [24]18569 	mov	b,(_f_write_sloc15_1_0 + 2)
      0067F7 12r00r00         [24]18570 	lcall	__gptrget
      0067FA F9               [12]18571 	mov	r1,a
      0067FB A3               [24]18572 	inc	dptr
      0067FC 12r00r00         [24]18573 	lcall	__gptrget
      0067FF FD               [12]18574 	mov	r5,a
      006800 A3               [24]18575 	inc	dptr
      006801 12r00r00         [24]18576 	lcall	__gptrget
      006804 FE               [12]18577 	mov	r6,a
      006805 A3               [24]18578 	inc	dptr
      006806 12r00r00         [24]18579 	lcall	__gptrget
      006809 FF               [12]18580 	mov	r7,a
      00680A                      18581 00156$:
      00680A 85*6D 82         [24]18582 	mov	dpl,_f_write_sloc15_1_0
      00680D 85*6E 83         [24]18583 	mov	dph,(_f_write_sloc15_1_0 + 1)
      006810 85*6F F0         [24]18584 	mov	b,(_f_write_sloc15_1_0 + 2)
      006813 E9               [12]18585 	mov	a,r1
      006814 12r00r00         [24]18586 	lcall	__gptrput
      006817 A3               [24]18587 	inc	dptr
      006818 ED               [12]18588 	mov	a,r5
      006819 12r00r00         [24]18589 	lcall	__gptrput
      00681C A3               [24]18590 	inc	dptr
      00681D EE               [12]18591 	mov	a,r6
      00681E 12r00r00         [24]18592 	lcall	__gptrput
      006821 A3               [24]18593 	inc	dptr
      006822 EF               [12]18594 	mov	a,r7
      006823 12r00r00         [24]18595 	lcall	__gptrput
      006826 02r5ErBD         [24]18596 	ljmp	00150$
      006829                      18597 00148$:
                                  18598 ;	ff15\source\ff.c:4123: fp->flag |= FA_MODIFIED;				/* Set file change flag */
      006829 90r01r75         [24]18599 	mov	dptr,#_f_write_fp_65536_292
      00682C E0               [24]18600 	movx	a,@dptr
      00682D FD               [12]18601 	mov	r5,a
      00682E A3               [24]18602 	inc	dptr
      00682F E0               [24]18603 	movx	a,@dptr
      006830 FE               [12]18604 	mov	r6,a
      006831 A3               [24]18605 	inc	dptr
      006832 E0               [24]18606 	movx	a,@dptr
      006833 FF               [12]18607 	mov	r7,a
      006834 74 0F            [12]18608 	mov	a,#0x0f
      006836 2D               [12]18609 	add	a,r5
      006837 FD               [12]18610 	mov	r5,a
      006838 E4               [12]18611 	clr	a
      006839 3E               [12]18612 	addc	a,r6
      00683A FE               [12]18613 	mov	r6,a
      00683B 8D 82            [24]18614 	mov	dpl,r5
      00683D 8E 83            [24]18615 	mov	dph,r6
      00683F 8F F0            [24]18616 	mov	b,r7
      006841 12r00r00         [24]18617 	lcall	__gptrget
      006844 FC               [12]18618 	mov	r4,a
      006845 43 04 40         [24]18619 	orl	ar4,#0x40
      006848 8D 82            [24]18620 	mov	dpl,r5
      00684A 8E 83            [24]18621 	mov	dph,r6
      00684C 8F F0            [24]18622 	mov	b,r7
      00684E EC               [12]18623 	mov	a,r4
      00684F 12r00r00         [24]18624 	lcall	__gptrput
                                  18625 ;	ff15\source\ff.c:4125: LEAVE_FF(fs, FR_OK);
      006852 75 82 00         [24]18626 	mov	dpl,#0x00
                                  18627 ;	ff15\source\ff.c:4126: }
      006855 22               [24]18628 	ret
                                  18629 ;------------------------------------------------------------
                                  18630 ;Allocation info for local variables in function 'f_sync'
                                  18631 ;------------------------------------------------------------
                                  18632 ;sloc0                     Allocated with name '_f_sync_sloc0_1_0'
                                  18633 ;sloc1                     Allocated with name '_f_sync_sloc1_1_0'
                                  18634 ;sloc2                     Allocated with name '_f_sync_sloc2_1_0'
                                  18635 ;fp                        Allocated with name '_f_sync_fp_65536_314'
                                  18636 ;res                       Allocated with name '_f_sync_res_65536_315'
                                  18637 ;fs                        Allocated with name '_f_sync_fs_65536_315'
                                  18638 ;tm                        Allocated with name '_f_sync_tm_65536_315'
                                  18639 ;dir                       Allocated with name '_f_sync_dir_65536_315'
                                  18640 ;------------------------------------------------------------
                                  18641 ;	ff15\source\ff.c:4135: FRESULT f_sync (
                                  18642 ;	-----------------------------------------
                                  18643 ;	 function f_sync
                                  18644 ;	-----------------------------------------
      006856                      18645 _f_sync:
      006856 AF F0            [24]18646 	mov	r7,b
      006858 AE 83            [24]18647 	mov	r6,dph
      00685A E5 82            [12]18648 	mov	a,dpl
      00685C 90r01r89         [24]18649 	mov	dptr,#_f_sync_fp_65536_314
      00685F F0               [24]18650 	movx	@dptr,a
      006860 EE               [12]18651 	mov	a,r6
      006861 A3               [24]18652 	inc	dptr
      006862 F0               [24]18653 	movx	@dptr,a
      006863 EF               [12]18654 	mov	a,r7
      006864 A3               [24]18655 	inc	dptr
      006865 F0               [24]18656 	movx	@dptr,a
                                  18657 ;	ff15\source\ff.c:4145: res = validate(&fp->obj, &fs);	/* Check validity of the file object */
      006866 90r01r89         [24]18658 	mov	dptr,#_f_sync_fp_65536_314
      006869 E0               [24]18659 	movx	a,@dptr
      00686A FD               [12]18660 	mov	r5,a
      00686B A3               [24]18661 	inc	dptr
      00686C E0               [24]18662 	movx	a,@dptr
      00686D FE               [12]18663 	mov	r6,a
      00686E A3               [24]18664 	inc	dptr
      00686F E0               [24]18665 	movx	a,@dptr
      006870 FF               [12]18666 	mov	r7,a
      006871 90r00rFF         [24]18667 	mov	dptr,#_validate_PARM_2
      006874 74r8D            [12]18668 	mov	a,#_f_sync_fs_65536_315
      006876 F0               [24]18669 	movx	@dptr,a
      006877 74s01            [12]18670 	mov	a,#(_f_sync_fs_65536_315 >> 8)
      006879 A3               [24]18671 	inc	dptr
      00687A F0               [24]18672 	movx	@dptr,a
      00687B E4               [12]18673 	clr	a
      00687C A3               [24]18674 	inc	dptr
      00687D F0               [24]18675 	movx	@dptr,a
      00687E 8D 82            [24]18676 	mov	dpl,r5
      006880 8E 83            [24]18677 	mov	dph,r6
      006882 8F F0            [24]18678 	mov	b,r7
      006884 12r49r3E         [24]18679 	lcall	_validate
      006887 AF 82            [24]18680 	mov	r7,dpl
      006889 90r01r8C         [24]18681 	mov	dptr,#_f_sync_res_65536_315
      00688C EF               [12]18682 	mov	a,r7
      00688D F0               [24]18683 	movx	@dptr,a
                                  18684 ;	ff15\source\ff.c:4146: if (res == FR_OK) {
      00688E EF               [12]18685 	mov	a,r7
      00688F 60 03            [24]18686 	jz	00133$
      006891 02r6Br78         [24]18687 	ljmp	00110$
      006894                      18688 00133$:
                                  18689 ;	ff15\source\ff.c:4147: if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
      006894 90r01r89         [24]18690 	mov	dptr,#_f_sync_fp_65536_314
      006897 E0               [24]18691 	movx	a,@dptr
      006898 FF               [12]18692 	mov	r7,a
      006899 A3               [24]18693 	inc	dptr
      00689A E0               [24]18694 	movx	a,@dptr
      00689B FD               [12]18695 	mov	r5,a
      00689C A3               [24]18696 	inc	dptr
      00689D E0               [24]18697 	movx	a,@dptr
      00689E FE               [12]18698 	mov	r6,a
      00689F 74 0F            [12]18699 	mov	a,#0x0f
      0068A1 2F               [12]18700 	add	a,r7
      0068A2 FA               [12]18701 	mov	r2,a
      0068A3 E4               [12]18702 	clr	a
      0068A4 3D               [12]18703 	addc	a,r5
      0068A5 FB               [12]18704 	mov	r3,a
      0068A6 8E 04            [24]18705 	mov	ar4,r6
      0068A8 8A 82            [24]18706 	mov	dpl,r2
      0068AA 8B 83            [24]18707 	mov	dph,r3
      0068AC 8C F0            [24]18708 	mov	b,r4
      0068AE 12r00r00         [24]18709 	lcall	__gptrget
      0068B1 F9               [12]18710 	mov	r1,a
      0068B2 20 E6 03         [24]18711 	jb	acc.6,00134$
      0068B5 02r6Br78         [24]18712 	ljmp	00110$
      0068B8                      18713 00134$:
                                  18714 ;	ff15\source\ff.c:4149: if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
      0068B8 E9               [12]18715 	mov	a,r1
      0068B9 20 E7 03         [24]18716 	jb	acc.7,00135$
      0068BC 02r69r60         [24]18717 	ljmp	00104$
      0068BF                      18718 00135$:
                                  18719 ;	ff15\source\ff.c:4150: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
      0068BF C0 02            [24]18720 	push	ar2
      0068C1 C0 03            [24]18721 	push	ar3
      0068C3 C0 04            [24]18722 	push	ar4
      0068C5 90r01r8D         [24]18723 	mov	dptr,#_f_sync_fs_65536_315
      0068C8 E0               [24]18724 	movx	a,@dptr
      0068C9 F8               [12]18725 	mov	r0,a
      0068CA A3               [24]18726 	inc	dptr
      0068CB E0               [24]18727 	movx	a,@dptr
      0068CC F9               [12]18728 	mov	r1,a
      0068CD A3               [24]18729 	inc	dptr
      0068CE E0               [24]18730 	movx	a,@dptr
      0068CF FC               [12]18731 	mov	r4,a
      0068D0 08               [12]18732 	inc	r0
      0068D1 B8 00 01         [24]18733 	cjne	r0,#0x00,00136$
      0068D4 09               [12]18734 	inc	r1
      0068D5                      18735 00136$:
      0068D5 88 82            [24]18736 	mov	dpl,r0
      0068D7 89 83            [24]18737 	mov	dph,r1
      0068D9 8C F0            [24]18738 	mov	b,r4
      0068DB 12r00r00         [24]18739 	lcall	__gptrget
      0068DE F8               [12]18740 	mov	r0,a
      0068DF 74 24            [12]18741 	mov	a,#0x24
      0068E1 2F               [12]18742 	add	a,r7
      0068E2 FA               [12]18743 	mov	r2,a
      0068E3 E4               [12]18744 	clr	a
      0068E4 3D               [12]18745 	addc	a,r5
      0068E5 FB               [12]18746 	mov	r3,a
      0068E6 8E 04            [24]18747 	mov	ar4,r6
      0068E8 74 19            [12]18748 	mov	a,#0x19
      0068EA 2F               [12]18749 	add	a,r7
      0068EB FF               [12]18750 	mov	r7,a
      0068EC E4               [12]18751 	clr	a
      0068ED 3D               [12]18752 	addc	a,r5
      0068EE FD               [12]18753 	mov	r5,a
      0068EF 8F 82            [24]18754 	mov	dpl,r7
      0068F1 8D 83            [24]18755 	mov	dph,r5
      0068F3 8E F0            [24]18756 	mov	b,r6
      0068F5 12r00r00         [24]18757 	lcall	__gptrget
      0068F8 F9               [12]18758 	mov	r1,a
      0068F9 A3               [24]18759 	inc	dptr
      0068FA 12r00r00         [24]18760 	lcall	__gptrget
      0068FD FD               [12]18761 	mov	r5,a
      0068FE A3               [24]18762 	inc	dptr
      0068FF 12r00r00         [24]18763 	lcall	__gptrget
      006902 FE               [12]18764 	mov	r6,a
      006903 A3               [24]18765 	inc	dptr
      006904 12r00r00         [24]18766 	lcall	__gptrget
      006907 FF               [12]18767 	mov	r7,a
      006908 90r00r00         [24]18768 	mov	dptr,#_disk_write_PARM_2
      00690B EA               [12]18769 	mov	a,r2
      00690C F0               [24]18770 	movx	@dptr,a
      00690D EB               [12]18771 	mov	a,r3
      00690E A3               [24]18772 	inc	dptr
      00690F F0               [24]18773 	movx	@dptr,a
      006910 EC               [12]18774 	mov	a,r4
      006911 A3               [24]18775 	inc	dptr
      006912 F0               [24]18776 	movx	@dptr,a
      006913 90r00r00         [24]18777 	mov	dptr,#_disk_write_PARM_3
      006916 E9               [12]18778 	mov	a,r1
      006917 F0               [24]18779 	movx	@dptr,a
      006918 ED               [12]18780 	mov	a,r5
      006919 A3               [24]18781 	inc	dptr
      00691A F0               [24]18782 	movx	@dptr,a
      00691B EE               [12]18783 	mov	a,r6
      00691C A3               [24]18784 	inc	dptr
      00691D F0               [24]18785 	movx	@dptr,a
      00691E EF               [12]18786 	mov	a,r7
      00691F A3               [24]18787 	inc	dptr
      006920 F0               [24]18788 	movx	@dptr,a
      006921 90r00r00         [24]18789 	mov	dptr,#_disk_write_PARM_4
      006924 74 01            [12]18790 	mov	a,#0x01
      006926 F0               [24]18791 	movx	@dptr,a
      006927 E4               [12]18792 	clr	a
      006928 A3               [24]18793 	inc	dptr
      006929 F0               [24]18794 	movx	@dptr,a
      00692A 88 82            [24]18795 	mov	dpl,r0
      00692C C0 04            [24]18796 	push	ar4
      00692E C0 03            [24]18797 	push	ar3
      006930 C0 02            [24]18798 	push	ar2
      006932 12r00r00         [24]18799 	lcall	_disk_write
      006935 E5 82            [12]18800 	mov	a,dpl
      006937 D0 02            [24]18801 	pop	ar2
      006939 D0 03            [24]18802 	pop	ar3
      00693B D0 04            [24]18803 	pop	ar4
      00693D D0 04            [24]18804 	pop	ar4
      00693F D0 03            [24]18805 	pop	ar3
      006941 D0 02            [24]18806 	pop	ar2
      006943 60 04            [24]18807 	jz	00102$
      006945 75 82 01         [24]18808 	mov	dpl,#0x01
      006948 22               [24]18809 	ret
      006949                      18810 00102$:
                                  18811 ;	ff15\source\ff.c:4151: fp->flag &= (BYTE)~FA_DIRTY;
      006949 8A 82            [24]18812 	mov	dpl,r2
      00694B 8B 83            [24]18813 	mov	dph,r3
      00694D 8C F0            [24]18814 	mov	b,r4
      00694F 12r00r00         [24]18815 	lcall	__gptrget
      006952 FF               [12]18816 	mov	r7,a
      006953 53 07 7F         [24]18817 	anl	ar7,#0x7f
      006956 8A 82            [24]18818 	mov	dpl,r2
      006958 8B 83            [24]18819 	mov	dph,r3
      00695A 8C F0            [24]18820 	mov	b,r4
      00695C EF               [12]18821 	mov	a,r7
      00695D 12r00r00         [24]18822 	lcall	__gptrput
      006960                      18823 00104$:
                                  18824 ;	ff15\source\ff.c:4155: tm = GET_FATTIME();				/* Modified time */
      006960 12r00r00         [24]18825 	lcall	_get_fattime
      006963 85 82*7E         [24]18826 	mov	_f_sync_sloc2_1_0,dpl
      006966 85 83*7F         [24]18827 	mov	(_f_sync_sloc2_1_0 + 1),dph
      006969 85 F0*80         [24]18828 	mov	(_f_sync_sloc2_1_0 + 2),b
      00696C F5*81            [12]18829 	mov	(_f_sync_sloc2_1_0 + 3),a
                                  18830 ;	ff15\source\ff.c:4188: res = move_window(fs, fp->dir_sect);
      00696E 90r01r8D         [24]18831 	mov	dptr,#_f_sync_fs_65536_315
      006971 E0               [24]18832 	movx	a,@dptr
      006972 F5*7B            [12]18833 	mov	_f_sync_sloc1_1_0,a
      006974 A3               [24]18834 	inc	dptr
      006975 E0               [24]18835 	movx	a,@dptr
      006976 F5*7C            [12]18836 	mov	(_f_sync_sloc1_1_0 + 1),a
      006978 A3               [24]18837 	inc	dptr
      006979 E0               [24]18838 	movx	a,@dptr
      00697A F5*7D            [12]18839 	mov	(_f_sync_sloc1_1_0 + 2),a
      00697C 90r01r89         [24]18840 	mov	dptr,#_f_sync_fp_65536_314
      00697F E0               [24]18841 	movx	a,@dptr
      006980 F5*78            [12]18842 	mov	_f_sync_sloc0_1_0,a
      006982 A3               [24]18843 	inc	dptr
      006983 E0               [24]18844 	movx	a,@dptr
      006984 F5*79            [12]18845 	mov	(_f_sync_sloc0_1_0 + 1),a
      006986 A3               [24]18846 	inc	dptr
      006987 E0               [24]18847 	movx	a,@dptr
      006988 F5*7A            [12]18848 	mov	(_f_sync_sloc0_1_0 + 2),a
      00698A 74 1D            [12]18849 	mov	a,#0x1d
      00698C 25*78            [12]18850 	add	a,_f_sync_sloc0_1_0
      00698E F8               [12]18851 	mov	r0,a
      00698F E4               [12]18852 	clr	a
      006990 35*79            [12]18853 	addc	a,(_f_sync_sloc0_1_0 + 1)
      006992 FB               [12]18854 	mov	r3,a
      006993 AA*7A            [24]18855 	mov	r2,(_f_sync_sloc0_1_0 + 2)
      006995 88 82            [24]18856 	mov	dpl,r0
      006997 8B 83            [24]18857 	mov	dph,r3
      006999 8A F0            [24]18858 	mov	b,r2
      00699B 12r00r00         [24]18859 	lcall	__gptrget
      00699E F8               [12]18860 	mov	r0,a
      00699F A3               [24]18861 	inc	dptr
      0069A0 12r00r00         [24]18862 	lcall	__gptrget
      0069A3 F9               [12]18863 	mov	r1,a
      0069A4 A3               [24]18864 	inc	dptr
      0069A5 12r00r00         [24]18865 	lcall	__gptrget
      0069A8 FA               [12]18866 	mov	r2,a
      0069A9 A3               [24]18867 	inc	dptr
      0069AA 12r00r00         [24]18868 	lcall	__gptrget
      0069AD FB               [12]18869 	mov	r3,a
      0069AE 90r00r1D         [24]18870 	mov	dptr,#_move_window_PARM_2
      0069B1 E8               [12]18871 	mov	a,r0
      0069B2 F0               [24]18872 	movx	@dptr,a
      0069B3 E9               [12]18873 	mov	a,r1
      0069B4 A3               [24]18874 	inc	dptr
      0069B5 F0               [24]18875 	movx	@dptr,a
      0069B6 EA               [12]18876 	mov	a,r2
      0069B7 A3               [24]18877 	inc	dptr
      0069B8 F0               [24]18878 	movx	@dptr,a
      0069B9 EB               [12]18879 	mov	a,r3
      0069BA A3               [24]18880 	inc	dptr
      0069BB F0               [24]18881 	movx	@dptr,a
      0069BC 85*7B 82         [24]18882 	mov	dpl,_f_sync_sloc1_1_0
      0069BF 85*7C 83         [24]18883 	mov	dph,(_f_sync_sloc1_1_0 + 1)
      0069C2 85*7D F0         [24]18884 	mov	b,(_f_sync_sloc1_1_0 + 2)
      0069C5 12r05r18         [24]18885 	lcall	_move_window
      0069C8 AB 82            [24]18886 	mov	r3,dpl
      0069CA 90r01r8C         [24]18887 	mov	dptr,#_f_sync_res_65536_315
      0069CD EB               [12]18888 	mov	a,r3
      0069CE F0               [24]18889 	movx	@dptr,a
                                  18890 ;	ff15\source\ff.c:4189: if (res == FR_OK) {
      0069CF EB               [12]18891 	mov	a,r3
      0069D0 60 03            [24]18892 	jz	00138$
      0069D2 02r6Br78         [24]18893 	ljmp	00110$
      0069D5                      18894 00138$:
                                  18895 ;	ff15\source\ff.c:4190: dir = fp->dir_ptr;
      0069D5 74 21            [12]18896 	mov	a,#0x21
      0069D7 25*78            [12]18897 	add	a,_f_sync_sloc0_1_0
      0069D9 F9               [12]18898 	mov	r1,a
      0069DA E4               [12]18899 	clr	a
      0069DB 35*79            [12]18900 	addc	a,(_f_sync_sloc0_1_0 + 1)
      0069DD FA               [12]18901 	mov	r2,a
      0069DE AB*7A            [24]18902 	mov	r3,(_f_sync_sloc0_1_0 + 2)
      0069E0 89 82            [24]18903 	mov	dpl,r1
      0069E2 8A 83            [24]18904 	mov	dph,r2
      0069E4 8B F0            [24]18905 	mov	b,r3
      0069E6 12r00r00         [24]18906 	lcall	__gptrget
      0069E9 F9               [12]18907 	mov	r1,a
      0069EA A3               [24]18908 	inc	dptr
      0069EB 12r00r00         [24]18909 	lcall	__gptrget
      0069EE FA               [12]18910 	mov	r2,a
      0069EF A3               [24]18911 	inc	dptr
      0069F0 12r00r00         [24]18912 	lcall	__gptrget
      0069F3 FB               [12]18913 	mov	r3,a
                                  18914 ;	ff15\source\ff.c:4191: dir[DIR_Attr] |= AM_ARC;						/* Set archive attribute to indicate that the file has been changed */
      0069F4 74 0B            [12]18915 	mov	a,#0x0b
      0069F6 29               [12]18916 	add	a,r1
      0069F7 F8               [12]18917 	mov	r0,a
      0069F8 E4               [12]18918 	clr	a
      0069F9 3A               [12]18919 	addc	a,r2
      0069FA FE               [12]18920 	mov	r6,a
      0069FB 8B 07            [24]18921 	mov	ar7,r3
      0069FD 88 82            [24]18922 	mov	dpl,r0
      0069FF 8E 83            [24]18923 	mov	dph,r6
      006A01 8F F0            [24]18924 	mov	b,r7
      006A03 12r00r00         [24]18925 	lcall	__gptrget
      006A06 FD               [12]18926 	mov	r5,a
      006A07 43 05 20         [24]18927 	orl	ar5,#0x20
      006A0A 88 82            [24]18928 	mov	dpl,r0
      006A0C 8E 83            [24]18929 	mov	dph,r6
      006A0E 8F F0            [24]18930 	mov	b,r7
      006A10 ED               [12]18931 	mov	a,r5
      006A11 12r00r00         [24]18932 	lcall	__gptrput
                                  18933 ;	ff15\source\ff.c:4192: st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation information  */
      006A14 85*78 82         [24]18934 	mov	dpl,_f_sync_sloc0_1_0
      006A17 85*79 83         [24]18935 	mov	dph,(_f_sync_sloc0_1_0 + 1)
      006A1A 85*7A F0         [24]18936 	mov	b,(_f_sync_sloc0_1_0 + 2)
      006A1D 12r00r00         [24]18937 	lcall	__gptrget
      006A20 F5*7B            [12]18938 	mov	_f_sync_sloc1_1_0,a
      006A22 A3               [24]18939 	inc	dptr
      006A23 12r00r00         [24]18940 	lcall	__gptrget
      006A26 F5*7C            [12]18941 	mov	(_f_sync_sloc1_1_0 + 1),a
      006A28 A3               [24]18942 	inc	dptr
      006A29 12r00r00         [24]18943 	lcall	__gptrget
      006A2C F5*7D            [12]18944 	mov	(_f_sync_sloc1_1_0 + 2),a
      006A2E 74 07            [12]18945 	mov	a,#0x07
      006A30 25*78            [12]18946 	add	a,_f_sync_sloc0_1_0
      006A32 F8               [12]18947 	mov	r0,a
      006A33 E4               [12]18948 	clr	a
      006A34 35*79            [12]18949 	addc	a,(_f_sync_sloc0_1_0 + 1)
      006A36 FC               [12]18950 	mov	r4,a
      006A37 AF*7A            [24]18951 	mov	r7,(_f_sync_sloc0_1_0 + 2)
      006A39 88 82            [24]18952 	mov	dpl,r0
      006A3B 8C 83            [24]18953 	mov	dph,r4
      006A3D 8F F0            [24]18954 	mov	b,r7
      006A3F 12r00r00         [24]18955 	lcall	__gptrget
      006A42 F8               [12]18956 	mov	r0,a
      006A43 A3               [24]18957 	inc	dptr
      006A44 12r00r00         [24]18958 	lcall	__gptrget
      006A47 FC               [12]18959 	mov	r4,a
      006A48 A3               [24]18960 	inc	dptr
      006A49 12r00r00         [24]18961 	lcall	__gptrget
      006A4C FF               [12]18962 	mov	r7,a
      006A4D A3               [24]18963 	inc	dptr
      006A4E 12r00r00         [24]18964 	lcall	__gptrget
      006A51 FE               [12]18965 	mov	r6,a
      006A52 90r00r8F         [24]18966 	mov	dptr,#_st_clust_PARM_2
      006A55 E9               [12]18967 	mov	a,r1
      006A56 F0               [24]18968 	movx	@dptr,a
      006A57 EA               [12]18969 	mov	a,r2
      006A58 A3               [24]18970 	inc	dptr
      006A59 F0               [24]18971 	movx	@dptr,a
      006A5A EB               [12]18972 	mov	a,r3
      006A5B A3               [24]18973 	inc	dptr
      006A5C F0               [24]18974 	movx	@dptr,a
      006A5D 90r00r92         [24]18975 	mov	dptr,#_st_clust_PARM_3
      006A60 E8               [12]18976 	mov	a,r0
      006A61 F0               [24]18977 	movx	@dptr,a
      006A62 EC               [12]18978 	mov	a,r4
      006A63 A3               [24]18979 	inc	dptr
      006A64 F0               [24]18980 	movx	@dptr,a
      006A65 EF               [12]18981 	mov	a,r7
      006A66 A3               [24]18982 	inc	dptr
      006A67 F0               [24]18983 	movx	@dptr,a
      006A68 EE               [12]18984 	mov	a,r6
      006A69 A3               [24]18985 	inc	dptr
      006A6A F0               [24]18986 	movx	@dptr,a
      006A6B 85*7B 82         [24]18987 	mov	dpl,_f_sync_sloc1_1_0
      006A6E 85*7C 83         [24]18988 	mov	dph,(_f_sync_sloc1_1_0 + 1)
      006A71 85*7D F0         [24]18989 	mov	b,(_f_sync_sloc1_1_0 + 2)
      006A74 C0 03            [24]18990 	push	ar3
      006A76 C0 02            [24]18991 	push	ar2
      006A78 C0 01            [24]18992 	push	ar1
      006A7A 12r29r2E         [24]18993 	lcall	_st_clust
      006A7D D0 01            [24]18994 	pop	ar1
      006A7F D0 02            [24]18995 	pop	ar2
      006A81 D0 03            [24]18996 	pop	ar3
                                  18997 ;	ff15\source\ff.c:4193: st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
      006A83 74 1C            [12]18998 	mov	a,#0x1c
      006A85 29               [12]18999 	add	a,r1
      006A86 F5*7B            [12]19000 	mov	_f_sync_sloc1_1_0,a
      006A88 E4               [12]19001 	clr	a
      006A89 3A               [12]19002 	addc	a,r2
      006A8A F5*7C            [12]19003 	mov	(_f_sync_sloc1_1_0 + 1),a
      006A8C 8B*7D            [24]19004 	mov	(_f_sync_sloc1_1_0 + 2),r3
      006A8E 74 0B            [12]19005 	mov	a,#0x0b
      006A90 25*78            [12]19006 	add	a,_f_sync_sloc0_1_0
      006A92 F8               [12]19007 	mov	r0,a
      006A93 E4               [12]19008 	clr	a
      006A94 35*79            [12]19009 	addc	a,(_f_sync_sloc0_1_0 + 1)
      006A96 FC               [12]19010 	mov	r4,a
      006A97 AF*7A            [24]19011 	mov	r7,(_f_sync_sloc0_1_0 + 2)
      006A99 88 82            [24]19012 	mov	dpl,r0
      006A9B 8C 83            [24]19013 	mov	dph,r4
      006A9D 8F F0            [24]19014 	mov	b,r7
      006A9F 12r00r00         [24]19015 	lcall	__gptrget
      006AA2 F8               [12]19016 	mov	r0,a
      006AA3 A3               [24]19017 	inc	dptr
      006AA4 12r00r00         [24]19018 	lcall	__gptrget
      006AA7 FC               [12]19019 	mov	r4,a
      006AA8 A3               [24]19020 	inc	dptr
      006AA9 12r00r00         [24]19021 	lcall	__gptrget
      006AAC FF               [12]19022 	mov	r7,a
      006AAD A3               [24]19023 	inc	dptr
      006AAE 12r00r00         [24]19024 	lcall	__gptrget
      006AB1 FE               [12]19025 	mov	r6,a
      006AB2 90r00r10         [24]19026 	mov	dptr,#_st_dword_PARM_2
      006AB5 E8               [12]19027 	mov	a,r0
      006AB6 F0               [24]19028 	movx	@dptr,a
      006AB7 EC               [12]19029 	mov	a,r4
      006AB8 A3               [24]19030 	inc	dptr
      006AB9 F0               [24]19031 	movx	@dptr,a
      006ABA EF               [12]19032 	mov	a,r7
      006ABB A3               [24]19033 	inc	dptr
      006ABC F0               [24]19034 	movx	@dptr,a
      006ABD EE               [12]19035 	mov	a,r6
      006ABE A3               [24]19036 	inc	dptr
      006ABF F0               [24]19037 	movx	@dptr,a
      006AC0 85*7B 82         [24]19038 	mov	dpl,_f_sync_sloc1_1_0
      006AC3 85*7C 83         [24]19039 	mov	dph,(_f_sync_sloc1_1_0 + 1)
      006AC6 85*7D F0         [24]19040 	mov	b,(_f_sync_sloc1_1_0 + 2)
      006AC9 C0 03            [24]19041 	push	ar3
      006ACB C0 02            [24]19042 	push	ar2
      006ACD C0 01            [24]19043 	push	ar1
      006ACF 12r01r76         [24]19044 	lcall	_st_dword
      006AD2 D0 01            [24]19045 	pop	ar1
      006AD4 D0 02            [24]19046 	pop	ar2
      006AD6 D0 03            [24]19047 	pop	ar3
                                  19048 ;	ff15\source\ff.c:4194: st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
      006AD8 74 16            [12]19049 	mov	a,#0x16
      006ADA 29               [12]19050 	add	a,r1
      006ADB FD               [12]19051 	mov	r5,a
      006ADC E4               [12]19052 	clr	a
      006ADD 3A               [12]19053 	addc	a,r2
      006ADE FE               [12]19054 	mov	r6,a
      006ADF 8B 07            [24]19055 	mov	ar7,r3
      006AE1 90r00r10         [24]19056 	mov	dptr,#_st_dword_PARM_2
      006AE4 E5*7E            [12]19057 	mov	a,_f_sync_sloc2_1_0
      006AE6 F0               [24]19058 	movx	@dptr,a
      006AE7 E5*7F            [12]19059 	mov	a,(_f_sync_sloc2_1_0 + 1)
      006AE9 A3               [24]19060 	inc	dptr
      006AEA F0               [24]19061 	movx	@dptr,a
      006AEB E5*80            [12]19062 	mov	a,(_f_sync_sloc2_1_0 + 2)
      006AED A3               [24]19063 	inc	dptr
      006AEE F0               [24]19064 	movx	@dptr,a
      006AEF E5*81            [12]19065 	mov	a,(_f_sync_sloc2_1_0 + 3)
      006AF1 A3               [24]19066 	inc	dptr
      006AF2 F0               [24]19067 	movx	@dptr,a
      006AF3 8D 82            [24]19068 	mov	dpl,r5
      006AF5 8E 83            [24]19069 	mov	dph,r6
      006AF7 8F F0            [24]19070 	mov	b,r7
      006AF9 C0 03            [24]19071 	push	ar3
      006AFB C0 02            [24]19072 	push	ar2
      006AFD C0 01            [24]19073 	push	ar1
      006AFF 12r01r76         [24]19074 	lcall	_st_dword
      006B02 D0 01            [24]19075 	pop	ar1
      006B04 D0 02            [24]19076 	pop	ar2
      006B06 D0 03            [24]19077 	pop	ar3
                                  19078 ;	ff15\source\ff.c:4195: st_word(dir + DIR_LstAccDate, 0);
      006B08 74 12            [12]19079 	mov	a,#0x12
      006B0A 29               [12]19080 	add	a,r1
      006B0B F9               [12]19081 	mov	r1,a
      006B0C E4               [12]19082 	clr	a
      006B0D 3A               [12]19083 	addc	a,r2
      006B0E FA               [12]19084 	mov	r2,a
      006B0F 90r00r0B         [24]19085 	mov	dptr,#_st_word_PARM_2
      006B12 E4               [12]19086 	clr	a
      006B13 F0               [24]19087 	movx	@dptr,a
      006B14 A3               [24]19088 	inc	dptr
      006B15 F0               [24]19089 	movx	@dptr,a
      006B16 89 82            [24]19090 	mov	dpl,r1
      006B18 8A 83            [24]19091 	mov	dph,r2
      006B1A 8B F0            [24]19092 	mov	b,r3
      006B1C 12r01r02         [24]19093 	lcall	_st_word
                                  19094 ;	ff15\source\ff.c:4196: fs->wflag = 1;
      006B1F 90r01r8D         [24]19095 	mov	dptr,#_f_sync_fs_65536_315
      006B22 E0               [24]19096 	movx	a,@dptr
      006B23 FD               [12]19097 	mov	r5,a
      006B24 A3               [24]19098 	inc	dptr
      006B25 E0               [24]19099 	movx	a,@dptr
      006B26 FE               [12]19100 	mov	r6,a
      006B27 A3               [24]19101 	inc	dptr
      006B28 E0               [24]19102 	movx	a,@dptr
      006B29 FF               [12]19103 	mov	r7,a
      006B2A 74 04            [12]19104 	mov	a,#0x04
      006B2C 2D               [12]19105 	add	a,r5
      006B2D FD               [12]19106 	mov	r5,a
      006B2E E4               [12]19107 	clr	a
      006B2F 3E               [12]19108 	addc	a,r6
      006B30 FE               [12]19109 	mov	r6,a
      006B31 8D 82            [24]19110 	mov	dpl,r5
      006B33 8E 83            [24]19111 	mov	dph,r6
      006B35 8F F0            [24]19112 	mov	b,r7
      006B37 74 01            [12]19113 	mov	a,#0x01
      006B39 12r00r00         [24]19114 	lcall	__gptrput
                                  19115 ;	ff15\source\ff.c:4197: res = sync_fs(fs);					/* Restore it to the directory */
      006B3C 90r01r8D         [24]19116 	mov	dptr,#_f_sync_fs_65536_315
      006B3F E0               [24]19117 	movx	a,@dptr
      006B40 FD               [12]19118 	mov	r5,a
      006B41 A3               [24]19119 	inc	dptr
      006B42 E0               [24]19120 	movx	a,@dptr
      006B43 FE               [12]19121 	mov	r6,a
      006B44 A3               [24]19122 	inc	dptr
      006B45 E0               [24]19123 	movx	a,@dptr
      006B46 FF               [12]19124 	mov	r7,a
      006B47 8D 82            [24]19125 	mov	dpl,r5
      006B49 8E 83            [24]19126 	mov	dph,r6
      006B4B 8F F0            [24]19127 	mov	b,r7
      006B4D 12r06r37         [24]19128 	lcall	_sync_fs
      006B50 E5 82            [12]19129 	mov	a,dpl
      006B52 90r01r8C         [24]19130 	mov	dptr,#_f_sync_res_65536_315
      006B55 F0               [24]19131 	movx	@dptr,a
                                  19132 ;	ff15\source\ff.c:4198: fp->flag &= (BYTE)~FA_MODIFIED;
      006B56 74 0F            [12]19133 	mov	a,#0x0f
      006B58 25*78            [12]19134 	add	a,_f_sync_sloc0_1_0
      006B5A FD               [12]19135 	mov	r5,a
      006B5B E4               [12]19136 	clr	a
      006B5C 35*79            [12]19137 	addc	a,(_f_sync_sloc0_1_0 + 1)
      006B5E FE               [12]19138 	mov	r6,a
      006B5F AF*7A            [24]19139 	mov	r7,(_f_sync_sloc0_1_0 + 2)
      006B61 8D 82            [24]19140 	mov	dpl,r5
      006B63 8E 83            [24]19141 	mov	dph,r6
      006B65 8F F0            [24]19142 	mov	b,r7
      006B67 12r00r00         [24]19143 	lcall	__gptrget
      006B6A FC               [12]19144 	mov	r4,a
      006B6B 53 04 BF         [24]19145 	anl	ar4,#0xbf
      006B6E 8D 82            [24]19146 	mov	dpl,r5
      006B70 8E 83            [24]19147 	mov	dph,r6
      006B72 8F F0            [24]19148 	mov	b,r7
      006B74 EC               [12]19149 	mov	a,r4
      006B75 12r00r00         [24]19150 	lcall	__gptrput
      006B78                      19151 00110$:
                                  19152 ;	ff15\source\ff.c:4204: LEAVE_FF(fs, res);
      006B78 90r01r8C         [24]19153 	mov	dptr,#_f_sync_res_65536_315
      006B7B E0               [24]19154 	movx	a,@dptr
                                  19155 ;	ff15\source\ff.c:4205: }
      006B7C F5 82            [12]19156 	mov	dpl,a
      006B7E 22               [24]19157 	ret
                                  19158 ;------------------------------------------------------------
                                  19159 ;Allocation info for local variables in function 'f_close'
                                  19160 ;------------------------------------------------------------
                                  19161 ;fp                        Allocated with name '_f_close_fp_65536_321'
                                  19162 ;res                       Allocated with name '_f_close_res_65536_322'
                                  19163 ;fs                        Allocated with name '_f_close_fs_65536_322'
                                  19164 ;------------------------------------------------------------
                                  19165 ;	ff15\source\ff.c:4216: FRESULT f_close (
                                  19166 ;	-----------------------------------------
                                  19167 ;	 function f_close
                                  19168 ;	-----------------------------------------
      006B7F                      19169 _f_close:
      006B7F AF F0            [24]19170 	mov	r7,b
      006B81 AE 83            [24]19171 	mov	r6,dph
      006B83 E5 82            [12]19172 	mov	a,dpl
      006B85 90r01r90         [24]19173 	mov	dptr,#_f_close_fp_65536_321
      006B88 F0               [24]19174 	movx	@dptr,a
      006B89 EE               [12]19175 	mov	a,r6
      006B8A A3               [24]19176 	inc	dptr
      006B8B F0               [24]19177 	movx	@dptr,a
      006B8C EF               [12]19178 	mov	a,r7
      006B8D A3               [24]19179 	inc	dptr
      006B8E F0               [24]19180 	movx	@dptr,a
                                  19181 ;	ff15\source\ff.c:4224: res = f_sync(fp);					/* Flush cached data */
      006B8F 90r01r90         [24]19182 	mov	dptr,#_f_close_fp_65536_321
      006B92 E0               [24]19183 	movx	a,@dptr
      006B93 FD               [12]19184 	mov	r5,a
      006B94 A3               [24]19185 	inc	dptr
      006B95 E0               [24]19186 	movx	a,@dptr
      006B96 FE               [12]19187 	mov	r6,a
      006B97 A3               [24]19188 	inc	dptr
      006B98 E0               [24]19189 	movx	a,@dptr
      006B99 FF               [12]19190 	mov	r7,a
      006B9A 8D 82            [24]19191 	mov	dpl,r5
      006B9C 8E 83            [24]19192 	mov	dph,r6
      006B9E 8F F0            [24]19193 	mov	b,r7
      006BA0 12r68r56         [24]19194 	lcall	_f_sync
      006BA3 AF 82            [24]19195 	mov	r7,dpl
      006BA5 90r01r93         [24]19196 	mov	dptr,#_f_close_res_65536_322
      006BA8 EF               [12]19197 	mov	a,r7
      006BA9 F0               [24]19198 	movx	@dptr,a
                                  19199 ;	ff15\source\ff.c:4225: if (res == FR_OK)
      006BAA EF               [12]19200 	mov	a,r7
      006BAB 70 48            [24]19201 	jnz	00104$
                                  19202 ;	ff15\source\ff.c:4228: res = validate(&fp->obj, &fs);	/* Lock volume */
      006BAD 90r01r90         [24]19203 	mov	dptr,#_f_close_fp_65536_321
      006BB0 E0               [24]19204 	movx	a,@dptr
      006BB1 FD               [12]19205 	mov	r5,a
      006BB2 A3               [24]19206 	inc	dptr
      006BB3 E0               [24]19207 	movx	a,@dptr
      006BB4 FE               [12]19208 	mov	r6,a
      006BB5 A3               [24]19209 	inc	dptr
      006BB6 E0               [24]19210 	movx	a,@dptr
      006BB7 FF               [12]19211 	mov	r7,a
      006BB8 90r00rFF         [24]19212 	mov	dptr,#_validate_PARM_2
      006BBB 74r94            [12]19213 	mov	a,#_f_close_fs_65536_322
      006BBD F0               [24]19214 	movx	@dptr,a
      006BBE 74s01            [12]19215 	mov	a,#(_f_close_fs_65536_322 >> 8)
      006BC0 A3               [24]19216 	inc	dptr
      006BC1 F0               [24]19217 	movx	@dptr,a
      006BC2 E4               [12]19218 	clr	a
      006BC3 A3               [24]19219 	inc	dptr
      006BC4 F0               [24]19220 	movx	@dptr,a
      006BC5 8D 82            [24]19221 	mov	dpl,r5
      006BC7 8E 83            [24]19222 	mov	dph,r6
      006BC9 8F F0            [24]19223 	mov	b,r7
      006BCB 12r49r3E         [24]19224 	lcall	_validate
      006BCE AF 82            [24]19225 	mov	r7,dpl
      006BD0 90r01r93         [24]19226 	mov	dptr,#_f_close_res_65536_322
      006BD3 EF               [12]19227 	mov	a,r7
      006BD4 F0               [24]19228 	movx	@dptr,a
                                  19229 ;	ff15\source\ff.c:4229: if (res == FR_OK) {
      006BD5 EF               [12]19230 	mov	a,r7
      006BD6 70 1D            [24]19231 	jnz	00104$
                                  19232 ;	ff15\source\ff.c:4234: fp->obj.fs = 0;	/* Invalidate file object */
      006BD8 90r01r90         [24]19233 	mov	dptr,#_f_close_fp_65536_321
      006BDB E0               [24]19234 	movx	a,@dptr
      006BDC FD               [12]19235 	mov	r5,a
      006BDD A3               [24]19236 	inc	dptr
      006BDE E0               [24]19237 	movx	a,@dptr
      006BDF FE               [12]19238 	mov	r6,a
      006BE0 A3               [24]19239 	inc	dptr
      006BE1 E0               [24]19240 	movx	a,@dptr
      006BE2 FF               [12]19241 	mov	r7,a
      006BE3 8D 82            [24]19242 	mov	dpl,r5
      006BE5 8E 83            [24]19243 	mov	dph,r6
      006BE7 8F F0            [24]19244 	mov	b,r7
      006BE9 E4               [12]19245 	clr	a
      006BEA 12r00r00         [24]19246 	lcall	__gptrput
      006BED A3               [24]19247 	inc	dptr
      006BEE 12r00r00         [24]19248 	lcall	__gptrput
      006BF1 A3               [24]19249 	inc	dptr
      006BF2 12r00r00         [24]19250 	lcall	__gptrput
      006BF5                      19251 00104$:
                                  19252 ;	ff15\source\ff.c:4241: return res;
      006BF5 90r01r93         [24]19253 	mov	dptr,#_f_close_res_65536_322
      006BF8 E0               [24]19254 	movx	a,@dptr
                                  19255 ;	ff15\source\ff.c:4242: }
      006BF9 F5 82            [12]19256 	mov	dpl,a
      006BFB 22               [24]19257 	ret
                                  19258 ;------------------------------------------------------------
                                  19259 ;Allocation info for local variables in function 'f_lseek'
                                  19260 ;------------------------------------------------------------
                                  19261 ;sloc0                     Allocated with name '_f_lseek_sloc0_1_0'
                                  19262 ;sloc1                     Allocated with name '_f_lseek_sloc1_1_0'
                                  19263 ;sloc2                     Allocated with name '_f_lseek_sloc2_1_0'
                                  19264 ;sloc3                     Allocated with name '_f_lseek_sloc3_1_0'
                                  19265 ;sloc4                     Allocated with name '_f_lseek_sloc4_1_0'
                                  19266 ;ofs                       Allocated with name '_f_lseek_PARM_2'
                                  19267 ;fp                        Allocated with name '_f_lseek_fp_65536_325'
                                  19268 ;res                       Allocated with name '_f_lseek_res_65536_326'
                                  19269 ;fs                        Allocated with name '_f_lseek_fs_65536_326'
                                  19270 ;clst                      Allocated with name '_f_lseek_clst_65536_326'
                                  19271 ;bcs                       Allocated with name '_f_lseek_bcs_65536_326'
                                  19272 ;nsect                     Allocated with name '_f_lseek_nsect_65536_326'
                                  19273 ;ifptr                     Allocated with name '_f_lseek_ifptr_65536_326'
                                  19274 ;------------------------------------------------------------
                                  19275 ;	ff15\source\ff.c:4433: FRESULT f_lseek (
                                  19276 ;	-----------------------------------------
                                  19277 ;	 function f_lseek
                                  19278 ;	-----------------------------------------
      006BFC                      19279 _f_lseek:
      006BFC AF F0            [24]19280 	mov	r7,b
      006BFE AE 83            [24]19281 	mov	r6,dph
      006C00 E5 82            [12]19282 	mov	a,dpl
      006C02 90r01r9B         [24]19283 	mov	dptr,#_f_lseek_fp_65536_325
      006C05 F0               [24]19284 	movx	@dptr,a
      006C06 EE               [12]19285 	mov	a,r6
      006C07 A3               [24]19286 	inc	dptr
      006C08 F0               [24]19287 	movx	@dptr,a
      006C09 EF               [12]19288 	mov	a,r7
      006C0A A3               [24]19289 	inc	dptr
      006C0B F0               [24]19290 	movx	@dptr,a
                                  19291 ;	ff15\source\ff.c:4449: res = validate(&fp->obj, &fs);		/* Check validity of the file object */
      006C0C 90r01r9B         [24]19292 	mov	dptr,#_f_lseek_fp_65536_325
      006C0F E0               [24]19293 	movx	a,@dptr
      006C10 FD               [12]19294 	mov	r5,a
      006C11 A3               [24]19295 	inc	dptr
      006C12 E0               [24]19296 	movx	a,@dptr
      006C13 FE               [12]19297 	mov	r6,a
      006C14 A3               [24]19298 	inc	dptr
      006C15 E0               [24]19299 	movx	a,@dptr
      006C16 FF               [12]19300 	mov	r7,a
      006C17 90r00rFF         [24]19301 	mov	dptr,#_validate_PARM_2
      006C1A 74r9F            [12]19302 	mov	a,#_f_lseek_fs_65536_326
      006C1C F0               [24]19303 	movx	@dptr,a
      006C1D 74s01            [12]19304 	mov	a,#(_f_lseek_fs_65536_326 >> 8)
      006C1F A3               [24]19305 	inc	dptr
      006C20 F0               [24]19306 	movx	@dptr,a
      006C21 E4               [12]19307 	clr	a
      006C22 A3               [24]19308 	inc	dptr
      006C23 F0               [24]19309 	movx	@dptr,a
      006C24 8D 82            [24]19310 	mov	dpl,r5
      006C26 8E 83            [24]19311 	mov	dph,r6
      006C28 8F F0            [24]19312 	mov	b,r7
      006C2A 12r49r3E         [24]19313 	lcall	_validate
      006C2D AF 82            [24]19314 	mov	r7,dpl
      006C2F 90r01r9E         [24]19315 	mov	dptr,#_f_lseek_res_65536_326
      006C32 EF               [12]19316 	mov	a,r7
      006C33 F0               [24]19317 	movx	@dptr,a
                                  19318 ;	ff15\source\ff.c:4450: if (res == FR_OK) res = (FRESULT)fp->err;
      006C34 EF               [12]19319 	mov	a,r7
      006C35 70 20            [24]19320 	jnz	00102$
      006C37 90r01r9B         [24]19321 	mov	dptr,#_f_lseek_fp_65536_325
      006C3A E0               [24]19322 	movx	a,@dptr
      006C3B FD               [12]19323 	mov	r5,a
      006C3C A3               [24]19324 	inc	dptr
      006C3D E0               [24]19325 	movx	a,@dptr
      006C3E FE               [12]19326 	mov	r6,a
      006C3F A3               [24]19327 	inc	dptr
      006C40 E0               [24]19328 	movx	a,@dptr
      006C41 FF               [12]19329 	mov	r7,a
      006C42 74 10            [12]19330 	mov	a,#0x10
      006C44 2D               [12]19331 	add	a,r5
      006C45 FD               [12]19332 	mov	r5,a
      006C46 E4               [12]19333 	clr	a
      006C47 3E               [12]19334 	addc	a,r6
      006C48 FE               [12]19335 	mov	r6,a
      006C49 8D 82            [24]19336 	mov	dpl,r5
      006C4B 8E 83            [24]19337 	mov	dph,r6
      006C4D 8F F0            [24]19338 	mov	b,r7
      006C4F 12r00r00         [24]19339 	lcall	__gptrget
      006C52 FD               [12]19340 	mov	r5,a
      006C53 90r01r9E         [24]19341 	mov	dptr,#_f_lseek_res_65536_326
      006C56 F0               [24]19342 	movx	@dptr,a
      006C57                      19343 00102$:
                                  19344 ;	ff15\source\ff.c:4456: if (res != FR_OK) LEAVE_FF(fs, res);
      006C57 90r01r9E         [24]19345 	mov	dptr,#_f_lseek_res_65536_326
      006C5A E0               [24]19346 	movx	a,@dptr
      006C5B FF               [12]19347 	mov	r7,a
      006C5C E0               [24]19348 	movx	a,@dptr
      006C5D 60 03            [24]19349 	jz	00104$
      006C5F 8F 82            [24]19350 	mov	dpl,r7
      006C61 22               [24]19351 	ret
      006C62                      19352 00104$:
                                  19353 ;	ff15\source\ff.c:4515: if (ofs > fp->obj.objsize && (FF_FS_READONLY || !(fp->flag & FA_WRITE))) {	/* In read-only mode, clip offset with the file size */
      006C62 90r01r9B         [24]19354 	mov	dptr,#_f_lseek_fp_65536_325
      006C65 E0               [24]19355 	movx	a,@dptr
      006C66 F5*82            [12]19356 	mov	_f_lseek_sloc0_1_0,a
      006C68 A3               [24]19357 	inc	dptr
      006C69 E0               [24]19358 	movx	a,@dptr
      006C6A F5*83            [12]19359 	mov	(_f_lseek_sloc0_1_0 + 1),a
      006C6C A3               [24]19360 	inc	dptr
      006C6D E0               [24]19361 	movx	a,@dptr
      006C6E F5*84            [12]19362 	mov	(_f_lseek_sloc0_1_0 + 2),a
      006C70 74 0B            [12]19363 	mov	a,#0x0b
      006C72 25*82            [12]19364 	add	a,_f_lseek_sloc0_1_0
      006C74 FC               [12]19365 	mov	r4,a
      006C75 E4               [12]19366 	clr	a
      006C76 35*83            [12]19367 	addc	a,(_f_lseek_sloc0_1_0 + 1)
      006C78 FA               [12]19368 	mov	r2,a
      006C79 AB*84            [24]19369 	mov	r3,(_f_lseek_sloc0_1_0 + 2)
      006C7B 8C 82            [24]19370 	mov	dpl,r4
      006C7D 8A 83            [24]19371 	mov	dph,r2
      006C7F 8B F0            [24]19372 	mov	b,r3
      006C81 12r00r00         [24]19373 	lcall	__gptrget
      006C84 F9               [12]19374 	mov	r1,a
      006C85 A3               [24]19375 	inc	dptr
      006C86 12r00r00         [24]19376 	lcall	__gptrget
      006C89 FA               [12]19377 	mov	r2,a
      006C8A A3               [24]19378 	inc	dptr
      006C8B 12r00r00         [24]19379 	lcall	__gptrget
      006C8E FB               [12]19380 	mov	r3,a
      006C8F A3               [24]19381 	inc	dptr
      006C90 12r00r00         [24]19382 	lcall	__gptrget
      006C93 FC               [12]19383 	mov	r4,a
      006C94 90r01r97         [24]19384 	mov	dptr,#_f_lseek_PARM_2
      006C97 E0               [24]19385 	movx	a,@dptr
      006C98 F8               [12]19386 	mov	r0,a
      006C99 A3               [24]19387 	inc	dptr
      006C9A E0               [24]19388 	movx	a,@dptr
      006C9B FD               [12]19389 	mov	r5,a
      006C9C A3               [24]19390 	inc	dptr
      006C9D E0               [24]19391 	movx	a,@dptr
      006C9E FE               [12]19392 	mov	r6,a
      006C9F A3               [24]19393 	inc	dptr
      006CA0 E0               [24]19394 	movx	a,@dptr
      006CA1 FF               [12]19395 	mov	r7,a
      006CA2 C3               [12]19396 	clr	c
      006CA3 E9               [12]19397 	mov	a,r1
      006CA4 98               [12]19398 	subb	a,r0
      006CA5 EA               [12]19399 	mov	a,r2
      006CA6 9D               [12]19400 	subb	a,r5
      006CA7 EB               [12]19401 	mov	a,r3
      006CA8 9E               [12]19402 	subb	a,r6
      006CA9 EC               [12]19403 	mov	a,r4
      006CAA 9F               [12]19404 	subb	a,r7
      006CAB 50 26            [24]19405 	jnc	00106$
      006CAD 74 0F            [12]19406 	mov	a,#0x0f
      006CAF 25*82            [12]19407 	add	a,_f_lseek_sloc0_1_0
      006CB1 FD               [12]19408 	mov	r5,a
      006CB2 E4               [12]19409 	clr	a
      006CB3 35*83            [12]19410 	addc	a,(_f_lseek_sloc0_1_0 + 1)
      006CB5 FE               [12]19411 	mov	r6,a
      006CB6 AF*84            [24]19412 	mov	r7,(_f_lseek_sloc0_1_0 + 2)
      006CB8 8D 82            [24]19413 	mov	dpl,r5
      006CBA 8E 83            [24]19414 	mov	dph,r6
      006CBC 8F F0            [24]19415 	mov	b,r7
      006CBE 12r00r00         [24]19416 	lcall	__gptrget
      006CC1 FD               [12]19417 	mov	r5,a
      006CC2 20 E1 0E         [24]19418 	jb	acc.1,00106$
                                  19419 ;	ff15\source\ff.c:4516: ofs = fp->obj.objsize;
      006CC5 90r01r97         [24]19420 	mov	dptr,#_f_lseek_PARM_2
      006CC8 E9               [12]19421 	mov	a,r1
      006CC9 F0               [24]19422 	movx	@dptr,a
      006CCA EA               [12]19423 	mov	a,r2
      006CCB A3               [24]19424 	inc	dptr
      006CCC F0               [24]19425 	movx	@dptr,a
      006CCD EB               [12]19426 	mov	a,r3
      006CCE A3               [24]19427 	inc	dptr
      006CCF F0               [24]19428 	movx	@dptr,a
      006CD0 EC               [12]19429 	mov	a,r4
      006CD1 A3               [24]19430 	inc	dptr
      006CD2 F0               [24]19431 	movx	@dptr,a
      006CD3                      19432 00106$:
                                  19433 ;	ff15\source\ff.c:4518: ifptr = fp->fptr;
      006CD3 90r01r9B         [24]19434 	mov	dptr,#_f_lseek_fp_65536_325
      006CD6 E0               [24]19435 	movx	a,@dptr
      006CD7 F5*82            [12]19436 	mov	_f_lseek_sloc0_1_0,a
      006CD9 A3               [24]19437 	inc	dptr
      006CDA E0               [24]19438 	movx	a,@dptr
      006CDB F5*83            [12]19439 	mov	(_f_lseek_sloc0_1_0 + 1),a
      006CDD A3               [24]19440 	inc	dptr
      006CDE E0               [24]19441 	movx	a,@dptr
      006CDF F5*84            [12]19442 	mov	(_f_lseek_sloc0_1_0 + 2),a
      006CE1 74 11            [12]19443 	mov	a,#0x11
      006CE3 25*82            [12]19444 	add	a,_f_lseek_sloc0_1_0
      006CE5 FA               [12]19445 	mov	r2,a
      006CE6 E4               [12]19446 	clr	a
      006CE7 35*83            [12]19447 	addc	a,(_f_lseek_sloc0_1_0 + 1)
      006CE9 FB               [12]19448 	mov	r3,a
      006CEA AC*84            [24]19449 	mov	r4,(_f_lseek_sloc0_1_0 + 2)
      006CEC 8A 82            [24]19450 	mov	dpl,r2
      006CEE 8B 83            [24]19451 	mov	dph,r3
      006CF0 8C F0            [24]19452 	mov	b,r4
      006CF2 12r00r00         [24]19453 	lcall	__gptrget
      006CF5 F5*85            [12]19454 	mov	_f_lseek_sloc1_1_0,a
      006CF7 A3               [24]19455 	inc	dptr
      006CF8 12r00r00         [24]19456 	lcall	__gptrget
      006CFB F5*86            [12]19457 	mov	(_f_lseek_sloc1_1_0 + 1),a
      006CFD A3               [24]19458 	inc	dptr
      006CFE 12r00r00         [24]19459 	lcall	__gptrget
      006D01 F5*87            [12]19460 	mov	(_f_lseek_sloc1_1_0 + 2),a
      006D03 A3               [24]19461 	inc	dptr
      006D04 12r00r00         [24]19462 	lcall	__gptrget
      006D07 F5*88            [12]19463 	mov	(_f_lseek_sloc1_1_0 + 3),a
                                  19464 ;	ff15\source\ff.c:4519: fp->fptr = nsect = 0;
      006D09 90r01rAA         [24]19465 	mov	dptr,#_f_lseek_nsect_65536_326
      006D0C E4               [12]19466 	clr	a
      006D0D F0               [24]19467 	movx	@dptr,a
      006D0E A3               [24]19468 	inc	dptr
      006D0F F0               [24]19469 	movx	@dptr,a
      006D10 A3               [24]19470 	inc	dptr
      006D11 F0               [24]19471 	movx	@dptr,a
      006D12 A3               [24]19472 	inc	dptr
      006D13 F0               [24]19473 	movx	@dptr,a
      006D14 8A 82            [24]19474 	mov	dpl,r2
      006D16 8B 83            [24]19475 	mov	dph,r3
      006D18 8C F0            [24]19476 	mov	b,r4
      006D1A 12r00r00         [24]19477 	lcall	__gptrput
      006D1D A3               [24]19478 	inc	dptr
      006D1E 12r00r00         [24]19479 	lcall	__gptrput
      006D21 A3               [24]19480 	inc	dptr
      006D22 12r00r00         [24]19481 	lcall	__gptrput
      006D25 A3               [24]19482 	inc	dptr
      006D26 12r00r00         [24]19483 	lcall	__gptrput
                                  19484 ;	ff15\source\ff.c:4520: if (ofs > 0) {
      006D29 90r01r97         [24]19485 	mov	dptr,#_f_lseek_PARM_2
      006D2C E0               [24]19486 	movx	a,@dptr
      006D2D F5*89            [12]19487 	mov	_f_lseek_sloc2_1_0,a
      006D2F A3               [24]19488 	inc	dptr
      006D30 E0               [24]19489 	movx	a,@dptr
      006D31 F5*8A            [12]19490 	mov	(_f_lseek_sloc2_1_0 + 1),a
      006D33 A3               [24]19491 	inc	dptr
      006D34 E0               [24]19492 	movx	a,@dptr
      006D35 F5*8B            [12]19493 	mov	(_f_lseek_sloc2_1_0 + 2),a
      006D37 A3               [24]19494 	inc	dptr
      006D38 E0               [24]19495 	movx	a,@dptr
      006D39 F5*8C            [12]19496 	mov	(_f_lseek_sloc2_1_0 + 3),a
      006D3B E5*89            [12]19497 	mov	a,_f_lseek_sloc2_1_0
      006D3D 45*8A            [12]19498 	orl	a,(_f_lseek_sloc2_1_0 + 1)
      006D3F 45*8B            [12]19499 	orl	a,(_f_lseek_sloc2_1_0 + 2)
      006D41 45*8C            [12]19500 	orl	a,(_f_lseek_sloc2_1_0 + 3)
      006D43 70 03            [24]19501 	jnz	00260$
      006D45 02r73r93         [24]19502 	ljmp	00145$
      006D48                      19503 00260$:
                                  19504 ;	ff15\source\ff.c:4521: bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size (byte) */
      006D48 90r01r9F         [24]19505 	mov	dptr,#_f_lseek_fs_65536_326
      006D4B E0               [24]19506 	movx	a,@dptr
      006D4C F8               [12]19507 	mov	r0,a
      006D4D A3               [24]19508 	inc	dptr
      006D4E E0               [24]19509 	movx	a,@dptr
      006D4F F9               [12]19510 	mov	r1,a
      006D50 A3               [24]19511 	inc	dptr
      006D51 E0               [24]19512 	movx	a,@dptr
      006D52 FF               [12]19513 	mov	r7,a
      006D53 74 0A            [12]19514 	mov	a,#0x0a
      006D55 28               [12]19515 	add	a,r0
      006D56 F8               [12]19516 	mov	r0,a
      006D57 E4               [12]19517 	clr	a
      006D58 39               [12]19518 	addc	a,r1
      006D59 F9               [12]19519 	mov	r1,a
      006D5A 88 82            [24]19520 	mov	dpl,r0
      006D5C 89 83            [24]19521 	mov	dph,r1
      006D5E 8F F0            [24]19522 	mov	b,r7
      006D60 12r00r00         [24]19523 	lcall	__gptrget
      006D63 F8               [12]19524 	mov	r0,a
      006D64 A3               [24]19525 	inc	dptr
      006D65 12r00r00         [24]19526 	lcall	__gptrget
      006D68 F9               [12]19527 	mov	r1,a
      006D69 E4               [12]19528 	clr	a
      006D6A FF               [12]19529 	mov	r7,a
      006D6B FE               [12]19530 	mov	r6,a
      006D6C E8               [12]19531 	mov	a,r0
      006D6D 28               [12]19532 	add	a,r0
      006D6E F5*8E            [12]19533 	mov	(_f_lseek_sloc3_1_0 + 1),a
      006D70 E9               [12]19534 	mov	a,r1
      006D71 33               [12]19535 	rlc	a
      006D72 F5*8F            [12]19536 	mov	(_f_lseek_sloc3_1_0 + 2),a
      006D74 EF               [12]19537 	mov	a,r7
      006D75 33               [12]19538 	rlc	a
      006D76 F5*90            [12]19539 	mov	(_f_lseek_sloc3_1_0 + 3),a
                                  19540 ;	1-genFromRTrack replaced	mov	_f_lseek_sloc3_1_0,#0x00
      006D78 8F*8D            [24]19541 	mov	_f_lseek_sloc3_1_0,r7
      006D7A 90r01rA6         [24]19542 	mov	dptr,#_f_lseek_bcs_65536_326
      006D7D E5*8D            [12]19543 	mov	a,_f_lseek_sloc3_1_0
      006D7F F0               [24]19544 	movx	@dptr,a
      006D80 E5*8E            [12]19545 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      006D82 A3               [24]19546 	inc	dptr
      006D83 F0               [24]19547 	movx	@dptr,a
      006D84 E5*8F            [12]19548 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      006D86 A3               [24]19549 	inc	dptr
      006D87 F0               [24]19550 	movx	@dptr,a
      006D88 E5*90            [12]19551 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      006D8A A3               [24]19552 	inc	dptr
      006D8B F0               [24]19553 	movx	@dptr,a
                                  19554 ;	ff15\source\ff.c:4522: if (ifptr > 0 &&
      006D8C E5*85            [12]19555 	mov	a,_f_lseek_sloc1_1_0
      006D8E 45*86            [12]19556 	orl	a,(_f_lseek_sloc1_1_0 + 1)
      006D90 45*87            [12]19557 	orl	a,(_f_lseek_sloc1_1_0 + 2)
      006D92 45*88            [12]19558 	orl	a,(_f_lseek_sloc1_1_0 + 3)
      006D94 70 03            [24]19559 	jnz	00261$
      006D96 02r6ErD6         [24]19560 	ljmp	00116$
      006D99                      19561 00261$:
                                  19562 ;	ff15\source\ff.c:4523: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
      006D99 E5*89            [12]19563 	mov	a,_f_lseek_sloc2_1_0
      006D9B 24 FF            [12]19564 	add	a,#0xff
      006D9D F8               [12]19565 	mov	r0,a
      006D9E E5*8A            [12]19566 	mov	a,(_f_lseek_sloc2_1_0 + 1)
      006DA0 34 FF            [12]19567 	addc	a,#0xff
      006DA2 F9               [12]19568 	mov	r1,a
      006DA3 E5*8B            [12]19569 	mov	a,(_f_lseek_sloc2_1_0 + 2)
      006DA5 34 FF            [12]19570 	addc	a,#0xff
      006DA7 FE               [12]19571 	mov	r6,a
      006DA8 E5*8C            [12]19572 	mov	a,(_f_lseek_sloc2_1_0 + 3)
      006DAA 34 FF            [12]19573 	addc	a,#0xff
      006DAC FF               [12]19574 	mov	r7,a
      006DAD 90r00r00         [24]19575 	mov	dptr,#__divulong_PARM_2
      006DB0 E5*8D            [12]19576 	mov	a,_f_lseek_sloc3_1_0
      006DB2 F0               [24]19577 	movx	@dptr,a
      006DB3 E5*8E            [12]19578 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      006DB5 A3               [24]19579 	inc	dptr
      006DB6 F0               [24]19580 	movx	@dptr,a
      006DB7 E5*8F            [12]19581 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      006DB9 A3               [24]19582 	inc	dptr
      006DBA F0               [24]19583 	movx	@dptr,a
      006DBB E5*90            [12]19584 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      006DBD A3               [24]19585 	inc	dptr
      006DBE F0               [24]19586 	movx	@dptr,a
      006DBF 88 82            [24]19587 	mov	dpl,r0
      006DC1 89 83            [24]19588 	mov	dph,r1
      006DC3 8E F0            [24]19589 	mov	b,r6
      006DC5 EF               [12]19590 	mov	a,r7
      006DC6 C0 04            [24]19591 	push	ar4
      006DC8 C0 03            [24]19592 	push	ar3
      006DCA C0 02            [24]19593 	push	ar2
      006DCC 12r00r00         [24]19594 	lcall	__divulong
      006DCF 85 82*91         [24]19595 	mov	_f_lseek_sloc4_1_0,dpl
      006DD2 85 83*92         [24]19596 	mov	(_f_lseek_sloc4_1_0 + 1),dph
      006DD5 85 F0*93         [24]19597 	mov	(_f_lseek_sloc4_1_0 + 2),b
      006DD8 F5*94            [12]19598 	mov	(_f_lseek_sloc4_1_0 + 3),a
      006DDA E5*85            [12]19599 	mov	a,_f_lseek_sloc1_1_0
      006DDC 24 FF            [12]19600 	add	a,#0xff
      006DDE F8               [12]19601 	mov	r0,a
      006DDF E5*86            [12]19602 	mov	a,(_f_lseek_sloc1_1_0 + 1)
      006DE1 34 FF            [12]19603 	addc	a,#0xff
      006DE3 FD               [12]19604 	mov	r5,a
      006DE4 E5*87            [12]19605 	mov	a,(_f_lseek_sloc1_1_0 + 2)
      006DE6 34 FF            [12]19606 	addc	a,#0xff
      006DE8 FE               [12]19607 	mov	r6,a
      006DE9 E5*88            [12]19608 	mov	a,(_f_lseek_sloc1_1_0 + 3)
      006DEB 34 FF            [12]19609 	addc	a,#0xff
      006DED FF               [12]19610 	mov	r7,a
      006DEE 90r00r00         [24]19611 	mov	dptr,#__divulong_PARM_2
      006DF1 E5*8D            [12]19612 	mov	a,_f_lseek_sloc3_1_0
      006DF3 F0               [24]19613 	movx	@dptr,a
      006DF4 E5*8E            [12]19614 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      006DF6 A3               [24]19615 	inc	dptr
      006DF7 F0               [24]19616 	movx	@dptr,a
      006DF8 E5*8F            [12]19617 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      006DFA A3               [24]19618 	inc	dptr
      006DFB F0               [24]19619 	movx	@dptr,a
      006DFC E5*90            [12]19620 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      006DFE A3               [24]19621 	inc	dptr
      006DFF F0               [24]19622 	movx	@dptr,a
      006E00 88 82            [24]19623 	mov	dpl,r0
      006E02 8D 83            [24]19624 	mov	dph,r5
      006E04 8E F0            [24]19625 	mov	b,r6
      006E06 EF               [12]19626 	mov	a,r7
      006E07 12r00r00         [24]19627 	lcall	__divulong
      006E0A A9 82            [24]19628 	mov	r1,dpl
      006E0C AD 83            [24]19629 	mov	r5,dph
      006E0E AE F0            [24]19630 	mov	r6,b
      006E10 FF               [12]19631 	mov	r7,a
      006E11 D0 02            [24]19632 	pop	ar2
      006E13 D0 03            [24]19633 	pop	ar3
      006E15 D0 04            [24]19634 	pop	ar4
      006E17 C3               [12]19635 	clr	c
      006E18 E5*91            [12]19636 	mov	a,_f_lseek_sloc4_1_0
      006E1A 99               [12]19637 	subb	a,r1
      006E1B E5*92            [12]19638 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      006E1D 9D               [12]19639 	subb	a,r5
      006E1E E5*93            [12]19640 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      006E20 9E               [12]19641 	subb	a,r6
      006E21 E5*94            [12]19642 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      006E23 9F               [12]19643 	subb	a,r7
      006E24 50 03            [24]19644 	jnc	00262$
      006E26 02r6ErD6         [24]19645 	ljmp	00116$
      006E29                      19646 00262$:
                                  19647 ;	ff15\source\ff.c:4524: fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);	/* start from the current cluster */
      006E29 E5*85            [12]19648 	mov	a,_f_lseek_sloc1_1_0
      006E2B 24 FF            [12]19649 	add	a,#0xff
      006E2D F5*91            [12]19650 	mov	_f_lseek_sloc4_1_0,a
      006E2F E5*86            [12]19651 	mov	a,(_f_lseek_sloc1_1_0 + 1)
      006E31 34 FF            [12]19652 	addc	a,#0xff
      006E33 F5*92            [12]19653 	mov	(_f_lseek_sloc4_1_0 + 1),a
      006E35 E5*87            [12]19654 	mov	a,(_f_lseek_sloc1_1_0 + 2)
      006E37 34 FF            [12]19655 	addc	a,#0xff
      006E39 F5*93            [12]19656 	mov	(_f_lseek_sloc4_1_0 + 2),a
      006E3B E5*88            [12]19657 	mov	a,(_f_lseek_sloc1_1_0 + 3)
      006E3D 34 FF            [12]19658 	addc	a,#0xff
      006E3F F5*94            [12]19659 	mov	(_f_lseek_sloc4_1_0 + 3),a
      006E41 E5*8D            [12]19660 	mov	a,_f_lseek_sloc3_1_0
      006E43 24 FF            [12]19661 	add	a,#0xff
      006E45 F9               [12]19662 	mov	r1,a
      006E46 E5*8E            [12]19663 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      006E48 34 FF            [12]19664 	addc	a,#0xff
      006E4A FD               [12]19665 	mov	r5,a
      006E4B E5*8F            [12]19666 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      006E4D 34 FF            [12]19667 	addc	a,#0xff
      006E4F FE               [12]19668 	mov	r6,a
      006E50 E5*90            [12]19669 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      006E52 34 FF            [12]19670 	addc	a,#0xff
      006E54 FF               [12]19671 	mov	r7,a
      006E55 E9               [12]19672 	mov	a,r1
      006E56 F4               [12]19673 	cpl	a
      006E57 F9               [12]19674 	mov	r1,a
      006E58 ED               [12]19675 	mov	a,r5
      006E59 F4               [12]19676 	cpl	a
      006E5A FD               [12]19677 	mov	r5,a
      006E5B EE               [12]19678 	mov	a,r6
      006E5C F4               [12]19679 	cpl	a
      006E5D FE               [12]19680 	mov	r6,a
      006E5E EF               [12]19681 	mov	a,r7
      006E5F F4               [12]19682 	cpl	a
      006E60 FF               [12]19683 	mov	r7,a
      006E61 E5*91            [12]19684 	mov	a,_f_lseek_sloc4_1_0
      006E63 52 01            [12]19685 	anl	ar1,a
      006E65 E5*92            [12]19686 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      006E67 52 05            [12]19687 	anl	ar5,a
      006E69 E5*93            [12]19688 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      006E6B 52 06            [12]19689 	anl	ar6,a
      006E6D E5*94            [12]19690 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      006E6F 52 07            [12]19691 	anl	ar7,a
      006E71 8A 82            [24]19692 	mov	dpl,r2
      006E73 8B 83            [24]19693 	mov	dph,r3
      006E75 8C F0            [24]19694 	mov	b,r4
      006E77 E9               [12]19695 	mov	a,r1
      006E78 12r00r00         [24]19696 	lcall	__gptrput
      006E7B A3               [24]19697 	inc	dptr
      006E7C ED               [12]19698 	mov	a,r5
      006E7D 12r00r00         [24]19699 	lcall	__gptrput
      006E80 A3               [24]19700 	inc	dptr
      006E81 EE               [12]19701 	mov	a,r6
      006E82 12r00r00         [24]19702 	lcall	__gptrput
      006E85 A3               [24]19703 	inc	dptr
      006E86 EF               [12]19704 	mov	a,r7
      006E87 12r00r00         [24]19705 	lcall	__gptrput
                                  19706 ;	ff15\source\ff.c:4525: ofs -= fp->fptr;
      006E8A 90r01r97         [24]19707 	mov	dptr,#_f_lseek_PARM_2
      006E8D E5*89            [12]19708 	mov	a,_f_lseek_sloc2_1_0
      006E8F C3               [12]19709 	clr	c
      006E90 99               [12]19710 	subb	a,r1
      006E91 F0               [24]19711 	movx	@dptr,a
      006E92 E5*8A            [12]19712 	mov	a,(_f_lseek_sloc2_1_0 + 1)
      006E94 9D               [12]19713 	subb	a,r5
      006E95 A3               [24]19714 	inc	dptr
      006E96 F0               [24]19715 	movx	@dptr,a
      006E97 E5*8B            [12]19716 	mov	a,(_f_lseek_sloc2_1_0 + 2)
      006E99 9E               [12]19717 	subb	a,r6
      006E9A A3               [24]19718 	inc	dptr
      006E9B F0               [24]19719 	movx	@dptr,a
      006E9C E5*8C            [12]19720 	mov	a,(_f_lseek_sloc2_1_0 + 3)
      006E9E 9F               [12]19721 	subb	a,r7
      006E9F A3               [24]19722 	inc	dptr
      006EA0 F0               [24]19723 	movx	@dptr,a
                                  19724 ;	ff15\source\ff.c:4526: clst = fp->clust;
      006EA1 74 15            [12]19725 	mov	a,#0x15
      006EA3 25*82            [12]19726 	add	a,_f_lseek_sloc0_1_0
      006EA5 FD               [12]19727 	mov	r5,a
      006EA6 E4               [12]19728 	clr	a
      006EA7 35*83            [12]19729 	addc	a,(_f_lseek_sloc0_1_0 + 1)
      006EA9 FE               [12]19730 	mov	r6,a
      006EAA AF*84            [24]19731 	mov	r7,(_f_lseek_sloc0_1_0 + 2)
      006EAC 8D 82            [24]19732 	mov	dpl,r5
      006EAE 8E 83            [24]19733 	mov	dph,r6
      006EB0 8F F0            [24]19734 	mov	b,r7
      006EB2 12r00r00         [24]19735 	lcall	__gptrget
      006EB5 FD               [12]19736 	mov	r5,a
      006EB6 A3               [24]19737 	inc	dptr
      006EB7 12r00r00         [24]19738 	lcall	__gptrget
      006EBA FE               [12]19739 	mov	r6,a
      006EBB A3               [24]19740 	inc	dptr
      006EBC 12r00r00         [24]19741 	lcall	__gptrget
      006EBF FF               [12]19742 	mov	r7,a
      006EC0 A3               [24]19743 	inc	dptr
      006EC1 12r00r00         [24]19744 	lcall	__gptrget
      006EC4 FC               [12]19745 	mov	r4,a
      006EC5 90r01rA2         [24]19746 	mov	dptr,#_f_lseek_clst_65536_326
      006EC8 ED               [12]19747 	mov	a,r5
      006EC9 F0               [24]19748 	movx	@dptr,a
      006ECA EE               [12]19749 	mov	a,r6
      006ECB A3               [24]19750 	inc	dptr
      006ECC F0               [24]19751 	movx	@dptr,a
      006ECD EF               [12]19752 	mov	a,r7
      006ECE A3               [24]19753 	inc	dptr
      006ECF F0               [24]19754 	movx	@dptr,a
      006ED0 EC               [12]19755 	mov	a,r4
      006ED1 A3               [24]19756 	inc	dptr
      006ED2 F0               [24]19757 	movx	@dptr,a
      006ED3 02r70r01         [24]19758 	ljmp	00117$
      006ED6                      19759 00116$:
                                  19760 ;	ff15\source\ff.c:4528: clst = fp->obj.sclust;					/* start from the first cluster */
      006ED6 90r01r9B         [24]19761 	mov	dptr,#_f_lseek_fp_65536_325
      006ED9 E0               [24]19762 	movx	a,@dptr
      006EDA FD               [12]19763 	mov	r5,a
      006EDB A3               [24]19764 	inc	dptr
      006EDC E0               [24]19765 	movx	a,@dptr
      006EDD FE               [12]19766 	mov	r6,a
      006EDE A3               [24]19767 	inc	dptr
      006EDF E0               [24]19768 	movx	a,@dptr
      006EE0 FF               [12]19769 	mov	r7,a
      006EE1 74 07            [12]19770 	mov	a,#0x07
      006EE3 2D               [12]19771 	add	a,r5
      006EE4 FC               [12]19772 	mov	r4,a
      006EE5 E4               [12]19773 	clr	a
      006EE6 3E               [12]19774 	addc	a,r6
      006EE7 FA               [12]19775 	mov	r2,a
      006EE8 8F 03            [24]19776 	mov	ar3,r7
      006EEA 8C 82            [24]19777 	mov	dpl,r4
      006EEC 8A 83            [24]19778 	mov	dph,r2
      006EEE 8B F0            [24]19779 	mov	b,r3
      006EF0 12r00r00         [24]19780 	lcall	__gptrget
      006EF3 F9               [12]19781 	mov	r1,a
      006EF4 A3               [24]19782 	inc	dptr
      006EF5 12r00r00         [24]19783 	lcall	__gptrget
      006EF8 FA               [12]19784 	mov	r2,a
      006EF9 A3               [24]19785 	inc	dptr
      006EFA 12r00r00         [24]19786 	lcall	__gptrget
      006EFD FB               [12]19787 	mov	r3,a
      006EFE A3               [24]19788 	inc	dptr
      006EFF 12r00r00         [24]19789 	lcall	__gptrget
      006F02 FC               [12]19790 	mov	r4,a
      006F03 90r01rA2         [24]19791 	mov	dptr,#_f_lseek_clst_65536_326
      006F06 E9               [12]19792 	mov	a,r1
      006F07 F0               [24]19793 	movx	@dptr,a
      006F08 EA               [12]19794 	mov	a,r2
      006F09 A3               [24]19795 	inc	dptr
      006F0A F0               [24]19796 	movx	@dptr,a
      006F0B EB               [12]19797 	mov	a,r3
      006F0C A3               [24]19798 	inc	dptr
      006F0D F0               [24]19799 	movx	@dptr,a
      006F0E EC               [12]19800 	mov	a,r4
      006F0F A3               [24]19801 	inc	dptr
      006F10 F0               [24]19802 	movx	@dptr,a
                                  19803 ;	ff15\source\ff.c:4530: if (clst == 0) {						/* If no cluster chain, create a new chain */
      006F11 E9               [12]19804 	mov	a,r1
      006F12 4A               [12]19805 	orl	a,r2
      006F13 4B               [12]19806 	orl	a,r3
      006F14 4C               [12]19807 	orl	a,r4
      006F15 60 03            [24]19808 	jz	00263$
      006F17 02r6FrC8         [24]19809 	ljmp	00114$
      006F1A                      19810 00263$:
                                  19811 ;	ff15\source\ff.c:4531: clst = create_chain(&fp->obj, 0);
      006F1A 90r00r52         [24]19812 	mov	dptr,#_create_chain_PARM_2
      006F1D E4               [12]19813 	clr	a
      006F1E F0               [24]19814 	movx	@dptr,a
      006F1F A3               [24]19815 	inc	dptr
      006F20 F0               [24]19816 	movx	@dptr,a
      006F21 A3               [24]19817 	inc	dptr
      006F22 F0               [24]19818 	movx	@dptr,a
      006F23 A3               [24]19819 	inc	dptr
      006F24 F0               [24]19820 	movx	@dptr,a
      006F25 8D 82            [24]19821 	mov	dpl,r5
      006F27 8E 83            [24]19822 	mov	dph,r6
      006F29 8F F0            [24]19823 	mov	b,r7
      006F2B 12r15rF5         [24]19824 	lcall	_create_chain
      006F2E AC 82            [24]19825 	mov	r4,dpl
      006F30 AD 83            [24]19826 	mov	r5,dph
      006F32 AE F0            [24]19827 	mov	r6,b
      006F34 FF               [12]19828 	mov	r7,a
      006F35 90r01rA2         [24]19829 	mov	dptr,#_f_lseek_clst_65536_326
      006F38 EC               [12]19830 	mov	a,r4
      006F39 F0               [24]19831 	movx	@dptr,a
      006F3A ED               [12]19832 	mov	a,r5
      006F3B A3               [24]19833 	inc	dptr
      006F3C F0               [24]19834 	movx	@dptr,a
      006F3D EE               [12]19835 	mov	a,r6
      006F3E A3               [24]19836 	inc	dptr
      006F3F F0               [24]19837 	movx	@dptr,a
      006F40 EF               [12]19838 	mov	a,r7
      006F41 A3               [24]19839 	inc	dptr
      006F42 F0               [24]19840 	movx	@dptr,a
                                  19841 ;	ff15\source\ff.c:4532: if (clst == 1) ABORT(fs, FR_INT_ERR);
      006F43 BC 01 2A         [24]19842 	cjne	r4,#0x01,00110$
      006F46 BD 00 27         [24]19843 	cjne	r5,#0x00,00110$
      006F49 BE 00 24         [24]19844 	cjne	r6,#0x00,00110$
      006F4C BF 00 21         [24]19845 	cjne	r7,#0x00,00110$
      006F4F 90r01r9B         [24]19846 	mov	dptr,#_f_lseek_fp_65536_325
      006F52 E0               [24]19847 	movx	a,@dptr
      006F53 F9               [12]19848 	mov	r1,a
      006F54 A3               [24]19849 	inc	dptr
      006F55 E0               [24]19850 	movx	a,@dptr
      006F56 FA               [12]19851 	mov	r2,a
      006F57 A3               [24]19852 	inc	dptr
      006F58 E0               [24]19853 	movx	a,@dptr
      006F59 FB               [12]19854 	mov	r3,a
      006F5A 74 10            [12]19855 	mov	a,#0x10
      006F5C 29               [12]19856 	add	a,r1
      006F5D F9               [12]19857 	mov	r1,a
      006F5E E4               [12]19858 	clr	a
      006F5F 3A               [12]19859 	addc	a,r2
      006F60 FA               [12]19860 	mov	r2,a
      006F61 89 82            [24]19861 	mov	dpl,r1
      006F63 8A 83            [24]19862 	mov	dph,r2
      006F65 8B F0            [24]19863 	mov	b,r3
      006F67 74 02            [12]19864 	mov	a,#0x02
      006F69 12r00r00         [24]19865 	lcall	__gptrput
      006F6C 75 82 02         [24]19866 	mov	dpl,#0x02
      006F6F 22               [24]19867 	ret
      006F70                      19868 00110$:
                                  19869 ;	ff15\source\ff.c:4533: if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
      006F70 BC FF 2A         [24]19870 	cjne	r4,#0xff,00112$
      006F73 BD FF 27         [24]19871 	cjne	r5,#0xff,00112$
      006F76 BE FF 24         [24]19872 	cjne	r6,#0xff,00112$
      006F79 BF FF 21         [24]19873 	cjne	r7,#0xff,00112$
      006F7C 90r01r9B         [24]19874 	mov	dptr,#_f_lseek_fp_65536_325
      006F7F E0               [24]19875 	movx	a,@dptr
      006F80 F9               [12]19876 	mov	r1,a
      006F81 A3               [24]19877 	inc	dptr
      006F82 E0               [24]19878 	movx	a,@dptr
      006F83 FA               [12]19879 	mov	r2,a
      006F84 A3               [24]19880 	inc	dptr
      006F85 E0               [24]19881 	movx	a,@dptr
      006F86 FB               [12]19882 	mov	r3,a
      006F87 74 10            [12]19883 	mov	a,#0x10
      006F89 29               [12]19884 	add	a,r1
      006F8A F9               [12]19885 	mov	r1,a
      006F8B E4               [12]19886 	clr	a
      006F8C 3A               [12]19887 	addc	a,r2
      006F8D FA               [12]19888 	mov	r2,a
      006F8E 89 82            [24]19889 	mov	dpl,r1
      006F90 8A 83            [24]19890 	mov	dph,r2
      006F92 8B F0            [24]19891 	mov	b,r3
      006F94 74 01            [12]19892 	mov	a,#0x01
      006F96 12r00r00         [24]19893 	lcall	__gptrput
      006F99 75 82 01         [24]19894 	mov	dpl,#0x01
      006F9C 22               [24]19895 	ret
      006F9D                      19896 00112$:
                                  19897 ;	ff15\source\ff.c:4534: fp->obj.sclust = clst;
      006F9D 90r01r9B         [24]19898 	mov	dptr,#_f_lseek_fp_65536_325
      006FA0 E0               [24]19899 	movx	a,@dptr
      006FA1 F9               [12]19900 	mov	r1,a
      006FA2 A3               [24]19901 	inc	dptr
      006FA3 E0               [24]19902 	movx	a,@dptr
      006FA4 FA               [12]19903 	mov	r2,a
      006FA5 A3               [24]19904 	inc	dptr
      006FA6 E0               [24]19905 	movx	a,@dptr
      006FA7 FB               [12]19906 	mov	r3,a
      006FA8 74 07            [12]19907 	mov	a,#0x07
      006FAA 29               [12]19908 	add	a,r1
      006FAB F9               [12]19909 	mov	r1,a
      006FAC E4               [12]19910 	clr	a
      006FAD 3A               [12]19911 	addc	a,r2
      006FAE FA               [12]19912 	mov	r2,a
      006FAF 89 82            [24]19913 	mov	dpl,r1
      006FB1 8A 83            [24]19914 	mov	dph,r2
      006FB3 8B F0            [24]19915 	mov	b,r3
      006FB5 EC               [12]19916 	mov	a,r4
      006FB6 12r00r00         [24]19917 	lcall	__gptrput
      006FB9 A3               [24]19918 	inc	dptr
      006FBA ED               [12]19919 	mov	a,r5
      006FBB 12r00r00         [24]19920 	lcall	__gptrput
      006FBE A3               [24]19921 	inc	dptr
      006FBF EE               [12]19922 	mov	a,r6
      006FC0 12r00r00         [24]19923 	lcall	__gptrput
      006FC3 A3               [24]19924 	inc	dptr
      006FC4 EF               [12]19925 	mov	a,r7
      006FC5 12r00r00         [24]19926 	lcall	__gptrput
      006FC8                      19927 00114$:
                                  19928 ;	ff15\source\ff.c:4537: fp->clust = clst;
      006FC8 90r01r9B         [24]19929 	mov	dptr,#_f_lseek_fp_65536_325
      006FCB E0               [24]19930 	movx	a,@dptr
      006FCC FD               [12]19931 	mov	r5,a
      006FCD A3               [24]19932 	inc	dptr
      006FCE E0               [24]19933 	movx	a,@dptr
      006FCF FE               [12]19934 	mov	r6,a
      006FD0 A3               [24]19935 	inc	dptr
      006FD1 E0               [24]19936 	movx	a,@dptr
      006FD2 FF               [12]19937 	mov	r7,a
      006FD3 74 15            [12]19938 	mov	a,#0x15
      006FD5 2D               [12]19939 	add	a,r5
      006FD6 FD               [12]19940 	mov	r5,a
      006FD7 E4               [12]19941 	clr	a
      006FD8 3E               [12]19942 	addc	a,r6
      006FD9 FE               [12]19943 	mov	r6,a
      006FDA 90r01rA2         [24]19944 	mov	dptr,#_f_lseek_clst_65536_326
      006FDD E0               [24]19945 	movx	a,@dptr
      006FDE F9               [12]19946 	mov	r1,a
      006FDF A3               [24]19947 	inc	dptr
      006FE0 E0               [24]19948 	movx	a,@dptr
      006FE1 FA               [12]19949 	mov	r2,a
      006FE2 A3               [24]19950 	inc	dptr
      006FE3 E0               [24]19951 	movx	a,@dptr
      006FE4 FB               [12]19952 	mov	r3,a
      006FE5 A3               [24]19953 	inc	dptr
      006FE6 E0               [24]19954 	movx	a,@dptr
      006FE7 FC               [12]19955 	mov	r4,a
      006FE8 8D 82            [24]19956 	mov	dpl,r5
      006FEA 8E 83            [24]19957 	mov	dph,r6
      006FEC 8F F0            [24]19958 	mov	b,r7
      006FEE E9               [12]19959 	mov	a,r1
      006FEF 12r00r00         [24]19960 	lcall	__gptrput
      006FF2 A3               [24]19961 	inc	dptr
      006FF3 EA               [12]19962 	mov	a,r2
      006FF4 12r00r00         [24]19963 	lcall	__gptrput
      006FF7 A3               [24]19964 	inc	dptr
      006FF8 EB               [12]19965 	mov	a,r3
      006FF9 12r00r00         [24]19966 	lcall	__gptrput
      006FFC A3               [24]19967 	inc	dptr
      006FFD EC               [12]19968 	mov	a,r4
      006FFE 12r00r00         [24]19969 	lcall	__gptrput
      007001                      19970 00117$:
                                  19971 ;	ff15\source\ff.c:4539: if (clst != 0) {
      007001 90r01rA2         [24]19972 	mov	dptr,#_f_lseek_clst_65536_326
      007004 E0               [24]19973 	movx	a,@dptr
      007005 F5 F0            [12]19974 	mov	b,a
      007007 A3               [24]19975 	inc	dptr
      007008 E0               [24]19976 	movx	a,@dptr
      007009 42 F0            [12]19977 	orl	b,a
      00700B A3               [24]19978 	inc	dptr
      00700C E0               [24]19979 	movx	a,@dptr
      00700D 42 F0            [12]19980 	orl	b,a
      00700F A3               [24]19981 	inc	dptr
      007010 E0               [24]19982 	movx	a,@dptr
      007011 45 F0            [12]19983 	orl	a,b
      007013 70 03            [24]19984 	jnz	00268$
      007015 02r73r93         [24]19985 	ljmp	00145$
      007018                      19986 00268$:
                                  19987 ;	ff15\source\ff.c:4540: while (ofs > bcs) {						/* Cluster following loop */
      007018 90r01r9B         [24]19988 	mov	dptr,#_f_lseek_fp_65536_325
      00701B E0               [24]19989 	movx	a,@dptr
      00701C FD               [12]19990 	mov	r5,a
      00701D A3               [24]19991 	inc	dptr
      00701E E0               [24]19992 	movx	a,@dptr
      00701F FE               [12]19993 	mov	r6,a
      007020 A3               [24]19994 	inc	dptr
      007021 E0               [24]19995 	movx	a,@dptr
      007022 FF               [12]19996 	mov	r7,a
      007023 74 0F            [12]19997 	mov	a,#0x0f
      007025 2D               [12]19998 	add	a,r5
      007026 F5*85            [12]19999 	mov	_f_lseek_sloc1_1_0,a
      007028 E4               [12]20000 	clr	a
      007029 3E               [12]20001 	addc	a,r6
      00702A F5*86            [12]20002 	mov	(_f_lseek_sloc1_1_0 + 1),a
      00702C 8F*87            [24]20003 	mov	(_f_lseek_sloc1_1_0 + 2),r7
      00702E 8D*91            [24]20004 	mov	_f_lseek_sloc4_1_0,r5
      007030 8E*92            [24]20005 	mov	(_f_lseek_sloc4_1_0 + 1),r6
      007032 8F*93            [24]20006 	mov	(_f_lseek_sloc4_1_0 + 2),r7
      007034 90r01rA6         [24]20007 	mov	dptr,#_f_lseek_bcs_65536_326
      007037 E0               [24]20008 	movx	a,@dptr
      007038 F5*8D            [12]20009 	mov	_f_lseek_sloc3_1_0,a
      00703A A3               [24]20010 	inc	dptr
      00703B E0               [24]20011 	movx	a,@dptr
      00703C F5*8E            [12]20012 	mov	(_f_lseek_sloc3_1_0 + 1),a
      00703E A3               [24]20013 	inc	dptr
      00703F E0               [24]20014 	movx	a,@dptr
      007040 F5*8F            [12]20015 	mov	(_f_lseek_sloc3_1_0 + 2),a
      007042 A3               [24]20016 	inc	dptr
      007043 E0               [24]20017 	movx	a,@dptr
      007044 F5*90            [12]20018 	mov	(_f_lseek_sloc3_1_0 + 3),a
      007046                      20019 00132$:
      007046 90r01r97         [24]20020 	mov	dptr,#_f_lseek_PARM_2
      007049 E0               [24]20021 	movx	a,@dptr
      00704A F5*89            [12]20022 	mov	_f_lseek_sloc2_1_0,a
      00704C A3               [24]20023 	inc	dptr
      00704D E0               [24]20024 	movx	a,@dptr
      00704E F5*8A            [12]20025 	mov	(_f_lseek_sloc2_1_0 + 1),a
      007050 A3               [24]20026 	inc	dptr
      007051 E0               [24]20027 	movx	a,@dptr
      007052 F5*8B            [12]20028 	mov	(_f_lseek_sloc2_1_0 + 2),a
      007054 A3               [24]20029 	inc	dptr
      007055 E0               [24]20030 	movx	a,@dptr
      007056 F5*8C            [12]20031 	mov	(_f_lseek_sloc2_1_0 + 3),a
      007058 C3               [12]20032 	clr	c
      007059 E5*8D            [12]20033 	mov	a,_f_lseek_sloc3_1_0
      00705B 95*89            [12]20034 	subb	a,_f_lseek_sloc2_1_0
      00705D E5*8E            [12]20035 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      00705F 95*8A            [12]20036 	subb	a,(_f_lseek_sloc2_1_0 + 1)
      007061 E5*8F            [12]20037 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      007063 95*8B            [12]20038 	subb	a,(_f_lseek_sloc2_1_0 + 2)
      007065 E5*90            [12]20039 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      007067 95*8C            [12]20040 	subb	a,(_f_lseek_sloc2_1_0 + 3)
      007069 40 03            [24]20041 	jc	00269$
      00706B 02r72r80         [24]20042 	ljmp	00134$
      00706E                      20043 00269$:
                                  20044 ;	ff15\source\ff.c:4541: ofs -= bcs; fp->fptr += bcs;
      00706E 90r01r97         [24]20045 	mov	dptr,#_f_lseek_PARM_2
      007071 E5*89            [12]20046 	mov	a,_f_lseek_sloc2_1_0
      007073 C3               [12]20047 	clr	c
      007074 95*8D            [12]20048 	subb	a,_f_lseek_sloc3_1_0
      007076 F0               [24]20049 	movx	@dptr,a
      007077 E5*8A            [12]20050 	mov	a,(_f_lseek_sloc2_1_0 + 1)
      007079 95*8E            [12]20051 	subb	a,(_f_lseek_sloc3_1_0 + 1)
      00707B A3               [24]20052 	inc	dptr
      00707C F0               [24]20053 	movx	@dptr,a
      00707D E5*8B            [12]20054 	mov	a,(_f_lseek_sloc2_1_0 + 2)
      00707F 95*8F            [12]20055 	subb	a,(_f_lseek_sloc3_1_0 + 2)
      007081 A3               [24]20056 	inc	dptr
      007082 F0               [24]20057 	movx	@dptr,a
      007083 E5*8C            [12]20058 	mov	a,(_f_lseek_sloc2_1_0 + 3)
      007085 95*90            [12]20059 	subb	a,(_f_lseek_sloc3_1_0 + 3)
      007087 A3               [24]20060 	inc	dptr
      007088 F0               [24]20061 	movx	@dptr,a
      007089 74 11            [12]20062 	mov	a,#0x11
      00708B 2D               [12]20063 	add	a,r5
      00708C F8               [12]20064 	mov	r0,a
      00708D E4               [12]20065 	clr	a
      00708E 3E               [12]20066 	addc	a,r6
      00708F F9               [12]20067 	mov	r1,a
      007090 8F 04            [24]20068 	mov	ar4,r7
      007092 C0 05            [24]20069 	push	ar5
      007094 C0 06            [24]20070 	push	ar6
      007096 C0 07            [24]20071 	push	ar7
      007098 88 82            [24]20072 	mov	dpl,r0
      00709A 89 83            [24]20073 	mov	dph,r1
      00709C 8C F0            [24]20074 	mov	b,r4
      00709E 12r00r00         [24]20075 	lcall	__gptrget
      0070A1 FA               [12]20076 	mov	r2,a
      0070A2 A3               [24]20077 	inc	dptr
      0070A3 12r00r00         [24]20078 	lcall	__gptrget
      0070A6 FB               [12]20079 	mov	r3,a
      0070A7 A3               [24]20080 	inc	dptr
      0070A8 12r00r00         [24]20081 	lcall	__gptrget
      0070AB FE               [12]20082 	mov	r6,a
      0070AC A3               [24]20083 	inc	dptr
      0070AD 12r00r00         [24]20084 	lcall	__gptrget
      0070B0 FF               [12]20085 	mov	r7,a
      0070B1 E5*8D            [12]20086 	mov	a,_f_lseek_sloc3_1_0
      0070B3 2A               [12]20087 	add	a,r2
      0070B4 FA               [12]20088 	mov	r2,a
      0070B5 E5*8E            [12]20089 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      0070B7 3B               [12]20090 	addc	a,r3
      0070B8 FB               [12]20091 	mov	r3,a
      0070B9 E5*8F            [12]20092 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      0070BB 3E               [12]20093 	addc	a,r6
      0070BC FE               [12]20094 	mov	r6,a
      0070BD E5*90            [12]20095 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      0070BF 3F               [12]20096 	addc	a,r7
      0070C0 FF               [12]20097 	mov	r7,a
      0070C1 88 82            [24]20098 	mov	dpl,r0
      0070C3 89 83            [24]20099 	mov	dph,r1
      0070C5 8C F0            [24]20100 	mov	b,r4
      0070C7 EA               [12]20101 	mov	a,r2
      0070C8 12r00r00         [24]20102 	lcall	__gptrput
      0070CB A3               [24]20103 	inc	dptr
      0070CC EB               [12]20104 	mov	a,r3
      0070CD 12r00r00         [24]20105 	lcall	__gptrput
      0070D0 A3               [24]20106 	inc	dptr
      0070D1 EE               [12]20107 	mov	a,r6
      0070D2 12r00r00         [24]20108 	lcall	__gptrput
      0070D5 A3               [24]20109 	inc	dptr
      0070D6 EF               [12]20110 	mov	a,r7
      0070D7 12r00r00         [24]20111 	lcall	__gptrput
                                  20112 ;	ff15\source\ff.c:4543: if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
      0070DA 85*85 82         [24]20113 	mov	dpl,_f_lseek_sloc1_1_0
      0070DD 85*86 83         [24]20114 	mov	dph,(_f_lseek_sloc1_1_0 + 1)
      0070E0 85*87 F0         [24]20115 	mov	b,(_f_lseek_sloc1_1_0 + 2)
      0070E3 12r00r00         [24]20116 	lcall	__gptrget
      0070E6 D0 07            [24]20117 	pop	ar7
      0070E8 D0 06            [24]20118 	pop	ar6
      0070EA D0 05            [24]20119 	pop	ar5
      0070EC 30 E1 5A         [24]20120 	jnb	acc.1,00125$
                                  20121 ;	ff15\source\ff.c:4548: clst = create_chain(&fp->obj, clst);	/* Follow chain with forceed stretch */
      0070EF 90r01rA2         [24]20122 	mov	dptr,#_f_lseek_clst_65536_326
      0070F2 E0               [24]20123 	movx	a,@dptr
      0070F3 F9               [12]20124 	mov	r1,a
      0070F4 A3               [24]20125 	inc	dptr
      0070F5 E0               [24]20126 	movx	a,@dptr
      0070F6 FA               [12]20127 	mov	r2,a
      0070F7 A3               [24]20128 	inc	dptr
      0070F8 E0               [24]20129 	movx	a,@dptr
      0070F9 FB               [12]20130 	mov	r3,a
      0070FA A3               [24]20131 	inc	dptr
      0070FB E0               [24]20132 	movx	a,@dptr
      0070FC FC               [12]20133 	mov	r4,a
      0070FD 90r00r52         [24]20134 	mov	dptr,#_create_chain_PARM_2
      007100 E9               [12]20135 	mov	a,r1
      007101 F0               [24]20136 	movx	@dptr,a
      007102 EA               [12]20137 	mov	a,r2
      007103 A3               [24]20138 	inc	dptr
      007104 F0               [24]20139 	movx	@dptr,a
      007105 EB               [12]20140 	mov	a,r3
      007106 A3               [24]20141 	inc	dptr
      007107 F0               [24]20142 	movx	@dptr,a
      007108 EC               [12]20143 	mov	a,r4
      007109 A3               [24]20144 	inc	dptr
      00710A F0               [24]20145 	movx	@dptr,a
      00710B 8D 82            [24]20146 	mov	dpl,r5
      00710D 8E 83            [24]20147 	mov	dph,r6
      00710F 8F F0            [24]20148 	mov	b,r7
      007111 C0 07            [24]20149 	push	ar7
      007113 C0 06            [24]20150 	push	ar6
      007115 C0 05            [24]20151 	push	ar5
      007117 12r15rF5         [24]20152 	lcall	_create_chain
      00711A A9 82            [24]20153 	mov	r1,dpl
      00711C AA 83            [24]20154 	mov	r2,dph
      00711E AB F0            [24]20155 	mov	r3,b
      007120 FC               [12]20156 	mov	r4,a
      007121 D0 05            [24]20157 	pop	ar5
      007123 D0 06            [24]20158 	pop	ar6
      007125 D0 07            [24]20159 	pop	ar7
      007127 90r01rA2         [24]20160 	mov	dptr,#_f_lseek_clst_65536_326
      00712A E9               [12]20161 	mov	a,r1
      00712B F0               [24]20162 	movx	@dptr,a
      00712C EA               [12]20163 	mov	a,r2
      00712D A3               [24]20164 	inc	dptr
      00712E F0               [24]20165 	movx	@dptr,a
      00712F EB               [12]20166 	mov	a,r3
      007130 A3               [24]20167 	inc	dptr
      007131 F0               [24]20168 	movx	@dptr,a
      007132 EC               [12]20169 	mov	a,r4
      007133 A3               [24]20170 	inc	dptr
      007134 F0               [24]20171 	movx	@dptr,a
                                  20172 ;	ff15\source\ff.c:4549: if (clst == 0) {				/* Clip file size in case of disk full */
      007135 E9               [12]20173 	mov	a,r1
      007136 4A               [12]20174 	orl	a,r2
      007137 4B               [12]20175 	orl	a,r3
      007138 4C               [12]20176 	orl	a,r4
      007139 70 54            [24]20177 	jnz	00126$
                                  20178 ;	ff15\source\ff.c:4550: ofs = 0; break;
      00713B 90r01r97         [24]20179 	mov	dptr,#_f_lseek_PARM_2
      00713E E4               [12]20180 	clr	a
      00713F F0               [24]20181 	movx	@dptr,a
      007140 A3               [24]20182 	inc	dptr
      007141 F0               [24]20183 	movx	@dptr,a
      007142 A3               [24]20184 	inc	dptr
      007143 F0               [24]20185 	movx	@dptr,a
      007144 A3               [24]20186 	inc	dptr
      007145 F0               [24]20187 	movx	@dptr,a
      007146 02r72r80         [24]20188 	ljmp	00134$
      007149                      20189 00125$:
                                  20190 ;	ff15\source\ff.c:4555: clst = get_fat(&fp->obj, clst);	/* Follow cluster chain if not in write mode */
      007149 90r01rA2         [24]20191 	mov	dptr,#_f_lseek_clst_65536_326
      00714C E0               [24]20192 	movx	a,@dptr
      00714D F9               [12]20193 	mov	r1,a
      00714E A3               [24]20194 	inc	dptr
      00714F E0               [24]20195 	movx	a,@dptr
      007150 FA               [12]20196 	mov	r2,a
      007151 A3               [24]20197 	inc	dptr
      007152 E0               [24]20198 	movx	a,@dptr
      007153 FB               [12]20199 	mov	r3,a
      007154 A3               [24]20200 	inc	dptr
      007155 E0               [24]20201 	movx	a,@dptr
      007156 FC               [12]20202 	mov	r4,a
      007157 90r00r30         [24]20203 	mov	dptr,#_get_fat_PARM_2
      00715A E9               [12]20204 	mov	a,r1
      00715B F0               [24]20205 	movx	@dptr,a
      00715C EA               [12]20206 	mov	a,r2
      00715D A3               [24]20207 	inc	dptr
      00715E F0               [24]20208 	movx	@dptr,a
      00715F EB               [12]20209 	mov	a,r3
      007160 A3               [24]20210 	inc	dptr
      007161 F0               [24]20211 	movx	@dptr,a
      007162 EC               [12]20212 	mov	a,r4
      007163 A3               [24]20213 	inc	dptr
      007164 F0               [24]20214 	movx	@dptr,a
      007165 8D 82            [24]20215 	mov	dpl,r5
      007167 8E 83            [24]20216 	mov	dph,r6
      007169 8F F0            [24]20217 	mov	b,r7
      00716B C0 07            [24]20218 	push	ar7
      00716D C0 06            [24]20219 	push	ar6
      00716F C0 05            [24]20220 	push	ar5
      007171 12r09rFE         [24]20221 	lcall	_get_fat
      007174 A9 82            [24]20222 	mov	r1,dpl
      007176 AA 83            [24]20223 	mov	r2,dph
      007178 AB F0            [24]20224 	mov	r3,b
      00717A FC               [12]20225 	mov	r4,a
      00717B D0 05            [24]20226 	pop	ar5
      00717D D0 06            [24]20227 	pop	ar6
      00717F D0 07            [24]20228 	pop	ar7
      007181 90r01rA2         [24]20229 	mov	dptr,#_f_lseek_clst_65536_326
      007184 E9               [12]20230 	mov	a,r1
      007185 F0               [24]20231 	movx	@dptr,a
      007186 EA               [12]20232 	mov	a,r2
      007187 A3               [24]20233 	inc	dptr
      007188 F0               [24]20234 	movx	@dptr,a
      007189 EB               [12]20235 	mov	a,r3
      00718A A3               [24]20236 	inc	dptr
      00718B F0               [24]20237 	movx	@dptr,a
      00718C EC               [12]20238 	mov	a,r4
      00718D A3               [24]20239 	inc	dptr
      00718E F0               [24]20240 	movx	@dptr,a
      00718F                      20241 00126$:
                                  20242 ;	ff15\source\ff.c:4557: if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
      00718F 90r01rA2         [24]20243 	mov	dptr,#_f_lseek_clst_65536_326
      007192 E0               [24]20244 	movx	a,@dptr
      007193 F9               [12]20245 	mov	r1,a
      007194 A3               [24]20246 	inc	dptr
      007195 E0               [24]20247 	movx	a,@dptr
      007196 FA               [12]20248 	mov	r2,a
      007197 A3               [24]20249 	inc	dptr
      007198 E0               [24]20250 	movx	a,@dptr
      007199 FB               [12]20251 	mov	r3,a
      00719A A3               [24]20252 	inc	dptr
      00719B E0               [24]20253 	movx	a,@dptr
      00719C FC               [12]20254 	mov	r4,a
      00719D B9 FF 34         [24]20255 	cjne	r1,#0xff,00128$
      0071A0 BA FF 31         [24]20256 	cjne	r2,#0xff,00128$
      0071A3 BB FF 2E         [24]20257 	cjne	r3,#0xff,00128$
      0071A6 BC FF 2B         [24]20258 	cjne	r4,#0xff,00128$
      0071A9 90r01r9B         [24]20259 	mov	dptr,#_f_lseek_fp_65536_325
      0071AC E0               [24]20260 	movx	a,@dptr
      0071AD F5*89            [12]20261 	mov	_f_lseek_sloc2_1_0,a
      0071AF A3               [24]20262 	inc	dptr
      0071B0 E0               [24]20263 	movx	a,@dptr
      0071B1 F5*8A            [12]20264 	mov	(_f_lseek_sloc2_1_0 + 1),a
      0071B3 A3               [24]20265 	inc	dptr
      0071B4 E0               [24]20266 	movx	a,@dptr
      0071B5 F5*8B            [12]20267 	mov	(_f_lseek_sloc2_1_0 + 2),a
      0071B7 74 10            [12]20268 	mov	a,#0x10
      0071B9 25*89            [12]20269 	add	a,_f_lseek_sloc2_1_0
      0071BB F5*89            [12]20270 	mov	_f_lseek_sloc2_1_0,a
      0071BD E4               [12]20271 	clr	a
      0071BE 35*8A            [12]20272 	addc	a,(_f_lseek_sloc2_1_0 + 1)
      0071C0 F5*8A            [12]20273 	mov	(_f_lseek_sloc2_1_0 + 1),a
      0071C2 85*89 82         [24]20274 	mov	dpl,_f_lseek_sloc2_1_0
      0071C5 85*8A 83         [24]20275 	mov	dph,(_f_lseek_sloc2_1_0 + 1)
      0071C8 85*8B F0         [24]20276 	mov	b,(_f_lseek_sloc2_1_0 + 2)
      0071CB 74 01            [12]20277 	mov	a,#0x01
      0071CD 12r00r00         [24]20278 	lcall	__gptrput
      0071D0 75 82 01         [24]20279 	mov	dpl,#0x01
      0071D3 22               [24]20280 	ret
      0071D4                      20281 00128$:
                                  20282 ;	ff15\source\ff.c:4558: if (clst <= 1 || clst >= fs->n_fatent) ABORT(fs, FR_INT_ERR);
      0071D4 C3               [12]20283 	clr	c
      0071D5 74 01            [12]20284 	mov	a,#0x01
      0071D7 99               [12]20285 	subb	a,r1
      0071D8 E4               [12]20286 	clr	a
      0071D9 9A               [12]20287 	subb	a,r2
      0071DA E4               [12]20288 	clr	a
      0071DB 9B               [12]20289 	subb	a,r3
      0071DC E4               [12]20290 	clr	a
      0071DD 9C               [12]20291 	subb	a,r4
      0071DE 50 42            [24]20292 	jnc	00129$
      0071E0 C0 05            [24]20293 	push	ar5
      0071E2 C0 06            [24]20294 	push	ar6
      0071E4 C0 07            [24]20295 	push	ar7
      0071E6 90r01r9F         [24]20296 	mov	dptr,#_f_lseek_fs_65536_326
      0071E9 E0               [24]20297 	movx	a,@dptr
      0071EA F8               [12]20298 	mov	r0,a
      0071EB A3               [24]20299 	inc	dptr
      0071EC E0               [24]20300 	movx	a,@dptr
      0071ED FE               [12]20301 	mov	r6,a
      0071EE A3               [24]20302 	inc	dptr
      0071EF E0               [24]20303 	movx	a,@dptr
      0071F0 FF               [12]20304 	mov	r7,a
      0071F1 74 14            [12]20305 	mov	a,#0x14
      0071F3 28               [12]20306 	add	a,r0
      0071F4 F8               [12]20307 	mov	r0,a
      0071F5 E4               [12]20308 	clr	a
      0071F6 3E               [12]20309 	addc	a,r6
      0071F7 FE               [12]20310 	mov	r6,a
      0071F8 88 82            [24]20311 	mov	dpl,r0
      0071FA 8E 83            [24]20312 	mov	dph,r6
      0071FC 8F F0            [24]20313 	mov	b,r7
      0071FE 12r00r00         [24]20314 	lcall	__gptrget
      007201 F8               [12]20315 	mov	r0,a
      007202 A3               [24]20316 	inc	dptr
      007203 12r00r00         [24]20317 	lcall	__gptrget
      007206 FE               [12]20318 	mov	r6,a
      007207 A3               [24]20319 	inc	dptr
      007208 12r00r00         [24]20320 	lcall	__gptrget
      00720B FF               [12]20321 	mov	r7,a
      00720C A3               [24]20322 	inc	dptr
      00720D 12r00r00         [24]20323 	lcall	__gptrget
      007210 FD               [12]20324 	mov	r5,a
      007211 C3               [12]20325 	clr	c
      007212 E9               [12]20326 	mov	a,r1
      007213 98               [12]20327 	subb	a,r0
      007214 EA               [12]20328 	mov	a,r2
      007215 9E               [12]20329 	subb	a,r6
      007216 EB               [12]20330 	mov	a,r3
      007217 9F               [12]20331 	subb	a,r7
      007218 EC               [12]20332 	mov	a,r4
      007219 9D               [12]20333 	subb	a,r5
      00721A D0 07            [24]20334 	pop	ar7
      00721C D0 06            [24]20335 	pop	ar6
      00721E D0 05            [24]20336 	pop	ar5
      007220 40 2B            [24]20337 	jc	00130$
      007222                      20338 00129$:
      007222 90r01r9B         [24]20339 	mov	dptr,#_f_lseek_fp_65536_325
      007225 E0               [24]20340 	movx	a,@dptr
      007226 F5*89            [12]20341 	mov	_f_lseek_sloc2_1_0,a
      007228 A3               [24]20342 	inc	dptr
      007229 E0               [24]20343 	movx	a,@dptr
      00722A F5*8A            [12]20344 	mov	(_f_lseek_sloc2_1_0 + 1),a
      00722C A3               [24]20345 	inc	dptr
      00722D E0               [24]20346 	movx	a,@dptr
      00722E F5*8B            [12]20347 	mov	(_f_lseek_sloc2_1_0 + 2),a
      007230 74 10            [12]20348 	mov	a,#0x10
      007232 25*89            [12]20349 	add	a,_f_lseek_sloc2_1_0
      007234 F5*89            [12]20350 	mov	_f_lseek_sloc2_1_0,a
      007236 E4               [12]20351 	clr	a
      007237 35*8A            [12]20352 	addc	a,(_f_lseek_sloc2_1_0 + 1)
      007239 F5*8A            [12]20353 	mov	(_f_lseek_sloc2_1_0 + 1),a
      00723B 85*89 82         [24]20354 	mov	dpl,_f_lseek_sloc2_1_0
      00723E 85*8A 83         [24]20355 	mov	dph,(_f_lseek_sloc2_1_0 + 1)
      007241 85*8B F0         [24]20356 	mov	b,(_f_lseek_sloc2_1_0 + 2)
      007244 74 02            [12]20357 	mov	a,#0x02
      007246 12r00r00         [24]20358 	lcall	__gptrput
      007249 75 82 02         [24]20359 	mov	dpl,#0x02
      00724C 22               [24]20360 	ret
      00724D                      20361 00130$:
                                  20362 ;	ff15\source\ff.c:4559: fp->clust = clst;
      00724D C0 05            [24]20363 	push	ar5
      00724F C0 06            [24]20364 	push	ar6
      007251 C0 07            [24]20365 	push	ar7
      007253 74 15            [12]20366 	mov	a,#0x15
      007255 25*91            [12]20367 	add	a,_f_lseek_sloc4_1_0
      007257 F8               [12]20368 	mov	r0,a
      007258 E4               [12]20369 	clr	a
      007259 35*92            [12]20370 	addc	a,(_f_lseek_sloc4_1_0 + 1)
      00725B FE               [12]20371 	mov	r6,a
      00725C AF*93            [24]20372 	mov	r7,(_f_lseek_sloc4_1_0 + 2)
      00725E 88 82            [24]20373 	mov	dpl,r0
      007260 8E 83            [24]20374 	mov	dph,r6
      007262 8F F0            [24]20375 	mov	b,r7
      007264 E9               [12]20376 	mov	a,r1
      007265 12r00r00         [24]20377 	lcall	__gptrput
      007268 A3               [24]20378 	inc	dptr
      007269 EA               [12]20379 	mov	a,r2
      00726A 12r00r00         [24]20380 	lcall	__gptrput
      00726D A3               [24]20381 	inc	dptr
      00726E EB               [12]20382 	mov	a,r3
      00726F 12r00r00         [24]20383 	lcall	__gptrput
      007272 A3               [24]20384 	inc	dptr
      007273 EC               [12]20385 	mov	a,r4
      007274 12r00r00         [24]20386 	lcall	__gptrput
      007277 D0 07            [24]20387 	pop	ar7
      007279 D0 06            [24]20388 	pop	ar6
      00727B D0 05            [24]20389 	pop	ar5
      00727D 02r70r46         [24]20390 	ljmp	00132$
      007280                      20391 00134$:
                                  20392 ;	ff15\source\ff.c:4561: fp->fptr += ofs;
      007280 90r01r9B         [24]20393 	mov	dptr,#_f_lseek_fp_65536_325
      007283 E0               [24]20394 	movx	a,@dptr
      007284 FD               [12]20395 	mov	r5,a
      007285 A3               [24]20396 	inc	dptr
      007286 E0               [24]20397 	movx	a,@dptr
      007287 FE               [12]20398 	mov	r6,a
      007288 A3               [24]20399 	inc	dptr
      007289 E0               [24]20400 	movx	a,@dptr
      00728A FF               [12]20401 	mov	r7,a
      00728B 74 11            [12]20402 	mov	a,#0x11
      00728D 2D               [12]20403 	add	a,r5
      00728E F5*91            [12]20404 	mov	_f_lseek_sloc4_1_0,a
      007290 E4               [12]20405 	clr	a
      007291 3E               [12]20406 	addc	a,r6
      007292 F5*92            [12]20407 	mov	(_f_lseek_sloc4_1_0 + 1),a
      007294 8F*93            [24]20408 	mov	(_f_lseek_sloc4_1_0 + 2),r7
      007296 85*91 82         [24]20409 	mov	dpl,_f_lseek_sloc4_1_0
      007299 85*92 83         [24]20410 	mov	dph,(_f_lseek_sloc4_1_0 + 1)
      00729C 85*93 F0         [24]20411 	mov	b,(_f_lseek_sloc4_1_0 + 2)
      00729F 12r00r00         [24]20412 	lcall	__gptrget
      0072A2 F8               [12]20413 	mov	r0,a
      0072A3 A3               [24]20414 	inc	dptr
      0072A4 12r00r00         [24]20415 	lcall	__gptrget
      0072A7 FB               [12]20416 	mov	r3,a
      0072A8 A3               [24]20417 	inc	dptr
      0072A9 12r00r00         [24]20418 	lcall	__gptrget
      0072AC F9               [12]20419 	mov	r1,a
      0072AD A3               [24]20420 	inc	dptr
      0072AE 12r00r00         [24]20421 	lcall	__gptrget
      0072B1 FC               [12]20422 	mov	r4,a
      0072B2 90r01r97         [24]20423 	mov	dptr,#_f_lseek_PARM_2
      0072B5 E0               [24]20424 	movx	a,@dptr
      0072B6 F5*8D            [12]20425 	mov	_f_lseek_sloc3_1_0,a
      0072B8 A3               [24]20426 	inc	dptr
      0072B9 E0               [24]20427 	movx	a,@dptr
      0072BA F5*8E            [12]20428 	mov	(_f_lseek_sloc3_1_0 + 1),a
      0072BC A3               [24]20429 	inc	dptr
      0072BD E0               [24]20430 	movx	a,@dptr
      0072BE F5*8F            [12]20431 	mov	(_f_lseek_sloc3_1_0 + 2),a
      0072C0 A3               [24]20432 	inc	dptr
      0072C1 E0               [24]20433 	movx	a,@dptr
      0072C2 F5*90            [12]20434 	mov	(_f_lseek_sloc3_1_0 + 3),a
      0072C4 E5*8D            [12]20435 	mov	a,_f_lseek_sloc3_1_0
      0072C6 28               [12]20436 	add	a,r0
      0072C7 F8               [12]20437 	mov	r0,a
      0072C8 E5*8E            [12]20438 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      0072CA 3B               [12]20439 	addc	a,r3
      0072CB FB               [12]20440 	mov	r3,a
      0072CC E5*8F            [12]20441 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      0072CE 39               [12]20442 	addc	a,r1
      0072CF F9               [12]20443 	mov	r1,a
      0072D0 E5*90            [12]20444 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      0072D2 3C               [12]20445 	addc	a,r4
      0072D3 FC               [12]20446 	mov	r4,a
      0072D4 85*91 82         [24]20447 	mov	dpl,_f_lseek_sloc4_1_0
      0072D7 85*92 83         [24]20448 	mov	dph,(_f_lseek_sloc4_1_0 + 1)
      0072DA 85*93 F0         [24]20449 	mov	b,(_f_lseek_sloc4_1_0 + 2)
      0072DD E8               [12]20450 	mov	a,r0
      0072DE 12r00r00         [24]20451 	lcall	__gptrput
      0072E1 A3               [24]20452 	inc	dptr
      0072E2 EB               [12]20453 	mov	a,r3
      0072E3 12r00r00         [24]20454 	lcall	__gptrput
      0072E6 A3               [24]20455 	inc	dptr
      0072E7 E9               [12]20456 	mov	a,r1
      0072E8 12r00r00         [24]20457 	lcall	__gptrput
      0072EB A3               [24]20458 	inc	dptr
      0072EC EC               [12]20459 	mov	a,r4
      0072ED 12r00r00         [24]20460 	lcall	__gptrput
                                  20461 ;	ff15\source\ff.c:4562: if (ofs % SS(fs)) {
      0072F0 E5*8D            [12]20462 	mov	a,_f_lseek_sloc3_1_0
      0072F2 70 08            [24]20463 	jnz	00276$
      0072F4 E5*8E            [12]20464 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      0072F6 20 E0 03         [24]20465 	jb	acc.0,00276$
      0072F9 02r73r93         [24]20466 	ljmp	00145$
      0072FC                      20467 00276$:
                                  20468 ;	ff15\source\ff.c:4563: nsect = clst2sect(fs, clst);	/* Current sector */
      0072FC C0 05            [24]20469 	push	ar5
      0072FE C0 06            [24]20470 	push	ar6
      007300 C0 07            [24]20471 	push	ar7
      007302 90r01r9F         [24]20472 	mov	dptr,#_f_lseek_fs_65536_326
      007305 E0               [24]20473 	movx	a,@dptr
      007306 FA               [12]20474 	mov	r2,a
      007307 A3               [24]20475 	inc	dptr
      007308 E0               [24]20476 	movx	a,@dptr
      007309 FB               [12]20477 	mov	r3,a
      00730A A3               [24]20478 	inc	dptr
      00730B E0               [24]20479 	movx	a,@dptr
      00730C FC               [12]20480 	mov	r4,a
      00730D 90r01rA2         [24]20481 	mov	dptr,#_f_lseek_clst_65536_326
      007310 E0               [24]20482 	movx	a,@dptr
      007311 F8               [12]20483 	mov	r0,a
      007312 A3               [24]20484 	inc	dptr
      007313 E0               [24]20485 	movx	a,@dptr
      007314 F9               [12]20486 	mov	r1,a
      007315 A3               [24]20487 	inc	dptr
      007316 E0               [24]20488 	movx	a,@dptr
      007317 FE               [12]20489 	mov	r6,a
      007318 A3               [24]20490 	inc	dptr
      007319 E0               [24]20491 	movx	a,@dptr
      00731A FF               [12]20492 	mov	r7,a
      00731B 90r00r29         [24]20493 	mov	dptr,#_clst2sect_PARM_2
      00731E E8               [12]20494 	mov	a,r0
      00731F F0               [24]20495 	movx	@dptr,a
      007320 E9               [12]20496 	mov	a,r1
      007321 A3               [24]20497 	inc	dptr
      007322 F0               [24]20498 	movx	@dptr,a
      007323 EE               [12]20499 	mov	a,r6
      007324 A3               [24]20500 	inc	dptr
      007325 F0               [24]20501 	movx	@dptr,a
      007326 EF               [12]20502 	mov	a,r7
      007327 A3               [24]20503 	inc	dptr
      007328 F0               [24]20504 	movx	@dptr,a
      007329 8A 82            [24]20505 	mov	dpl,r2
      00732B 8B 83            [24]20506 	mov	dph,r3
      00732D 8C F0            [24]20507 	mov	b,r4
      00732F C0 07            [24]20508 	push	ar7
      007331 C0 06            [24]20509 	push	ar6
      007333 C0 05            [24]20510 	push	ar5
      007335 12r08rDC         [24]20511 	lcall	_clst2sect
      007338 85 82*91         [24]20512 	mov	_f_lseek_sloc4_1_0,dpl
      00733B 85 83*92         [24]20513 	mov	(_f_lseek_sloc4_1_0 + 1),dph
      00733E 85 F0*93         [24]20514 	mov	(_f_lseek_sloc4_1_0 + 2),b
      007341 F5*94            [12]20515 	mov	(_f_lseek_sloc4_1_0 + 3),a
      007343 D0 05            [24]20516 	pop	ar5
      007345 D0 06            [24]20517 	pop	ar6
      007347 D0 07            [24]20518 	pop	ar7
                                  20519 ;	ff15\source\ff.c:4564: if (nsect == 0) ABORT(fs, FR_INT_ERR);
      007349 D0 07            [24]20520 	pop	ar7
      00734B D0 06            [24]20521 	pop	ar6
      00734D D0 05            [24]20522 	pop	ar5
      00734F E5*91            [12]20523 	mov	a,_f_lseek_sloc4_1_0
      007351 45*92            [12]20524 	orl	a,(_f_lseek_sloc4_1_0 + 1)
      007353 45*93            [12]20525 	orl	a,(_f_lseek_sloc4_1_0 + 2)
      007355 45*94            [12]20526 	orl	a,(_f_lseek_sloc4_1_0 + 3)
      007357 70 16            [24]20527 	jnz	00136$
      007359 74 10            [12]20528 	mov	a,#0x10
      00735B 2D               [12]20529 	add	a,r5
      00735C FD               [12]20530 	mov	r5,a
      00735D E4               [12]20531 	clr	a
      00735E 3E               [12]20532 	addc	a,r6
      00735F FE               [12]20533 	mov	r6,a
      007360 8D 82            [24]20534 	mov	dpl,r5
      007362 8E 83            [24]20535 	mov	dph,r6
      007364 8F F0            [24]20536 	mov	b,r7
      007366 74 02            [12]20537 	mov	a,#0x02
      007368 12r00r00         [24]20538 	lcall	__gptrput
      00736B 75 82 02         [24]20539 	mov	dpl,#0x02
      00736E 22               [24]20540 	ret
      00736F                      20541 00136$:
                                  20542 ;	ff15\source\ff.c:4565: nsect += (DWORD)(ofs / SS(fs));
      00736F E5*90            [12]20543 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      007371 7F 00            [12]20544 	mov	r7,#0x00
      007373 C3               [12]20545 	clr	c
      007374 13               [12]20546 	rrc	a
      007375 FE               [12]20547 	mov	r6,a
      007376 E5*8F            [12]20548 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      007378 13               [12]20549 	rrc	a
      007379 FD               [12]20550 	mov	r5,a
      00737A E5*8E            [12]20551 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      00737C 13               [12]20552 	rrc	a
      00737D FC               [12]20553 	mov	r4,a
      00737E 90r01rAA         [24]20554 	mov	dptr,#_f_lseek_nsect_65536_326
      007381 25*91            [12]20555 	add	a,_f_lseek_sloc4_1_0
      007383 F0               [24]20556 	movx	@dptr,a
      007384 ED               [12]20557 	mov	a,r5
      007385 35*92            [12]20558 	addc	a,(_f_lseek_sloc4_1_0 + 1)
      007387 A3               [24]20559 	inc	dptr
      007388 F0               [24]20560 	movx	@dptr,a
      007389 EE               [12]20561 	mov	a,r6
      00738A 35*93            [12]20562 	addc	a,(_f_lseek_sloc4_1_0 + 2)
      00738C A3               [24]20563 	inc	dptr
      00738D F0               [24]20564 	movx	@dptr,a
      00738E EF               [12]20565 	mov	a,r7
      00738F 35*94            [12]20566 	addc	a,(_f_lseek_sloc4_1_0 + 3)
      007391 A3               [24]20567 	inc	dptr
      007392 F0               [24]20568 	movx	@dptr,a
                                  20569 ;	ff15\source\ff.c:4569: if (!FF_FS_READONLY && fp->fptr > fp->obj.objsize) {	/* Set file change flag if the file size is extended */
      007393                      20570 00145$:
      007393 90r01r9B         [24]20571 	mov	dptr,#_f_lseek_fp_65536_325
      007396 E0               [24]20572 	movx	a,@dptr
      007397 FD               [12]20573 	mov	r5,a
      007398 A3               [24]20574 	inc	dptr
      007399 E0               [24]20575 	movx	a,@dptr
      00739A FE               [12]20576 	mov	r6,a
      00739B A3               [24]20577 	inc	dptr
      00739C E0               [24]20578 	movx	a,@dptr
      00739D FF               [12]20579 	mov	r7,a
      00739E 74 11            [12]20580 	mov	a,#0x11
      0073A0 2D               [12]20581 	add	a,r5
      0073A1 FC               [12]20582 	mov	r4,a
      0073A2 E4               [12]20583 	clr	a
      0073A3 3E               [12]20584 	addc	a,r6
      0073A4 FA               [12]20585 	mov	r2,a
      0073A5 8F 03            [24]20586 	mov	ar3,r7
      0073A7 8C 82            [24]20587 	mov	dpl,r4
      0073A9 8A 83            [24]20588 	mov	dph,r2
      0073AB 8B F0            [24]20589 	mov	b,r3
      0073AD 12r00r00         [24]20590 	lcall	__gptrget
      0073B0 F5*8D            [12]20591 	mov	_f_lseek_sloc3_1_0,a
      0073B2 A3               [24]20592 	inc	dptr
      0073B3 12r00r00         [24]20593 	lcall	__gptrget
      0073B6 F5*8E            [12]20594 	mov	(_f_lseek_sloc3_1_0 + 1),a
      0073B8 A3               [24]20595 	inc	dptr
      0073B9 12r00r00         [24]20596 	lcall	__gptrget
      0073BC F5*8F            [12]20597 	mov	(_f_lseek_sloc3_1_0 + 2),a
      0073BE A3               [24]20598 	inc	dptr
      0073BF 12r00r00         [24]20599 	lcall	__gptrget
      0073C2 F5*90            [12]20600 	mov	(_f_lseek_sloc3_1_0 + 3),a
      0073C4 74 0B            [12]20601 	mov	a,#0x0b
      0073C6 2D               [12]20602 	add	a,r5
      0073C7 F5*91            [12]20603 	mov	_f_lseek_sloc4_1_0,a
      0073C9 E4               [12]20604 	clr	a
      0073CA 3E               [12]20605 	addc	a,r6
      0073CB F5*92            [12]20606 	mov	(_f_lseek_sloc4_1_0 + 1),a
      0073CD 8F*93            [24]20607 	mov	(_f_lseek_sloc4_1_0 + 2),r7
      0073CF 85*91 82         [24]20608 	mov	dpl,_f_lseek_sloc4_1_0
      0073D2 85*92 83         [24]20609 	mov	dph,(_f_lseek_sloc4_1_0 + 1)
      0073D5 85*93 F0         [24]20610 	mov	b,(_f_lseek_sloc4_1_0 + 2)
      0073D8 12r00r00         [24]20611 	lcall	__gptrget
      0073DB F8               [12]20612 	mov	r0,a
      0073DC A3               [24]20613 	inc	dptr
      0073DD 12r00r00         [24]20614 	lcall	__gptrget
      0073E0 FA               [12]20615 	mov	r2,a
      0073E1 A3               [24]20616 	inc	dptr
      0073E2 12r00r00         [24]20617 	lcall	__gptrget
      0073E5 FB               [12]20618 	mov	r3,a
      0073E6 A3               [24]20619 	inc	dptr
      0073E7 12r00r00         [24]20620 	lcall	__gptrget
      0073EA FC               [12]20621 	mov	r4,a
      0073EB C3               [12]20622 	clr	c
      0073EC E8               [12]20623 	mov	a,r0
      0073ED 95*8D            [12]20624 	subb	a,_f_lseek_sloc3_1_0
      0073EF EA               [12]20625 	mov	a,r2
      0073F0 95*8E            [12]20626 	subb	a,(_f_lseek_sloc3_1_0 + 1)
      0073F2 EB               [12]20627 	mov	a,r3
      0073F3 95*8F            [12]20628 	subb	a,(_f_lseek_sloc3_1_0 + 2)
      0073F5 EC               [12]20629 	mov	a,r4
      0073F6 95*90            [12]20630 	subb	a,(_f_lseek_sloc3_1_0 + 3)
      0073F8 50 3E            [24]20631 	jnc	00144$
                                  20632 ;	ff15\source\ff.c:4570: fp->obj.objsize = fp->fptr;
      0073FA 85*91 82         [24]20633 	mov	dpl,_f_lseek_sloc4_1_0
      0073FD 85*92 83         [24]20634 	mov	dph,(_f_lseek_sloc4_1_0 + 1)
      007400 85*93 F0         [24]20635 	mov	b,(_f_lseek_sloc4_1_0 + 2)
      007403 E5*8D            [12]20636 	mov	a,_f_lseek_sloc3_1_0
      007405 12r00r00         [24]20637 	lcall	__gptrput
      007408 A3               [24]20638 	inc	dptr
      007409 E5*8E            [12]20639 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      00740B 12r00r00         [24]20640 	lcall	__gptrput
      00740E A3               [24]20641 	inc	dptr
      00740F E5*8F            [12]20642 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      007411 12r00r00         [24]20643 	lcall	__gptrput
      007414 A3               [24]20644 	inc	dptr
      007415 E5*90            [12]20645 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      007417 12r00r00         [24]20646 	lcall	__gptrput
                                  20647 ;	ff15\source\ff.c:4571: fp->flag |= FA_MODIFIED;
      00741A 74 0F            [12]20648 	mov	a,#0x0f
      00741C 2D               [12]20649 	add	a,r5
      00741D FD               [12]20650 	mov	r5,a
      00741E E4               [12]20651 	clr	a
      00741F 3E               [12]20652 	addc	a,r6
      007420 FE               [12]20653 	mov	r6,a
      007421 8D 82            [24]20654 	mov	dpl,r5
      007423 8E 83            [24]20655 	mov	dph,r6
      007425 8F F0            [24]20656 	mov	b,r7
      007427 12r00r00         [24]20657 	lcall	__gptrget
      00742A FC               [12]20658 	mov	r4,a
      00742B 43 04 40         [24]20659 	orl	ar4,#0x40
      00742E 8D 82            [24]20660 	mov	dpl,r5
      007430 8E 83            [24]20661 	mov	dph,r6
      007432 8F F0            [24]20662 	mov	b,r7
      007434 EC               [12]20663 	mov	a,r4
      007435 12r00r00         [24]20664 	lcall	__gptrput
      007438                      20665 00144$:
                                  20666 ;	ff15\source\ff.c:4573: if (fp->fptr % SS(fs) && nsect != fp->sect) {	/* Fill sector cache if needed */
      007438 90r01r9B         [24]20667 	mov	dptr,#_f_lseek_fp_65536_325
      00743B E0               [24]20668 	movx	a,@dptr
      00743C FD               [12]20669 	mov	r5,a
      00743D A3               [24]20670 	inc	dptr
      00743E E0               [24]20671 	movx	a,@dptr
      00743F FE               [12]20672 	mov	r6,a
      007440 A3               [24]20673 	inc	dptr
      007441 E0               [24]20674 	movx	a,@dptr
      007442 FF               [12]20675 	mov	r7,a
      007443 74 11            [12]20676 	mov	a,#0x11
      007445 2D               [12]20677 	add	a,r5
      007446 FC               [12]20678 	mov	r4,a
      007447 E4               [12]20679 	clr	a
      007448 3E               [12]20680 	addc	a,r6
      007449 FA               [12]20681 	mov	r2,a
      00744A 8F 03            [24]20682 	mov	ar3,r7
      00744C 8C 82            [24]20683 	mov	dpl,r4
      00744E 8A 83            [24]20684 	mov	dph,r2
      007450 8B F0            [24]20685 	mov	b,r3
      007452 12r00r00         [24]20686 	lcall	__gptrget
      007455 F9               [12]20687 	mov	r1,a
      007456 A3               [24]20688 	inc	dptr
      007457 12r00r00         [24]20689 	lcall	__gptrget
      00745A FA               [12]20690 	mov	r2,a
      00745B A3               [24]20691 	inc	dptr
      00745C 12r00r00         [24]20692 	lcall	__gptrget
      00745F FB               [12]20693 	mov	r3,a
      007460 A3               [24]20694 	inc	dptr
      007461 12r00r00         [24]20695 	lcall	__gptrget
      007464 FC               [12]20696 	mov	r4,a
      007465 E9               [12]20697 	mov	a,r1
      007466 70 07            [24]20698 	jnz	00279$
      007468 EA               [12]20699 	mov	a,r2
      007469 20 E0 03         [24]20700 	jb	acc.0,00279$
      00746C 02r76r28         [24]20701 	ljmp	00153$
      00746F                      20702 00279$:
      00746F 74 19            [12]20703 	mov	a,#0x19
      007471 2D               [12]20704 	add	a,r5
      007472 FC               [12]20705 	mov	r4,a
      007473 E4               [12]20706 	clr	a
      007474 3E               [12]20707 	addc	a,r6
      007475 FA               [12]20708 	mov	r2,a
      007476 8F 03            [24]20709 	mov	ar3,r7
      007478 8C 82            [24]20710 	mov	dpl,r4
      00747A 8A 83            [24]20711 	mov	dph,r2
      00747C 8B F0            [24]20712 	mov	b,r3
      00747E 12r00r00         [24]20713 	lcall	__gptrget
      007481 F5*8D            [12]20714 	mov	_f_lseek_sloc3_1_0,a
      007483 A3               [24]20715 	inc	dptr
      007484 12r00r00         [24]20716 	lcall	__gptrget
      007487 F5*8E            [12]20717 	mov	(_f_lseek_sloc3_1_0 + 1),a
      007489 A3               [24]20718 	inc	dptr
      00748A 12r00r00         [24]20719 	lcall	__gptrget
      00748D F5*8F            [12]20720 	mov	(_f_lseek_sloc3_1_0 + 2),a
      00748F A3               [24]20721 	inc	dptr
      007490 12r00r00         [24]20722 	lcall	__gptrget
      007493 F5*90            [12]20723 	mov	(_f_lseek_sloc3_1_0 + 3),a
      007495 C0 05            [24]20724 	push	ar5
      007497 C0 06            [24]20725 	push	ar6
      007499 C0 07            [24]20726 	push	ar7
      00749B 90r01rAA         [24]20727 	mov	dptr,#_f_lseek_nsect_65536_326
      00749E E0               [24]20728 	movx	a,@dptr
      00749F F8               [12]20729 	mov	r0,a
      0074A0 A3               [24]20730 	inc	dptr
      0074A1 E0               [24]20731 	movx	a,@dptr
      0074A2 FD               [12]20732 	mov	r5,a
      0074A3 A3               [24]20733 	inc	dptr
      0074A4 E0               [24]20734 	movx	a,@dptr
      0074A5 FE               [12]20735 	mov	r6,a
      0074A6 A3               [24]20736 	inc	dptr
      0074A7 E0               [24]20737 	movx	a,@dptr
      0074A8 FF               [12]20738 	mov	r7,a
      0074A9 E8               [12]20739 	mov	a,r0
      0074AA B5*8D 15         [24]20740 	cjne	a,_f_lseek_sloc3_1_0,00280$
      0074AD ED               [12]20741 	mov	a,r5
      0074AE B5*8E 11         [24]20742 	cjne	a,(_f_lseek_sloc3_1_0 + 1),00280$
      0074B1 EE               [12]20743 	mov	a,r6
      0074B2 B5*8F 0D         [24]20744 	cjne	a,(_f_lseek_sloc3_1_0 + 2),00280$
      0074B5 EF               [12]20745 	mov	a,r7
      0074B6 B5*90 09         [24]20746 	cjne	a,(_f_lseek_sloc3_1_0 + 3),00280$
      0074B9 D0 07            [24]20747 	pop	ar7
      0074BB D0 06            [24]20748 	pop	ar6
      0074BD D0 05            [24]20749 	pop	ar5
      0074BF 02r76r28         [24]20750 	ljmp	00153$
      0074C2                      20751 00280$:
      0074C2 D0 07            [24]20752 	pop	ar7
      0074C4 D0 06            [24]20753 	pop	ar6
      0074C6 D0 05            [24]20754 	pop	ar5
                                  20755 ;	ff15\source\ff.c:4576: if (fp->flag & FA_DIRTY) {			/* Write-back dirty sector cache */
      0074C8 74 0F            [12]20756 	mov	a,#0x0f
      0074CA 2D               [12]20757 	add	a,r5
      0074CB F5*91            [12]20758 	mov	_f_lseek_sloc4_1_0,a
      0074CD E4               [12]20759 	clr	a
      0074CE 3E               [12]20760 	addc	a,r6
      0074CF F5*92            [12]20761 	mov	(_f_lseek_sloc4_1_0 + 1),a
      0074D1 8F*93            [24]20762 	mov	(_f_lseek_sloc4_1_0 + 2),r7
      0074D3 85*91 82         [24]20763 	mov	dpl,_f_lseek_sloc4_1_0
      0074D6 85*92 83         [24]20764 	mov	dph,(_f_lseek_sloc4_1_0 + 1)
      0074D9 85*93 F0         [24]20765 	mov	b,(_f_lseek_sloc4_1_0 + 2)
      0074DC 12r00r00         [24]20766 	lcall	__gptrget
      0074DF F8               [12]20767 	mov	r0,a
      0074E0 20 E7 03         [24]20768 	jb	acc.7,00281$
      0074E3 02r75r71         [24]20769 	ljmp	00149$
      0074E6                      20770 00281$:
                                  20771 ;	ff15\source\ff.c:4577: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
      0074E6 90r01r9F         [24]20772 	mov	dptr,#_f_lseek_fs_65536_326
      0074E9 E0               [24]20773 	movx	a,@dptr
      0074EA F8               [12]20774 	mov	r0,a
      0074EB A3               [24]20775 	inc	dptr
      0074EC E0               [24]20776 	movx	a,@dptr
      0074ED FB               [12]20777 	mov	r3,a
      0074EE A3               [24]20778 	inc	dptr
      0074EF E0               [24]20779 	movx	a,@dptr
      0074F0 FC               [12]20780 	mov	r4,a
      0074F1 08               [12]20781 	inc	r0
      0074F2 B8 00 01         [24]20782 	cjne	r0,#0x00,00282$
      0074F5 0B               [12]20783 	inc	r3
      0074F6                      20784 00282$:
      0074F6 88 82            [24]20785 	mov	dpl,r0
      0074F8 8B 83            [24]20786 	mov	dph,r3
      0074FA 8C F0            [24]20787 	mov	b,r4
      0074FC 12r00r00         [24]20788 	lcall	__gptrget
      0074FF F8               [12]20789 	mov	r0,a
      007500 90r00r00         [24]20790 	mov	dptr,#_disk_write_PARM_2
      007503 74 24            [12]20791 	mov	a,#0x24
      007505 2D               [12]20792 	add	a,r5
      007506 F0               [24]20793 	movx	@dptr,a
      007507 E4               [12]20794 	clr	a
      007508 3E               [12]20795 	addc	a,r6
      007509 A3               [24]20796 	inc	dptr
      00750A F0               [24]20797 	movx	@dptr,a
      00750B EF               [12]20798 	mov	a,r7
      00750C A3               [24]20799 	inc	dptr
      00750D F0               [24]20800 	movx	@dptr,a
      00750E 90r00r00         [24]20801 	mov	dptr,#_disk_write_PARM_3
      007511 E5*8D            [12]20802 	mov	a,_f_lseek_sloc3_1_0
      007513 F0               [24]20803 	movx	@dptr,a
      007514 E5*8E            [12]20804 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      007516 A3               [24]20805 	inc	dptr
      007517 F0               [24]20806 	movx	@dptr,a
      007518 E5*8F            [12]20807 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      00751A A3               [24]20808 	inc	dptr
      00751B F0               [24]20809 	movx	@dptr,a
      00751C E5*90            [12]20810 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      00751E A3               [24]20811 	inc	dptr
      00751F F0               [24]20812 	movx	@dptr,a
      007520 90r00r00         [24]20813 	mov	dptr,#_disk_write_PARM_4
      007523 74 01            [12]20814 	mov	a,#0x01
      007525 F0               [24]20815 	movx	@dptr,a
      007526 E4               [12]20816 	clr	a
      007527 A3               [24]20817 	inc	dptr
      007528 F0               [24]20818 	movx	@dptr,a
      007529 88 82            [24]20819 	mov	dpl,r0
      00752B C0 07            [24]20820 	push	ar7
      00752D C0 06            [24]20821 	push	ar6
      00752F C0 05            [24]20822 	push	ar5
      007531 12r00r00         [24]20823 	lcall	_disk_write
      007534 E5 82            [12]20824 	mov	a,dpl
      007536 D0 05            [24]20825 	pop	ar5
      007538 D0 06            [24]20826 	pop	ar6
      00753A D0 07            [24]20827 	pop	ar7
      00753C 60 16            [24]20828 	jz	00147$
      00753E 74 10            [12]20829 	mov	a,#0x10
      007540 2D               [12]20830 	add	a,r5
      007541 FD               [12]20831 	mov	r5,a
      007542 E4               [12]20832 	clr	a
      007543 3E               [12]20833 	addc	a,r6
      007544 FE               [12]20834 	mov	r6,a
      007545 8D 82            [24]20835 	mov	dpl,r5
      007547 8E 83            [24]20836 	mov	dph,r6
      007549 8F F0            [24]20837 	mov	b,r7
      00754B 74 01            [12]20838 	mov	a,#0x01
      00754D 12r00r00         [24]20839 	lcall	__gptrput
      007550 75 82 01         [24]20840 	mov	dpl,#0x01
      007553 22               [24]20841 	ret
      007554                      20842 00147$:
                                  20843 ;	ff15\source\ff.c:4578: fp->flag &= (BYTE)~FA_DIRTY;
      007554 85*91 82         [24]20844 	mov	dpl,_f_lseek_sloc4_1_0
      007557 85*92 83         [24]20845 	mov	dph,(_f_lseek_sloc4_1_0 + 1)
      00755A 85*93 F0         [24]20846 	mov	b,(_f_lseek_sloc4_1_0 + 2)
      00755D 12r00r00         [24]20847 	lcall	__gptrget
      007560 FF               [12]20848 	mov	r7,a
      007561 53 07 7F         [24]20849 	anl	ar7,#0x7f
      007564 85*91 82         [24]20850 	mov	dpl,_f_lseek_sloc4_1_0
      007567 85*92 83         [24]20851 	mov	dph,(_f_lseek_sloc4_1_0 + 1)
      00756A 85*93 F0         [24]20852 	mov	b,(_f_lseek_sloc4_1_0 + 2)
      00756D EF               [12]20853 	mov	a,r7
      00756E 12r00r00         [24]20854 	lcall	__gptrput
      007571                      20855 00149$:
                                  20856 ;	ff15\source\ff.c:4581: if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);	/* Fill sector cache */
      007571 90r01r9F         [24]20857 	mov	dptr,#_f_lseek_fs_65536_326
      007574 E0               [24]20858 	movx	a,@dptr
      007575 FD               [12]20859 	mov	r5,a
      007576 A3               [24]20860 	inc	dptr
      007577 E0               [24]20861 	movx	a,@dptr
      007578 FE               [12]20862 	mov	r6,a
      007579 A3               [24]20863 	inc	dptr
      00757A E0               [24]20864 	movx	a,@dptr
      00757B FF               [12]20865 	mov	r7,a
      00757C 0D               [12]20866 	inc	r5
      00757D BD 00 01         [24]20867 	cjne	r5,#0x00,00284$
      007580 0E               [12]20868 	inc	r6
      007581                      20869 00284$:
      007581 8D 82            [24]20870 	mov	dpl,r5
      007583 8E 83            [24]20871 	mov	dph,r6
      007585 8F F0            [24]20872 	mov	b,r7
      007587 12r00r00         [24]20873 	lcall	__gptrget
      00758A FD               [12]20874 	mov	r5,a
      00758B 90r01r9B         [24]20875 	mov	dptr,#_f_lseek_fp_65536_325
      00758E E0               [24]20876 	movx	a,@dptr
      00758F FC               [12]20877 	mov	r4,a
      007590 A3               [24]20878 	inc	dptr
      007591 E0               [24]20879 	movx	a,@dptr
      007592 FE               [12]20880 	mov	r6,a
      007593 A3               [24]20881 	inc	dptr
      007594 E0               [24]20882 	movx	a,@dptr
      007595 FF               [12]20883 	mov	r7,a
      007596 74 24            [12]20884 	mov	a,#0x24
      007598 2C               [12]20885 	add	a,r4
      007599 F9               [12]20886 	mov	r1,a
      00759A E4               [12]20887 	clr	a
      00759B 3E               [12]20888 	addc	a,r6
      00759C FA               [12]20889 	mov	r2,a
      00759D 8F 03            [24]20890 	mov	ar3,r7
      00759F 90r01rAA         [24]20891 	mov	dptr,#_f_lseek_nsect_65536_326
      0075A2 E0               [24]20892 	movx	a,@dptr
      0075A3 F5*91            [12]20893 	mov	_f_lseek_sloc4_1_0,a
      0075A5 A3               [24]20894 	inc	dptr
      0075A6 E0               [24]20895 	movx	a,@dptr
      0075A7 F5*92            [12]20896 	mov	(_f_lseek_sloc4_1_0 + 1),a
      0075A9 A3               [24]20897 	inc	dptr
      0075AA E0               [24]20898 	movx	a,@dptr
      0075AB F5*93            [12]20899 	mov	(_f_lseek_sloc4_1_0 + 2),a
      0075AD A3               [24]20900 	inc	dptr
      0075AE E0               [24]20901 	movx	a,@dptr
      0075AF F5*94            [12]20902 	mov	(_f_lseek_sloc4_1_0 + 3),a
      0075B1 90r00r00         [24]20903 	mov	dptr,#_disk_read_PARM_2
      0075B4 E9               [12]20904 	mov	a,r1
      0075B5 F0               [24]20905 	movx	@dptr,a
      0075B6 EA               [12]20906 	mov	a,r2
      0075B7 A3               [24]20907 	inc	dptr
      0075B8 F0               [24]20908 	movx	@dptr,a
      0075B9 EB               [12]20909 	mov	a,r3
      0075BA A3               [24]20910 	inc	dptr
      0075BB F0               [24]20911 	movx	@dptr,a
      0075BC 90r00r00         [24]20912 	mov	dptr,#_disk_read_PARM_3
      0075BF E5*91            [12]20913 	mov	a,_f_lseek_sloc4_1_0
      0075C1 F0               [24]20914 	movx	@dptr,a
      0075C2 E5*92            [12]20915 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      0075C4 A3               [24]20916 	inc	dptr
      0075C5 F0               [24]20917 	movx	@dptr,a
      0075C6 E5*93            [12]20918 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      0075C8 A3               [24]20919 	inc	dptr
      0075C9 F0               [24]20920 	movx	@dptr,a
      0075CA E5*94            [12]20921 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      0075CC A3               [24]20922 	inc	dptr
      0075CD F0               [24]20923 	movx	@dptr,a
      0075CE 90r00r00         [24]20924 	mov	dptr,#_disk_read_PARM_4
      0075D1 74 01            [12]20925 	mov	a,#0x01
      0075D3 F0               [24]20926 	movx	@dptr,a
      0075D4 E4               [12]20927 	clr	a
      0075D5 A3               [24]20928 	inc	dptr
      0075D6 F0               [24]20929 	movx	@dptr,a
      0075D7 8D 82            [24]20930 	mov	dpl,r5
      0075D9 C0 07            [24]20931 	push	ar7
      0075DB C0 06            [24]20932 	push	ar6
      0075DD C0 04            [24]20933 	push	ar4
      0075DF 12r00r00         [24]20934 	lcall	_disk_read
      0075E2 E5 82            [12]20935 	mov	a,dpl
      0075E4 D0 04            [24]20936 	pop	ar4
      0075E6 D0 06            [24]20937 	pop	ar6
      0075E8 D0 07            [24]20938 	pop	ar7
      0075EA 60 18            [24]20939 	jz	00151$
      0075EC 74 10            [12]20940 	mov	a,#0x10
      0075EE 2C               [12]20941 	add	a,r4
      0075EF FA               [12]20942 	mov	r2,a
      0075F0 E4               [12]20943 	clr	a
      0075F1 3E               [12]20944 	addc	a,r6
      0075F2 FB               [12]20945 	mov	r3,a
      0075F3 8F 05            [24]20946 	mov	ar5,r7
      0075F5 8A 82            [24]20947 	mov	dpl,r2
      0075F7 8B 83            [24]20948 	mov	dph,r3
      0075F9 8D F0            [24]20949 	mov	b,r5
      0075FB 74 01            [12]20950 	mov	a,#0x01
      0075FD 12r00r00         [24]20951 	lcall	__gptrput
      007600 75 82 01         [24]20952 	mov	dpl,#0x01
      007603 22               [24]20953 	ret
      007604                      20954 00151$:
                                  20955 ;	ff15\source\ff.c:4583: fp->sect = nsect;
      007604 74 19            [12]20956 	mov	a,#0x19
      007606 2C               [12]20957 	add	a,r4
      007607 FC               [12]20958 	mov	r4,a
      007608 E4               [12]20959 	clr	a
      007609 3E               [12]20960 	addc	a,r6
      00760A FE               [12]20961 	mov	r6,a
      00760B 8C 82            [24]20962 	mov	dpl,r4
      00760D 8E 83            [24]20963 	mov	dph,r6
      00760F 8F F0            [24]20964 	mov	b,r7
      007611 E5*91            [12]20965 	mov	a,_f_lseek_sloc4_1_0
      007613 12r00r00         [24]20966 	lcall	__gptrput
      007616 A3               [24]20967 	inc	dptr
      007617 E5*92            [12]20968 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      007619 12r00r00         [24]20969 	lcall	__gptrput
      00761C A3               [24]20970 	inc	dptr
      00761D E5*93            [12]20971 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      00761F 12r00r00         [24]20972 	lcall	__gptrput
      007622 A3               [24]20973 	inc	dptr
      007623 E5*94            [12]20974 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      007625 12r00r00         [24]20975 	lcall	__gptrput
      007628                      20976 00153$:
                                  20977 ;	ff15\source\ff.c:4587: LEAVE_FF(fs, res);
      007628 90r01r9E         [24]20978 	mov	dptr,#_f_lseek_res_65536_326
      00762B E0               [24]20979 	movx	a,@dptr
                                  20980 ;	ff15\source\ff.c:4588: }
      00762C F5 82            [12]20981 	mov	dpl,a
      00762E 22               [24]20982 	ret
                                  20983 ;------------------------------------------------------------
                                  20984 ;Allocation info for local variables in function 'f_opendir'
                                  20985 ;------------------------------------------------------------
                                  20986 ;sloc0                     Allocated with name '_f_opendir_sloc0_1_0'
                                  20987 ;path                      Allocated with name '_f_opendir_PARM_2'
                                  20988 ;dp                        Allocated with name '_f_opendir_dp_65536_350'
                                  20989 ;res                       Allocated with name '_f_opendir_res_65536_351'
                                  20990 ;fs                        Allocated with name '_f_opendir_fs_65536_351'
                                  20991 ;------------------------------------------------------------
                                  20992 ;	ff15\source\ff.c:4597: FRESULT f_opendir (
                                  20993 ;	-----------------------------------------
                                  20994 ;	 function f_opendir
                                  20995 ;	-----------------------------------------
      00762F                      20996 _f_opendir:
      00762F AF F0            [24]20997 	mov	r7,b
      007631 AE 83            [24]20998 	mov	r6,dph
      007633 E5 82            [12]20999 	mov	a,dpl
      007635 90r01rB1         [24]21000 	mov	dptr,#_f_opendir_dp_65536_350
      007638 F0               [24]21001 	movx	@dptr,a
      007639 EE               [12]21002 	mov	a,r6
      00763A A3               [24]21003 	inc	dptr
      00763B F0               [24]21004 	movx	@dptr,a
      00763C EF               [12]21005 	mov	a,r7
      00763D A3               [24]21006 	inc	dptr
      00763E F0               [24]21007 	movx	@dptr,a
                                  21008 ;	ff15\source\ff.c:4607: if (!dp) return FR_INVALID_OBJECT;
      00763F 90r01rB1         [24]21009 	mov	dptr,#_f_opendir_dp_65536_350
      007642 E0               [24]21010 	movx	a,@dptr
      007643 FD               [12]21011 	mov	r5,a
      007644 A3               [24]21012 	inc	dptr
      007645 E0               [24]21013 	movx	a,@dptr
      007646 FE               [12]21014 	mov	r6,a
      007647 A3               [24]21015 	inc	dptr
      007648 E0               [24]21016 	movx	a,@dptr
      007649 FF               [12]21017 	mov	r7,a
      00764A ED               [12]21018 	mov	a,r5
      00764B 4E               [12]21019 	orl	a,r6
      00764C 70 04            [24]21020 	jnz	00102$
      00764E 75 82 09         [24]21021 	mov	dpl,#0x09
      007651 22               [24]21022 	ret
      007652                      21023 00102$:
                                  21024 ;	ff15\source\ff.c:4610: res = mount_volume(&path, &fs, 0);
      007652 90r00rEA         [24]21025 	mov	dptr,#_mount_volume_PARM_2
      007655 74rB5            [12]21026 	mov	a,#_f_opendir_fs_65536_351
      007657 F0               [24]21027 	movx	@dptr,a
      007658 74s01            [12]21028 	mov	a,#(_f_opendir_fs_65536_351 >> 8)
      00765A A3               [24]21029 	inc	dptr
      00765B F0               [24]21030 	movx	@dptr,a
      00765C E4               [12]21031 	clr	a
      00765D A3               [24]21032 	inc	dptr
      00765E F0               [24]21033 	movx	@dptr,a
      00765F 90r00rED         [24]21034 	mov	dptr,#_mount_volume_PARM_3
      007662 F0               [24]21035 	movx	@dptr,a
      007663 90r01rAE         [24]21036 	mov	dptr,#_f_opendir_PARM_2
      007666 75 F0 00         [24]21037 	mov	b,#0x00
      007669 C0 07            [24]21038 	push	ar7
      00766B C0 06            [24]21039 	push	ar6
      00766D C0 05            [24]21040 	push	ar5
      00766F 12r3Dr6D         [24]21041 	lcall	_mount_volume
      007672 AC 82            [24]21042 	mov	r4,dpl
      007674 D0 05            [24]21043 	pop	ar5
      007676 D0 06            [24]21044 	pop	ar6
      007678 D0 07            [24]21045 	pop	ar7
      00767A 90r01rB4         [24]21046 	mov	dptr,#_f_opendir_res_65536_351
      00767D EC               [12]21047 	mov	a,r4
      00767E F0               [24]21048 	movx	@dptr,a
                                  21049 ;	ff15\source\ff.c:4611: if (res == FR_OK) {
      00767F EC               [12]21050 	mov	a,r4
      007680 60 03            [24]21051 	jz	00153$
      007682 02r77rF1         [24]21052 	ljmp	00115$
      007685                      21053 00153$:
                                  21054 ;	ff15\source\ff.c:4612: dp->obj.fs = fs;
      007685 90r01rB5         [24]21055 	mov	dptr,#_f_opendir_fs_65536_351
      007688 E0               [24]21056 	movx	a,@dptr
      007689 FA               [12]21057 	mov	r2,a
      00768A A3               [24]21058 	inc	dptr
      00768B E0               [24]21059 	movx	a,@dptr
      00768C FB               [12]21060 	mov	r3,a
      00768D A3               [24]21061 	inc	dptr
      00768E E0               [24]21062 	movx	a,@dptr
      00768F FC               [12]21063 	mov	r4,a
      007690 8D 82            [24]21064 	mov	dpl,r5
      007692 8E 83            [24]21065 	mov	dph,r6
      007694 8F F0            [24]21066 	mov	b,r7
      007696 EA               [12]21067 	mov	a,r2
      007697 12r00r00         [24]21068 	lcall	__gptrput
      00769A A3               [24]21069 	inc	dptr
      00769B EB               [12]21070 	mov	a,r3
      00769C 12r00r00         [24]21071 	lcall	__gptrput
      00769F A3               [24]21072 	inc	dptr
      0076A0 EC               [12]21073 	mov	a,r4
      0076A1 12r00r00         [24]21074 	lcall	__gptrput
                                  21075 ;	ff15\source\ff.c:4614: res = follow_path(dp, path);			/* Follow the path to the directory */
      0076A4 90r01rAE         [24]21076 	mov	dptr,#_f_opendir_PARM_2
      0076A7 E0               [24]21077 	movx	a,@dptr
      0076A8 FA               [12]21078 	mov	r2,a
      0076A9 A3               [24]21079 	inc	dptr
      0076AA E0               [24]21080 	movx	a,@dptr
      0076AB FB               [12]21081 	mov	r3,a
      0076AC A3               [24]21082 	inc	dptr
      0076AD E0               [24]21083 	movx	a,@dptr
      0076AE FC               [12]21084 	mov	r4,a
      0076AF 90r00rC0         [24]21085 	mov	dptr,#_follow_path_PARM_2
      0076B2 EA               [12]21086 	mov	a,r2
      0076B3 F0               [24]21087 	movx	@dptr,a
      0076B4 EB               [12]21088 	mov	a,r3
      0076B5 A3               [24]21089 	inc	dptr
      0076B6 F0               [24]21090 	movx	@dptr,a
      0076B7 EC               [12]21091 	mov	a,r4
      0076B8 A3               [24]21092 	inc	dptr
      0076B9 F0               [24]21093 	movx	@dptr,a
      0076BA 8D 82            [24]21094 	mov	dpl,r5
      0076BC 8E 83            [24]21095 	mov	dph,r6
      0076BE 8F F0            [24]21096 	mov	b,r7
      0076C0 12r35rB8         [24]21097 	lcall	_follow_path
      0076C3 AF 82            [24]21098 	mov	r7,dpl
      0076C5 90r01rB4         [24]21099 	mov	dptr,#_f_opendir_res_65536_351
      0076C8 EF               [12]21100 	mov	a,r7
      0076C9 F0               [24]21101 	movx	@dptr,a
                                  21102 ;	ff15\source\ff.c:4615: if (res == FR_OK) {						/* Follow completed */
      0076CA EF               [12]21103 	mov	a,r7
      0076CB 60 03            [24]21104 	jz	00154$
      0076CD 02r77rE3         [24]21105 	ljmp	00111$
      0076D0                      21106 00154$:
                                  21107 ;	ff15\source\ff.c:4616: if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
      0076D0 90r01rB1         [24]21108 	mov	dptr,#_f_opendir_dp_65536_350
      0076D3 E0               [24]21109 	movx	a,@dptr
      0076D4 FD               [12]21110 	mov	r5,a
      0076D5 A3               [24]21111 	inc	dptr
      0076D6 E0               [24]21112 	movx	a,@dptr
      0076D7 FE               [12]21113 	mov	r6,a
      0076D8 A3               [24]21114 	inc	dptr
      0076D9 E0               [24]21115 	movx	a,@dptr
      0076DA FF               [12]21116 	mov	r7,a
      0076DB 74 29            [12]21117 	mov	a,#0x29
      0076DD 2D               [12]21118 	add	a,r5
      0076DE FA               [12]21119 	mov	r2,a
      0076DF E4               [12]21120 	clr	a
      0076E0 3E               [12]21121 	addc	a,r6
      0076E1 FB               [12]21122 	mov	r3,a
      0076E2 8F 04            [24]21123 	mov	ar4,r7
      0076E4 8A 82            [24]21124 	mov	dpl,r2
      0076E6 8B 83            [24]21125 	mov	dph,r3
      0076E8 8C F0            [24]21126 	mov	b,r4
      0076EA 12r00r00         [24]21127 	lcall	__gptrget
      0076ED FA               [12]21128 	mov	r2,a
      0076EE 30 E7 03         [24]21129 	jnb	acc.7,00155$
      0076F1 02r77r7A         [24]21130 	ljmp	00107$
      0076F4                      21131 00155$:
                                  21132 ;	ff15\source\ff.c:4617: if (dp->obj.attr & AM_DIR) {		/* This object is a sub-directory */
      0076F4 74 05            [12]21133 	mov	a,#0x05
      0076F6 2D               [12]21134 	add	a,r5
      0076F7 FA               [12]21135 	mov	r2,a
      0076F8 E4               [12]21136 	clr	a
      0076F9 3E               [12]21137 	addc	a,r6
      0076FA FB               [12]21138 	mov	r3,a
      0076FB 8F 04            [24]21139 	mov	ar4,r7
      0076FD 8A 82            [24]21140 	mov	dpl,r2
      0076FF 8B 83            [24]21141 	mov	dph,r3
      007701 8C F0            [24]21142 	mov	b,r4
      007703 12r00r00         [24]21143 	lcall	__gptrget
      007706 FA               [12]21144 	mov	r2,a
      007707 30 E4 6A         [24]21145 	jnb	acc.4,00104$
                                  21146 ;	ff15\source\ff.c:4627: dp->obj.sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
      00770A 74 07            [12]21147 	mov	a,#0x07
      00770C 2D               [12]21148 	add	a,r5
      00770D F5*95            [12]21149 	mov	_f_opendir_sloc0_1_0,a
      00770F E4               [12]21150 	clr	a
      007710 3E               [12]21151 	addc	a,r6
      007711 F5*96            [12]21152 	mov	(_f_opendir_sloc0_1_0 + 1),a
      007713 8F*97            [24]21153 	mov	(_f_opendir_sloc0_1_0 + 2),r7
      007715 90r01rB5         [24]21154 	mov	dptr,#_f_opendir_fs_65536_351
      007718 E0               [24]21155 	movx	a,@dptr
      007719 F8               [12]21156 	mov	r0,a
      00771A A3               [24]21157 	inc	dptr
      00771B E0               [24]21158 	movx	a,@dptr
      00771C F9               [12]21159 	mov	r1,a
      00771D A3               [24]21160 	inc	dptr
      00771E E0               [24]21161 	movx	a,@dptr
      00771F FC               [12]21162 	mov	r4,a
      007720 74 1B            [12]21163 	mov	a,#0x1b
      007722 2D               [12]21164 	add	a,r5
      007723 FD               [12]21165 	mov	r5,a
      007724 E4               [12]21166 	clr	a
      007725 3E               [12]21167 	addc	a,r6
      007726 FE               [12]21168 	mov	r6,a
      007727 8D 82            [24]21169 	mov	dpl,r5
      007729 8E 83            [24]21170 	mov	dph,r6
      00772B 8F F0            [24]21171 	mov	b,r7
      00772D 12r00r00         [24]21172 	lcall	__gptrget
      007730 FD               [12]21173 	mov	r5,a
      007731 A3               [24]21174 	inc	dptr
      007732 12r00r00         [24]21175 	lcall	__gptrget
      007735 FE               [12]21176 	mov	r6,a
      007736 A3               [24]21177 	inc	dptr
      007737 12r00r00         [24]21178 	lcall	__gptrget
      00773A FF               [12]21179 	mov	r7,a
      00773B 90r00r85         [24]21180 	mov	dptr,#_ld_clust_PARM_2
      00773E ED               [12]21181 	mov	a,r5
      00773F F0               [24]21182 	movx	@dptr,a
      007740 EE               [12]21183 	mov	a,r6
      007741 A3               [24]21184 	inc	dptr
      007742 F0               [24]21185 	movx	@dptr,a
      007743 EF               [12]21186 	mov	a,r7
      007744 A3               [24]21187 	inc	dptr
      007745 F0               [24]21188 	movx	@dptr,a
      007746 88 82            [24]21189 	mov	dpl,r0
      007748 89 83            [24]21190 	mov	dph,r1
      00774A 8C F0            [24]21191 	mov	b,r4
      00774C 12r28r70         [24]21192 	lcall	_ld_clust
      00774F AE 82            [24]21193 	mov	r6,dpl
      007751 AD 83            [24]21194 	mov	r5,dph
      007753 AC F0            [24]21195 	mov	r4,b
      007755 FF               [12]21196 	mov	r7,a
      007756 85*95 82         [24]21197 	mov	dpl,_f_opendir_sloc0_1_0
      007759 85*96 83         [24]21198 	mov	dph,(_f_opendir_sloc0_1_0 + 1)
      00775C 85*97 F0         [24]21199 	mov	b,(_f_opendir_sloc0_1_0 + 2)
      00775F EE               [12]21200 	mov	a,r6
      007760 12r00r00         [24]21201 	lcall	__gptrput
      007763 A3               [24]21202 	inc	dptr
      007764 ED               [12]21203 	mov	a,r5
      007765 12r00r00         [24]21204 	lcall	__gptrput
      007768 A3               [24]21205 	inc	dptr
      007769 EC               [12]21206 	mov	a,r4
      00776A 12r00r00         [24]21207 	lcall	__gptrput
      00776D A3               [24]21208 	inc	dptr
      00776E EF               [12]21209 	mov	a,r7
      00776F 12r00r00         [24]21210 	lcall	__gptrput
      007772 80 06            [24]21211 	sjmp	00107$
      007774                      21212 00104$:
                                  21213 ;	ff15\source\ff.c:4630: res = FR_NO_PATH;
      007774 90r01rB4         [24]21214 	mov	dptr,#_f_opendir_res_65536_351
      007777 74 05            [12]21215 	mov	a,#0x05
      007779 F0               [24]21216 	movx	@dptr,a
      00777A                      21217 00107$:
                                  21218 ;	ff15\source\ff.c:4633: if (res == FR_OK) {
      00777A 90r01rB4         [24]21219 	mov	dptr,#_f_opendir_res_65536_351
      00777D E0               [24]21220 	movx	a,@dptr
      00777E 70 63            [24]21221 	jnz	00111$
                                  21222 ;	ff15\source\ff.c:4634: dp->obj.id = fs->id;
      007780 90r01rB1         [24]21223 	mov	dptr,#_f_opendir_dp_65536_350
      007783 E0               [24]21224 	movx	a,@dptr
      007784 FD               [12]21225 	mov	r5,a
      007785 A3               [24]21226 	inc	dptr
      007786 E0               [24]21227 	movx	a,@dptr
      007787 FE               [12]21228 	mov	r6,a
      007788 A3               [24]21229 	inc	dptr
      007789 E0               [24]21230 	movx	a,@dptr
      00778A FF               [12]21231 	mov	r7,a
      00778B 74 03            [12]21232 	mov	a,#0x03
      00778D 2D               [12]21233 	add	a,r5
      00778E F5*95            [12]21234 	mov	_f_opendir_sloc0_1_0,a
      007790 E4               [12]21235 	clr	a
      007791 3E               [12]21236 	addc	a,r6
      007792 F5*96            [12]21237 	mov	(_f_opendir_sloc0_1_0 + 1),a
      007794 8F*97            [24]21238 	mov	(_f_opendir_sloc0_1_0 + 2),r7
      007796 90r01rB5         [24]21239 	mov	dptr,#_f_opendir_fs_65536_351
      007799 E0               [24]21240 	movx	a,@dptr
      00779A F8               [12]21241 	mov	r0,a
      00779B A3               [24]21242 	inc	dptr
      00779C E0               [24]21243 	movx	a,@dptr
      00779D F9               [12]21244 	mov	r1,a
      00779E A3               [24]21245 	inc	dptr
      00779F E0               [24]21246 	movx	a,@dptr
      0077A0 FC               [12]21247 	mov	r4,a
      0077A1 74 06            [12]21248 	mov	a,#0x06
      0077A3 28               [12]21249 	add	a,r0
      0077A4 F8               [12]21250 	mov	r0,a
      0077A5 E4               [12]21251 	clr	a
      0077A6 39               [12]21252 	addc	a,r1
      0077A7 F9               [12]21253 	mov	r1,a
      0077A8 88 82            [24]21254 	mov	dpl,r0
      0077AA 89 83            [24]21255 	mov	dph,r1
      0077AC 8C F0            [24]21256 	mov	b,r4
      0077AE 12r00r00         [24]21257 	lcall	__gptrget
      0077B1 F8               [12]21258 	mov	r0,a
      0077B2 A3               [24]21259 	inc	dptr
      0077B3 12r00r00         [24]21260 	lcall	__gptrget
      0077B6 F9               [12]21261 	mov	r1,a
      0077B7 85*95 82         [24]21262 	mov	dpl,_f_opendir_sloc0_1_0
      0077BA 85*96 83         [24]21263 	mov	dph,(_f_opendir_sloc0_1_0 + 1)
      0077BD 85*97 F0         [24]21264 	mov	b,(_f_opendir_sloc0_1_0 + 2)
      0077C0 E8               [12]21265 	mov	a,r0
      0077C1 12r00r00         [24]21266 	lcall	__gptrput
      0077C4 A3               [24]21267 	inc	dptr
      0077C5 E9               [12]21268 	mov	a,r1
      0077C6 12r00r00         [24]21269 	lcall	__gptrput
                                  21270 ;	ff15\source\ff.c:4635: res = dir_sdi(dp, 0);			/* Rewind directory */
      0077C9 90r00r69         [24]21271 	mov	dptr,#_dir_sdi_PARM_2
      0077CC E4               [12]21272 	clr	a
      0077CD F0               [24]21273 	movx	@dptr,a
      0077CE A3               [24]21274 	inc	dptr
      0077CF F0               [24]21275 	movx	@dptr,a
      0077D0 A3               [24]21276 	inc	dptr
      0077D1 F0               [24]21277 	movx	@dptr,a
      0077D2 A3               [24]21278 	inc	dptr
      0077D3 F0               [24]21279 	movx	@dptr,a
      0077D4 8D 82            [24]21280 	mov	dpl,r5
      0077D6 8E 83            [24]21281 	mov	dph,r6
      0077D8 8F F0            [24]21282 	mov	b,r7
      0077DA 12r1DrC4         [24]21283 	lcall	_dir_sdi
      0077DD E5 82            [12]21284 	mov	a,dpl
      0077DF 90r01rB4         [24]21285 	mov	dptr,#_f_opendir_res_65536_351
      0077E2 F0               [24]21286 	movx	@dptr,a
      0077E3                      21287 00111$:
                                  21288 ;	ff15\source\ff.c:4649: if (res == FR_NO_FILE) res = FR_NO_PATH;
      0077E3 90r01rB4         [24]21289 	mov	dptr,#_f_opendir_res_65536_351
      0077E6 E0               [24]21290 	movx	a,@dptr
      0077E7 FF               [12]21291 	mov	r7,a
      0077E8 BF 04 06         [24]21292 	cjne	r7,#0x04,00115$
      0077EB 90r01rB4         [24]21293 	mov	dptr,#_f_opendir_res_65536_351
      0077EE 74 05            [12]21294 	mov	a,#0x05
      0077F0 F0               [24]21295 	movx	@dptr,a
      0077F1                      21296 00115$:
                                  21297 ;	ff15\source\ff.c:4651: if (res != FR_OK) dp->obj.fs = 0;		/* Invalidate the directory object if function failed */
      0077F1 90r01rB4         [24]21298 	mov	dptr,#_f_opendir_res_65536_351
      0077F4 E0               [24]21299 	movx	a,@dptr
      0077F5 60 1D            [24]21300 	jz	00117$
      0077F7 90r01rB1         [24]21301 	mov	dptr,#_f_opendir_dp_65536_350
      0077FA E0               [24]21302 	movx	a,@dptr
      0077FB FD               [12]21303 	mov	r5,a
      0077FC A3               [24]21304 	inc	dptr
      0077FD E0               [24]21305 	movx	a,@dptr
      0077FE FE               [12]21306 	mov	r6,a
      0077FF A3               [24]21307 	inc	dptr
      007800 E0               [24]21308 	movx	a,@dptr
      007801 FF               [12]21309 	mov	r7,a
      007802 8D 82            [24]21310 	mov	dpl,r5
      007804 8E 83            [24]21311 	mov	dph,r6
      007806 8F F0            [24]21312 	mov	b,r7
      007808 E4               [12]21313 	clr	a
      007809 12r00r00         [24]21314 	lcall	__gptrput
      00780C A3               [24]21315 	inc	dptr
      00780D 12r00r00         [24]21316 	lcall	__gptrput
      007810 A3               [24]21317 	inc	dptr
      007811 12r00r00         [24]21318 	lcall	__gptrput
      007814                      21319 00117$:
                                  21320 ;	ff15\source\ff.c:4653: LEAVE_FF(fs, res);
      007814 90r01rB4         [24]21321 	mov	dptr,#_f_opendir_res_65536_351
      007817 E0               [24]21322 	movx	a,@dptr
                                  21323 ;	ff15\source\ff.c:4654: }
      007818 F5 82            [12]21324 	mov	dpl,a
      00781A 22               [24]21325 	ret
                                  21326 ;------------------------------------------------------------
                                  21327 ;Allocation info for local variables in function 'f_closedir'
                                  21328 ;------------------------------------------------------------
                                  21329 ;dp                        Allocated with name '_f_closedir_dp_65536_359'
                                  21330 ;res                       Allocated with name '_f_closedir_res_65536_360'
                                  21331 ;fs                        Allocated with name '_f_closedir_fs_65536_360'
                                  21332 ;------------------------------------------------------------
                                  21333 ;	ff15\source\ff.c:4663: FRESULT f_closedir (
                                  21334 ;	-----------------------------------------
                                  21335 ;	 function f_closedir
                                  21336 ;	-----------------------------------------
      00781B                      21337 _f_closedir:
      00781B AF F0            [24]21338 	mov	r7,b
      00781D AE 83            [24]21339 	mov	r6,dph
      00781F E5 82            [12]21340 	mov	a,dpl
      007821 90r01rB8         [24]21341 	mov	dptr,#_f_closedir_dp_65536_359
      007824 F0               [24]21342 	movx	@dptr,a
      007825 EE               [12]21343 	mov	a,r6
      007826 A3               [24]21344 	inc	dptr
      007827 F0               [24]21345 	movx	@dptr,a
      007828 EF               [12]21346 	mov	a,r7
      007829 A3               [24]21347 	inc	dptr
      00782A F0               [24]21348 	movx	@dptr,a
                                  21349 ;	ff15\source\ff.c:4671: res = validate(&dp->obj, &fs);	/* Check validity of the file object */
      00782B 90r01rB8         [24]21350 	mov	dptr,#_f_closedir_dp_65536_359
      00782E E0               [24]21351 	movx	a,@dptr
      00782F FD               [12]21352 	mov	r5,a
      007830 A3               [24]21353 	inc	dptr
      007831 E0               [24]21354 	movx	a,@dptr
      007832 FE               [12]21355 	mov	r6,a
      007833 A3               [24]21356 	inc	dptr
      007834 E0               [24]21357 	movx	a,@dptr
      007835 FF               [12]21358 	mov	r7,a
      007836 90r00rFF         [24]21359 	mov	dptr,#_validate_PARM_2
      007839 74rBB            [12]21360 	mov	a,#_f_closedir_fs_65536_360
      00783B F0               [24]21361 	movx	@dptr,a
      00783C 74s01            [12]21362 	mov	a,#(_f_closedir_fs_65536_360 >> 8)
      00783E A3               [24]21363 	inc	dptr
      00783F F0               [24]21364 	movx	@dptr,a
      007840 E4               [12]21365 	clr	a
      007841 A3               [24]21366 	inc	dptr
      007842 F0               [24]21367 	movx	@dptr,a
      007843 8D 82            [24]21368 	mov	dpl,r5
      007845 8E 83            [24]21369 	mov	dph,r6
      007847 8F F0            [24]21370 	mov	b,r7
      007849 12r49r3E         [24]21371 	lcall	_validate
                                  21372 ;	ff15\source\ff.c:4672: if (res == FR_OK) {
      00784C E5 82            [12]21373 	mov	a,dpl
      00784E FF               [12]21374 	mov	r7,a
      00784F 70 1D            [24]21375 	jnz	00102$
                                  21376 ;	ff15\source\ff.c:4677: dp->obj.fs = 0;	/* Invalidate directory object */
      007851 90r01rB8         [24]21377 	mov	dptr,#_f_closedir_dp_65536_359
      007854 E0               [24]21378 	movx	a,@dptr
      007855 FC               [12]21379 	mov	r4,a
      007856 A3               [24]21380 	inc	dptr
      007857 E0               [24]21381 	movx	a,@dptr
      007858 FD               [12]21382 	mov	r5,a
      007859 A3               [24]21383 	inc	dptr
      00785A E0               [24]21384 	movx	a,@dptr
      00785B FE               [12]21385 	mov	r6,a
      00785C 8C 82            [24]21386 	mov	dpl,r4
      00785E 8D 83            [24]21387 	mov	dph,r5
      007860 8E F0            [24]21388 	mov	b,r6
      007862 E4               [12]21389 	clr	a
      007863 12r00r00         [24]21390 	lcall	__gptrput
      007866 A3               [24]21391 	inc	dptr
      007867 12r00r00         [24]21392 	lcall	__gptrput
      00786A A3               [24]21393 	inc	dptr
      00786B 12r00r00         [24]21394 	lcall	__gptrput
      00786E                      21395 00102$:
                                  21396 ;	ff15\source\ff.c:4683: return res;
      00786E 8F 82            [24]21397 	mov	dpl,r7
                                  21398 ;	ff15\source\ff.c:4684: }
      007870 22               [24]21399 	ret
                                  21400 ;------------------------------------------------------------
                                  21401 ;Allocation info for local variables in function 'f_readdir'
                                  21402 ;------------------------------------------------------------
                                  21403 ;fno                       Allocated with name '_f_readdir_PARM_2'
                                  21404 ;dp                        Allocated with name '_f_readdir_dp_65536_362'
                                  21405 ;res                       Allocated with name '_f_readdir_res_65536_363'
                                  21406 ;fs                        Allocated with name '_f_readdir_fs_65536_363'
                                  21407 ;------------------------------------------------------------
                                  21408 ;	ff15\source\ff.c:4693: FRESULT f_readdir (
                                  21409 ;	-----------------------------------------
                                  21410 ;	 function f_readdir
                                  21411 ;	-----------------------------------------
      007871                      21412 _f_readdir:
      007871 AF F0            [24]21413 	mov	r7,b
      007873 AE 83            [24]21414 	mov	r6,dph
      007875 E5 82            [12]21415 	mov	a,dpl
      007877 90r01rC1         [24]21416 	mov	dptr,#_f_readdir_dp_65536_362
      00787A F0               [24]21417 	movx	@dptr,a
      00787B EE               [12]21418 	mov	a,r6
      00787C A3               [24]21419 	inc	dptr
      00787D F0               [24]21420 	movx	@dptr,a
      00787E EF               [12]21421 	mov	a,r7
      00787F A3               [24]21422 	inc	dptr
      007880 F0               [24]21423 	movx	@dptr,a
                                  21424 ;	ff15\source\ff.c:4703: res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
      007881 90r01rC1         [24]21425 	mov	dptr,#_f_readdir_dp_65536_362
      007884 E0               [24]21426 	movx	a,@dptr
      007885 FD               [12]21427 	mov	r5,a
      007886 A3               [24]21428 	inc	dptr
      007887 E0               [24]21429 	movx	a,@dptr
      007888 FE               [12]21430 	mov	r6,a
      007889 A3               [24]21431 	inc	dptr
      00788A E0               [24]21432 	movx	a,@dptr
      00788B FF               [12]21433 	mov	r7,a
      00788C 90r00rFF         [24]21434 	mov	dptr,#_validate_PARM_2
      00788F 74rC5            [12]21435 	mov	a,#_f_readdir_fs_65536_363
      007891 F0               [24]21436 	movx	@dptr,a
      007892 74s01            [12]21437 	mov	a,#(_f_readdir_fs_65536_363 >> 8)
      007894 A3               [24]21438 	inc	dptr
      007895 F0               [24]21439 	movx	@dptr,a
      007896 E4               [12]21440 	clr	a
      007897 A3               [24]21441 	inc	dptr
      007898 F0               [24]21442 	movx	@dptr,a
      007899 8D 82            [24]21443 	mov	dpl,r5
      00789B 8E 83            [24]21444 	mov	dph,r6
      00789D 8F F0            [24]21445 	mov	b,r7
      00789F 12r49r3E         [24]21446 	lcall	_validate
      0078A2 AF 82            [24]21447 	mov	r7,dpl
      0078A4 90r01rC4         [24]21448 	mov	dptr,#_f_readdir_res_65536_363
      0078A7 EF               [12]21449 	mov	a,r7
      0078A8 F0               [24]21450 	movx	@dptr,a
                                  21451 ;	ff15\source\ff.c:4704: if (res == FR_OK) {
      0078A9 EF               [12]21452 	mov	a,r7
      0078AA 60 03            [24]21453 	jz	00134$
      0078AC 02r79r73         [24]21454 	ljmp	00111$
      0078AF                      21455 00134$:
                                  21456 ;	ff15\source\ff.c:4705: if (!fno) {
      0078AF 90r01rBE         [24]21457 	mov	dptr,#_f_readdir_PARM_2
      0078B2 E0               [24]21458 	movx	a,@dptr
      0078B3 FD               [12]21459 	mov	r5,a
      0078B4 A3               [24]21460 	inc	dptr
      0078B5 E0               [24]21461 	movx	a,@dptr
      0078B6 FE               [12]21462 	mov	r6,a
      0078B7 A3               [24]21463 	inc	dptr
      0078B8 E0               [24]21464 	movx	a,@dptr
      0078B9 FF               [12]21465 	mov	r7,a
      0078BA 90r01rBE         [24]21466 	mov	dptr,#_f_readdir_PARM_2
      0078BD E0               [24]21467 	movx	a,@dptr
      0078BE F5 F0            [12]21468 	mov	b,a
      0078C0 A3               [24]21469 	inc	dptr
      0078C1 E0               [24]21470 	movx	a,@dptr
      0078C2 45 F0            [12]21471 	orl	a,b
      0078C4 70 28            [24]21472 	jnz	00108$
                                  21473 ;	ff15\source\ff.c:4706: res = dir_sdi(dp, 0);		/* Rewind the directory object */
      0078C6 90r01rC1         [24]21474 	mov	dptr,#_f_readdir_dp_65536_362
      0078C9 E0               [24]21475 	movx	a,@dptr
      0078CA FA               [12]21476 	mov	r2,a
      0078CB A3               [24]21477 	inc	dptr
      0078CC E0               [24]21478 	movx	a,@dptr
      0078CD FB               [12]21479 	mov	r3,a
      0078CE A3               [24]21480 	inc	dptr
      0078CF E0               [24]21481 	movx	a,@dptr
      0078D0 FC               [12]21482 	mov	r4,a
      0078D1 90r00r69         [24]21483 	mov	dptr,#_dir_sdi_PARM_2
      0078D4 E4               [12]21484 	clr	a
      0078D5 F0               [24]21485 	movx	@dptr,a
      0078D6 A3               [24]21486 	inc	dptr
      0078D7 F0               [24]21487 	movx	@dptr,a
      0078D8 A3               [24]21488 	inc	dptr
      0078D9 F0               [24]21489 	movx	@dptr,a
      0078DA A3               [24]21490 	inc	dptr
      0078DB F0               [24]21491 	movx	@dptr,a
      0078DC 8A 82            [24]21492 	mov	dpl,r2
      0078DE 8B 83            [24]21493 	mov	dph,r3
      0078E0 8C F0            [24]21494 	mov	b,r4
      0078E2 12r1DrC4         [24]21495 	lcall	_dir_sdi
      0078E5 E5 82            [12]21496 	mov	a,dpl
      0078E7 90r01rC4         [24]21497 	mov	dptr,#_f_readdir_res_65536_363
      0078EA F0               [24]21498 	movx	@dptr,a
      0078EB 02r79r73         [24]21499 	ljmp	00111$
      0078EE                      21500 00108$:
                                  21501 ;	ff15\source\ff.c:4709: res = DIR_READ_FILE(dp);		/* Read an item */
      0078EE 90r01rC1         [24]21502 	mov	dptr,#_f_readdir_dp_65536_362
      0078F1 E0               [24]21503 	movx	a,@dptr
      0078F2 FA               [12]21504 	mov	r2,a
      0078F3 A3               [24]21505 	inc	dptr
      0078F4 E0               [24]21506 	movx	a,@dptr
      0078F5 FB               [12]21507 	mov	r3,a
      0078F6 A3               [24]21508 	inc	dptr
      0078F7 E0               [24]21509 	movx	a,@dptr
      0078F8 FC               [12]21510 	mov	r4,a
      0078F9 90r00r99         [24]21511 	mov	dptr,#_dir_read_PARM_2
      0078FC E4               [12]21512 	clr	a
      0078FD F0               [24]21513 	movx	@dptr,a
      0078FE A3               [24]21514 	inc	dptr
      0078FF F0               [24]21515 	movx	@dptr,a
      007900 8A 82            [24]21516 	mov	dpl,r2
      007902 8B 83            [24]21517 	mov	dph,r3
      007904 8C F0            [24]21518 	mov	b,r4
      007906 C0 07            [24]21519 	push	ar7
      007908 C0 06            [24]21520 	push	ar6
      00790A C0 05            [24]21521 	push	ar5
      00790C 12r29rB8         [24]21522 	lcall	_dir_read
      00790F AC 82            [24]21523 	mov	r4,dpl
      007911 D0 05            [24]21524 	pop	ar5
      007913 D0 06            [24]21525 	pop	ar6
      007915 D0 07            [24]21526 	pop	ar7
      007917 90r01rC4         [24]21527 	mov	dptr,#_f_readdir_res_65536_363
      00791A EC               [12]21528 	mov	a,r4
      00791B F0               [24]21529 	movx	@dptr,a
                                  21530 ;	ff15\source\ff.c:4710: if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory */
      00791C BC 04 05         [24]21531 	cjne	r4,#0x04,00102$
      00791F 90r01rC4         [24]21532 	mov	dptr,#_f_readdir_res_65536_363
      007922 E4               [12]21533 	clr	a
      007923 F0               [24]21534 	movx	@dptr,a
      007924                      21535 00102$:
                                  21536 ;	ff15\source\ff.c:4711: if (res == FR_OK) {				/* A valid entry is found */
      007924 90r01rC4         [24]21537 	mov	dptr,#_f_readdir_res_65536_363
      007927 E0               [24]21538 	movx	a,@dptr
      007928 70 49            [24]21539 	jnz	00111$
                                  21540 ;	ff15\source\ff.c:4712: get_fileinfo(dp, fno);		/* Get the object information */
      00792A 90r01rC1         [24]21541 	mov	dptr,#_f_readdir_dp_65536_362
      00792D E0               [24]21542 	movx	a,@dptr
      00792E FA               [12]21543 	mov	r2,a
      00792F A3               [24]21544 	inc	dptr
      007930 E0               [24]21545 	movx	a,@dptr
      007931 FB               [12]21546 	mov	r3,a
      007932 A3               [24]21547 	inc	dptr
      007933 E0               [24]21548 	movx	a,@dptr
      007934 FC               [12]21549 	mov	r4,a
      007935 90r00rAA         [24]21550 	mov	dptr,#_get_fileinfo_PARM_2
      007938 ED               [12]21551 	mov	a,r5
      007939 F0               [24]21552 	movx	@dptr,a
      00793A EE               [12]21553 	mov	a,r6
      00793B A3               [24]21554 	inc	dptr
      00793C F0               [24]21555 	movx	@dptr,a
      00793D EF               [12]21556 	mov	a,r7
      00793E A3               [24]21557 	inc	dptr
      00793F F0               [24]21558 	movx	@dptr,a
      007940 8A 82            [24]21559 	mov	dpl,r2
      007942 8B 83            [24]21560 	mov	dph,r3
      007944 8C F0            [24]21561 	mov	b,r4
      007946 12r2FrCF         [24]21562 	lcall	_get_fileinfo
                                  21563 ;	ff15\source\ff.c:4713: res = dir_next(dp, 0);		/* Increment index for next */
      007949 90r01rC1         [24]21564 	mov	dptr,#_f_readdir_dp_65536_362
      00794C E0               [24]21565 	movx	a,@dptr
      00794D FD               [12]21566 	mov	r5,a
      00794E A3               [24]21567 	inc	dptr
      00794F E0               [24]21568 	movx	a,@dptr
      007950 FE               [12]21569 	mov	r6,a
      007951 A3               [24]21570 	inc	dptr
      007952 E0               [24]21571 	movx	a,@dptr
      007953 FF               [12]21572 	mov	r7,a
      007954 90r00r74         [24]21573 	mov	dptr,#_dir_next_PARM_2
      007957 E4               [12]21574 	clr	a
      007958 F0               [24]21575 	movx	@dptr,a
      007959 A3               [24]21576 	inc	dptr
      00795A F0               [24]21577 	movx	@dptr,a
      00795B 8D 82            [24]21578 	mov	dpl,r5
      00795D 8E 83            [24]21579 	mov	dph,r6
      00795F 8F F0            [24]21580 	mov	b,r7
      007961 12r22r70         [24]21581 	lcall	_dir_next
      007964 AF 82            [24]21582 	mov	r7,dpl
      007966 90r01rC4         [24]21583 	mov	dptr,#_f_readdir_res_65536_363
      007969 EF               [12]21584 	mov	a,r7
      00796A F0               [24]21585 	movx	@dptr,a
                                  21586 ;	ff15\source\ff.c:4714: if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
      00796B BF 04 05         [24]21587 	cjne	r7,#0x04,00111$
      00796E 90r01rC4         [24]21588 	mov	dptr,#_f_readdir_res_65536_363
      007971 E4               [12]21589 	clr	a
      007972 F0               [24]21590 	movx	@dptr,a
      007973                      21591 00111$:
                                  21592 ;	ff15\source\ff.c:4719: LEAVE_FF(fs, res);
      007973 90r01rC4         [24]21593 	mov	dptr,#_f_readdir_res_65536_363
      007976 E0               [24]21594 	movx	a,@dptr
                                  21595 ;	ff15\source\ff.c:4720: }
      007977 F5 82            [12]21596 	mov	dpl,a
      007979 22               [24]21597 	ret
                                  21598 ;------------------------------------------------------------
                                  21599 ;Allocation info for local variables in function 'f_stat'
                                  21600 ;------------------------------------------------------------
                                  21601 ;fno                       Allocated with name '_f_stat_PARM_2'
                                  21602 ;path                      Allocated with name '_f_stat_path_65536_368'
                                  21603 ;res                       Allocated with name '_f_stat_res_65536_369'
                                  21604 ;dj                        Allocated with name '_f_stat_dj_65536_369'
                                  21605 ;------------------------------------------------------------
                                  21606 ;	ff15\source\ff.c:4781: FRESULT f_stat (
                                  21607 ;	-----------------------------------------
                                  21608 ;	 function f_stat
                                  21609 ;	-----------------------------------------
      00797A                      21610 _f_stat:
      00797A AF F0            [24]21611 	mov	r7,b
      00797C AE 83            [24]21612 	mov	r6,dph
      00797E E5 82            [12]21613 	mov	a,dpl
      007980 90r01rCB         [24]21614 	mov	dptr,#_f_stat_path_65536_368
      007983 F0               [24]21615 	movx	@dptr,a
      007984 EE               [12]21616 	mov	a,r6
      007985 A3               [24]21617 	inc	dptr
      007986 F0               [24]21618 	movx	@dptr,a
      007987 EF               [12]21619 	mov	a,r7
      007988 A3               [24]21620 	inc	dptr
      007989 F0               [24]21621 	movx	@dptr,a
                                  21622 ;	ff15\source\ff.c:4792: res = mount_volume(&path, &dj.obj.fs, 0);
      00798A 90r00rEA         [24]21623 	mov	dptr,#_mount_volume_PARM_2
      00798D 74rCF            [12]21624 	mov	a,#_f_stat_dj_65536_369
      00798F F0               [24]21625 	movx	@dptr,a
      007990 74s01            [12]21626 	mov	a,#(_f_stat_dj_65536_369 >> 8)
      007992 A3               [24]21627 	inc	dptr
      007993 F0               [24]21628 	movx	@dptr,a
      007994 E4               [12]21629 	clr	a
      007995 A3               [24]21630 	inc	dptr
      007996 F0               [24]21631 	movx	@dptr,a
      007997 90r00rED         [24]21632 	mov	dptr,#_mount_volume_PARM_3
      00799A F0               [24]21633 	movx	@dptr,a
      00799B 90r01rCB         [24]21634 	mov	dptr,#_f_stat_path_65536_368
      00799E 75 F0 00         [24]21635 	mov	b,#0x00
      0079A1 12r3Dr6D         [24]21636 	lcall	_mount_volume
      0079A4 AF 82            [24]21637 	mov	r7,dpl
      0079A6 90r01rCE         [24]21638 	mov	dptr,#_f_stat_res_65536_369
      0079A9 EF               [12]21639 	mov	a,r7
      0079AA F0               [24]21640 	movx	@dptr,a
                                  21641 ;	ff15\source\ff.c:4793: if (res == FR_OK) {
      0079AB EF               [12]21642 	mov	a,r7
      0079AC 70 64            [24]21643 	jnz	00109$
                                  21644 ;	ff15\source\ff.c:4795: res = follow_path(&dj, path);	/* Follow the file path */
      0079AE 90r01rCB         [24]21645 	mov	dptr,#_f_stat_path_65536_368
      0079B1 E0               [24]21646 	movx	a,@dptr
      0079B2 FD               [12]21647 	mov	r5,a
      0079B3 A3               [24]21648 	inc	dptr
      0079B4 E0               [24]21649 	movx	a,@dptr
      0079B5 FE               [12]21650 	mov	r6,a
      0079B6 A3               [24]21651 	inc	dptr
      0079B7 E0               [24]21652 	movx	a,@dptr
      0079B8 FF               [12]21653 	mov	r7,a
      0079B9 90r00rC0         [24]21654 	mov	dptr,#_follow_path_PARM_2
      0079BC ED               [12]21655 	mov	a,r5
      0079BD F0               [24]21656 	movx	@dptr,a
      0079BE EE               [12]21657 	mov	a,r6
      0079BF A3               [24]21658 	inc	dptr
      0079C0 F0               [24]21659 	movx	@dptr,a
      0079C1 EF               [12]21660 	mov	a,r7
      0079C2 A3               [24]21661 	inc	dptr
      0079C3 F0               [24]21662 	movx	@dptr,a
      0079C4 90r01rCF         [24]21663 	mov	dptr,#_f_stat_dj_65536_369
      0079C7 75 F0 00         [24]21664 	mov	b,#0x00
      0079CA 12r35rB8         [24]21665 	lcall	_follow_path
      0079CD AF 82            [24]21666 	mov	r7,dpl
      0079CF 90r01rCE         [24]21667 	mov	dptr,#_f_stat_res_65536_369
      0079D2 EF               [12]21668 	mov	a,r7
      0079D3 F0               [24]21669 	movx	@dptr,a
                                  21670 ;	ff15\source\ff.c:4796: if (res == FR_OK) {				/* Follow completed */
      0079D4 EF               [12]21671 	mov	a,r7
      0079D5 70 3B            [24]21672 	jnz	00109$
                                  21673 ;	ff15\source\ff.c:4797: if (dj.fn[NSFLAG] & NS_NONAME) {	/* It is origin directory */
      0079D7 90r01rF8         [24]21674 	mov	dptr,#(_f_stat_dj_65536_369 + 0x0029)
      0079DA E0               [24]21675 	movx	a,@dptr
      0079DB FF               [12]21676 	mov	r7,a
      0079DC 30 E7 08         [24]21677 	jnb	acc.7,00104$
                                  21678 ;	ff15\source\ff.c:4798: res = FR_INVALID_NAME;
      0079DF 90r01rCE         [24]21679 	mov	dptr,#_f_stat_res_65536_369
      0079E2 74 06            [12]21680 	mov	a,#0x06
      0079E4 F0               [24]21681 	movx	@dptr,a
      0079E5 80 2B            [24]21682 	sjmp	00109$
      0079E7                      21683 00104$:
                                  21684 ;	ff15\source\ff.c:4800: if (fno) get_fileinfo(&dj, fno);
      0079E7 90r01rC8         [24]21685 	mov	dptr,#_f_stat_PARM_2
      0079EA E0               [24]21686 	movx	a,@dptr
      0079EB FD               [12]21687 	mov	r5,a
      0079EC A3               [24]21688 	inc	dptr
      0079ED E0               [24]21689 	movx	a,@dptr
      0079EE FE               [12]21690 	mov	r6,a
      0079EF A3               [24]21691 	inc	dptr
      0079F0 E0               [24]21692 	movx	a,@dptr
      0079F1 FF               [12]21693 	mov	r7,a
      0079F2 90r01rC8         [24]21694 	mov	dptr,#_f_stat_PARM_2
      0079F5 E0               [24]21695 	movx	a,@dptr
      0079F6 F5 F0            [12]21696 	mov	b,a
      0079F8 A3               [24]21697 	inc	dptr
      0079F9 E0               [24]21698 	movx	a,@dptr
      0079FA 45 F0            [12]21699 	orl	a,b
      0079FC 60 14            [24]21700 	jz	00109$
      0079FE 90r00rAA         [24]21701 	mov	dptr,#_get_fileinfo_PARM_2
      007A01 ED               [12]21702 	mov	a,r5
      007A02 F0               [24]21703 	movx	@dptr,a
      007A03 EE               [12]21704 	mov	a,r6
      007A04 A3               [24]21705 	inc	dptr
      007A05 F0               [24]21706 	movx	@dptr,a
      007A06 EF               [12]21707 	mov	a,r7
      007A07 A3               [24]21708 	inc	dptr
      007A08 F0               [24]21709 	movx	@dptr,a
      007A09 90r01rCF         [24]21710 	mov	dptr,#_f_stat_dj_65536_369
      007A0C 75 F0 00         [24]21711 	mov	b,#0x00
      007A0F 12r2FrCF         [24]21712 	lcall	_get_fileinfo
      007A12                      21713 00109$:
                                  21714 ;	ff15\source\ff.c:4806: LEAVE_FF(dj.obj.fs, res);
      007A12 90r01rCE         [24]21715 	mov	dptr,#_f_stat_res_65536_369
      007A15 E0               [24]21716 	movx	a,@dptr
                                  21717 ;	ff15\source\ff.c:4807: }
      007A16 F5 82            [12]21718 	mov	dpl,a
      007A18 22               [24]21719 	ret
                                  21720 ;------------------------------------------------------------
                                  21721 ;Allocation info for local variables in function 'f_getfree'
                                  21722 ;------------------------------------------------------------
                                  21723 ;sloc0                     Allocated with name '_f_getfree_sloc0_1_0'
                                  21724 ;sloc1                     Allocated with name '_f_getfree_sloc1_1_0'
                                  21725 ;sloc2                     Allocated with name '_f_getfree_sloc2_1_0'
                                  21726 ;sloc3                     Allocated with name '_f_getfree_sloc3_1_0'
                                  21727 ;nclst                     Allocated with name '_f_getfree_PARM_2'
                                  21728 ;fatfs                     Allocated with name '_f_getfree_PARM_3'
                                  21729 ;path                      Allocated with name '_f_getfree_path_65536_374'
                                  21730 ;res                       Allocated with name '_f_getfree_res_65536_375'
                                  21731 ;fs                        Allocated with name '_f_getfree_fs_65536_375'
                                  21732 ;nfree                     Allocated with name '_f_getfree_nfree_65536_375'
                                  21733 ;clst                      Allocated with name '_f_getfree_clst_65536_375'
                                  21734 ;stat                      Allocated with name '_f_getfree_stat_65536_375'
                                  21735 ;sect                      Allocated with name '_f_getfree_sect_65536_375'
                                  21736 ;i                         Allocated with name '_f_getfree_i_65536_375'
                                  21737 ;obj                       Allocated with name '_f_getfree_obj_65536_375'
                                  21738 ;------------------------------------------------------------
                                  21739 ;	ff15\source\ff.c:4816: FRESULT f_getfree (
                                  21740 ;	-----------------------------------------
                                  21741 ;	 function f_getfree
                                  21742 ;	-----------------------------------------
      007A19                      21743 _f_getfree:
      007A19 AF F0            [24]21744 	mov	r7,b
      007A1B AE 83            [24]21745 	mov	r6,dph
      007A1D E5 82            [12]21746 	mov	a,dpl
      007A1F 90r01rFF         [24]21747 	mov	dptr,#_f_getfree_path_65536_374
      007A22 F0               [24]21748 	movx	@dptr,a
      007A23 EE               [12]21749 	mov	a,r6
      007A24 A3               [24]21750 	inc	dptr
      007A25 F0               [24]21751 	movx	@dptr,a
      007A26 EF               [12]21752 	mov	a,r7
      007A27 A3               [24]21753 	inc	dptr
      007A28 F0               [24]21754 	movx	@dptr,a
                                  21755 ;	ff15\source\ff.c:4831: res = mount_volume(&path, &fs, 0);
      007A29 90r00rEA         [24]21756 	mov	dptr,#_mount_volume_PARM_2
      007A2C 74r03            [12]21757 	mov	a,#_f_getfree_fs_65536_375
      007A2E F0               [24]21758 	movx	@dptr,a
      007A2F 74s02            [12]21759 	mov	a,#(_f_getfree_fs_65536_375 >> 8)
      007A31 A3               [24]21760 	inc	dptr
      007A32 F0               [24]21761 	movx	@dptr,a
      007A33 E4               [12]21762 	clr	a
      007A34 A3               [24]21763 	inc	dptr
      007A35 F0               [24]21764 	movx	@dptr,a
      007A36 90r00rED         [24]21765 	mov	dptr,#_mount_volume_PARM_3
      007A39 F0               [24]21766 	movx	@dptr,a
      007A3A 90r01rFF         [24]21767 	mov	dptr,#_f_getfree_path_65536_374
      007A3D 75 F0 00         [24]21768 	mov	b,#0x00
      007A40 12r3Dr6D         [24]21769 	lcall	_mount_volume
      007A43 AF 82            [24]21770 	mov	r7,dpl
      007A45 90r02r02         [24]21771 	mov	dptr,#_f_getfree_res_65536_375
      007A48 EF               [12]21772 	mov	a,r7
      007A49 F0               [24]21773 	movx	@dptr,a
                                  21774 ;	ff15\source\ff.c:4832: if (res == FR_OK) {
      007A4A EF               [12]21775 	mov	a,r7
      007A4B 60 03            [24]21776 	jz	00193$
      007A4D 02r7Er79         [24]21777 	ljmp	00133$
      007A50                      21778 00193$:
                                  21779 ;	ff15\source\ff.c:4833: *fatfs = fs;				/* Return ptr to the fs object */
      007A50 90r01rFC         [24]21780 	mov	dptr,#_f_getfree_PARM_3
      007A53 E0               [24]21781 	movx	a,@dptr
      007A54 FD               [12]21782 	mov	r5,a
      007A55 A3               [24]21783 	inc	dptr
      007A56 E0               [24]21784 	movx	a,@dptr
      007A57 FE               [12]21785 	mov	r6,a
      007A58 A3               [24]21786 	inc	dptr
      007A59 E0               [24]21787 	movx	a,@dptr
      007A5A FF               [12]21788 	mov	r7,a
      007A5B 90r02r03         [24]21789 	mov	dptr,#_f_getfree_fs_65536_375
      007A5E E0               [24]21790 	movx	a,@dptr
      007A5F FA               [12]21791 	mov	r2,a
      007A60 A3               [24]21792 	inc	dptr
      007A61 E0               [24]21793 	movx	a,@dptr
      007A62 FB               [12]21794 	mov	r3,a
      007A63 A3               [24]21795 	inc	dptr
      007A64 E0               [24]21796 	movx	a,@dptr
      007A65 FC               [12]21797 	mov	r4,a
      007A66 8D 82            [24]21798 	mov	dpl,r5
      007A68 8E 83            [24]21799 	mov	dph,r6
      007A6A 8F F0            [24]21800 	mov	b,r7
      007A6C EA               [12]21801 	mov	a,r2
      007A6D 12r00r00         [24]21802 	lcall	__gptrput
      007A70 A3               [24]21803 	inc	dptr
      007A71 EB               [12]21804 	mov	a,r3
      007A72 12r00r00         [24]21805 	lcall	__gptrput
      007A75 A3               [24]21806 	inc	dptr
      007A76 EC               [12]21807 	mov	a,r4
      007A77 12r00r00         [24]21808 	lcall	__gptrput
                                  21809 ;	ff15\source\ff.c:4835: if (fs->free_clst <= fs->n_fatent - 2) {
      007A7A 90r02r03         [24]21810 	mov	dptr,#_f_getfree_fs_65536_375
      007A7D E0               [24]21811 	movx	a,@dptr
      007A7E FF               [12]21812 	mov	r7,a
      007A7F A3               [24]21813 	inc	dptr
      007A80 E0               [24]21814 	movx	a,@dptr
      007A81 FD               [12]21815 	mov	r5,a
      007A82 A3               [24]21816 	inc	dptr
      007A83 E0               [24]21817 	movx	a,@dptr
      007A84 FE               [12]21818 	mov	r6,a
      007A85 74 10            [12]21819 	mov	a,#0x10
      007A87 2F               [12]21820 	add	a,r7
      007A88 FC               [12]21821 	mov	r4,a
      007A89 E4               [12]21822 	clr	a
      007A8A 3D               [12]21823 	addc	a,r5
      007A8B FA               [12]21824 	mov	r2,a
      007A8C 8E 03            [24]21825 	mov	ar3,r6
      007A8E 8C 82            [24]21826 	mov	dpl,r4
      007A90 8A 83            [24]21827 	mov	dph,r2
      007A92 8B F0            [24]21828 	mov	b,r3
      007A94 12r00r00         [24]21829 	lcall	__gptrget
      007A97 F5*98            [12]21830 	mov	_f_getfree_sloc0_1_0,a
      007A99 A3               [24]21831 	inc	dptr
      007A9A 12r00r00         [24]21832 	lcall	__gptrget
      007A9D F5*99            [12]21833 	mov	(_f_getfree_sloc0_1_0 + 1),a
      007A9F A3               [24]21834 	inc	dptr
      007AA0 12r00r00         [24]21835 	lcall	__gptrget
      007AA3 F5*9A            [12]21836 	mov	(_f_getfree_sloc0_1_0 + 2),a
      007AA5 A3               [24]21837 	inc	dptr
      007AA6 12r00r00         [24]21838 	lcall	__gptrget
      007AA9 F5*9B            [12]21839 	mov	(_f_getfree_sloc0_1_0 + 3),a
      007AAB 74 14            [12]21840 	mov	a,#0x14
      007AAD 2F               [12]21841 	add	a,r7
      007AAE F8               [12]21842 	mov	r0,a
      007AAF E4               [12]21843 	clr	a
      007AB0 3D               [12]21844 	addc	a,r5
      007AB1 FC               [12]21845 	mov	r4,a
      007AB2 8E 03            [24]21846 	mov	ar3,r6
      007AB4 88 82            [24]21847 	mov	dpl,r0
      007AB6 8C 83            [24]21848 	mov	dph,r4
      007AB8 8B F0            [24]21849 	mov	b,r3
      007ABA 12r00r00         [24]21850 	lcall	__gptrget
      007ABD F5*9C            [12]21851 	mov	_f_getfree_sloc1_1_0,a
      007ABF A3               [24]21852 	inc	dptr
      007AC0 12r00r00         [24]21853 	lcall	__gptrget
      007AC3 F5*9D            [12]21854 	mov	(_f_getfree_sloc1_1_0 + 1),a
      007AC5 A3               [24]21855 	inc	dptr
      007AC6 12r00r00         [24]21856 	lcall	__gptrget
      007AC9 F5*9E            [12]21857 	mov	(_f_getfree_sloc1_1_0 + 2),a
      007ACB A3               [24]21858 	inc	dptr
      007ACC 12r00r00         [24]21859 	lcall	__gptrget
      007ACF F5*9F            [12]21860 	mov	(_f_getfree_sloc1_1_0 + 3),a
      007AD1 E5*9C            [12]21861 	mov	a,_f_getfree_sloc1_1_0
      007AD3 24 FE            [12]21862 	add	a,#0xfe
      007AD5 F8               [12]21863 	mov	r0,a
      007AD6 E5*9D            [12]21864 	mov	a,(_f_getfree_sloc1_1_0 + 1)
      007AD8 34 FF            [12]21865 	addc	a,#0xff
      007ADA FA               [12]21866 	mov	r2,a
      007ADB E5*9E            [12]21867 	mov	a,(_f_getfree_sloc1_1_0 + 2)
      007ADD 34 FF            [12]21868 	addc	a,#0xff
      007ADF FB               [12]21869 	mov	r3,a
      007AE0 E5*9F            [12]21870 	mov	a,(_f_getfree_sloc1_1_0 + 3)
      007AE2 34 FF            [12]21871 	addc	a,#0xff
      007AE4 FC               [12]21872 	mov	r4,a
      007AE5 C3               [12]21873 	clr	c
      007AE6 E8               [12]21874 	mov	a,r0
      007AE7 95*98            [12]21875 	subb	a,_f_getfree_sloc0_1_0
      007AE9 EA               [12]21876 	mov	a,r2
      007AEA 95*99            [12]21877 	subb	a,(_f_getfree_sloc0_1_0 + 1)
      007AEC EB               [12]21878 	mov	a,r3
      007AED 95*9A            [12]21879 	subb	a,(_f_getfree_sloc0_1_0 + 2)
      007AEF EC               [12]21880 	mov	a,r4
      007AF0 95*9B            [12]21881 	subb	a,(_f_getfree_sloc0_1_0 + 3)
      007AF2 40 2B            [24]21882 	jc	00130$
                                  21883 ;	ff15\source\ff.c:4836: *nclst = fs->free_clst;
      007AF4 90r01rF9         [24]21884 	mov	dptr,#_f_getfree_PARM_2
      007AF7 E0               [24]21885 	movx	a,@dptr
      007AF8 FA               [12]21886 	mov	r2,a
      007AF9 A3               [24]21887 	inc	dptr
      007AFA E0               [24]21888 	movx	a,@dptr
      007AFB FB               [12]21889 	mov	r3,a
      007AFC A3               [24]21890 	inc	dptr
      007AFD E0               [24]21891 	movx	a,@dptr
      007AFE FC               [12]21892 	mov	r4,a
      007AFF 8A 82            [24]21893 	mov	dpl,r2
      007B01 8B 83            [24]21894 	mov	dph,r3
      007B03 8C F0            [24]21895 	mov	b,r4
      007B05 E5*98            [12]21896 	mov	a,_f_getfree_sloc0_1_0
      007B07 12r00r00         [24]21897 	lcall	__gptrput
      007B0A A3               [24]21898 	inc	dptr
      007B0B E5*99            [12]21899 	mov	a,(_f_getfree_sloc0_1_0 + 1)
      007B0D 12r00r00         [24]21900 	lcall	__gptrput
      007B10 A3               [24]21901 	inc	dptr
      007B11 E5*9A            [12]21902 	mov	a,(_f_getfree_sloc0_1_0 + 2)
      007B13 12r00r00         [24]21903 	lcall	__gptrput
      007B16 A3               [24]21904 	inc	dptr
      007B17 E5*9B            [12]21905 	mov	a,(_f_getfree_sloc0_1_0 + 3)
      007B19 12r00r00         [24]21906 	lcall	__gptrput
      007B1C 02r7Er79         [24]21907 	ljmp	00133$
      007B1F                      21908 00130$:
                                  21909 ;	ff15\source\ff.c:4839: nfree = 0;
      007B1F 90r02r06         [24]21910 	mov	dptr,#_f_getfree_nfree_65536_375
      007B22 E4               [12]21911 	clr	a
      007B23 F0               [24]21912 	movx	@dptr,a
      007B24 A3               [24]21913 	inc	dptr
      007B25 F0               [24]21914 	movx	@dptr,a
      007B26 A3               [24]21915 	inc	dptr
      007B27 F0               [24]21916 	movx	@dptr,a
      007B28 A3               [24]21917 	inc	dptr
      007B29 F0               [24]21918 	movx	@dptr,a
                                  21919 ;	ff15\source\ff.c:4840: if (fs->fs_type == FS_FAT12) {	/* FAT12: Scan bit field FAT entries */
      007B2A 8F 82            [24]21920 	mov	dpl,r7
      007B2C 8D 83            [24]21921 	mov	dph,r5
      007B2E 8E F0            [24]21922 	mov	b,r6
      007B30 12r00r00         [24]21923 	lcall	__gptrget
      007B33 FC               [12]21924 	mov	r4,a
      007B34 BC 01 02         [24]21925 	cjne	r4,#0x01,00195$
      007B37 80 03            [24]21926 	sjmp	00196$
      007B39                      21927 00195$:
      007B39 02r7Cr46         [24]21928 	ljmp	00125$
      007B3C                      21929 00196$:
                                  21930 ;	ff15\source\ff.c:4841: clst = 2; obj.fs = fs;
      007B3C 90r02r0C         [24]21931 	mov	dptr,#_f_getfree_obj_65536_375
      007B3F EF               [12]21932 	mov	a,r7
      007B40 F0               [24]21933 	movx	@dptr,a
      007B41 ED               [12]21934 	mov	a,r5
      007B42 A3               [24]21935 	inc	dptr
      007B43 F0               [24]21936 	movx	@dptr,a
      007B44 EE               [12]21937 	mov	a,r6
      007B45 A3               [24]21938 	inc	dptr
      007B46 F0               [24]21939 	movx	@dptr,a
                                  21940 ;	ff15\source\ff.c:4842: do {
      007B47 79 00            [12]21941 	mov	r1,#0x00
      007B49 7A 00            [12]21942 	mov	r2,#0x00
      007B4B 7B 00            [12]21943 	mov	r3,#0x00
      007B4D 7C 00            [12]21944 	mov	r4,#0x00
      007B4F 75*98 02         [24]21945 	mov	_f_getfree_sloc0_1_0,#0x02
      007B52 E4               [12]21946 	clr	a
      007B53 F5*99            [12]21947 	mov	(_f_getfree_sloc0_1_0 + 1),a
      007B55 F5*9A            [12]21948 	mov	(_f_getfree_sloc0_1_0 + 2),a
      007B57 F5*9B            [12]21949 	mov	(_f_getfree_sloc0_1_0 + 3),a
      007B59                      21950 00107$:
                                  21951 ;	ff15\source\ff.c:4843: stat = get_fat(&obj, clst);
      007B59 90r00r30         [24]21952 	mov	dptr,#_get_fat_PARM_2
      007B5C E5*98            [12]21953 	mov	a,_f_getfree_sloc0_1_0
      007B5E F0               [24]21954 	movx	@dptr,a
      007B5F E5*99            [12]21955 	mov	a,(_f_getfree_sloc0_1_0 + 1)
      007B61 A3               [24]21956 	inc	dptr
      007B62 F0               [24]21957 	movx	@dptr,a
      007B63 E5*9A            [12]21958 	mov	a,(_f_getfree_sloc0_1_0 + 2)
      007B65 A3               [24]21959 	inc	dptr
      007B66 F0               [24]21960 	movx	@dptr,a
      007B67 E5*9B            [12]21961 	mov	a,(_f_getfree_sloc0_1_0 + 3)
      007B69 A3               [24]21962 	inc	dptr
      007B6A F0               [24]21963 	movx	@dptr,a
      007B6B 90r02r0C         [24]21964 	mov	dptr,#_f_getfree_obj_65536_375
      007B6E 75 F0 00         [24]21965 	mov	b,#0x00
      007B71 C0 04            [24]21966 	push	ar4
      007B73 C0 03            [24]21967 	push	ar3
      007B75 C0 02            [24]21968 	push	ar2
      007B77 C0 01            [24]21969 	push	ar1
      007B79 12r09rFE         [24]21970 	lcall	_get_fat
      007B7C 85 82*A0         [24]21971 	mov	_f_getfree_sloc2_1_0,dpl
      007B7F 85 83*A1         [24]21972 	mov	(_f_getfree_sloc2_1_0 + 1),dph
      007B82 85 F0*A2         [24]21973 	mov	(_f_getfree_sloc2_1_0 + 2),b
      007B85 F5*A3            [12]21974 	mov	(_f_getfree_sloc2_1_0 + 3),a
      007B87 D0 01            [24]21975 	pop	ar1
      007B89 D0 02            [24]21976 	pop	ar2
      007B8B D0 03            [24]21977 	pop	ar3
      007B8D D0 04            [24]21978 	pop	ar4
                                  21979 ;	ff15\source\ff.c:4844: if (stat == 0xFFFFFFFF) {
      007B8F E5*A0            [12]21980 	mov	a,_f_getfree_sloc2_1_0
      007B91 55*A1            [12]21981 	anl	a,(_f_getfree_sloc2_1_0 + 1)
      007B93 55*A2            [12]21982 	anl	a,(_f_getfree_sloc2_1_0 + 2)
      007B95 55*A3            [12]21983 	anl	a,(_f_getfree_sloc2_1_0 + 3)
      007B97 B4 FF 09         [24]21984 	cjne	a,#0xFF,00102$
                                  21985 ;	ff15\source\ff.c:4845: res = FR_DISK_ERR; break;
      007B9A 90r02r02         [24]21986 	mov	dptr,#_f_getfree_res_65536_375
      007B9D 74 01            [12]21987 	mov	a,#0x01
      007B9F F0               [24]21988 	movx	@dptr,a
      007BA0 02r7DrD8         [24]21989 	ljmp	00126$
      007BA3                      21990 00102$:
                                  21991 ;	ff15\source\ff.c:4847: if (stat == 1) {
      007BA3 74 01            [12]21992 	mov	a,#0x01
      007BA5 B5*A0 0C         [24]21993 	cjne	a,_f_getfree_sloc2_1_0,00199$
      007BA8 14               [12]21994 	dec	a
      007BA9 B5*A1 08         [24]21995 	cjne	a,(_f_getfree_sloc2_1_0 + 1),00199$
      007BAC B5*A2 05         [24]21996 	cjne	a,(_f_getfree_sloc2_1_0 + 2),00199$
      007BAF B5*A3 02         [24]21997 	cjne	a,(_f_getfree_sloc2_1_0 + 3),00199$
      007BB2 80 02            [24]21998 	sjmp	00200$
      007BB4                      21999 00199$:
      007BB4 80 09            [24]22000 	sjmp	00104$
      007BB6                      22001 00200$:
                                  22002 ;	ff15\source\ff.c:4848: res = FR_INT_ERR; break;
      007BB6 90r02r02         [24]22003 	mov	dptr,#_f_getfree_res_65536_375
      007BB9 74 02            [12]22004 	mov	a,#0x02
      007BBB F0               [24]22005 	movx	@dptr,a
      007BBC 02r7DrD8         [24]22006 	ljmp	00126$
      007BBF                      22007 00104$:
                                  22008 ;	ff15\source\ff.c:4850: if (stat == 0) nfree++;
      007BBF E5*A0            [12]22009 	mov	a,_f_getfree_sloc2_1_0
      007BC1 45*A1            [12]22010 	orl	a,(_f_getfree_sloc2_1_0 + 1)
      007BC3 45*A2            [12]22011 	orl	a,(_f_getfree_sloc2_1_0 + 2)
      007BC5 45*A3            [12]22012 	orl	a,(_f_getfree_sloc2_1_0 + 3)
      007BC7 70 1B            [24]22013 	jnz	00108$
      007BC9 09               [12]22014 	inc	r1
      007BCA B9 00 09         [24]22015 	cjne	r1,#0x00,00202$
      007BCD 0A               [12]22016 	inc	r2
      007BCE BA 00 05         [24]22017 	cjne	r2,#0x00,00202$
      007BD1 0B               [12]22018 	inc	r3
      007BD2 BB 00 01         [24]22019 	cjne	r3,#0x00,00202$
      007BD5 0C               [12]22020 	inc	r4
      007BD6                      22021 00202$:
      007BD6 90r02r06         [24]22022 	mov	dptr,#_f_getfree_nfree_65536_375
      007BD9 E9               [12]22023 	mov	a,r1
      007BDA F0               [24]22024 	movx	@dptr,a
      007BDB EA               [12]22025 	mov	a,r2
      007BDC A3               [24]22026 	inc	dptr
      007BDD F0               [24]22027 	movx	@dptr,a
      007BDE EB               [12]22028 	mov	a,r3
      007BDF A3               [24]22029 	inc	dptr
      007BE0 F0               [24]22030 	movx	@dptr,a
      007BE1 EC               [12]22031 	mov	a,r4
      007BE2 A3               [24]22032 	inc	dptr
      007BE3 F0               [24]22033 	movx	@dptr,a
      007BE4                      22034 00108$:
                                  22035 ;	ff15\source\ff.c:4851: } while (++clst < fs->n_fatent);
      007BE4 C0 01            [24]22036 	push	ar1
      007BE6 C0 02            [24]22037 	push	ar2
      007BE8 C0 03            [24]22038 	push	ar3
      007BEA C0 04            [24]22039 	push	ar4
      007BEC 05*98            [12]22040 	inc	_f_getfree_sloc0_1_0
      007BEE E4               [12]22041 	clr	a
      007BEF B5*98 0C         [24]22042 	cjne	a,_f_getfree_sloc0_1_0,00203$
      007BF2 05*99            [12]22043 	inc	(_f_getfree_sloc0_1_0 + 1)
      007BF4 B5*99 07         [24]22044 	cjne	a,(_f_getfree_sloc0_1_0 + 1),00203$
      007BF7 05*9A            [12]22045 	inc	(_f_getfree_sloc0_1_0 + 2)
      007BF9 B5*9A 02         [24]22046 	cjne	a,(_f_getfree_sloc0_1_0 + 2),00203$
      007BFC 05*9B            [12]22047 	inc	(_f_getfree_sloc0_1_0 + 3)
      007BFE                      22048 00203$:
      007BFE 90r02r03         [24]22049 	mov	dptr,#_f_getfree_fs_65536_375
      007C01 E0               [24]22050 	movx	a,@dptr
      007C02 F8               [12]22051 	mov	r0,a
      007C03 A3               [24]22052 	inc	dptr
      007C04 E0               [24]22053 	movx	a,@dptr
      007C05 FB               [12]22054 	mov	r3,a
      007C06 A3               [24]22055 	inc	dptr
      007C07 E0               [24]22056 	movx	a,@dptr
      007C08 FC               [12]22057 	mov	r4,a
      007C09 74 14            [12]22058 	mov	a,#0x14
      007C0B 28               [12]22059 	add	a,r0
      007C0C F8               [12]22060 	mov	r0,a
      007C0D E4               [12]22061 	clr	a
      007C0E 3B               [12]22062 	addc	a,r3
      007C0F FB               [12]22063 	mov	r3,a
      007C10 88 82            [24]22064 	mov	dpl,r0
      007C12 8B 83            [24]22065 	mov	dph,r3
      007C14 8C F0            [24]22066 	mov	b,r4
      007C16 12r00r00         [24]22067 	lcall	__gptrget
      007C19 F8               [12]22068 	mov	r0,a
      007C1A A3               [24]22069 	inc	dptr
      007C1B 12r00r00         [24]22070 	lcall	__gptrget
      007C1E FB               [12]22071 	mov	r3,a
      007C1F A3               [24]22072 	inc	dptr
      007C20 12r00r00         [24]22073 	lcall	__gptrget
      007C23 FC               [12]22074 	mov	r4,a
      007C24 A3               [24]22075 	inc	dptr
      007C25 12r00r00         [24]22076 	lcall	__gptrget
      007C28 FA               [12]22077 	mov	r2,a
      007C29 C3               [12]22078 	clr	c
      007C2A E5*98            [12]22079 	mov	a,_f_getfree_sloc0_1_0
      007C2C 98               [12]22080 	subb	a,r0
      007C2D E5*99            [12]22081 	mov	a,(_f_getfree_sloc0_1_0 + 1)
      007C2F 9B               [12]22082 	subb	a,r3
      007C30 E5*9A            [12]22083 	mov	a,(_f_getfree_sloc0_1_0 + 2)
      007C32 9C               [12]22084 	subb	a,r4
      007C33 E5*9B            [12]22085 	mov	a,(_f_getfree_sloc0_1_0 + 3)
      007C35 9A               [12]22086 	subb	a,r2
      007C36 D0 04            [24]22087 	pop	ar4
      007C38 D0 03            [24]22088 	pop	ar3
      007C3A D0 02            [24]22089 	pop	ar2
      007C3C D0 01            [24]22090 	pop	ar1
      007C3E 50 03            [24]22091 	jnc	00204$
      007C40 02r7Br59         [24]22092 	ljmp	00107$
      007C43                      22093 00204$:
      007C43 02r7DrD8         [24]22094 	ljmp	00126$
      007C46                      22095 00125$:
                                  22096 ;	ff15\source\ff.c:4876: sect = fs->fatbase;		/* Top of the FAT */
      007C46 74 20            [12]22097 	mov	a,#0x20
      007C48 2F               [12]22098 	add	a,r7
      007C49 FF               [12]22099 	mov	r7,a
      007C4A E4               [12]22100 	clr	a
      007C4B 3D               [12]22101 	addc	a,r5
      007C4C FD               [12]22102 	mov	r5,a
      007C4D 8F 82            [24]22103 	mov	dpl,r7
      007C4F 8D 83            [24]22104 	mov	dph,r5
      007C51 8E F0            [24]22105 	mov	b,r6
      007C53 12r00r00         [24]22106 	lcall	__gptrget
      007C56 F5*98            [12]22107 	mov	_f_getfree_sloc0_1_0,a
      007C58 A3               [24]22108 	inc	dptr
      007C59 12r00r00         [24]22109 	lcall	__gptrget
      007C5C F5*99            [12]22110 	mov	(_f_getfree_sloc0_1_0 + 1),a
      007C5E A3               [24]22111 	inc	dptr
      007C5F 12r00r00         [24]22112 	lcall	__gptrget
      007C62 F5*9A            [12]22113 	mov	(_f_getfree_sloc0_1_0 + 2),a
      007C64 A3               [24]22114 	inc	dptr
      007C65 12r00r00         [24]22115 	lcall	__gptrget
      007C68 F5*9B            [12]22116 	mov	(_f_getfree_sloc0_1_0 + 3),a
                                  22117 ;	ff15\source\ff.c:4877: i = 0;					/* Offset in the sector */
      007C6A 90r02r0A         [24]22118 	mov	dptr,#_f_getfree_i_65536_375
      007C6D E4               [12]22119 	clr	a
      007C6E F0               [24]22120 	movx	@dptr,a
      007C6F A3               [24]22121 	inc	dptr
      007C70 F0               [24]22122 	movx	@dptr,a
                                  22123 ;	ff15\source\ff.c:4878: do {	/* Counts numbuer of entries with zero in the FAT */
      007C71 85*9C*A0         [24]22124 	mov	_f_getfree_sloc2_1_0,_f_getfree_sloc1_1_0
      007C74 85*9D*A1         [24]22125 	mov	(_f_getfree_sloc2_1_0 + 1),(_f_getfree_sloc1_1_0 + 1)
      007C77 85*9E*A2         [24]22126 	mov	(_f_getfree_sloc2_1_0 + 2),(_f_getfree_sloc1_1_0 + 2)
      007C7A 85*9F*A3         [24]22127 	mov	(_f_getfree_sloc2_1_0 + 3),(_f_getfree_sloc1_1_0 + 3)
      007C7D                      22128 00121$:
                                  22129 ;	ff15\source\ff.c:4879: if (i == 0) {	/* New sector? */
      007C7D 90r02r0A         [24]22130 	mov	dptr,#_f_getfree_i_65536_375
      007C80 E0               [24]22131 	movx	a,@dptr
      007C81 F5 F0            [12]22132 	mov	b,a
      007C83 A3               [24]22133 	inc	dptr
      007C84 E0               [24]22134 	movx	a,@dptr
      007C85 45 F0            [12]22135 	orl	a,b
      007C87 70 45            [24]22136 	jnz	00113$
                                  22137 ;	ff15\source\ff.c:4880: res = move_window(fs, sect++);
      007C89 90r02r03         [24]22138 	mov	dptr,#_f_getfree_fs_65536_375
      007C8C E0               [24]22139 	movx	a,@dptr
      007C8D FD               [12]22140 	mov	r5,a
      007C8E A3               [24]22141 	inc	dptr
      007C8F E0               [24]22142 	movx	a,@dptr
      007C90 FE               [12]22143 	mov	r6,a
      007C91 A3               [24]22144 	inc	dptr
      007C92 E0               [24]22145 	movx	a,@dptr
      007C93 FF               [12]22146 	mov	r7,a
      007C94 90r00r1D         [24]22147 	mov	dptr,#_move_window_PARM_2
      007C97 E5*98            [12]22148 	mov	a,_f_getfree_sloc0_1_0
      007C99 F0               [24]22149 	movx	@dptr,a
      007C9A E5*99            [12]22150 	mov	a,(_f_getfree_sloc0_1_0 + 1)
      007C9C A3               [24]22151 	inc	dptr
      007C9D F0               [24]22152 	movx	@dptr,a
      007C9E E5*9A            [12]22153 	mov	a,(_f_getfree_sloc0_1_0 + 2)
      007CA0 A3               [24]22154 	inc	dptr
      007CA1 F0               [24]22155 	movx	@dptr,a
      007CA2 E5*9B            [12]22156 	mov	a,(_f_getfree_sloc0_1_0 + 3)
      007CA4 A3               [24]22157 	inc	dptr
      007CA5 F0               [24]22158 	movx	@dptr,a
      007CA6 05*98            [12]22159 	inc	_f_getfree_sloc0_1_0
      007CA8 E4               [12]22160 	clr	a
      007CA9 B5*98 0C         [24]22161 	cjne	a,_f_getfree_sloc0_1_0,00206$
      007CAC 05*99            [12]22162 	inc	(_f_getfree_sloc0_1_0 + 1)
      007CAE B5*99 07         [24]22163 	cjne	a,(_f_getfree_sloc0_1_0 + 1),00206$
      007CB1 05*9A            [12]22164 	inc	(_f_getfree_sloc0_1_0 + 2)
      007CB3 B5*9A 02         [24]22165 	cjne	a,(_f_getfree_sloc0_1_0 + 2),00206$
      007CB6 05*9B            [12]22166 	inc	(_f_getfree_sloc0_1_0 + 3)
      007CB8                      22167 00206$:
      007CB8 8D 82            [24]22168 	mov	dpl,r5
      007CBA 8E 83            [24]22169 	mov	dph,r6
      007CBC 8F F0            [24]22170 	mov	b,r7
      007CBE 12r05r18         [24]22171 	lcall	_move_window
      007CC1 AF 82            [24]22172 	mov	r7,dpl
      007CC3 90r02r02         [24]22173 	mov	dptr,#_f_getfree_res_65536_375
      007CC6 EF               [12]22174 	mov	a,r7
      007CC7 F0               [24]22175 	movx	@dptr,a
                                  22176 ;	ff15\source\ff.c:4881: if (res != FR_OK) break;
      007CC8 EF               [12]22177 	mov	a,r7
      007CC9 60 03            [24]22178 	jz	00207$
      007CCB 02r7DrD8         [24]22179 	ljmp	00126$
      007CCE                      22180 00207$:
      007CCE                      22181 00113$:
                                  22182 ;	ff15\source\ff.c:4883: if (fs->fs_type == FS_FAT16) {
      007CCE 90r02r03         [24]22183 	mov	dptr,#_f_getfree_fs_65536_375
      007CD1 E0               [24]22184 	movx	a,@dptr
      007CD2 F5*9C            [12]22185 	mov	_f_getfree_sloc1_1_0,a
      007CD4 A3               [24]22186 	inc	dptr
      007CD5 E0               [24]22187 	movx	a,@dptr
      007CD6 F5*9D            [12]22188 	mov	(_f_getfree_sloc1_1_0 + 1),a
      007CD8 A3               [24]22189 	inc	dptr
      007CD9 E0               [24]22190 	movx	a,@dptr
      007CDA F5*9E            [12]22191 	mov	(_f_getfree_sloc1_1_0 + 2),a
      007CDC 85*9C 82         [24]22192 	mov	dpl,_f_getfree_sloc1_1_0
      007CDF 85*9D 83         [24]22193 	mov	dph,(_f_getfree_sloc1_1_0 + 1)
      007CE2 85*9E F0         [24]22194 	mov	b,(_f_getfree_sloc1_1_0 + 2)
      007CE5 12r00r00         [24]22195 	lcall	__gptrget
      007CE8 F8               [12]22196 	mov	r0,a
      007CE9 B8 02 5D         [24]22197 	cjne	r0,#0x02,00119$
                                  22198 ;	ff15\source\ff.c:4884: if (ld_word(fs->win + i) == 0) nfree++;
      007CEC 74 30            [12]22199 	mov	a,#0x30
      007CEE 25*9C            [12]22200 	add	a,_f_getfree_sloc1_1_0
      007CF0 F5*A4            [12]22201 	mov	_f_getfree_sloc3_1_0,a
      007CF2 E4               [12]22202 	clr	a
      007CF3 35*9D            [12]22203 	addc	a,(_f_getfree_sloc1_1_0 + 1)
      007CF5 F5*A5            [12]22204 	mov	(_f_getfree_sloc3_1_0 + 1),a
      007CF7 85*9E*A6         [24]22205 	mov	(_f_getfree_sloc3_1_0 + 2),(_f_getfree_sloc1_1_0 + 2)
      007CFA 90r02r0A         [24]22206 	mov	dptr,#_f_getfree_i_65536_375
      007CFD E0               [24]22207 	movx	a,@dptr
      007CFE FD               [12]22208 	mov	r5,a
      007CFF A3               [24]22209 	inc	dptr
      007D00 E0               [24]22210 	movx	a,@dptr
      007D01 FF               [12]22211 	mov	r7,a
      007D02 ED               [12]22212 	mov	a,r5
      007D03 25*A4            [12]22213 	add	a,_f_getfree_sloc3_1_0
      007D05 FD               [12]22214 	mov	r5,a
      007D06 EF               [12]22215 	mov	a,r7
      007D07 35*A5            [12]22216 	addc	a,(_f_getfree_sloc3_1_0 + 1)
      007D09 FF               [12]22217 	mov	r7,a
      007D0A AE*A6            [24]22218 	mov	r6,(_f_getfree_sloc3_1_0 + 2)
      007D0C 8D 82            [24]22219 	mov	dpl,r5
      007D0E 8F 83            [24]22220 	mov	dph,r7
      007D10 8E F0            [24]22221 	mov	b,r6
      007D12 12r00r00         [24]22222 	lcall	_ld_word
      007D15 E5 82            [12]22223 	mov	a,dpl
      007D17 85 83 F0         [24]22224 	mov	b,dph
      007D1A 45 F0            [12]22225 	orl	a,b
      007D1C 70 16            [24]22226 	jnz	00115$
      007D1E 90r02r06         [24]22227 	mov	dptr,#_f_getfree_nfree_65536_375
      007D21 E0               [24]22228 	movx	a,@dptr
      007D22 24 01            [12]22229 	add	a,#0x01
      007D24 F0               [24]22230 	movx	@dptr,a
      007D25 A3               [24]22231 	inc	dptr
      007D26 E0               [24]22232 	movx	a,@dptr
      007D27 34 00            [12]22233 	addc	a,#0x00
      007D29 F0               [24]22234 	movx	@dptr,a
      007D2A A3               [24]22235 	inc	dptr
      007D2B E0               [24]22236 	movx	a,@dptr
      007D2C 34 00            [12]22237 	addc	a,#0x00
      007D2E F0               [24]22238 	movx	@dptr,a
      007D2F A3               [24]22239 	inc	dptr
      007D30 E0               [24]22240 	movx	a,@dptr
      007D31 34 00            [12]22241 	addc	a,#0x00
      007D33 F0               [24]22242 	movx	@dptr,a
      007D34                      22243 00115$:
                                  22244 ;	ff15\source\ff.c:4885: i += 2;
      007D34 90r02r0A         [24]22245 	mov	dptr,#_f_getfree_i_65536_375
      007D37 E0               [24]22246 	movx	a,@dptr
      007D38 FE               [12]22247 	mov	r6,a
      007D39 A3               [24]22248 	inc	dptr
      007D3A E0               [24]22249 	movx	a,@dptr
      007D3B FF               [12]22250 	mov	r7,a
      007D3C 90r02r0A         [24]22251 	mov	dptr,#_f_getfree_i_65536_375
      007D3F 74 02            [12]22252 	mov	a,#0x02
      007D41 2E               [12]22253 	add	a,r6
      007D42 F0               [24]22254 	movx	@dptr,a
      007D43 E4               [12]22255 	clr	a
      007D44 3F               [12]22256 	addc	a,r7
      007D45 A3               [24]22257 	inc	dptr
      007D46 F0               [24]22258 	movx	@dptr,a
      007D47 80 67            [24]22259 	sjmp	00120$
      007D49                      22260 00119$:
                                  22261 ;	ff15\source\ff.c:4887: if ((ld_dword(fs->win + i) & 0x0FFFFFFF) == 0) nfree++;
      007D49 74 30            [12]22262 	mov	a,#0x30
      007D4B 25*9C            [12]22263 	add	a,_f_getfree_sloc1_1_0
      007D4D F5*A4            [12]22264 	mov	_f_getfree_sloc3_1_0,a
      007D4F E4               [12]22265 	clr	a
      007D50 35*9D            [12]22266 	addc	a,(_f_getfree_sloc1_1_0 + 1)
      007D52 F5*A5            [12]22267 	mov	(_f_getfree_sloc3_1_0 + 1),a
      007D54 85*9E*A6         [24]22268 	mov	(_f_getfree_sloc3_1_0 + 2),(_f_getfree_sloc1_1_0 + 2)
      007D57 90r02r0A         [24]22269 	mov	dptr,#_f_getfree_i_65536_375
      007D5A E0               [24]22270 	movx	a,@dptr
      007D5B F8               [12]22271 	mov	r0,a
      007D5C A3               [24]22272 	inc	dptr
      007D5D E0               [24]22273 	movx	a,@dptr
      007D5E FF               [12]22274 	mov	r7,a
      007D5F E8               [12]22275 	mov	a,r0
      007D60 25*A4            [12]22276 	add	a,_f_getfree_sloc3_1_0
      007D62 F8               [12]22277 	mov	r0,a
      007D63 EF               [12]22278 	mov	a,r7
      007D64 35*A5            [12]22279 	addc	a,(_f_getfree_sloc3_1_0 + 1)
      007D66 FF               [12]22280 	mov	r7,a
      007D67 AE*A6            [24]22281 	mov	r6,(_f_getfree_sloc3_1_0 + 2)
      007D69 88 82            [24]22282 	mov	dpl,r0
      007D6B 8F 83            [24]22283 	mov	dph,r7
      007D6D 8E F0            [24]22284 	mov	b,r6
      007D6F 12r00r45         [24]22285 	lcall	_ld_dword
      007D72 A8 82            [24]22286 	mov	r0,dpl
      007D74 AD 83            [24]22287 	mov	r5,dph
      007D76 AE F0            [24]22288 	mov	r6,b
      007D78 FF               [12]22289 	mov	r7,a
      007D79 E8               [12]22290 	mov	a,r0
      007D7A 70 21            [24]22291 	jnz	00117$
      007D7C ED               [12]22292 	mov	a,r5
      007D7D 70 1E            [24]22293 	jnz	00117$
      007D7F EE               [12]22294 	mov	a,r6
      007D80 70 1B            [24]22295 	jnz	00117$
      007D82 EF               [12]22296 	mov	a,r7
      007D83 54 0F            [12]22297 	anl	a,#0x0f
      007D85 70 16            [24]22298 	jnz	00117$
      007D87 90r02r06         [24]22299 	mov	dptr,#_f_getfree_nfree_65536_375
      007D8A E0               [24]22300 	movx	a,@dptr
      007D8B 24 01            [12]22301 	add	a,#0x01
      007D8D F0               [24]22302 	movx	@dptr,a
      007D8E A3               [24]22303 	inc	dptr
      007D8F E0               [24]22304 	movx	a,@dptr
      007D90 34 00            [12]22305 	addc	a,#0x00
      007D92 F0               [24]22306 	movx	@dptr,a
      007D93 A3               [24]22307 	inc	dptr
      007D94 E0               [24]22308 	movx	a,@dptr
      007D95 34 00            [12]22309 	addc	a,#0x00
      007D97 F0               [24]22310 	movx	@dptr,a
      007D98 A3               [24]22311 	inc	dptr
      007D99 E0               [24]22312 	movx	a,@dptr
      007D9A 34 00            [12]22313 	addc	a,#0x00
      007D9C F0               [24]22314 	movx	@dptr,a
      007D9D                      22315 00117$:
                                  22316 ;	ff15\source\ff.c:4888: i += 4;
      007D9D 90r02r0A         [24]22317 	mov	dptr,#_f_getfree_i_65536_375
      007DA0 E0               [24]22318 	movx	a,@dptr
      007DA1 FE               [12]22319 	mov	r6,a
      007DA2 A3               [24]22320 	inc	dptr
      007DA3 E0               [24]22321 	movx	a,@dptr
      007DA4 FF               [12]22322 	mov	r7,a
      007DA5 90r02r0A         [24]22323 	mov	dptr,#_f_getfree_i_65536_375
      007DA8 74 04            [12]22324 	mov	a,#0x04
      007DAA 2E               [12]22325 	add	a,r6
      007DAB F0               [24]22326 	movx	@dptr,a
      007DAC E4               [12]22327 	clr	a
      007DAD 3F               [12]22328 	addc	a,r7
      007DAE A3               [24]22329 	inc	dptr
      007DAF F0               [24]22330 	movx	@dptr,a
      007DB0                      22331 00120$:
                                  22332 ;	ff15\source\ff.c:4890: i %= SS(fs);
      007DB0 90r02r0B         [24]22333 	mov	dptr,#(_f_getfree_i_65536_375 + 1)
      007DB3 E0               [24]22334 	movx	a,@dptr
      007DB4 53 E0 01         [24]22335 	anl	acc,#0x01
      007DB7 F0               [24]22336 	movx	@dptr,a
                                  22337 ;	ff15\source\ff.c:4891: } while (--clst);
      007DB8 15*A0            [12]22338 	dec	_f_getfree_sloc2_1_0
      007DBA 74 FF            [12]22339 	mov	a,#0xff
      007DBC B5*A0 0C         [24]22340 	cjne	a,_f_getfree_sloc2_1_0,00213$
      007DBF 15*A1            [12]22341 	dec	(_f_getfree_sloc2_1_0 + 1)
      007DC1 B5*A1 07         [24]22342 	cjne	a,(_f_getfree_sloc2_1_0 + 1),00213$
      007DC4 15*A2            [12]22343 	dec	(_f_getfree_sloc2_1_0 + 2)
      007DC6 B5*A2 02         [24]22344 	cjne	a,(_f_getfree_sloc2_1_0 + 2),00213$
      007DC9 15*A3            [12]22345 	dec	(_f_getfree_sloc2_1_0 + 3)
      007DCB                      22346 00213$:
      007DCB E5*A0            [12]22347 	mov	a,_f_getfree_sloc2_1_0
      007DCD 45*A1            [12]22348 	orl	a,(_f_getfree_sloc2_1_0 + 1)
      007DCF 45*A2            [12]22349 	orl	a,(_f_getfree_sloc2_1_0 + 2)
      007DD1 45*A3            [12]22350 	orl	a,(_f_getfree_sloc2_1_0 + 3)
      007DD3 60 03            [24]22351 	jz	00214$
      007DD5 02r7Cr7D         [24]22352 	ljmp	00121$
      007DD8                      22353 00214$:
      007DD8                      22354 00126$:
                                  22355 ;	ff15\source\ff.c:4894: if (res == FR_OK) {		/* Update parameters if succeeded */
      007DD8 90r02r02         [24]22356 	mov	dptr,#_f_getfree_res_65536_375
      007DDB E0               [24]22357 	movx	a,@dptr
      007DDC 60 03            [24]22358 	jz	00215$
      007DDE 02r7Er79         [24]22359 	ljmp	00133$
      007DE1                      22360 00215$:
                                  22361 ;	ff15\source\ff.c:4895: *nclst = nfree;			/* Return the free clusters */
      007DE1 90r01rF9         [24]22362 	mov	dptr,#_f_getfree_PARM_2
      007DE4 E0               [24]22363 	movx	a,@dptr
      007DE5 F5*A4            [12]22364 	mov	_f_getfree_sloc3_1_0,a
      007DE7 A3               [24]22365 	inc	dptr
      007DE8 E0               [24]22366 	movx	a,@dptr
      007DE9 F5*A5            [12]22367 	mov	(_f_getfree_sloc3_1_0 + 1),a
      007DEB A3               [24]22368 	inc	dptr
      007DEC E0               [24]22369 	movx	a,@dptr
      007DED F5*A6            [12]22370 	mov	(_f_getfree_sloc3_1_0 + 2),a
      007DEF 90r02r06         [24]22371 	mov	dptr,#_f_getfree_nfree_65536_375
      007DF2 E0               [24]22372 	movx	a,@dptr
      007DF3 F5*A0            [12]22373 	mov	_f_getfree_sloc2_1_0,a
      007DF5 A3               [24]22374 	inc	dptr
      007DF6 E0               [24]22375 	movx	a,@dptr
      007DF7 F5*A1            [12]22376 	mov	(_f_getfree_sloc2_1_0 + 1),a
      007DF9 A3               [24]22377 	inc	dptr
      007DFA E0               [24]22378 	movx	a,@dptr
      007DFB F5*A2            [12]22379 	mov	(_f_getfree_sloc2_1_0 + 2),a
      007DFD A3               [24]22380 	inc	dptr
      007DFE E0               [24]22381 	movx	a,@dptr
      007DFF F5*A3            [12]22382 	mov	(_f_getfree_sloc2_1_0 + 3),a
      007E01 85*A4 82         [24]22383 	mov	dpl,_f_getfree_sloc3_1_0
      007E04 85*A5 83         [24]22384 	mov	dph,(_f_getfree_sloc3_1_0 + 1)
      007E07 85*A6 F0         [24]22385 	mov	b,(_f_getfree_sloc3_1_0 + 2)
      007E0A E5*A0            [12]22386 	mov	a,_f_getfree_sloc2_1_0
      007E0C 12r00r00         [24]22387 	lcall	__gptrput
      007E0F A3               [24]22388 	inc	dptr
      007E10 E5*A1            [12]22389 	mov	a,(_f_getfree_sloc2_1_0 + 1)
      007E12 12r00r00         [24]22390 	lcall	__gptrput
      007E15 A3               [24]22391 	inc	dptr
      007E16 E5*A2            [12]22392 	mov	a,(_f_getfree_sloc2_1_0 + 2)
      007E18 12r00r00         [24]22393 	lcall	__gptrput
      007E1B A3               [24]22394 	inc	dptr
      007E1C E5*A3            [12]22395 	mov	a,(_f_getfree_sloc2_1_0 + 3)
      007E1E 12r00r00         [24]22396 	lcall	__gptrput
                                  22397 ;	ff15\source\ff.c:4896: fs->free_clst = nfree;	/* Now free_clst is valid */
      007E21 90r02r03         [24]22398 	mov	dptr,#_f_getfree_fs_65536_375
      007E24 E0               [24]22399 	movx	a,@dptr
      007E25 FD               [12]22400 	mov	r5,a
      007E26 A3               [24]22401 	inc	dptr
      007E27 E0               [24]22402 	movx	a,@dptr
      007E28 FE               [12]22403 	mov	r6,a
      007E29 A3               [24]22404 	inc	dptr
      007E2A E0               [24]22405 	movx	a,@dptr
      007E2B FF               [12]22406 	mov	r7,a
      007E2C 74 10            [12]22407 	mov	a,#0x10
      007E2E 2D               [12]22408 	add	a,r5
      007E2F FD               [12]22409 	mov	r5,a
      007E30 E4               [12]22410 	clr	a
      007E31 3E               [12]22411 	addc	a,r6
      007E32 FE               [12]22412 	mov	r6,a
      007E33 8D 82            [24]22413 	mov	dpl,r5
      007E35 8E 83            [24]22414 	mov	dph,r6
      007E37 8F F0            [24]22415 	mov	b,r7
      007E39 E5*A0            [12]22416 	mov	a,_f_getfree_sloc2_1_0
      007E3B 12r00r00         [24]22417 	lcall	__gptrput
      007E3E A3               [24]22418 	inc	dptr
      007E3F E5*A1            [12]22419 	mov	a,(_f_getfree_sloc2_1_0 + 1)
      007E41 12r00r00         [24]22420 	lcall	__gptrput
      007E44 A3               [24]22421 	inc	dptr
      007E45 E5*A2            [12]22422 	mov	a,(_f_getfree_sloc2_1_0 + 2)
      007E47 12r00r00         [24]22423 	lcall	__gptrput
      007E4A A3               [24]22424 	inc	dptr
      007E4B E5*A3            [12]22425 	mov	a,(_f_getfree_sloc2_1_0 + 3)
      007E4D 12r00r00         [24]22426 	lcall	__gptrput
                                  22427 ;	ff15\source\ff.c:4897: fs->fsi_flag |= 1;		/* FAT32: FSInfo is to be updated */
      007E50 90r02r03         [24]22428 	mov	dptr,#_f_getfree_fs_65536_375
      007E53 E0               [24]22429 	movx	a,@dptr
      007E54 FD               [12]22430 	mov	r5,a
      007E55 A3               [24]22431 	inc	dptr
      007E56 E0               [24]22432 	movx	a,@dptr
      007E57 FE               [12]22433 	mov	r6,a
      007E58 A3               [24]22434 	inc	dptr
      007E59 E0               [24]22435 	movx	a,@dptr
      007E5A FF               [12]22436 	mov	r7,a
      007E5B 74 05            [12]22437 	mov	a,#0x05
      007E5D 2D               [12]22438 	add	a,r5
      007E5E FD               [12]22439 	mov	r5,a
      007E5F E4               [12]22440 	clr	a
      007E60 3E               [12]22441 	addc	a,r6
      007E61 FE               [12]22442 	mov	r6,a
      007E62 8D 82            [24]22443 	mov	dpl,r5
      007E64 8E 83            [24]22444 	mov	dph,r6
      007E66 8F F0            [24]22445 	mov	b,r7
      007E68 12r00r00         [24]22446 	lcall	__gptrget
      007E6B F8               [12]22447 	mov	r0,a
      007E6C 43 00 01         [24]22448 	orl	ar0,#0x01
      007E6F 8D 82            [24]22449 	mov	dpl,r5
      007E71 8E 83            [24]22450 	mov	dph,r6
      007E73 8F F0            [24]22451 	mov	b,r7
      007E75 E8               [12]22452 	mov	a,r0
      007E76 12r00r00         [24]22453 	lcall	__gptrput
      007E79                      22454 00133$:
                                  22455 ;	ff15\source\ff.c:4902: LEAVE_FF(fs, res);
      007E79 90r02r02         [24]22456 	mov	dptr,#_f_getfree_res_65536_375
      007E7C E0               [24]22457 	movx	a,@dptr
                                  22458 ;	ff15\source\ff.c:4903: }
      007E7D F5 82            [12]22459 	mov	dpl,a
      007E7F 22               [24]22460 	ret
                                  22461 ;------------------------------------------------------------
                                  22462 ;Allocation info for local variables in function 'f_truncate'
                                  22463 ;------------------------------------------------------------
                                  22464 ;sloc0                     Allocated with name '_f_truncate_sloc0_1_0'
                                  22465 ;fp                        Allocated with name '_f_truncate_fp_65536_390'
                                  22466 ;res                       Allocated with name '_f_truncate_res_65536_391'
                                  22467 ;fs                        Allocated with name '_f_truncate_fs_65536_391'
                                  22468 ;ncl                       Allocated with name '_f_truncate_ncl_65536_391'
                                  22469 ;------------------------------------------------------------
                                  22470 ;	ff15\source\ff.c:4912: FRESULT f_truncate (
                                  22471 ;	-----------------------------------------
                                  22472 ;	 function f_truncate
                                  22473 ;	-----------------------------------------
      007E80                      22474 _f_truncate:
      007E80 AF F0            [24]22475 	mov	r7,b
      007E82 AE 83            [24]22476 	mov	r6,dph
      007E84 E5 82            [12]22477 	mov	a,dpl
      007E86 90r02r1B         [24]22478 	mov	dptr,#_f_truncate_fp_65536_390
      007E89 F0               [24]22479 	movx	@dptr,a
      007E8A EE               [12]22480 	mov	a,r6
      007E8B A3               [24]22481 	inc	dptr
      007E8C F0               [24]22482 	movx	@dptr,a
      007E8D EF               [12]22483 	mov	a,r7
      007E8E A3               [24]22484 	inc	dptr
      007E8F F0               [24]22485 	movx	@dptr,a
                                  22486 ;	ff15\source\ff.c:4921: res = validate(&fp->obj, &fs);	/* Check validity of the file object */
      007E90 90r02r1B         [24]22487 	mov	dptr,#_f_truncate_fp_65536_390
      007E93 E0               [24]22488 	movx	a,@dptr
      007E94 FD               [12]22489 	mov	r5,a
      007E95 A3               [24]22490 	inc	dptr
      007E96 E0               [24]22491 	movx	a,@dptr
      007E97 FE               [12]22492 	mov	r6,a
      007E98 A3               [24]22493 	inc	dptr
      007E99 E0               [24]22494 	movx	a,@dptr
      007E9A FF               [12]22495 	mov	r7,a
      007E9B 90r00rFF         [24]22496 	mov	dptr,#_validate_PARM_2
      007E9E 74r1F            [12]22497 	mov	a,#_f_truncate_fs_65536_391
      007EA0 F0               [24]22498 	movx	@dptr,a
      007EA1 74s02            [12]22499 	mov	a,#(_f_truncate_fs_65536_391 >> 8)
      007EA3 A3               [24]22500 	inc	dptr
      007EA4 F0               [24]22501 	movx	@dptr,a
      007EA5 E4               [12]22502 	clr	a
      007EA6 A3               [24]22503 	inc	dptr
      007EA7 F0               [24]22504 	movx	@dptr,a
      007EA8 8D 82            [24]22505 	mov	dpl,r5
      007EAA 8E 83            [24]22506 	mov	dph,r6
      007EAC 8F F0            [24]22507 	mov	b,r7
      007EAE 12r49r3E         [24]22508 	lcall	_validate
      007EB1 AF 82            [24]22509 	mov	r7,dpl
      007EB3 90r02r1E         [24]22510 	mov	dptr,#_f_truncate_res_65536_391
      007EB6 EF               [12]22511 	mov	a,r7
      007EB7 F0               [24]22512 	movx	@dptr,a
                                  22513 ;	ff15\source\ff.c:4922: if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);
      007EB8 EF               [12]22514 	mov	a,r7
      007EB9 70 25            [24]22515 	jnz	00101$
      007EBB 90r02r1B         [24]22516 	mov	dptr,#_f_truncate_fp_65536_390
      007EBE E0               [24]22517 	movx	a,@dptr
      007EBF FD               [12]22518 	mov	r5,a
      007EC0 A3               [24]22519 	inc	dptr
      007EC1 E0               [24]22520 	movx	a,@dptr
      007EC2 FE               [12]22521 	mov	r6,a
      007EC3 A3               [24]22522 	inc	dptr
      007EC4 E0               [24]22523 	movx	a,@dptr
      007EC5 FF               [12]22524 	mov	r7,a
      007EC6 74 10            [12]22525 	mov	a,#0x10
      007EC8 2D               [12]22526 	add	a,r5
      007EC9 FA               [12]22527 	mov	r2,a
      007ECA E4               [12]22528 	clr	a
      007ECB 3E               [12]22529 	addc	a,r6
      007ECC FB               [12]22530 	mov	r3,a
      007ECD 8F 04            [24]22531 	mov	ar4,r7
      007ECF 8A 82            [24]22532 	mov	dpl,r2
      007ED1 8B 83            [24]22533 	mov	dph,r3
      007ED3 8C F0            [24]22534 	mov	b,r4
      007ED5 12r00r00         [24]22535 	lcall	__gptrget
      007ED8 FA               [12]22536 	mov	r2,a
      007ED9 90r02r1E         [24]22537 	mov	dptr,#_f_truncate_res_65536_391
      007EDC F0               [24]22538 	movx	@dptr,a
      007EDD EA               [12]22539 	mov	a,r2
      007EDE 60 07            [24]22540 	jz	00102$
      007EE0                      22541 00101$:
      007EE0 90r02r1E         [24]22542 	mov	dptr,#_f_truncate_res_65536_391
      007EE3 E0               [24]22543 	movx	a,@dptr
      007EE4 F5 82            [12]22544 	mov	dpl,a
      007EE6 22               [24]22545 	ret
      007EE7                      22546 00102$:
                                  22547 ;	ff15\source\ff.c:4923: if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
      007EE7 74 0F            [12]22548 	mov	a,#0x0f
      007EE9 2D               [12]22549 	add	a,r5
      007EEA FA               [12]22550 	mov	r2,a
      007EEB E4               [12]22551 	clr	a
      007EEC 3E               [12]22552 	addc	a,r6
      007EED FB               [12]22553 	mov	r3,a
      007EEE 8F 04            [24]22554 	mov	ar4,r7
      007EF0 8A 82            [24]22555 	mov	dpl,r2
      007EF2 8B 83            [24]22556 	mov	dph,r3
      007EF4 8C F0            [24]22557 	mov	b,r4
      007EF6 12r00r00         [24]22558 	lcall	__gptrget
      007EF9 20 E1 04         [24]22559 	jb	acc.1,00105$
      007EFC 75 82 07         [24]22560 	mov	dpl,#0x07
      007EFF 22               [24]22561 	ret
      007F00                      22562 00105$:
                                  22563 ;	ff15\source\ff.c:4925: if (fp->fptr < fp->obj.objsize) {	/* Process when fptr is not on the eof */
      007F00 74 11            [12]22564 	mov	a,#0x11
      007F02 2D               [12]22565 	add	a,r5
      007F03 FC               [12]22566 	mov	r4,a
      007F04 E4               [12]22567 	clr	a
      007F05 3E               [12]22568 	addc	a,r6
      007F06 FA               [12]22569 	mov	r2,a
      007F07 8F 03            [24]22570 	mov	ar3,r7
      007F09 8C 82            [24]22571 	mov	dpl,r4
      007F0B 8A 83            [24]22572 	mov	dph,r2
      007F0D 8B F0            [24]22573 	mov	b,r3
      007F0F 12r00r00         [24]22574 	lcall	__gptrget
      007F12 F5*A7            [12]22575 	mov	_f_truncate_sloc0_1_0,a
      007F14 A3               [24]22576 	inc	dptr
      007F15 12r00r00         [24]22577 	lcall	__gptrget
      007F18 F5*A8            [12]22578 	mov	(_f_truncate_sloc0_1_0 + 1),a
      007F1A A3               [24]22579 	inc	dptr
      007F1B 12r00r00         [24]22580 	lcall	__gptrget
      007F1E F5*A9            [12]22581 	mov	(_f_truncate_sloc0_1_0 + 2),a
      007F20 A3               [24]22582 	inc	dptr
      007F21 12r00r00         [24]22583 	lcall	__gptrget
      007F24 F5*AA            [12]22584 	mov	(_f_truncate_sloc0_1_0 + 3),a
      007F26 74 0B            [12]22585 	mov	a,#0x0b
      007F28 2D               [12]22586 	add	a,r5
      007F29 F8               [12]22587 	mov	r0,a
      007F2A E4               [12]22588 	clr	a
      007F2B 3E               [12]22589 	addc	a,r6
      007F2C FB               [12]22590 	mov	r3,a
      007F2D 8F 04            [24]22591 	mov	ar4,r7
      007F2F 88 82            [24]22592 	mov	dpl,r0
      007F31 8B 83            [24]22593 	mov	dph,r3
      007F33 8C F0            [24]22594 	mov	b,r4
      007F35 12r00r00         [24]22595 	lcall	__gptrget
      007F38 F8               [12]22596 	mov	r0,a
      007F39 A3               [24]22597 	inc	dptr
      007F3A 12r00r00         [24]22598 	lcall	__gptrget
      007F3D FB               [12]22599 	mov	r3,a
      007F3E A3               [24]22600 	inc	dptr
      007F3F 12r00r00         [24]22601 	lcall	__gptrget
      007F42 FC               [12]22602 	mov	r4,a
      007F43 A3               [24]22603 	inc	dptr
      007F44 12r00r00         [24]22604 	lcall	__gptrget
      007F47 FA               [12]22605 	mov	r2,a
      007F48 C3               [12]22606 	clr	c
      007F49 E5*A7            [12]22607 	mov	a,_f_truncate_sloc0_1_0
      007F4B 98               [12]22608 	subb	a,r0
      007F4C E5*A8            [12]22609 	mov	a,(_f_truncate_sloc0_1_0 + 1)
      007F4E 9B               [12]22610 	subb	a,r3
      007F4F E5*A9            [12]22611 	mov	a,(_f_truncate_sloc0_1_0 + 2)
      007F51 9C               [12]22612 	subb	a,r4
      007F52 E5*AA            [12]22613 	mov	a,(_f_truncate_sloc0_1_0 + 3)
      007F54 9A               [12]22614 	subb	a,r2
      007F55 40 03            [24]22615 	jc	00179$
      007F57 02r82r39         [24]22616 	ljmp	00125$
      007F5A                      22617 00179$:
                                  22618 ;	ff15\source\ff.c:4926: if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
      007F5A E5*A7            [12]22619 	mov	a,_f_truncate_sloc0_1_0
      007F5C 45*A8            [12]22620 	orl	a,(_f_truncate_sloc0_1_0 + 1)
      007F5E 45*A9            [12]22621 	orl	a,(_f_truncate_sloc0_1_0 + 2)
      007F60 45*AA            [12]22622 	orl	a,(_f_truncate_sloc0_1_0 + 3)
      007F62 70 75            [24]22623 	jnz	00114$
                                  22624 ;	ff15\source\ff.c:4927: res = remove_chain(&fp->obj, fp->obj.sclust, 0);
      007F64 74 07            [12]22625 	mov	a,#0x07
      007F66 2D               [12]22626 	add	a,r5
      007F67 FC               [12]22627 	mov	r4,a
      007F68 E4               [12]22628 	clr	a
      007F69 3E               [12]22629 	addc	a,r6
      007F6A FA               [12]22630 	mov	r2,a
      007F6B 8F 03            [24]22631 	mov	ar3,r7
      007F6D 8C 82            [24]22632 	mov	dpl,r4
      007F6F 8A 83            [24]22633 	mov	dph,r2
      007F71 8B F0            [24]22634 	mov	b,r3
      007F73 12r00r00         [24]22635 	lcall	__gptrget
      007F76 F9               [12]22636 	mov	r1,a
      007F77 A3               [24]22637 	inc	dptr
      007F78 12r00r00         [24]22638 	lcall	__gptrget
      007F7B FA               [12]22639 	mov	r2,a
      007F7C A3               [24]22640 	inc	dptr
      007F7D 12r00r00         [24]22641 	lcall	__gptrget
      007F80 FB               [12]22642 	mov	r3,a
      007F81 A3               [24]22643 	inc	dptr
      007F82 12r00r00         [24]22644 	lcall	__gptrget
      007F85 FC               [12]22645 	mov	r4,a
      007F86 90r00r47         [24]22646 	mov	dptr,#_remove_chain_PARM_2
      007F89 E9               [12]22647 	mov	a,r1
      007F8A F0               [24]22648 	movx	@dptr,a
      007F8B EA               [12]22649 	mov	a,r2
      007F8C A3               [24]22650 	inc	dptr
      007F8D F0               [24]22651 	movx	@dptr,a
      007F8E EB               [12]22652 	mov	a,r3
      007F8F A3               [24]22653 	inc	dptr
      007F90 F0               [24]22654 	movx	@dptr,a
      007F91 EC               [12]22655 	mov	a,r4
      007F92 A3               [24]22656 	inc	dptr
      007F93 F0               [24]22657 	movx	@dptr,a
      007F94 90r00r4B         [24]22658 	mov	dptr,#_remove_chain_PARM_3
      007F97 E4               [12]22659 	clr	a
      007F98 F0               [24]22660 	movx	@dptr,a
      007F99 A3               [24]22661 	inc	dptr
      007F9A F0               [24]22662 	movx	@dptr,a
      007F9B A3               [24]22663 	inc	dptr
      007F9C F0               [24]22664 	movx	@dptr,a
      007F9D A3               [24]22665 	inc	dptr
      007F9E F0               [24]22666 	movx	@dptr,a
      007F9F 8D 82            [24]22667 	mov	dpl,r5
      007FA1 8E 83            [24]22668 	mov	dph,r6
      007FA3 8F F0            [24]22669 	mov	b,r7
      007FA5 12r13r15         [24]22670 	lcall	_remove_chain
      007FA8 E5 82            [12]22671 	mov	a,dpl
      007FAA 90r02r1E         [24]22672 	mov	dptr,#_f_truncate_res_65536_391
      007FAD F0               [24]22673 	movx	@dptr,a
                                  22674 ;	ff15\source\ff.c:4928: fp->obj.sclust = 0;
      007FAE 90r02r1B         [24]22675 	mov	dptr,#_f_truncate_fp_65536_390
      007FB1 E0               [24]22676 	movx	a,@dptr
      007FB2 FA               [12]22677 	mov	r2,a
      007FB3 A3               [24]22678 	inc	dptr
      007FB4 E0               [24]22679 	movx	a,@dptr
      007FB5 FB               [12]22680 	mov	r3,a
      007FB6 A3               [24]22681 	inc	dptr
      007FB7 E0               [24]22682 	movx	a,@dptr
      007FB8 FC               [12]22683 	mov	r4,a
      007FB9 74 07            [12]22684 	mov	a,#0x07
      007FBB 2A               [12]22685 	add	a,r2
      007FBC FA               [12]22686 	mov	r2,a
      007FBD E4               [12]22687 	clr	a
      007FBE 3B               [12]22688 	addc	a,r3
      007FBF FB               [12]22689 	mov	r3,a
      007FC0 8A 82            [24]22690 	mov	dpl,r2
      007FC2 8B 83            [24]22691 	mov	dph,r3
      007FC4 8C F0            [24]22692 	mov	b,r4
      007FC6 E4               [12]22693 	clr	a
      007FC7 12r00r00         [24]22694 	lcall	__gptrput
      007FCA A3               [24]22695 	inc	dptr
      007FCB 12r00r00         [24]22696 	lcall	__gptrput
      007FCE A3               [24]22697 	inc	dptr
      007FCF 12r00r00         [24]22698 	lcall	__gptrput
      007FD2 A3               [24]22699 	inc	dptr
      007FD3 12r00r00         [24]22700 	lcall	__gptrput
      007FD6 02r80rE1         [24]22701 	ljmp	00115$
      007FD9                      22702 00114$:
                                  22703 ;	ff15\source\ff.c:4930: ncl = get_fat(&fp->obj, fp->clust);
      007FD9 74 15            [12]22704 	mov	a,#0x15
      007FDB 2D               [12]22705 	add	a,r5
      007FDC FC               [12]22706 	mov	r4,a
      007FDD E4               [12]22707 	clr	a
      007FDE 3E               [12]22708 	addc	a,r6
      007FDF FA               [12]22709 	mov	r2,a
      007FE0 8F 03            [24]22710 	mov	ar3,r7
      007FE2 8C 82            [24]22711 	mov	dpl,r4
      007FE4 8A 83            [24]22712 	mov	dph,r2
      007FE6 8B F0            [24]22713 	mov	b,r3
      007FE8 12r00r00         [24]22714 	lcall	__gptrget
      007FEB F9               [12]22715 	mov	r1,a
      007FEC A3               [24]22716 	inc	dptr
      007FED 12r00r00         [24]22717 	lcall	__gptrget
      007FF0 FA               [12]22718 	mov	r2,a
      007FF1 A3               [24]22719 	inc	dptr
      007FF2 12r00r00         [24]22720 	lcall	__gptrget
      007FF5 FB               [12]22721 	mov	r3,a
      007FF6 A3               [24]22722 	inc	dptr
      007FF7 12r00r00         [24]22723 	lcall	__gptrget
      007FFA FC               [12]22724 	mov	r4,a
      007FFB 90r00r30         [24]22725 	mov	dptr,#_get_fat_PARM_2
      007FFE E9               [12]22726 	mov	a,r1
      007FFF F0               [24]22727 	movx	@dptr,a
      008000 EA               [12]22728 	mov	a,r2
      008001 A3               [24]22729 	inc	dptr
      008002 F0               [24]22730 	movx	@dptr,a
      008003 EB               [12]22731 	mov	a,r3
      008004 A3               [24]22732 	inc	dptr
      008005 F0               [24]22733 	movx	@dptr,a
      008006 EC               [12]22734 	mov	a,r4
      008007 A3               [24]22735 	inc	dptr
      008008 F0               [24]22736 	movx	@dptr,a
      008009 8D 82            [24]22737 	mov	dpl,r5
      00800B 8E 83            [24]22738 	mov	dph,r6
      00800D 8F F0            [24]22739 	mov	b,r7
      00800F 12r09rFE         [24]22740 	lcall	_get_fat
      008012 AC 82            [24]22741 	mov	r4,dpl
      008014 AD 83            [24]22742 	mov	r5,dph
      008016 AE F0            [24]22743 	mov	r6,b
      008018 FF               [12]22744 	mov	r7,a
                                  22745 ;	ff15\source\ff.c:4931: res = FR_OK;
      008019 90r02r1E         [24]22746 	mov	dptr,#_f_truncate_res_65536_391
      00801C E4               [12]22747 	clr	a
      00801D F0               [24]22748 	movx	@dptr,a
                                  22749 ;	ff15\source\ff.c:4932: if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
      00801E BC FF 0F         [24]22750 	cjne	r4,#0xff,00107$
      008021 BD FF 0C         [24]22751 	cjne	r5,#0xff,00107$
      008024 BE FF 09         [24]22752 	cjne	r6,#0xff,00107$
      008027 BF FF 06         [24]22753 	cjne	r7,#0xff,00107$
      00802A 90r02r1E         [24]22754 	mov	dptr,#_f_truncate_res_65536_391
      00802D 74 01            [12]22755 	mov	a,#0x01
      00802F F0               [24]22756 	movx	@dptr,a
      008030                      22757 00107$:
                                  22758 ;	ff15\source\ff.c:4933: if (ncl == 1) res = FR_INT_ERR;
      008030 BC 01 0F         [24]22759 	cjne	r4,#0x01,00109$
      008033 BD 00 0C         [24]22760 	cjne	r5,#0x00,00109$
      008036 BE 00 09         [24]22761 	cjne	r6,#0x00,00109$
      008039 BF 00 06         [24]22762 	cjne	r7,#0x00,00109$
      00803C 90r02r1E         [24]22763 	mov	dptr,#_f_truncate_res_65536_391
      00803F 74 02            [12]22764 	mov	a,#0x02
      008041 F0               [24]22765 	movx	@dptr,a
      008042                      22766 00109$:
                                  22767 ;	ff15\source\ff.c:4934: if (res == FR_OK && ncl < fs->n_fatent) {
      008042 90r02r1E         [24]22768 	mov	dptr,#_f_truncate_res_65536_391
      008045 E0               [24]22769 	movx	a,@dptr
      008046 60 03            [24]22770 	jz	00185$
      008048 02r80rE1         [24]22771 	ljmp	00115$
      00804B                      22772 00185$:
      00804B 90r02r1F         [24]22773 	mov	dptr,#_f_truncate_fs_65536_391
      00804E E0               [24]22774 	movx	a,@dptr
      00804F FB               [12]22775 	mov	r3,a
      008050 A3               [24]22776 	inc	dptr
      008051 E0               [24]22777 	movx	a,@dptr
      008052 F9               [12]22778 	mov	r1,a
      008053 A3               [24]22779 	inc	dptr
      008054 E0               [24]22780 	movx	a,@dptr
      008055 FA               [12]22781 	mov	r2,a
      008056 74 14            [12]22782 	mov	a,#0x14
      008058 2B               [12]22783 	add	a,r3
      008059 FB               [12]22784 	mov	r3,a
      00805A E4               [12]22785 	clr	a
      00805B 39               [12]22786 	addc	a,r1
      00805C F9               [12]22787 	mov	r1,a
      00805D 8B 82            [24]22788 	mov	dpl,r3
      00805F 89 83            [24]22789 	mov	dph,r1
      008061 8A F0            [24]22790 	mov	b,r2
      008063 12r00r00         [24]22791 	lcall	__gptrget
      008066 F8               [12]22792 	mov	r0,a
      008067 A3               [24]22793 	inc	dptr
      008068 12r00r00         [24]22794 	lcall	__gptrget
      00806B F9               [12]22795 	mov	r1,a
      00806C A3               [24]22796 	inc	dptr
      00806D 12r00r00         [24]22797 	lcall	__gptrget
      008070 FA               [12]22798 	mov	r2,a
      008071 A3               [24]22799 	inc	dptr
      008072 12r00r00         [24]22800 	lcall	__gptrget
      008075 FB               [12]22801 	mov	r3,a
      008076 C3               [12]22802 	clr	c
      008077 EC               [12]22803 	mov	a,r4
      008078 98               [12]22804 	subb	a,r0
      008079 ED               [12]22805 	mov	a,r5
      00807A 99               [12]22806 	subb	a,r1
      00807B EE               [12]22807 	mov	a,r6
      00807C 9A               [12]22808 	subb	a,r2
      00807D EF               [12]22809 	mov	a,r7
      00807E 9B               [12]22810 	subb	a,r3
      00807F 50 60            [24]22811 	jnc	00115$
                                  22812 ;	ff15\source\ff.c:4935: res = remove_chain(&fp->obj, ncl, fp->clust);
      008081 90r02r1B         [24]22813 	mov	dptr,#_f_truncate_fp_65536_390
      008084 E0               [24]22814 	movx	a,@dptr
      008085 F5*A7            [12]22815 	mov	_f_truncate_sloc0_1_0,a
      008087 A3               [24]22816 	inc	dptr
      008088 E0               [24]22817 	movx	a,@dptr
      008089 F5*A8            [12]22818 	mov	(_f_truncate_sloc0_1_0 + 1),a
      00808B A3               [24]22819 	inc	dptr
      00808C E0               [24]22820 	movx	a,@dptr
      00808D F5*A9            [12]22821 	mov	(_f_truncate_sloc0_1_0 + 2),a
      00808F 74 15            [12]22822 	mov	a,#0x15
      008091 25*A7            [12]22823 	add	a,_f_truncate_sloc0_1_0
      008093 F8               [12]22824 	mov	r0,a
      008094 E4               [12]22825 	clr	a
      008095 35*A8            [12]22826 	addc	a,(_f_truncate_sloc0_1_0 + 1)
      008097 FB               [12]22827 	mov	r3,a
      008098 AA*A9            [24]22828 	mov	r2,(_f_truncate_sloc0_1_0 + 2)
      00809A 88 82            [24]22829 	mov	dpl,r0
      00809C 8B 83            [24]22830 	mov	dph,r3
      00809E 8A F0            [24]22831 	mov	b,r2
      0080A0 12r00r00         [24]22832 	lcall	__gptrget
      0080A3 F8               [12]22833 	mov	r0,a
      0080A4 A3               [24]22834 	inc	dptr
      0080A5 12r00r00         [24]22835 	lcall	__gptrget
      0080A8 F9               [12]22836 	mov	r1,a
      0080A9 A3               [24]22837 	inc	dptr
      0080AA 12r00r00         [24]22838 	lcall	__gptrget
      0080AD FA               [12]22839 	mov	r2,a
      0080AE A3               [24]22840 	inc	dptr
      0080AF 12r00r00         [24]22841 	lcall	__gptrget
      0080B2 FB               [12]22842 	mov	r3,a
      0080B3 90r00r47         [24]22843 	mov	dptr,#_remove_chain_PARM_2
      0080B6 EC               [12]22844 	mov	a,r4
      0080B7 F0               [24]22845 	movx	@dptr,a
      0080B8 ED               [12]22846 	mov	a,r5
      0080B9 A3               [24]22847 	inc	dptr
      0080BA F0               [24]22848 	movx	@dptr,a
      0080BB EE               [12]22849 	mov	a,r6
      0080BC A3               [24]22850 	inc	dptr
      0080BD F0               [24]22851 	movx	@dptr,a
      0080BE EF               [12]22852 	mov	a,r7
      0080BF A3               [24]22853 	inc	dptr
      0080C0 F0               [24]22854 	movx	@dptr,a
      0080C1 90r00r4B         [24]22855 	mov	dptr,#_remove_chain_PARM_3
      0080C4 E8               [12]22856 	mov	a,r0
      0080C5 F0               [24]22857 	movx	@dptr,a
      0080C6 E9               [12]22858 	mov	a,r1
      0080C7 A3               [24]22859 	inc	dptr
      0080C8 F0               [24]22860 	movx	@dptr,a
      0080C9 EA               [12]22861 	mov	a,r2
      0080CA A3               [24]22862 	inc	dptr
      0080CB F0               [24]22863 	movx	@dptr,a
      0080CC EB               [12]22864 	mov	a,r3
      0080CD A3               [24]22865 	inc	dptr
      0080CE F0               [24]22866 	movx	@dptr,a
      0080CF 85*A7 82         [24]22867 	mov	dpl,_f_truncate_sloc0_1_0
      0080D2 85*A8 83         [24]22868 	mov	dph,(_f_truncate_sloc0_1_0 + 1)
      0080D5 85*A9 F0         [24]22869 	mov	b,(_f_truncate_sloc0_1_0 + 2)
      0080D8 12r13r15         [24]22870 	lcall	_remove_chain
      0080DB E5 82            [12]22871 	mov	a,dpl
      0080DD 90r02r1E         [24]22872 	mov	dptr,#_f_truncate_res_65536_391
      0080E0 F0               [24]22873 	movx	@dptr,a
      0080E1                      22874 00115$:
                                  22875 ;	ff15\source\ff.c:4938: fp->obj.objsize = fp->fptr;	/* Set file size to current read/write point */
      0080E1 90r02r1B         [24]22876 	mov	dptr,#_f_truncate_fp_65536_390
      0080E4 E0               [24]22877 	movx	a,@dptr
      0080E5 FF               [12]22878 	mov	r7,a
      0080E6 A3               [24]22879 	inc	dptr
      0080E7 E0               [24]22880 	movx	a,@dptr
      0080E8 FD               [12]22881 	mov	r5,a
      0080E9 A3               [24]22882 	inc	dptr
      0080EA E0               [24]22883 	movx	a,@dptr
      0080EB FE               [12]22884 	mov	r6,a
      0080EC 74 0B            [12]22885 	mov	a,#0x0b
      0080EE 2F               [12]22886 	add	a,r7
      0080EF F5*A7            [12]22887 	mov	_f_truncate_sloc0_1_0,a
      0080F1 E4               [12]22888 	clr	a
      0080F2 3D               [12]22889 	addc	a,r5
      0080F3 F5*A8            [12]22890 	mov	(_f_truncate_sloc0_1_0 + 1),a
      0080F5 8E*A9            [24]22891 	mov	(_f_truncate_sloc0_1_0 + 2),r6
      0080F7 74 11            [12]22892 	mov	a,#0x11
      0080F9 2F               [12]22893 	add	a,r7
      0080FA F8               [12]22894 	mov	r0,a
      0080FB E4               [12]22895 	clr	a
      0080FC 3D               [12]22896 	addc	a,r5
      0080FD F9               [12]22897 	mov	r1,a
      0080FE 8E 04            [24]22898 	mov	ar4,r6
      008100 88 82            [24]22899 	mov	dpl,r0
      008102 89 83            [24]22900 	mov	dph,r1
      008104 8C F0            [24]22901 	mov	b,r4
      008106 12r00r00         [24]22902 	lcall	__gptrget
      008109 F8               [12]22903 	mov	r0,a
      00810A A3               [24]22904 	inc	dptr
      00810B 12r00r00         [24]22905 	lcall	__gptrget
      00810E F9               [12]22906 	mov	r1,a
      00810F A3               [24]22907 	inc	dptr
      008110 12r00r00         [24]22908 	lcall	__gptrget
      008113 FC               [12]22909 	mov	r4,a
      008114 A3               [24]22910 	inc	dptr
      008115 12r00r00         [24]22911 	lcall	__gptrget
      008118 FB               [12]22912 	mov	r3,a
      008119 85*A7 82         [24]22913 	mov	dpl,_f_truncate_sloc0_1_0
      00811C 85*A8 83         [24]22914 	mov	dph,(_f_truncate_sloc0_1_0 + 1)
      00811F 85*A9 F0         [24]22915 	mov	b,(_f_truncate_sloc0_1_0 + 2)
      008122 E8               [12]22916 	mov	a,r0
      008123 12r00r00         [24]22917 	lcall	__gptrput
      008126 A3               [24]22918 	inc	dptr
      008127 E9               [12]22919 	mov	a,r1
      008128 12r00r00         [24]22920 	lcall	__gptrput
      00812B A3               [24]22921 	inc	dptr
      00812C EC               [12]22922 	mov	a,r4
      00812D 12r00r00         [24]22923 	lcall	__gptrput
      008130 A3               [24]22924 	inc	dptr
      008131 EB               [12]22925 	mov	a,r3
      008132 12r00r00         [24]22926 	lcall	__gptrput
                                  22927 ;	ff15\source\ff.c:4939: fp->flag |= FA_MODIFIED;
      008135 74 0F            [12]22928 	mov	a,#0x0f
      008137 2F               [12]22929 	add	a,r7
      008138 FA               [12]22930 	mov	r2,a
      008139 E4               [12]22931 	clr	a
      00813A 3D               [12]22932 	addc	a,r5
      00813B FB               [12]22933 	mov	r3,a
      00813C 8E 04            [24]22934 	mov	ar4,r6
      00813E 8A 82            [24]22935 	mov	dpl,r2
      008140 8B 83            [24]22936 	mov	dph,r3
      008142 8C F0            [24]22937 	mov	b,r4
      008144 12r00r00         [24]22938 	lcall	__gptrget
      008147 F9               [12]22939 	mov	r1,a
      008148 43 01 40         [24]22940 	orl	ar1,#0x40
      00814B 8A 82            [24]22941 	mov	dpl,r2
      00814D 8B 83            [24]22942 	mov	dph,r3
      00814F 8C F0            [24]22943 	mov	b,r4
      008151 E9               [12]22944 	mov	a,r1
      008152 12r00r00         [24]22945 	lcall	__gptrput
                                  22946 ;	ff15\source\ff.c:4941: if (res == FR_OK && (fp->flag & FA_DIRTY)) {
      008155 90r02r1E         [24]22947 	mov	dptr,#_f_truncate_res_65536_391
      008158 E0               [24]22948 	movx	a,@dptr
      008159 60 03            [24]22949 	jz	00187$
      00815B 02r82r13         [24]22950 	ljmp	00120$
      00815E                      22951 00187$:
      00815E 8A 82            [24]22952 	mov	dpl,r2
      008160 8B 83            [24]22953 	mov	dph,r3
      008162 8C F0            [24]22954 	mov	b,r4
      008164 12r00r00         [24]22955 	lcall	__gptrget
      008167 F9               [12]22956 	mov	r1,a
      008168 20 E7 03         [24]22957 	jb	acc.7,00188$
      00816B 02r82r13         [24]22958 	ljmp	00120$
      00816E                      22959 00188$:
                                  22960 ;	ff15\source\ff.c:4942: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) {
      00816E C0 02            [24]22961 	push	ar2
      008170 C0 03            [24]22962 	push	ar3
      008172 C0 04            [24]22963 	push	ar4
      008174 90r02r1F         [24]22964 	mov	dptr,#_f_truncate_fs_65536_391
      008177 E0               [24]22965 	movx	a,@dptr
      008178 F8               [12]22966 	mov	r0,a
      008179 A3               [24]22967 	inc	dptr
      00817A E0               [24]22968 	movx	a,@dptr
      00817B F9               [12]22969 	mov	r1,a
      00817C A3               [24]22970 	inc	dptr
      00817D E0               [24]22971 	movx	a,@dptr
      00817E FC               [12]22972 	mov	r4,a
      00817F 08               [12]22973 	inc	r0
      008180 B8 00 01         [24]22974 	cjne	r0,#0x00,00189$
      008183 09               [12]22975 	inc	r1
      008184                      22976 00189$:
      008184 88 82            [24]22977 	mov	dpl,r0
      008186 89 83            [24]22978 	mov	dph,r1
      008188 8C F0            [24]22979 	mov	b,r4
      00818A 12r00r00         [24]22980 	lcall	__gptrget
      00818D F8               [12]22981 	mov	r0,a
      00818E 74 24            [12]22982 	mov	a,#0x24
      008190 2F               [12]22983 	add	a,r7
      008191 FA               [12]22984 	mov	r2,a
      008192 E4               [12]22985 	clr	a
      008193 3D               [12]22986 	addc	a,r5
      008194 FB               [12]22987 	mov	r3,a
      008195 8E 04            [24]22988 	mov	ar4,r6
      008197 74 19            [12]22989 	mov	a,#0x19
      008199 2F               [12]22990 	add	a,r7
      00819A FF               [12]22991 	mov	r7,a
      00819B E4               [12]22992 	clr	a
      00819C 3D               [12]22993 	addc	a,r5
      00819D FD               [12]22994 	mov	r5,a
      00819E 8F 82            [24]22995 	mov	dpl,r7
      0081A0 8D 83            [24]22996 	mov	dph,r5
      0081A2 8E F0            [24]22997 	mov	b,r6
      0081A4 12r00r00         [24]22998 	lcall	__gptrget
      0081A7 F9               [12]22999 	mov	r1,a
      0081A8 A3               [24]23000 	inc	dptr
      0081A9 12r00r00         [24]23001 	lcall	__gptrget
      0081AC FD               [12]23002 	mov	r5,a
      0081AD A3               [24]23003 	inc	dptr
      0081AE 12r00r00         [24]23004 	lcall	__gptrget
      0081B1 FE               [12]23005 	mov	r6,a
      0081B2 A3               [24]23006 	inc	dptr
      0081B3 12r00r00         [24]23007 	lcall	__gptrget
      0081B6 FF               [12]23008 	mov	r7,a
      0081B7 90r00r00         [24]23009 	mov	dptr,#_disk_write_PARM_2
      0081BA EA               [12]23010 	mov	a,r2
      0081BB F0               [24]23011 	movx	@dptr,a
      0081BC EB               [12]23012 	mov	a,r3
      0081BD A3               [24]23013 	inc	dptr
      0081BE F0               [24]23014 	movx	@dptr,a
      0081BF EC               [12]23015 	mov	a,r4
      0081C0 A3               [24]23016 	inc	dptr
      0081C1 F0               [24]23017 	movx	@dptr,a
      0081C2 90r00r00         [24]23018 	mov	dptr,#_disk_write_PARM_3
      0081C5 E9               [12]23019 	mov	a,r1
      0081C6 F0               [24]23020 	movx	@dptr,a
      0081C7 ED               [12]23021 	mov	a,r5
      0081C8 A3               [24]23022 	inc	dptr
      0081C9 F0               [24]23023 	movx	@dptr,a
      0081CA EE               [12]23024 	mov	a,r6
      0081CB A3               [24]23025 	inc	dptr
      0081CC F0               [24]23026 	movx	@dptr,a
      0081CD EF               [12]23027 	mov	a,r7
      0081CE A3               [24]23028 	inc	dptr
      0081CF F0               [24]23029 	movx	@dptr,a
      0081D0 90r00r00         [24]23030 	mov	dptr,#_disk_write_PARM_4
      0081D3 74 01            [12]23031 	mov	a,#0x01
      0081D5 F0               [24]23032 	movx	@dptr,a
      0081D6 E4               [12]23033 	clr	a
      0081D7 A3               [24]23034 	inc	dptr
      0081D8 F0               [24]23035 	movx	@dptr,a
      0081D9 88 82            [24]23036 	mov	dpl,r0
      0081DB C0 04            [24]23037 	push	ar4
      0081DD C0 03            [24]23038 	push	ar3
      0081DF C0 02            [24]23039 	push	ar2
      0081E1 12r00r00         [24]23040 	lcall	_disk_write
      0081E4 E5 82            [12]23041 	mov	a,dpl
      0081E6 D0 02            [24]23042 	pop	ar2
      0081E8 D0 03            [24]23043 	pop	ar3
      0081EA D0 04            [24]23044 	pop	ar4
      0081EC D0 04            [24]23045 	pop	ar4
      0081EE D0 03            [24]23046 	pop	ar3
      0081F0 D0 02            [24]23047 	pop	ar2
      0081F2 60 08            [24]23048 	jz	00117$
                                  23049 ;	ff15\source\ff.c:4943: res = FR_DISK_ERR;
      0081F4 90r02r1E         [24]23050 	mov	dptr,#_f_truncate_res_65536_391
      0081F7 74 01            [12]23051 	mov	a,#0x01
      0081F9 F0               [24]23052 	movx	@dptr,a
      0081FA 80 17            [24]23053 	sjmp	00120$
      0081FC                      23054 00117$:
                                  23055 ;	ff15\source\ff.c:4945: fp->flag &= (BYTE)~FA_DIRTY;
      0081FC 8A 82            [24]23056 	mov	dpl,r2
      0081FE 8B 83            [24]23057 	mov	dph,r3
      008200 8C F0            [24]23058 	mov	b,r4
      008202 12r00r00         [24]23059 	lcall	__gptrget
      008205 FF               [12]23060 	mov	r7,a
      008206 53 07 7F         [24]23061 	anl	ar7,#0x7f
      008209 8A 82            [24]23062 	mov	dpl,r2
      00820B 8B 83            [24]23063 	mov	dph,r3
      00820D 8C F0            [24]23064 	mov	b,r4
      00820F EF               [12]23065 	mov	a,r7
      008210 12r00r00         [24]23066 	lcall	__gptrput
      008213                      23067 00120$:
                                  23068 ;	ff15\source\ff.c:4949: if (res != FR_OK) ABORT(fs, res);
      008213 90r02r1E         [24]23069 	mov	dptr,#_f_truncate_res_65536_391
      008216 E0               [24]23070 	movx	a,@dptr
      008217 FF               [12]23071 	mov	r7,a
      008218 60 1F            [24]23072 	jz	00125$
      00821A 90r02r1B         [24]23073 	mov	dptr,#_f_truncate_fp_65536_390
      00821D E0               [24]23074 	movx	a,@dptr
      00821E FC               [12]23075 	mov	r4,a
      00821F A3               [24]23076 	inc	dptr
      008220 E0               [24]23077 	movx	a,@dptr
      008221 FD               [12]23078 	mov	r5,a
      008222 A3               [24]23079 	inc	dptr
      008223 E0               [24]23080 	movx	a,@dptr
      008224 FE               [12]23081 	mov	r6,a
      008225 74 10            [12]23082 	mov	a,#0x10
      008227 2C               [12]23083 	add	a,r4
      008228 FC               [12]23084 	mov	r4,a
      008229 E4               [12]23085 	clr	a
      00822A 3D               [12]23086 	addc	a,r5
      00822B FD               [12]23087 	mov	r5,a
      00822C 8C 82            [24]23088 	mov	dpl,r4
      00822E 8D 83            [24]23089 	mov	dph,r5
      008230 8E F0            [24]23090 	mov	b,r6
      008232 EF               [12]23091 	mov	a,r7
      008233 12r00r00         [24]23092 	lcall	__gptrput
      008236 8F 82            [24]23093 	mov	dpl,r7
      008238 22               [24]23094 	ret
      008239                      23095 00125$:
                                  23096 ;	ff15\source\ff.c:4952: LEAVE_FF(fs, res);
      008239 90r02r1E         [24]23097 	mov	dptr,#_f_truncate_res_65536_391
      00823C E0               [24]23098 	movx	a,@dptr
                                  23099 ;	ff15\source\ff.c:4953: }
      00823D F5 82            [12]23100 	mov	dpl,a
      00823F 22               [24]23101 	ret
                                  23102 ;------------------------------------------------------------
                                  23103 ;Allocation info for local variables in function 'f_unlink'
                                  23104 ;------------------------------------------------------------
                                  23105 ;path                      Allocated with name '_f_unlink_path_65536_400'
                                  23106 ;res                       Allocated with name '_f_unlink_res_65536_401'
                                  23107 ;fs                        Allocated with name '_f_unlink_fs_65536_401'
                                  23108 ;dj                        Allocated with name '_f_unlink_dj_65536_401'
                                  23109 ;sdj                       Allocated with name '_f_unlink_sdj_65536_401'
                                  23110 ;dclst                     Allocated with name '_f_unlink_dclst_65536_401'
                                  23111 ;------------------------------------------------------------
                                  23112 ;	ff15\source\ff.c:4962: FRESULT f_unlink (
                                  23113 ;	-----------------------------------------
                                  23114 ;	 function f_unlink
                                  23115 ;	-----------------------------------------
      008240                      23116 _f_unlink:
      008240 AF F0            [24]23117 	mov	r7,b
      008242 AE 83            [24]23118 	mov	r6,dph
      008244 E5 82            [12]23119 	mov	a,dpl
      008246 90r02r22         [24]23120 	mov	dptr,#_f_unlink_path_65536_400
      008249 F0               [24]23121 	movx	@dptr,a
      00824A EE               [12]23122 	mov	a,r6
      00824B A3               [24]23123 	inc	dptr
      00824C F0               [24]23124 	movx	@dptr,a
      00824D EF               [12]23125 	mov	a,r7
      00824E A3               [24]23126 	inc	dptr
      00824F F0               [24]23127 	movx	@dptr,a
                                  23128 ;	ff15\source\ff.c:4969: DWORD dclst = 0;
      008250 90r02r7D         [24]23129 	mov	dptr,#_f_unlink_dclst_65536_401
      008253 E4               [12]23130 	clr	a
      008254 F0               [24]23131 	movx	@dptr,a
      008255 A3               [24]23132 	inc	dptr
      008256 F0               [24]23133 	movx	@dptr,a
      008257 A3               [24]23134 	inc	dptr
      008258 F0               [24]23135 	movx	@dptr,a
      008259 A3               [24]23136 	inc	dptr
      00825A F0               [24]23137 	movx	@dptr,a
                                  23138 ;	ff15\source\ff.c:4977: res = mount_volume(&path, &fs, FA_WRITE);
      00825B 90r00rEA         [24]23139 	mov	dptr,#_mount_volume_PARM_2
      00825E 74r26            [12]23140 	mov	a,#_f_unlink_fs_65536_401
      008260 F0               [24]23141 	movx	@dptr,a
      008261 74s02            [12]23142 	mov	a,#(_f_unlink_fs_65536_401 >> 8)
      008263 A3               [24]23143 	inc	dptr
      008264 F0               [24]23144 	movx	@dptr,a
      008265 E4               [12]23145 	clr	a
      008266 A3               [24]23146 	inc	dptr
      008267 F0               [24]23147 	movx	@dptr,a
      008268 90r00rED         [24]23148 	mov	dptr,#_mount_volume_PARM_3
      00826B 74 02            [12]23149 	mov	a,#0x02
      00826D F0               [24]23150 	movx	@dptr,a
      00826E 90r02r22         [24]23151 	mov	dptr,#_f_unlink_path_65536_400
      008271 75 F0 00         [24]23152 	mov	b,#0x00
      008274 12r3Dr6D         [24]23153 	lcall	_mount_volume
      008277 AF 82            [24]23154 	mov	r7,dpl
      008279 90r02r25         [24]23155 	mov	dptr,#_f_unlink_res_65536_401
      00827C EF               [12]23156 	mov	a,r7
      00827D F0               [24]23157 	movx	@dptr,a
                                  23158 ;	ff15\source\ff.c:4978: if (res == FR_OK) {
      00827E EF               [12]23159 	mov	a,r7
      00827F 60 03            [24]23160 	jz	00185$
      008281 02r84r2C         [24]23161 	ljmp	00130$
      008284                      23162 00185$:
                                  23163 ;	ff15\source\ff.c:4979: dj.obj.fs = fs;
      008284 90r02r26         [24]23164 	mov	dptr,#_f_unlink_fs_65536_401
      008287 E0               [24]23165 	movx	a,@dptr
      008288 FD               [12]23166 	mov	r5,a
      008289 A3               [24]23167 	inc	dptr
      00828A E0               [24]23168 	movx	a,@dptr
      00828B FE               [12]23169 	mov	r6,a
      00828C A3               [24]23170 	inc	dptr
      00828D E0               [24]23171 	movx	a,@dptr
      00828E FF               [12]23172 	mov	r7,a
      00828F 90r02r29         [24]23173 	mov	dptr,#_f_unlink_dj_65536_401
      008292 ED               [12]23174 	mov	a,r5
      008293 F0               [24]23175 	movx	@dptr,a
      008294 EE               [12]23176 	mov	a,r6
      008295 A3               [24]23177 	inc	dptr
      008296 F0               [24]23178 	movx	@dptr,a
      008297 EF               [12]23179 	mov	a,r7
      008298 A3               [24]23180 	inc	dptr
      008299 F0               [24]23181 	movx	@dptr,a
                                  23182 ;	ff15\source\ff.c:4981: res = follow_path(&dj, path);		/* Follow the file path */
      00829A 90r02r22         [24]23183 	mov	dptr,#_f_unlink_path_65536_400
      00829D E0               [24]23184 	movx	a,@dptr
      00829E FD               [12]23185 	mov	r5,a
      00829F A3               [24]23186 	inc	dptr
      0082A0 E0               [24]23187 	movx	a,@dptr
      0082A1 FE               [12]23188 	mov	r6,a
      0082A2 A3               [24]23189 	inc	dptr
      0082A3 E0               [24]23190 	movx	a,@dptr
      0082A4 FF               [12]23191 	mov	r7,a
      0082A5 90r00rC0         [24]23192 	mov	dptr,#_follow_path_PARM_2
      0082A8 ED               [12]23193 	mov	a,r5
      0082A9 F0               [24]23194 	movx	@dptr,a
      0082AA EE               [12]23195 	mov	a,r6
      0082AB A3               [24]23196 	inc	dptr
      0082AC F0               [24]23197 	movx	@dptr,a
      0082AD EF               [12]23198 	mov	a,r7
      0082AE A3               [24]23199 	inc	dptr
      0082AF F0               [24]23200 	movx	@dptr,a
      0082B0 90r02r29         [24]23201 	mov	dptr,#_f_unlink_dj_65536_401
      0082B3 75 F0 00         [24]23202 	mov	b,#0x00
      0082B6 12r35rB8         [24]23203 	lcall	_follow_path
      0082B9 AF 82            [24]23204 	mov	r7,dpl
      0082BB 90r02r25         [24]23205 	mov	dptr,#_f_unlink_res_65536_401
      0082BE EF               [12]23206 	mov	a,r7
      0082BF F0               [24]23207 	movx	@dptr,a
                                  23208 ;	ff15\source\ff.c:4988: if (res == FR_OK) {					/* The object is accessible */
      0082C0 EF               [12]23209 	mov	a,r7
      0082C1 60 03            [24]23210 	jz	00186$
      0082C3 02r84r2C         [24]23211 	ljmp	00130$
      0082C6                      23212 00186$:
                                  23213 ;	ff15\source\ff.c:4989: if (dj.fn[NSFLAG] & NS_NONAME) {
      0082C6 90r02r52         [24]23214 	mov	dptr,#(_f_unlink_dj_65536_401 + 0x0029)
      0082C9 E0               [24]23215 	movx	a,@dptr
      0082CA FF               [12]23216 	mov	r7,a
      0082CB 30 E7 08         [24]23217 	jnb	acc.7,00108$
                                  23218 ;	ff15\source\ff.c:4990: res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
      0082CE 90r02r25         [24]23219 	mov	dptr,#_f_unlink_res_65536_401
      0082D1 74 06            [12]23220 	mov	a,#0x06
      0082D3 F0               [24]23221 	movx	@dptr,a
      0082D4 80 0E            [24]23222 	sjmp	00109$
      0082D6                      23223 00108$:
                                  23224 ;	ff15\source\ff.c:4992: if (dj.obj.attr & AM_RDO) {
      0082D6 90r02r2E         [24]23225 	mov	dptr,#(_f_unlink_dj_65536_401 + 0x0005)
      0082D9 E0               [24]23226 	movx	a,@dptr
      0082DA FF               [12]23227 	mov	r7,a
      0082DB 30 E0 06         [24]23228 	jnb	acc.0,00109$
                                  23229 ;	ff15\source\ff.c:4993: res = FR_DENIED;		/* Cannot remove R/O object */
      0082DE 90r02r25         [24]23230 	mov	dptr,#_f_unlink_res_65536_401
      0082E1 74 07            [12]23231 	mov	a,#0x07
      0082E3 F0               [24]23232 	movx	@dptr,a
      0082E4                      23233 00109$:
                                  23234 ;	ff15\source\ff.c:4996: if (res == FR_OK) {
      0082E4 90r02r25         [24]23235 	mov	dptr,#_f_unlink_res_65536_401
      0082E7 E0               [24]23236 	movx	a,@dptr
      0082E8 60 03            [24]23237 	jz	00189$
      0082EA 02r83rA6         [24]23238 	ljmp	00119$
      0082ED                      23239 00189$:
                                  23240 ;	ff15\source\ff.c:5005: dclst = ld_clust(fs, dj.dir);
      0082ED 90r02r26         [24]23241 	mov	dptr,#_f_unlink_fs_65536_401
      0082F0 E0               [24]23242 	movx	a,@dptr
      0082F1 FD               [12]23243 	mov	r5,a
      0082F2 A3               [24]23244 	inc	dptr
      0082F3 E0               [24]23245 	movx	a,@dptr
      0082F4 FE               [12]23246 	mov	r6,a
      0082F5 A3               [24]23247 	inc	dptr
      0082F6 E0               [24]23248 	movx	a,@dptr
      0082F7 FF               [12]23249 	mov	r7,a
      0082F8 90r02r44         [24]23250 	mov	dptr,#(_f_unlink_dj_65536_401 + 0x001b)
      0082FB E0               [24]23251 	movx	a,@dptr
      0082FC FA               [12]23252 	mov	r2,a
      0082FD A3               [24]23253 	inc	dptr
      0082FE E0               [24]23254 	movx	a,@dptr
      0082FF FB               [12]23255 	mov	r3,a
      008300 A3               [24]23256 	inc	dptr
      008301 E0               [24]23257 	movx	a,@dptr
      008302 FC               [12]23258 	mov	r4,a
      008303 90r00r85         [24]23259 	mov	dptr,#_ld_clust_PARM_2
      008306 EA               [12]23260 	mov	a,r2
      008307 F0               [24]23261 	movx	@dptr,a
      008308 EB               [12]23262 	mov	a,r3
      008309 A3               [24]23263 	inc	dptr
      00830A F0               [24]23264 	movx	@dptr,a
      00830B EC               [12]23265 	mov	a,r4
      00830C A3               [24]23266 	inc	dptr
      00830D F0               [24]23267 	movx	@dptr,a
      00830E 8D 82            [24]23268 	mov	dpl,r5
      008310 8E 83            [24]23269 	mov	dph,r6
      008312 8F F0            [24]23270 	mov	b,r7
      008314 12r28r70         [24]23271 	lcall	_ld_clust
      008317 AC 82            [24]23272 	mov	r4,dpl
      008319 AD 83            [24]23273 	mov	r5,dph
      00831B AE F0            [24]23274 	mov	r6,b
      00831D FF               [12]23275 	mov	r7,a
      00831E 90r02r7D         [24]23276 	mov	dptr,#_f_unlink_dclst_65536_401
      008321 EC               [12]23277 	mov	a,r4
      008322 F0               [24]23278 	movx	@dptr,a
      008323 ED               [12]23279 	mov	a,r5
      008324 A3               [24]23280 	inc	dptr
      008325 F0               [24]23281 	movx	@dptr,a
      008326 EE               [12]23282 	mov	a,r6
      008327 A3               [24]23283 	inc	dptr
      008328 F0               [24]23284 	movx	@dptr,a
      008329 EF               [12]23285 	mov	a,r7
      00832A A3               [24]23286 	inc	dptr
      00832B F0               [24]23287 	movx	@dptr,a
                                  23288 ;	ff15\source\ff.c:5007: if (dj.obj.attr & AM_DIR) {			/* Is it a sub-directory? */
      00832C 90r02r2E         [24]23289 	mov	dptr,#(_f_unlink_dj_65536_401 + 0x0005)
      00832F E0               [24]23290 	movx	a,@dptr
      008330 FB               [12]23291 	mov	r3,a
      008331 20 E4 03         [24]23292 	jb	acc.4,00190$
      008334 02r83rA6         [24]23293 	ljmp	00119$
      008337                      23294 00190$:
                                  23295 ;	ff15\source\ff.c:5014: sdj.obj.fs = fs;			/* Open the sub-directory */
      008337 90r02r26         [24]23296 	mov	dptr,#_f_unlink_fs_65536_401
      00833A E0               [24]23297 	movx	a,@dptr
      00833B F9               [12]23298 	mov	r1,a
      00833C A3               [24]23299 	inc	dptr
      00833D E0               [24]23300 	movx	a,@dptr
      00833E FA               [12]23301 	mov	r2,a
      00833F A3               [24]23302 	inc	dptr
      008340 E0               [24]23303 	movx	a,@dptr
      008341 FB               [12]23304 	mov	r3,a
      008342 90r02r53         [24]23305 	mov	dptr,#_f_unlink_sdj_65536_401
      008345 E9               [12]23306 	mov	a,r1
      008346 F0               [24]23307 	movx	@dptr,a
      008347 EA               [12]23308 	mov	a,r2
      008348 A3               [24]23309 	inc	dptr
      008349 F0               [24]23310 	movx	@dptr,a
      00834A EB               [12]23311 	mov	a,r3
      00834B A3               [24]23312 	inc	dptr
      00834C F0               [24]23313 	movx	@dptr,a
                                  23314 ;	ff15\source\ff.c:5015: sdj.obj.sclust = dclst;
      00834D 90r02r5A         [24]23315 	mov	dptr,#(_f_unlink_sdj_65536_401 + 0x0007)
      008350 EC               [12]23316 	mov	a,r4
      008351 F0               [24]23317 	movx	@dptr,a
      008352 ED               [12]23318 	mov	a,r5
      008353 A3               [24]23319 	inc	dptr
      008354 F0               [24]23320 	movx	@dptr,a
      008355 EE               [12]23321 	mov	a,r6
      008356 A3               [24]23322 	inc	dptr
      008357 F0               [24]23323 	movx	@dptr,a
      008358 EF               [12]23324 	mov	a,r7
      008359 A3               [24]23325 	inc	dptr
      00835A F0               [24]23326 	movx	@dptr,a
                                  23327 ;	ff15\source\ff.c:5022: res = dir_sdi(&sdj, 0);
      00835B 90r00r69         [24]23328 	mov	dptr,#_dir_sdi_PARM_2
      00835E E4               [12]23329 	clr	a
      00835F F0               [24]23330 	movx	@dptr,a
      008360 A3               [24]23331 	inc	dptr
      008361 F0               [24]23332 	movx	@dptr,a
      008362 A3               [24]23333 	inc	dptr
      008363 F0               [24]23334 	movx	@dptr,a
      008364 A3               [24]23335 	inc	dptr
      008365 F0               [24]23336 	movx	@dptr,a
      008366 90r02r53         [24]23337 	mov	dptr,#_f_unlink_sdj_65536_401
      008369 75 F0 00         [24]23338 	mov	b,#0x00
      00836C 12r1DrC4         [24]23339 	lcall	_dir_sdi
      00836F AF 82            [24]23340 	mov	r7,dpl
      008371 90r02r25         [24]23341 	mov	dptr,#_f_unlink_res_65536_401
      008374 EF               [12]23342 	mov	a,r7
      008375 F0               [24]23343 	movx	@dptr,a
                                  23344 ;	ff15\source\ff.c:5023: if (res == FR_OK) {
      008376 EF               [12]23345 	mov	a,r7
      008377 70 2D            [24]23346 	jnz	00119$
                                  23347 ;	ff15\source\ff.c:5024: res = DIR_READ_FILE(&sdj);			/* Test if the directory is empty */
      008379 90r00r99         [24]23348 	mov	dptr,#_dir_read_PARM_2
      00837C E4               [12]23349 	clr	a
      00837D F0               [24]23350 	movx	@dptr,a
      00837E A3               [24]23351 	inc	dptr
      00837F F0               [24]23352 	movx	@dptr,a
      008380 90r02r53         [24]23353 	mov	dptr,#_f_unlink_sdj_65536_401
      008383 75 F0 00         [24]23354 	mov	b,#0x00
      008386 12r29rB8         [24]23355 	lcall	_dir_read
      008389 AF 82            [24]23356 	mov	r7,dpl
      00838B 90r02r25         [24]23357 	mov	dptr,#_f_unlink_res_65536_401
      00838E EF               [12]23358 	mov	a,r7
      00838F F0               [24]23359 	movx	@dptr,a
                                  23360 ;	ff15\source\ff.c:5025: if (res == FR_OK) res = FR_DENIED;	/* Not empty? */
      008390 EF               [12]23361 	mov	a,r7
      008391 70 06            [24]23362 	jnz	00111$
      008393 90r02r25         [24]23363 	mov	dptr,#_f_unlink_res_65536_401
      008396 74 07            [12]23364 	mov	a,#0x07
      008398 F0               [24]23365 	movx	@dptr,a
      008399                      23366 00111$:
                                  23367 ;	ff15\source\ff.c:5026: if (res == FR_NO_FILE) res = FR_OK;	/* Empty? */
      008399 90r02r25         [24]23368 	mov	dptr,#_f_unlink_res_65536_401
      00839C E0               [24]23369 	movx	a,@dptr
      00839D FF               [12]23370 	mov	r7,a
      00839E BF 04 05         [24]23371 	cjne	r7,#0x04,00119$
      0083A1 90r02r25         [24]23372 	mov	dptr,#_f_unlink_res_65536_401
      0083A4 E4               [12]23373 	clr	a
      0083A5 F0               [24]23374 	movx	@dptr,a
      0083A6                      23375 00119$:
                                  23376 ;	ff15\source\ff.c:5031: if (res == FR_OK) {
      0083A6 90r02r25         [24]23377 	mov	dptr,#_f_unlink_res_65536_401
      0083A9 E0               [24]23378 	movx	a,@dptr
      0083AA 60 03            [24]23379 	jz	00195$
      0083AC 02r84r2C         [24]23380 	ljmp	00130$
      0083AF                      23381 00195$:
                                  23382 ;	ff15\source\ff.c:5032: res = dir_remove(&dj);			/* Remove the directory entry */
      0083AF 90r02r29         [24]23383 	mov	dptr,#_f_unlink_dj_65536_401
      0083B2 75 F0 00         [24]23384 	mov	b,#0x00
      0083B5 12r2Fr11         [24]23385 	lcall	_dir_remove
      0083B8 AF 82            [24]23386 	mov	r7,dpl
      0083BA 90r02r25         [24]23387 	mov	dptr,#_f_unlink_res_65536_401
      0083BD EF               [12]23388 	mov	a,r7
      0083BE F0               [24]23389 	movx	@dptr,a
                                  23390 ;	ff15\source\ff.c:5033: if (res == FR_OK && dclst != 0) {	/* Remove the cluster chain if exist */
      0083BF EF               [12]23391 	mov	a,r7
      0083C0 70 4A            [24]23392 	jnz	00121$
      0083C2 90r02r7D         [24]23393 	mov	dptr,#_f_unlink_dclst_65536_401
      0083C5 E0               [24]23394 	movx	a,@dptr
      0083C6 FC               [12]23395 	mov	r4,a
      0083C7 A3               [24]23396 	inc	dptr
      0083C8 E0               [24]23397 	movx	a,@dptr
      0083C9 FD               [12]23398 	mov	r5,a
      0083CA A3               [24]23399 	inc	dptr
      0083CB E0               [24]23400 	movx	a,@dptr
      0083CC FE               [12]23401 	mov	r6,a
      0083CD A3               [24]23402 	inc	dptr
      0083CE E0               [24]23403 	movx	a,@dptr
      0083CF FF               [12]23404 	mov	r7,a
      0083D0 90r02r7D         [24]23405 	mov	dptr,#_f_unlink_dclst_65536_401
      0083D3 E0               [24]23406 	movx	a,@dptr
      0083D4 F5 F0            [12]23407 	mov	b,a
      0083D6 A3               [24]23408 	inc	dptr
      0083D7 E0               [24]23409 	movx	a,@dptr
      0083D8 42 F0            [12]23410 	orl	b,a
      0083DA A3               [24]23411 	inc	dptr
      0083DB E0               [24]23412 	movx	a,@dptr
      0083DC 42 F0            [12]23413 	orl	b,a
      0083DE A3               [24]23414 	inc	dptr
      0083DF E0               [24]23415 	movx	a,@dptr
      0083E0 45 F0            [12]23416 	orl	a,b
      0083E2 60 28            [24]23417 	jz	00121$
                                  23418 ;	ff15\source\ff.c:5037: res = remove_chain(&dj.obj, dclst, 0);
      0083E4 90r00r47         [24]23419 	mov	dptr,#_remove_chain_PARM_2
      0083E7 EC               [12]23420 	mov	a,r4
      0083E8 F0               [24]23421 	movx	@dptr,a
      0083E9 ED               [12]23422 	mov	a,r5
      0083EA A3               [24]23423 	inc	dptr
      0083EB F0               [24]23424 	movx	@dptr,a
      0083EC EE               [12]23425 	mov	a,r6
      0083ED A3               [24]23426 	inc	dptr
      0083EE F0               [24]23427 	movx	@dptr,a
      0083EF EF               [12]23428 	mov	a,r7
      0083F0 A3               [24]23429 	inc	dptr
      0083F1 F0               [24]23430 	movx	@dptr,a
      0083F2 90r00r4B         [24]23431 	mov	dptr,#_remove_chain_PARM_3
      0083F5 E4               [12]23432 	clr	a
      0083F6 F0               [24]23433 	movx	@dptr,a
      0083F7 A3               [24]23434 	inc	dptr
      0083F8 F0               [24]23435 	movx	@dptr,a
      0083F9 A3               [24]23436 	inc	dptr
      0083FA F0               [24]23437 	movx	@dptr,a
      0083FB A3               [24]23438 	inc	dptr
      0083FC F0               [24]23439 	movx	@dptr,a
      0083FD 90r02r29         [24]23440 	mov	dptr,#_f_unlink_dj_65536_401
      008400 75 F0 00         [24]23441 	mov	b,#0x00
      008403 12r13r15         [24]23442 	lcall	_remove_chain
      008406 E5 82            [12]23443 	mov	a,dpl
      008408 90r02r25         [24]23444 	mov	dptr,#_f_unlink_res_65536_401
      00840B F0               [24]23445 	movx	@dptr,a
      00840C                      23446 00121$:
                                  23447 ;	ff15\source\ff.c:5040: if (res == FR_OK) res = sync_fs(fs);
      00840C 90r02r25         [24]23448 	mov	dptr,#_f_unlink_res_65536_401
      00840F E0               [24]23449 	movx	a,@dptr
      008410 70 1A            [24]23450 	jnz	00130$
      008412 90r02r26         [24]23451 	mov	dptr,#_f_unlink_fs_65536_401
      008415 E0               [24]23452 	movx	a,@dptr
      008416 FD               [12]23453 	mov	r5,a
      008417 A3               [24]23454 	inc	dptr
      008418 E0               [24]23455 	movx	a,@dptr
      008419 FE               [12]23456 	mov	r6,a
      00841A A3               [24]23457 	inc	dptr
      00841B E0               [24]23458 	movx	a,@dptr
      00841C FF               [12]23459 	mov	r7,a
      00841D 8D 82            [24]23460 	mov	dpl,r5
      00841F 8E 83            [24]23461 	mov	dph,r6
      008421 8F F0            [24]23462 	mov	b,r7
      008423 12r06r37         [24]23463 	lcall	_sync_fs
      008426 E5 82            [12]23464 	mov	a,dpl
      008428 90r02r25         [24]23465 	mov	dptr,#_f_unlink_res_65536_401
      00842B F0               [24]23466 	movx	@dptr,a
      00842C                      23467 00130$:
                                  23468 ;	ff15\source\ff.c:5046: LEAVE_FF(fs, res);
      00842C 90r02r25         [24]23469 	mov	dptr,#_f_unlink_res_65536_401
      00842F E0               [24]23470 	movx	a,@dptr
                                  23471 ;	ff15\source\ff.c:5047: }
      008430 F5 82            [12]23472 	mov	dpl,a
      008432 22               [24]23473 	ret
                                  23474 ;------------------------------------------------------------
                                  23475 ;Allocation info for local variables in function 'f_mkdir'
                                  23476 ;------------------------------------------------------------
                                  23477 ;sloc0                     Allocated with name '_f_mkdir_sloc0_1_0'
                                  23478 ;sloc1                     Allocated with name '_f_mkdir_sloc1_1_0'
                                  23479 ;path                      Allocated with name '_f_mkdir_path_65536_415'
                                  23480 ;res                       Allocated with name '_f_mkdir_res_65536_416'
                                  23481 ;fs                        Allocated with name '_f_mkdir_fs_65536_416'
                                  23482 ;dj                        Allocated with name '_f_mkdir_dj_65536_416'
                                  23483 ;sobj                      Allocated with name '_f_mkdir_sobj_65536_416'
                                  23484 ;dcl                       Allocated with name '_f_mkdir_dcl_65536_416'
                                  23485 ;pcl                       Allocated with name '_f_mkdir_pcl_65536_416'
                                  23486 ;tm                        Allocated with name '_f_mkdir_tm_65536_416'
                                  23487 ;------------------------------------------------------------
                                  23488 ;	ff15\source\ff.c:5056: FRESULT f_mkdir (
                                  23489 ;	-----------------------------------------
                                  23490 ;	 function f_mkdir
                                  23491 ;	-----------------------------------------
      008433                      23492 _f_mkdir:
      008433 AF F0            [24]23493 	mov	r7,b
      008435 AE 83            [24]23494 	mov	r6,dph
      008437 E5 82            [12]23495 	mov	a,dpl
      008439 90r02r81         [24]23496 	mov	dptr,#_f_mkdir_path_65536_415
      00843C F0               [24]23497 	movx	@dptr,a
      00843D EE               [12]23498 	mov	a,r6
      00843E A3               [24]23499 	inc	dptr
      00843F F0               [24]23500 	movx	@dptr,a
      008440 EF               [12]23501 	mov	a,r7
      008441 A3               [24]23502 	inc	dptr
      008442 F0               [24]23503 	movx	@dptr,a
                                  23504 ;	ff15\source\ff.c:5068: res = mount_volume(&path, &fs, FA_WRITE);	/* Get logical drive */
      008443 90r00rEA         [24]23505 	mov	dptr,#_mount_volume_PARM_2
      008446 74r85            [12]23506 	mov	a,#_f_mkdir_fs_65536_416
      008448 F0               [24]23507 	movx	@dptr,a
      008449 74s02            [12]23508 	mov	a,#(_f_mkdir_fs_65536_416 >> 8)
      00844B A3               [24]23509 	inc	dptr
      00844C F0               [24]23510 	movx	@dptr,a
      00844D E4               [12]23511 	clr	a
      00844E A3               [24]23512 	inc	dptr
      00844F F0               [24]23513 	movx	@dptr,a
      008450 90r00rED         [24]23514 	mov	dptr,#_mount_volume_PARM_3
      008453 74 02            [12]23515 	mov	a,#0x02
      008455 F0               [24]23516 	movx	@dptr,a
      008456 90r02r81         [24]23517 	mov	dptr,#_f_mkdir_path_65536_415
      008459 75 F0 00         [24]23518 	mov	b,#0x00
      00845C 12r3Dr6D         [24]23519 	lcall	_mount_volume
      00845F AF 82            [24]23520 	mov	r7,dpl
      008461 90r02r84         [24]23521 	mov	dptr,#_f_mkdir_res_65536_416
      008464 EF               [12]23522 	mov	a,r7
      008465 F0               [24]23523 	movx	@dptr,a
                                  23524 ;	ff15\source\ff.c:5069: if (res == FR_OK) {
      008466 EF               [12]23525 	mov	a,r7
      008467 60 03            [24]23526 	jz	00171$
      008469 02r88r6D         [24]23527 	ljmp	00128$
      00846C                      23528 00171$:
                                  23529 ;	ff15\source\ff.c:5070: dj.obj.fs = fs;
      00846C 90r02r85         [24]23530 	mov	dptr,#_f_mkdir_fs_65536_416
      00846F E0               [24]23531 	movx	a,@dptr
      008470 FD               [12]23532 	mov	r5,a
      008471 A3               [24]23533 	inc	dptr
      008472 E0               [24]23534 	movx	a,@dptr
      008473 FE               [12]23535 	mov	r6,a
      008474 A3               [24]23536 	inc	dptr
      008475 E0               [24]23537 	movx	a,@dptr
      008476 FF               [12]23538 	mov	r7,a
      008477 90r02r88         [24]23539 	mov	dptr,#_f_mkdir_dj_65536_416
      00847A ED               [12]23540 	mov	a,r5
      00847B F0               [24]23541 	movx	@dptr,a
      00847C EE               [12]23542 	mov	a,r6
      00847D A3               [24]23543 	inc	dptr
      00847E F0               [24]23544 	movx	@dptr,a
      00847F EF               [12]23545 	mov	a,r7
      008480 A3               [24]23546 	inc	dptr
      008481 F0               [24]23547 	movx	@dptr,a
                                  23548 ;	ff15\source\ff.c:5072: res = follow_path(&dj, path);			/* Follow the file path */
      008482 90r02r81         [24]23549 	mov	dptr,#_f_mkdir_path_65536_415
      008485 E0               [24]23550 	movx	a,@dptr
      008486 FD               [12]23551 	mov	r5,a
      008487 A3               [24]23552 	inc	dptr
      008488 E0               [24]23553 	movx	a,@dptr
      008489 FE               [12]23554 	mov	r6,a
      00848A A3               [24]23555 	inc	dptr
      00848B E0               [24]23556 	movx	a,@dptr
      00848C FF               [12]23557 	mov	r7,a
      00848D 90r00rC0         [24]23558 	mov	dptr,#_follow_path_PARM_2
      008490 ED               [12]23559 	mov	a,r5
      008491 F0               [24]23560 	movx	@dptr,a
      008492 EE               [12]23561 	mov	a,r6
      008493 A3               [24]23562 	inc	dptr
      008494 F0               [24]23563 	movx	@dptr,a
      008495 EF               [12]23564 	mov	a,r7
      008496 A3               [24]23565 	inc	dptr
      008497 F0               [24]23566 	movx	@dptr,a
      008498 90r02r88         [24]23567 	mov	dptr,#_f_mkdir_dj_65536_416
      00849B 75 F0 00         [24]23568 	mov	b,#0x00
      00849E 12r35rB8         [24]23569 	lcall	_follow_path
      0084A1 AF 82            [24]23570 	mov	r7,dpl
      0084A3 90r02r84         [24]23571 	mov	dptr,#_f_mkdir_res_65536_416
      0084A6 EF               [12]23572 	mov	a,r7
      0084A7 F0               [24]23573 	movx	@dptr,a
                                  23574 ;	ff15\source\ff.c:5073: if (res == FR_OK) res = FR_EXIST;		/* Name collision? */
      0084A8 EF               [12]23575 	mov	a,r7
      0084A9 70 06            [24]23576 	jnz	00104$
      0084AB 90r02r84         [24]23577 	mov	dptr,#_f_mkdir_res_65536_416
      0084AE 74 08            [12]23578 	mov	a,#0x08
      0084B0 F0               [24]23579 	movx	@dptr,a
                                  23580 ;	ff15\source\ff.c:5075: res = FR_INVALID_NAME;
      0084B1                      23581 00104$:
                                  23582 ;	ff15\source\ff.c:5077: if (res == FR_NO_FILE) {				/* It is clear to create a new directory */
      0084B1 90r02r84         [24]23583 	mov	dptr,#_f_mkdir_res_65536_416
      0084B4 E0               [24]23584 	movx	a,@dptr
      0084B5 FF               [12]23585 	mov	r7,a
      0084B6 BF 04 02         [24]23586 	cjne	r7,#0x04,00173$
      0084B9 80 03            [24]23587 	sjmp	00174$
      0084BB                      23588 00173$:
      0084BB 02r88r6D         [24]23589 	ljmp	00128$
      0084BE                      23590 00174$:
                                  23591 ;	ff15\source\ff.c:5078: sobj.fs = fs;						/* New object id to create a new chain */
      0084BE 90r02r85         [24]23592 	mov	dptr,#_f_mkdir_fs_65536_416
      0084C1 E0               [24]23593 	movx	a,@dptr
      0084C2 FD               [12]23594 	mov	r5,a
      0084C3 A3               [24]23595 	inc	dptr
      0084C4 E0               [24]23596 	movx	a,@dptr
      0084C5 FE               [12]23597 	mov	r6,a
      0084C6 A3               [24]23598 	inc	dptr
      0084C7 E0               [24]23599 	movx	a,@dptr
      0084C8 FF               [12]23600 	mov	r7,a
      0084C9 90r02rB2         [24]23601 	mov	dptr,#_f_mkdir_sobj_65536_416
      0084CC ED               [12]23602 	mov	a,r5
      0084CD F0               [24]23603 	movx	@dptr,a
      0084CE EE               [12]23604 	mov	a,r6
      0084CF A3               [24]23605 	inc	dptr
      0084D0 F0               [24]23606 	movx	@dptr,a
      0084D1 EF               [12]23607 	mov	a,r7
      0084D2 A3               [24]23608 	inc	dptr
      0084D3 F0               [24]23609 	movx	@dptr,a
                                  23610 ;	ff15\source\ff.c:5079: dcl = create_chain(&sobj, 0);		/* Allocate a cluster for the new directory */
      0084D4 90r00r52         [24]23611 	mov	dptr,#_create_chain_PARM_2
      0084D7 E4               [12]23612 	clr	a
      0084D8 F0               [24]23613 	movx	@dptr,a
      0084D9 A3               [24]23614 	inc	dptr
      0084DA F0               [24]23615 	movx	@dptr,a
      0084DB A3               [24]23616 	inc	dptr
      0084DC F0               [24]23617 	movx	@dptr,a
      0084DD A3               [24]23618 	inc	dptr
      0084DE F0               [24]23619 	movx	@dptr,a
      0084DF 90r02rB2         [24]23620 	mov	dptr,#_f_mkdir_sobj_65536_416
      0084E2 75 F0 00         [24]23621 	mov	b,#0x00
      0084E5 12r15rF5         [24]23622 	lcall	_create_chain
      0084E8 AC 82            [24]23623 	mov	r4,dpl
      0084EA AD 83            [24]23624 	mov	r5,dph
      0084EC AE F0            [24]23625 	mov	r6,b
      0084EE FF               [12]23626 	mov	r7,a
                                  23627 ;	ff15\source\ff.c:5080: res = FR_OK;
      0084EF 90r02r84         [24]23628 	mov	dptr,#_f_mkdir_res_65536_416
      0084F2 E4               [12]23629 	clr	a
      0084F3 F0               [24]23630 	movx	@dptr,a
                                  23631 ;	ff15\source\ff.c:5081: if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster? */
      0084F4 EC               [12]23632 	mov	a,r4
      0084F5 4D               [12]23633 	orl	a,r5
      0084F6 4E               [12]23634 	orl	a,r6
      0084F7 4F               [12]23635 	orl	a,r7
      0084F8 70 06            [24]23636 	jnz	00108$
      0084FA 90r02r84         [24]23637 	mov	dptr,#_f_mkdir_res_65536_416
      0084FD 74 07            [12]23638 	mov	a,#0x07
      0084FF F0               [24]23639 	movx	@dptr,a
      008500                      23640 00108$:
                                  23641 ;	ff15\source\ff.c:5082: if (dcl == 1) res = FR_INT_ERR;		/* Any insanity? */
      008500 BC 01 0F         [24]23642 	cjne	r4,#0x01,00110$
      008503 BD 00 0C         [24]23643 	cjne	r5,#0x00,00110$
      008506 BE 00 09         [24]23644 	cjne	r6,#0x00,00110$
      008509 BF 00 06         [24]23645 	cjne	r7,#0x00,00110$
      00850C 90r02r84         [24]23646 	mov	dptr,#_f_mkdir_res_65536_416
      00850F 74 02            [12]23647 	mov	a,#0x02
      008511 F0               [24]23648 	movx	@dptr,a
      008512                      23649 00110$:
                                  23650 ;	ff15\source\ff.c:5083: if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;	/* Disk error? */
      008512 BC FF 0F         [24]23651 	cjne	r4,#0xff,00112$
      008515 BD FF 0C         [24]23652 	cjne	r5,#0xff,00112$
      008518 BE FF 09         [24]23653 	cjne	r6,#0xff,00112$
      00851B BF FF 06         [24]23654 	cjne	r7,#0xff,00112$
      00851E 90r02r84         [24]23655 	mov	dptr,#_f_mkdir_res_65536_416
      008521 74 01            [12]23656 	mov	a,#0x01
      008523 F0               [24]23657 	movx	@dptr,a
      008524                      23658 00112$:
                                  23659 ;	ff15\source\ff.c:5084: tm = GET_FATTIME();
      008524 C0 07            [24]23660 	push	ar7
      008526 C0 06            [24]23661 	push	ar6
      008528 C0 05            [24]23662 	push	ar5
      00852A C0 04            [24]23663 	push	ar4
      00852C 12r00r00         [24]23664 	lcall	_get_fattime
      00852F 85 82*AB         [24]23665 	mov	_f_mkdir_sloc0_1_0,dpl
      008532 85 83*AC         [24]23666 	mov	(_f_mkdir_sloc0_1_0 + 1),dph
      008535 85 F0*AD         [24]23667 	mov	(_f_mkdir_sloc0_1_0 + 2),b
      008538 F5*AE            [12]23668 	mov	(_f_mkdir_sloc0_1_0 + 3),a
      00853A D0 04            [24]23669 	pop	ar4
      00853C D0 05            [24]23670 	pop	ar5
      00853E D0 06            [24]23671 	pop	ar6
      008540 D0 07            [24]23672 	pop	ar7
                                  23673 ;	ff15\source\ff.c:5085: if (res == FR_OK) {
      008542 90r02r84         [24]23674 	mov	dptr,#_f_mkdir_res_65536_416
      008545 E0               [24]23675 	movx	a,@dptr
      008546 60 03            [24]23676 	jz	00180$
      008548 02r87r6A         [24]23677 	ljmp	00119$
      00854B                      23678 00180$:
                                  23679 ;	ff15\source\ff.c:5086: res = dir_clear(fs, dcl);		/* Clean up the new table */
      00854B 90r02r85         [24]23680 	mov	dptr,#_f_mkdir_fs_65536_416
      00854E E0               [24]23681 	movx	a,@dptr
      00854F F9               [12]23682 	mov	r1,a
      008550 A3               [24]23683 	inc	dptr
      008551 E0               [24]23684 	movx	a,@dptr
      008552 FA               [12]23685 	mov	r2,a
      008553 A3               [24]23686 	inc	dptr
      008554 E0               [24]23687 	movx	a,@dptr
      008555 FB               [12]23688 	mov	r3,a
      008556 90r00r62         [24]23689 	mov	dptr,#_dir_clear_PARM_2
      008559 EC               [12]23690 	mov	a,r4
      00855A F0               [24]23691 	movx	@dptr,a
      00855B ED               [12]23692 	mov	a,r5
      00855C A3               [24]23693 	inc	dptr
      00855D F0               [24]23694 	movx	@dptr,a
      00855E EE               [12]23695 	mov	a,r6
      00855F A3               [24]23696 	inc	dptr
      008560 F0               [24]23697 	movx	@dptr,a
      008561 EF               [12]23698 	mov	a,r7
      008562 A3               [24]23699 	inc	dptr
      008563 F0               [24]23700 	movx	@dptr,a
      008564 89 82            [24]23701 	mov	dpl,r1
      008566 8A 83            [24]23702 	mov	dph,r2
      008568 8B F0            [24]23703 	mov	b,r3
      00856A C0 07            [24]23704 	push	ar7
      00856C C0 06            [24]23705 	push	ar6
      00856E C0 05            [24]23706 	push	ar5
      008570 C0 04            [24]23707 	push	ar4
      008572 12r1Cr12         [24]23708 	lcall	_dir_clear
      008575 AB 82            [24]23709 	mov	r3,dpl
      008577 D0 04            [24]23710 	pop	ar4
      008579 D0 05            [24]23711 	pop	ar5
      00857B D0 06            [24]23712 	pop	ar6
      00857D D0 07            [24]23713 	pop	ar7
      00857F 90r02r84         [24]23714 	mov	dptr,#_f_mkdir_res_65536_416
      008582 EB               [12]23715 	mov	a,r3
      008583 F0               [24]23716 	movx	@dptr,a
                                  23717 ;	ff15\source\ff.c:5087: if (res == FR_OK) {
      008584 EB               [12]23718 	mov	a,r3
      008585 60 03            [24]23719 	jz	00181$
      008587 02r87r6A         [24]23720 	ljmp	00119$
      00858A                      23721 00181$:
                                  23722 ;	ff15\source\ff.c:5089: memset(fs->win + DIR_Name, ' ', 11);	/* Create "." entry */
      00858A 90r02r85         [24]23723 	mov	dptr,#_f_mkdir_fs_65536_416
      00858D E0               [24]23724 	movx	a,@dptr
      00858E F9               [12]23725 	mov	r1,a
      00858F A3               [24]23726 	inc	dptr
      008590 E0               [24]23727 	movx	a,@dptr
      008591 FA               [12]23728 	mov	r2,a
      008592 A3               [24]23729 	inc	dptr
      008593 E0               [24]23730 	movx	a,@dptr
      008594 FB               [12]23731 	mov	r3,a
      008595 74 30            [12]23732 	mov	a,#0x30
      008597 29               [12]23733 	add	a,r1
      008598 F9               [12]23734 	mov	r1,a
      008599 E4               [12]23735 	clr	a
      00859A 3A               [12]23736 	addc	a,r2
      00859B FA               [12]23737 	mov	r2,a
      00859C 90r00r00         [24]23738 	mov	dptr,#_memset_PARM_2
      00859F 74 20            [12]23739 	mov	a,#0x20
      0085A1 F0               [24]23740 	movx	@dptr,a
      0085A2 90r00r00         [24]23741 	mov	dptr,#_memset_PARM_3
      0085A5 74 0B            [12]23742 	mov	a,#0x0b
      0085A7 F0               [24]23743 	movx	@dptr,a
      0085A8 E4               [12]23744 	clr	a
      0085A9 A3               [24]23745 	inc	dptr
      0085AA F0               [24]23746 	movx	@dptr,a
      0085AB 89 82            [24]23747 	mov	dpl,r1
      0085AD 8A 83            [24]23748 	mov	dph,r2
      0085AF 8B F0            [24]23749 	mov	b,r3
      0085B1 C0 07            [24]23750 	push	ar7
      0085B3 C0 06            [24]23751 	push	ar6
      0085B5 C0 05            [24]23752 	push	ar5
      0085B7 C0 04            [24]23753 	push	ar4
      0085B9 12r00r00         [24]23754 	lcall	_memset
                                  23755 ;	ff15\source\ff.c:5090: fs->win[DIR_Name] = '.';
      0085BC 90r02r85         [24]23756 	mov	dptr,#_f_mkdir_fs_65536_416
      0085BF E0               [24]23757 	movx	a,@dptr
      0085C0 F9               [12]23758 	mov	r1,a
      0085C1 A3               [24]23759 	inc	dptr
      0085C2 E0               [24]23760 	movx	a,@dptr
      0085C3 FA               [12]23761 	mov	r2,a
      0085C4 A3               [24]23762 	inc	dptr
      0085C5 E0               [24]23763 	movx	a,@dptr
      0085C6 FB               [12]23764 	mov	r3,a
      0085C7 74 30            [12]23765 	mov	a,#0x30
      0085C9 29               [12]23766 	add	a,r1
      0085CA F9               [12]23767 	mov	r1,a
      0085CB E4               [12]23768 	clr	a
      0085CC 3A               [12]23769 	addc	a,r2
      0085CD FA               [12]23770 	mov	r2,a
      0085CE 89 82            [24]23771 	mov	dpl,r1
      0085D0 8A 83            [24]23772 	mov	dph,r2
      0085D2 8B F0            [24]23773 	mov	b,r3
      0085D4 74 2E            [12]23774 	mov	a,#0x2e
      0085D6 12r00r00         [24]23775 	lcall	__gptrput
                                  23776 ;	ff15\source\ff.c:5091: fs->win[DIR_Attr] = AM_DIR;
      0085D9 90r02r85         [24]23777 	mov	dptr,#_f_mkdir_fs_65536_416
      0085DC E0               [24]23778 	movx	a,@dptr
      0085DD F9               [12]23779 	mov	r1,a
      0085DE A3               [24]23780 	inc	dptr
      0085DF E0               [24]23781 	movx	a,@dptr
      0085E0 FA               [12]23782 	mov	r2,a
      0085E1 A3               [24]23783 	inc	dptr
      0085E2 E0               [24]23784 	movx	a,@dptr
      0085E3 FB               [12]23785 	mov	r3,a
      0085E4 74 3B            [12]23786 	mov	a,#0x3b
      0085E6 29               [12]23787 	add	a,r1
      0085E7 F9               [12]23788 	mov	r1,a
      0085E8 E4               [12]23789 	clr	a
      0085E9 3A               [12]23790 	addc	a,r2
      0085EA FA               [12]23791 	mov	r2,a
      0085EB 89 82            [24]23792 	mov	dpl,r1
      0085ED 8A 83            [24]23793 	mov	dph,r2
      0085EF 8B F0            [24]23794 	mov	b,r3
      0085F1 74 10            [12]23795 	mov	a,#0x10
      0085F3 12r00r00         [24]23796 	lcall	__gptrput
                                  23797 ;	ff15\source\ff.c:5092: st_dword(fs->win + DIR_ModTime, tm);
      0085F6 90r02r85         [24]23798 	mov	dptr,#_f_mkdir_fs_65536_416
      0085F9 E0               [24]23799 	movx	a,@dptr
      0085FA F9               [12]23800 	mov	r1,a
      0085FB A3               [24]23801 	inc	dptr
      0085FC E0               [24]23802 	movx	a,@dptr
      0085FD FA               [12]23803 	mov	r2,a
      0085FE A3               [24]23804 	inc	dptr
      0085FF E0               [24]23805 	movx	a,@dptr
      008600 FB               [12]23806 	mov	r3,a
      008601 74 46            [12]23807 	mov	a,#0x46
      008603 29               [12]23808 	add	a,r1
      008604 F9               [12]23809 	mov	r1,a
      008605 E4               [12]23810 	clr	a
      008606 3A               [12]23811 	addc	a,r2
      008607 FA               [12]23812 	mov	r2,a
      008608 90r00r10         [24]23813 	mov	dptr,#_st_dword_PARM_2
      00860B E5*AB            [12]23814 	mov	a,_f_mkdir_sloc0_1_0
      00860D F0               [24]23815 	movx	@dptr,a
      00860E E5*AC            [12]23816 	mov	a,(_f_mkdir_sloc0_1_0 + 1)
      008610 A3               [24]23817 	inc	dptr
      008611 F0               [24]23818 	movx	@dptr,a
      008612 E5*AD            [12]23819 	mov	a,(_f_mkdir_sloc0_1_0 + 2)
      008614 A3               [24]23820 	inc	dptr
      008615 F0               [24]23821 	movx	@dptr,a
      008616 E5*AE            [12]23822 	mov	a,(_f_mkdir_sloc0_1_0 + 3)
      008618 A3               [24]23823 	inc	dptr
      008619 F0               [24]23824 	movx	@dptr,a
      00861A 89 82            [24]23825 	mov	dpl,r1
      00861C 8A 83            [24]23826 	mov	dph,r2
      00861E 8B F0            [24]23827 	mov	b,r3
      008620 12r01r76         [24]23828 	lcall	_st_dword
      008623 D0 04            [24]23829 	pop	ar4
      008625 D0 05            [24]23830 	pop	ar5
      008627 D0 06            [24]23831 	pop	ar6
      008629 D0 07            [24]23832 	pop	ar7
                                  23833 ;	ff15\source\ff.c:5093: st_clust(fs, fs->win, dcl);
      00862B 90r02r85         [24]23834 	mov	dptr,#_f_mkdir_fs_65536_416
      00862E E0               [24]23835 	movx	a,@dptr
      00862F F9               [12]23836 	mov	r1,a
      008630 A3               [24]23837 	inc	dptr
      008631 E0               [24]23838 	movx	a,@dptr
      008632 FA               [12]23839 	mov	r2,a
      008633 A3               [24]23840 	inc	dptr
      008634 E0               [24]23841 	movx	a,@dptr
      008635 FB               [12]23842 	mov	r3,a
      008636 90r00r8F         [24]23843 	mov	dptr,#_st_clust_PARM_2
      008639 74 30            [12]23844 	mov	a,#0x30
      00863B 29               [12]23845 	add	a,r1
      00863C F0               [24]23846 	movx	@dptr,a
      00863D E4               [12]23847 	clr	a
      00863E 3A               [12]23848 	addc	a,r2
      00863F A3               [24]23849 	inc	dptr
      008640 F0               [24]23850 	movx	@dptr,a
      008641 EB               [12]23851 	mov	a,r3
      008642 A3               [24]23852 	inc	dptr
      008643 F0               [24]23853 	movx	@dptr,a
      008644 90r00r92         [24]23854 	mov	dptr,#_st_clust_PARM_3
      008647 EC               [12]23855 	mov	a,r4
      008648 F0               [24]23856 	movx	@dptr,a
      008649 ED               [12]23857 	mov	a,r5
      00864A A3               [24]23858 	inc	dptr
      00864B F0               [24]23859 	movx	@dptr,a
      00864C EE               [12]23860 	mov	a,r6
      00864D A3               [24]23861 	inc	dptr
      00864E F0               [24]23862 	movx	@dptr,a
      00864F EF               [12]23863 	mov	a,r7
      008650 A3               [24]23864 	inc	dptr
      008651 F0               [24]23865 	movx	@dptr,a
      008652 89 82            [24]23866 	mov	dpl,r1
      008654 8A 83            [24]23867 	mov	dph,r2
      008656 8B F0            [24]23868 	mov	b,r3
      008658 C0 07            [24]23869 	push	ar7
      00865A C0 06            [24]23870 	push	ar6
      00865C C0 05            [24]23871 	push	ar5
      00865E C0 04            [24]23872 	push	ar4
      008660 12r29r2E         [24]23873 	lcall	_st_clust
      008663 D0 04            [24]23874 	pop	ar4
      008665 D0 05            [24]23875 	pop	ar5
      008667 D0 06            [24]23876 	pop	ar6
      008669 D0 07            [24]23877 	pop	ar7
                                  23878 ;	ff15\source\ff.c:5094: memcpy(fs->win + SZDIRE, fs->win, SZDIRE);	/* Create ".." entry */
      00866B 90r02r85         [24]23879 	mov	dptr,#_f_mkdir_fs_65536_416
      00866E E0               [24]23880 	movx	a,@dptr
      00866F F9               [12]23881 	mov	r1,a
      008670 A3               [24]23882 	inc	dptr
      008671 E0               [24]23883 	movx	a,@dptr
      008672 FA               [12]23884 	mov	r2,a
      008673 A3               [24]23885 	inc	dptr
      008674 E0               [24]23886 	movx	a,@dptr
      008675 FB               [12]23887 	mov	r3,a
      008676 C0 04            [24]23888 	push	ar4
      008678 C0 05            [24]23889 	push	ar5
      00867A C0 06            [24]23890 	push	ar6
      00867C C0 07            [24]23891 	push	ar7
      00867E 74 50            [12]23892 	mov	a,#0x50
      008680 29               [12]23893 	add	a,r1
      008681 F8               [12]23894 	mov	r0,a
      008682 E4               [12]23895 	clr	a
      008683 3A               [12]23896 	addc	a,r2
      008684 FE               [12]23897 	mov	r6,a
      008685 8B 07            [24]23898 	mov	ar7,r3
      008687 74 30            [12]23899 	mov	a,#0x30
      008689 29               [12]23900 	add	a,r1
      00868A F9               [12]23901 	mov	r1,a
      00868B E4               [12]23902 	clr	a
      00868C 3A               [12]23903 	addc	a,r2
      00868D FA               [12]23904 	mov	r2,a
      00868E 90r00r00         [24]23905 	mov	dptr,#___memcpy_PARM_2
      008691 E9               [12]23906 	mov	a,r1
      008692 F0               [24]23907 	movx	@dptr,a
      008693 EA               [12]23908 	mov	a,r2
      008694 A3               [24]23909 	inc	dptr
      008695 F0               [24]23910 	movx	@dptr,a
      008696 EB               [12]23911 	mov	a,r3
      008697 A3               [24]23912 	inc	dptr
      008698 F0               [24]23913 	movx	@dptr,a
      008699 90r00r00         [24]23914 	mov	dptr,#___memcpy_PARM_3
      00869C 74 20            [12]23915 	mov	a,#0x20
      00869E F0               [24]23916 	movx	@dptr,a
      00869F E4               [12]23917 	clr	a
      0086A0 A3               [24]23918 	inc	dptr
      0086A1 F0               [24]23919 	movx	@dptr,a
      0086A2 88 82            [24]23920 	mov	dpl,r0
      0086A4 8E 83            [24]23921 	mov	dph,r6
      0086A6 8F F0            [24]23922 	mov	b,r7
      0086A8 C0 07            [24]23923 	push	ar7
      0086AA C0 06            [24]23924 	push	ar6
      0086AC C0 05            [24]23925 	push	ar5
      0086AE C0 04            [24]23926 	push	ar4
      0086B0 12r00r00         [24]23927 	lcall	___memcpy
      0086B3 D0 04            [24]23928 	pop	ar4
      0086B5 D0 05            [24]23929 	pop	ar5
      0086B7 D0 06            [24]23930 	pop	ar6
      0086B9 D0 07            [24]23931 	pop	ar7
                                  23932 ;	ff15\source\ff.c:5095: fs->win[SZDIRE + 1] = '.'; pcl = dj.obj.sclust;
      0086BB 90r02r85         [24]23933 	mov	dptr,#_f_mkdir_fs_65536_416
      0086BE E0               [24]23934 	movx	a,@dptr
      0086BF FD               [12]23935 	mov	r5,a
      0086C0 A3               [24]23936 	inc	dptr
      0086C1 E0               [24]23937 	movx	a,@dptr
      0086C2 FE               [12]23938 	mov	r6,a
      0086C3 A3               [24]23939 	inc	dptr
      0086C4 E0               [24]23940 	movx	a,@dptr
      0086C5 FF               [12]23941 	mov	r7,a
      0086C6 74 51            [12]23942 	mov	a,#0x51
      0086C8 2D               [12]23943 	add	a,r5
      0086C9 FD               [12]23944 	mov	r5,a
      0086CA E4               [12]23945 	clr	a
      0086CB 3E               [12]23946 	addc	a,r6
      0086CC FE               [12]23947 	mov	r6,a
      0086CD 8D 82            [24]23948 	mov	dpl,r5
      0086CF 8E 83            [24]23949 	mov	dph,r6
      0086D1 8F F0            [24]23950 	mov	b,r7
      0086D3 74 2E            [12]23951 	mov	a,#0x2e
      0086D5 12r00r00         [24]23952 	lcall	__gptrput
      0086D8 90r02r8F         [24]23953 	mov	dptr,#(_f_mkdir_dj_65536_416 + 0x0007)
      0086DB E0               [24]23954 	movx	a,@dptr
      0086DC FC               [12]23955 	mov	r4,a
      0086DD A3               [24]23956 	inc	dptr
      0086DE E0               [24]23957 	movx	a,@dptr
      0086DF FD               [12]23958 	mov	r5,a
      0086E0 A3               [24]23959 	inc	dptr
      0086E1 E0               [24]23960 	movx	a,@dptr
      0086E2 FE               [12]23961 	mov	r6,a
      0086E3 A3               [24]23962 	inc	dptr
      0086E4 E0               [24]23963 	movx	a,@dptr
      0086E5 FF               [12]23964 	mov	r7,a
                                  23965 ;	ff15\source\ff.c:5096: st_clust(fs, fs->win + SZDIRE, pcl);
      0086E6 90r02r85         [24]23966 	mov	dptr,#_f_mkdir_fs_65536_416
      0086E9 E0               [24]23967 	movx	a,@dptr
      0086EA F9               [12]23968 	mov	r1,a
      0086EB A3               [24]23969 	inc	dptr
      0086EC E0               [24]23970 	movx	a,@dptr
      0086ED FA               [12]23971 	mov	r2,a
      0086EE A3               [24]23972 	inc	dptr
      0086EF E0               [24]23973 	movx	a,@dptr
      0086F0 FB               [12]23974 	mov	r3,a
      0086F1 90r00r8F         [24]23975 	mov	dptr,#_st_clust_PARM_2
      0086F4 74 50            [12]23976 	mov	a,#0x50
      0086F6 29               [12]23977 	add	a,r1
      0086F7 F0               [24]23978 	movx	@dptr,a
      0086F8 E4               [12]23979 	clr	a
      0086F9 3A               [12]23980 	addc	a,r2
      0086FA A3               [24]23981 	inc	dptr
      0086FB F0               [24]23982 	movx	@dptr,a
      0086FC EB               [12]23983 	mov	a,r3
      0086FD A3               [24]23984 	inc	dptr
      0086FE F0               [24]23985 	movx	@dptr,a
      0086FF 90r00r92         [24]23986 	mov	dptr,#_st_clust_PARM_3
      008702 EC               [12]23987 	mov	a,r4
      008703 F0               [24]23988 	movx	@dptr,a
      008704 ED               [12]23989 	mov	a,r5
      008705 A3               [24]23990 	inc	dptr
      008706 F0               [24]23991 	movx	@dptr,a
      008707 EE               [12]23992 	mov	a,r6
      008708 A3               [24]23993 	inc	dptr
      008709 F0               [24]23994 	movx	@dptr,a
      00870A EF               [12]23995 	mov	a,r7
      00870B A3               [24]23996 	inc	dptr
      00870C F0               [24]23997 	movx	@dptr,a
      00870D 89 82            [24]23998 	mov	dpl,r1
      00870F 8A 83            [24]23999 	mov	dph,r2
      008711 8B F0            [24]24000 	mov	b,r3
      008713 C0 07            [24]24001 	push	ar7
      008715 C0 06            [24]24002 	push	ar6
      008717 C0 05            [24]24003 	push	ar5
      008719 C0 04            [24]24004 	push	ar4
      00871B 12r29r2E         [24]24005 	lcall	_st_clust
      00871E D0 04            [24]24006 	pop	ar4
      008720 D0 05            [24]24007 	pop	ar5
      008722 D0 06            [24]24008 	pop	ar6
      008724 D0 07            [24]24009 	pop	ar7
                                  24010 ;	ff15\source\ff.c:5097: fs->wflag = 1;
      008726 90r02r85         [24]24011 	mov	dptr,#_f_mkdir_fs_65536_416
      008729 E0               [24]24012 	movx	a,@dptr
      00872A FD               [12]24013 	mov	r5,a
      00872B A3               [24]24014 	inc	dptr
      00872C E0               [24]24015 	movx	a,@dptr
      00872D FE               [12]24016 	mov	r6,a
      00872E A3               [24]24017 	inc	dptr
      00872F E0               [24]24018 	movx	a,@dptr
      008730 FF               [12]24019 	mov	r7,a
      008731 74 04            [12]24020 	mov	a,#0x04
      008733 2D               [12]24021 	add	a,r5
      008734 FD               [12]24022 	mov	r5,a
      008735 E4               [12]24023 	clr	a
      008736 3E               [12]24024 	addc	a,r6
      008737 FE               [12]24025 	mov	r6,a
      008738 8D 82            [24]24026 	mov	dpl,r5
      00873A 8E 83            [24]24027 	mov	dph,r6
      00873C 8F F0            [24]24028 	mov	b,r7
      00873E 74 01            [12]24029 	mov	a,#0x01
      008740 12r00r00         [24]24030 	lcall	__gptrput
                                  24031 ;	ff15\source\ff.c:5099: res = dir_register(&dj);	/* Register the object to the parent directoy */
      008743 90r02r88         [24]24032 	mov	dptr,#_f_mkdir_dj_65536_416
      008746 75 F0 00         [24]24033 	mov	b,#0x00
      008749 C0 07            [24]24034 	push	ar7
      00874B C0 06            [24]24035 	push	ar6
      00874D C0 05            [24]24036 	push	ar5
      00874F C0 04            [24]24037 	push	ar4
      008751 12r2DrC3         [24]24038 	lcall	_dir_register
      008754 E5 82            [12]24039 	mov	a,dpl
      008756 D0 04            [24]24040 	pop	ar4
      008758 D0 05            [24]24041 	pop	ar5
      00875A D0 06            [24]24042 	pop	ar6
      00875C D0 07            [24]24043 	pop	ar7
      00875E 90r02r84         [24]24044 	mov	dptr,#_f_mkdir_res_65536_416
      008761 F0               [24]24045 	movx	@dptr,a
                                  24046 ;	ff15\source\ff.c:5130: LEAVE_FF(fs, res);
      008762 D0 07            [24]24047 	pop	ar7
      008764 D0 06            [24]24048 	pop	ar6
      008766 D0 05            [24]24049 	pop	ar5
      008768 D0 04            [24]24050 	pop	ar4
                                  24051 ;	ff15\source\ff.c:5099: res = dir_register(&dj);	/* Register the object to the parent directoy */
      00876A                      24052 00119$:
                                  24053 ;	ff15\source\ff.c:5102: if (res == FR_OK) {
      00876A 90r02r84         [24]24054 	mov	dptr,#_f_mkdir_res_65536_416
      00876D E0               [24]24055 	movx	a,@dptr
      00876E F5*AF            [12]24056 	mov	_f_mkdir_sloc1_1_0,a
      008770 E0               [24]24057 	movx	a,@dptr
      008771 60 03            [24]24058 	jz	00182$
      008773 02r88r4B         [24]24059 	ljmp	00123$
      008776                      24060 00182$:
                                  24061 ;	ff15\source\ff.c:5115: st_dword(dj.dir + DIR_ModTime, tm);	/* Created time */
      008776 90r02rA3         [24]24062 	mov	dptr,#(_f_mkdir_dj_65536_416 + 0x001b)
      008779 E0               [24]24063 	movx	a,@dptr
      00877A F8               [12]24064 	mov	r0,a
      00877B A3               [24]24065 	inc	dptr
      00877C E0               [24]24066 	movx	a,@dptr
      00877D F9               [12]24067 	mov	r1,a
      00877E A3               [24]24068 	inc	dptr
      00877F E0               [24]24069 	movx	a,@dptr
      008780 FA               [12]24070 	mov	r2,a
      008781 74 16            [12]24071 	mov	a,#0x16
      008783 28               [12]24072 	add	a,r0
      008784 F8               [12]24073 	mov	r0,a
      008785 E4               [12]24074 	clr	a
      008786 39               [12]24075 	addc	a,r1
      008787 F9               [12]24076 	mov	r1,a
      008788 90r00r10         [24]24077 	mov	dptr,#_st_dword_PARM_2
      00878B E5*AB            [12]24078 	mov	a,_f_mkdir_sloc0_1_0
      00878D F0               [24]24079 	movx	@dptr,a
      00878E E5*AC            [12]24080 	mov	a,(_f_mkdir_sloc0_1_0 + 1)
      008790 A3               [24]24081 	inc	dptr
      008791 F0               [24]24082 	movx	@dptr,a
      008792 E5*AD            [12]24083 	mov	a,(_f_mkdir_sloc0_1_0 + 2)
      008794 A3               [24]24084 	inc	dptr
      008795 F0               [24]24085 	movx	@dptr,a
      008796 E5*AE            [12]24086 	mov	a,(_f_mkdir_sloc0_1_0 + 3)
      008798 A3               [24]24087 	inc	dptr
      008799 F0               [24]24088 	movx	@dptr,a
      00879A 88 82            [24]24089 	mov	dpl,r0
      00879C 89 83            [24]24090 	mov	dph,r1
      00879E 8A F0            [24]24091 	mov	b,r2
      0087A0 C0 07            [24]24092 	push	ar7
      0087A2 C0 06            [24]24093 	push	ar6
      0087A4 C0 05            [24]24094 	push	ar5
      0087A6 C0 04            [24]24095 	push	ar4
      0087A8 12r01r76         [24]24096 	lcall	_st_dword
      0087AB D0 04            [24]24097 	pop	ar4
      0087AD D0 05            [24]24098 	pop	ar5
      0087AF D0 06            [24]24099 	pop	ar6
      0087B1 D0 07            [24]24100 	pop	ar7
                                  24101 ;	ff15\source\ff.c:5116: st_clust(fs, dj.dir, dcl);			/* Table start cluster */
      0087B3 90r02r85         [24]24102 	mov	dptr,#_f_mkdir_fs_65536_416
      0087B6 E0               [24]24103 	movx	a,@dptr
      0087B7 F5*AB            [12]24104 	mov	_f_mkdir_sloc0_1_0,a
      0087B9 A3               [24]24105 	inc	dptr
      0087BA E0               [24]24106 	movx	a,@dptr
      0087BB F5*AC            [12]24107 	mov	(_f_mkdir_sloc0_1_0 + 1),a
      0087BD A3               [24]24108 	inc	dptr
      0087BE E0               [24]24109 	movx	a,@dptr
      0087BF F5*AD            [12]24110 	mov	(_f_mkdir_sloc0_1_0 + 2),a
      0087C1 90r02rA3         [24]24111 	mov	dptr,#(_f_mkdir_dj_65536_416 + 0x001b)
      0087C4 E0               [24]24112 	movx	a,@dptr
      0087C5 F9               [12]24113 	mov	r1,a
      0087C6 A3               [24]24114 	inc	dptr
      0087C7 E0               [24]24115 	movx	a,@dptr
      0087C8 FA               [12]24116 	mov	r2,a
      0087C9 A3               [24]24117 	inc	dptr
      0087CA E0               [24]24118 	movx	a,@dptr
      0087CB FB               [12]24119 	mov	r3,a
      0087CC 90r00r8F         [24]24120 	mov	dptr,#_st_clust_PARM_2
      0087CF E9               [12]24121 	mov	a,r1
      0087D0 F0               [24]24122 	movx	@dptr,a
      0087D1 EA               [12]24123 	mov	a,r2
      0087D2 A3               [24]24124 	inc	dptr
      0087D3 F0               [24]24125 	movx	@dptr,a
      0087D4 EB               [12]24126 	mov	a,r3
      0087D5 A3               [24]24127 	inc	dptr
      0087D6 F0               [24]24128 	movx	@dptr,a
      0087D7 90r00r92         [24]24129 	mov	dptr,#_st_clust_PARM_3
      0087DA EC               [12]24130 	mov	a,r4
      0087DB F0               [24]24131 	movx	@dptr,a
      0087DC ED               [12]24132 	mov	a,r5
      0087DD A3               [24]24133 	inc	dptr
      0087DE F0               [24]24134 	movx	@dptr,a
      0087DF EE               [12]24135 	mov	a,r6
      0087E0 A3               [24]24136 	inc	dptr
      0087E1 F0               [24]24137 	movx	@dptr,a
      0087E2 EF               [12]24138 	mov	a,r7
      0087E3 A3               [24]24139 	inc	dptr
      0087E4 F0               [24]24140 	movx	@dptr,a
      0087E5 85*AB 82         [24]24141 	mov	dpl,_f_mkdir_sloc0_1_0
      0087E8 85*AC 83         [24]24142 	mov	dph,(_f_mkdir_sloc0_1_0 + 1)
      0087EB 85*AD F0         [24]24143 	mov	b,(_f_mkdir_sloc0_1_0 + 2)
      0087EE 12r29r2E         [24]24144 	lcall	_st_clust
                                  24145 ;	ff15\source\ff.c:5117: dj.dir[DIR_Attr] = AM_DIR;			/* Attribute */
      0087F1 90r02rA3         [24]24146 	mov	dptr,#(_f_mkdir_dj_65536_416 + 0x001b)
      0087F4 E0               [24]24147 	movx	a,@dptr
      0087F5 F9               [12]24148 	mov	r1,a
      0087F6 A3               [24]24149 	inc	dptr
      0087F7 E0               [24]24150 	movx	a,@dptr
      0087F8 FA               [12]24151 	mov	r2,a
      0087F9 A3               [24]24152 	inc	dptr
      0087FA E0               [24]24153 	movx	a,@dptr
      0087FB FB               [12]24154 	mov	r3,a
      0087FC 74 0B            [12]24155 	mov	a,#0x0b
      0087FE 29               [12]24156 	add	a,r1
      0087FF F9               [12]24157 	mov	r1,a
      008800 E4               [12]24158 	clr	a
      008801 3A               [12]24159 	addc	a,r2
      008802 FA               [12]24160 	mov	r2,a
      008803 89 82            [24]24161 	mov	dpl,r1
      008805 8A 83            [24]24162 	mov	dph,r2
      008807 8B F0            [24]24163 	mov	b,r3
      008809 74 10            [12]24164 	mov	a,#0x10
      00880B 12r00r00         [24]24165 	lcall	__gptrput
                                  24166 ;	ff15\source\ff.c:5118: fs->wflag = 1;
      00880E 90r02r85         [24]24167 	mov	dptr,#_f_mkdir_fs_65536_416
      008811 E0               [24]24168 	movx	a,@dptr
      008812 F9               [12]24169 	mov	r1,a
      008813 A3               [24]24170 	inc	dptr
      008814 E0               [24]24171 	movx	a,@dptr
      008815 FA               [12]24172 	mov	r2,a
      008816 A3               [24]24173 	inc	dptr
      008817 E0               [24]24174 	movx	a,@dptr
      008818 FB               [12]24175 	mov	r3,a
      008819 74 04            [12]24176 	mov	a,#0x04
      00881B 29               [12]24177 	add	a,r1
      00881C F9               [12]24178 	mov	r1,a
      00881D E4               [12]24179 	clr	a
      00881E 3A               [12]24180 	addc	a,r2
      00881F FA               [12]24181 	mov	r2,a
      008820 89 82            [24]24182 	mov	dpl,r1
      008822 8A 83            [24]24183 	mov	dph,r2
      008824 8B F0            [24]24184 	mov	b,r3
      008826 74 01            [12]24185 	mov	a,#0x01
      008828 12r00r00         [24]24186 	lcall	__gptrput
                                  24187 ;	ff15\source\ff.c:5120: if (res == FR_OK) {
      00882B E5*AF            [12]24188 	mov	a,_f_mkdir_sloc1_1_0
      00882D 70 3E            [24]24189 	jnz	00128$
                                  24190 ;	ff15\source\ff.c:5121: res = sync_fs(fs);
      00882F 90r02r85         [24]24191 	mov	dptr,#_f_mkdir_fs_65536_416
      008832 E0               [24]24192 	movx	a,@dptr
      008833 F9               [12]24193 	mov	r1,a
      008834 A3               [24]24194 	inc	dptr
      008835 E0               [24]24195 	movx	a,@dptr
      008836 FA               [12]24196 	mov	r2,a
      008837 A3               [24]24197 	inc	dptr
      008838 E0               [24]24198 	movx	a,@dptr
      008839 FB               [12]24199 	mov	r3,a
      00883A 89 82            [24]24200 	mov	dpl,r1
      00883C 8A 83            [24]24201 	mov	dph,r2
      00883E 8B F0            [24]24202 	mov	b,r3
      008840 12r06r37         [24]24203 	lcall	_sync_fs
      008843 E5 82            [12]24204 	mov	a,dpl
      008845 90r02r84         [24]24205 	mov	dptr,#_f_mkdir_res_65536_416
      008848 F0               [24]24206 	movx	@dptr,a
      008849 80 22            [24]24207 	sjmp	00128$
      00884B                      24208 00123$:
                                  24209 ;	ff15\source\ff.c:5124: remove_chain(&sobj, dcl, 0);		/* Could not register, remove the allocated cluster */
      00884B 90r00r47         [24]24210 	mov	dptr,#_remove_chain_PARM_2
      00884E EC               [12]24211 	mov	a,r4
      00884F F0               [24]24212 	movx	@dptr,a
      008850 ED               [12]24213 	mov	a,r5
      008851 A3               [24]24214 	inc	dptr
      008852 F0               [24]24215 	movx	@dptr,a
      008853 EE               [12]24216 	mov	a,r6
      008854 A3               [24]24217 	inc	dptr
      008855 F0               [24]24218 	movx	@dptr,a
      008856 EF               [12]24219 	mov	a,r7
      008857 A3               [24]24220 	inc	dptr
      008858 F0               [24]24221 	movx	@dptr,a
      008859 90r00r4B         [24]24222 	mov	dptr,#_remove_chain_PARM_3
      00885C E4               [12]24223 	clr	a
      00885D F0               [24]24224 	movx	@dptr,a
      00885E A3               [24]24225 	inc	dptr
      00885F F0               [24]24226 	movx	@dptr,a
      008860 A3               [24]24227 	inc	dptr
      008861 F0               [24]24228 	movx	@dptr,a
      008862 A3               [24]24229 	inc	dptr
      008863 F0               [24]24230 	movx	@dptr,a
      008864 90r02rB2         [24]24231 	mov	dptr,#_f_mkdir_sobj_65536_416
      008867 75 F0 00         [24]24232 	mov	b,#0x00
      00886A 12r13r15         [24]24233 	lcall	_remove_chain
      00886D                      24234 00128$:
                                  24235 ;	ff15\source\ff.c:5130: LEAVE_FF(fs, res);
      00886D 90r02r84         [24]24236 	mov	dptr,#_f_mkdir_res_65536_416
      008870 E0               [24]24237 	movx	a,@dptr
                                  24238 ;	ff15\source\ff.c:5131: }
      008871 F5 82            [12]24239 	mov	dpl,a
      008873 22               [24]24240 	ret
                                  24241 ;------------------------------------------------------------
                                  24242 ;Allocation info for local variables in function 'f_rename'
                                  24243 ;------------------------------------------------------------
                                  24244 ;sloc0                     Allocated with name '_f_rename_sloc0_1_0'
                                  24245 ;path_new                  Allocated with name '_f_rename_PARM_2'
                                  24246 ;path_old                  Allocated with name '_f_rename_path_old_65536_427'
                                  24247 ;res                       Allocated with name '_f_rename_res_65536_428'
                                  24248 ;fs                        Allocated with name '_f_rename_fs_65536_428'
                                  24249 ;djo                       Allocated with name '_f_rename_djo_65536_428'
                                  24250 ;djn                       Allocated with name '_f_rename_djn_65536_428'
                                  24251 ;buf                       Allocated with name '_f_rename_buf_65536_428'
                                  24252 ;dir                       Allocated with name '_f_rename_dir_65536_428'
                                  24253 ;sect                      Allocated with name '_f_rename_sect_65536_428'
                                  24254 ;------------------------------------------------------------
                                  24255 ;	ff15\source\ff.c:5140: FRESULT f_rename (
                                  24256 ;	-----------------------------------------
                                  24257 ;	 function f_rename
                                  24258 ;	-----------------------------------------
      008874                      24259 _f_rename:
      008874 AF F0            [24]24260 	mov	r7,b
      008876 AE 83            [24]24261 	mov	r6,dph
      008878 E5 82            [12]24262 	mov	a,dpl
      00887A 90r02rC4         [24]24263 	mov	dptr,#_f_rename_path_old_65536_427
      00887D F0               [24]24264 	movx	@dptr,a
      00887E EE               [12]24265 	mov	a,r6
      00887F A3               [24]24266 	inc	dptr
      008880 F0               [24]24267 	movx	@dptr,a
      008881 EF               [12]24268 	mov	a,r7
      008882 A3               [24]24269 	inc	dptr
      008883 F0               [24]24270 	movx	@dptr,a
                                  24271 ;	ff15\source\ff.c:5153: get_ldnumber(&path_new);						/* Snip the drive number of new name off */
      008884 90r02rC1         [24]24272 	mov	dptr,#_f_rename_PARM_2
      008887 75 F0 00         [24]24273 	mov	b,#0x00
      00888A 12r37rD1         [24]24274 	lcall	_get_ldnumber
                                  24275 ;	ff15\source\ff.c:5154: res = mount_volume(&path_old, &fs, FA_WRITE);	/* Get logical drive of the old object */
      00888D 90r00rEA         [24]24276 	mov	dptr,#_mount_volume_PARM_2
      008890 74rC8            [12]24277 	mov	a,#_f_rename_fs_65536_428
      008892 F0               [24]24278 	movx	@dptr,a
      008893 74s02            [12]24279 	mov	a,#(_f_rename_fs_65536_428 >> 8)
      008895 A3               [24]24280 	inc	dptr
      008896 F0               [24]24281 	movx	@dptr,a
      008897 E4               [12]24282 	clr	a
      008898 A3               [24]24283 	inc	dptr
      008899 F0               [24]24284 	movx	@dptr,a
      00889A 90r00rED         [24]24285 	mov	dptr,#_mount_volume_PARM_3
      00889D 74 02            [12]24286 	mov	a,#0x02
      00889F F0               [24]24287 	movx	@dptr,a
      0088A0 90r02rC4         [24]24288 	mov	dptr,#_f_rename_path_old_65536_427
      0088A3 75 F0 00         [24]24289 	mov	b,#0x00
      0088A6 12r3Dr6D         [24]24290 	lcall	_mount_volume
      0088A9 AF 82            [24]24291 	mov	r7,dpl
      0088AB 90r02rC7         [24]24292 	mov	dptr,#_f_rename_res_65536_428
      0088AE EF               [12]24293 	mov	a,r7
      0088AF F0               [24]24294 	movx	@dptr,a
                                  24295 ;	ff15\source\ff.c:5155: if (res == FR_OK) {
      0088B0 EF               [12]24296 	mov	a,r7
      0088B1 60 03            [24]24297 	jz	00203$
      0088B3 02r8Cr27         [24]24298 	ljmp	00128$
      0088B6                      24299 00203$:
                                  24300 ;	ff15\source\ff.c:5156: djo.obj.fs = fs;
      0088B6 90r02rC8         [24]24301 	mov	dptr,#_f_rename_fs_65536_428
      0088B9 E0               [24]24302 	movx	a,@dptr
      0088BA FD               [12]24303 	mov	r5,a
      0088BB A3               [24]24304 	inc	dptr
      0088BC E0               [24]24305 	movx	a,@dptr
      0088BD FE               [12]24306 	mov	r6,a
      0088BE A3               [24]24307 	inc	dptr
      0088BF E0               [24]24308 	movx	a,@dptr
      0088C0 FF               [12]24309 	mov	r7,a
      0088C1 90r02rCB         [24]24310 	mov	dptr,#_f_rename_djo_65536_428
      0088C4 ED               [12]24311 	mov	a,r5
      0088C5 F0               [24]24312 	movx	@dptr,a
      0088C6 EE               [12]24313 	mov	a,r6
      0088C7 A3               [24]24314 	inc	dptr
      0088C8 F0               [24]24315 	movx	@dptr,a
      0088C9 EF               [12]24316 	mov	a,r7
      0088CA A3               [24]24317 	inc	dptr
      0088CB F0               [24]24318 	movx	@dptr,a
                                  24319 ;	ff15\source\ff.c:5158: res = follow_path(&djo, path_old);			/* Check old object */
      0088CC 90r02rC4         [24]24320 	mov	dptr,#_f_rename_path_old_65536_427
      0088CF E0               [24]24321 	movx	a,@dptr
      0088D0 FD               [12]24322 	mov	r5,a
      0088D1 A3               [24]24323 	inc	dptr
      0088D2 E0               [24]24324 	movx	a,@dptr
      0088D3 FE               [12]24325 	mov	r6,a
      0088D4 A3               [24]24326 	inc	dptr
      0088D5 E0               [24]24327 	movx	a,@dptr
      0088D6 FF               [12]24328 	mov	r7,a
      0088D7 90r00rC0         [24]24329 	mov	dptr,#_follow_path_PARM_2
      0088DA ED               [12]24330 	mov	a,r5
      0088DB F0               [24]24331 	movx	@dptr,a
      0088DC EE               [12]24332 	mov	a,r6
      0088DD A3               [24]24333 	inc	dptr
      0088DE F0               [24]24334 	movx	@dptr,a
      0088DF EF               [12]24335 	mov	a,r7
      0088E0 A3               [24]24336 	inc	dptr
      0088E1 F0               [24]24337 	movx	@dptr,a
      0088E2 90r02rCB         [24]24338 	mov	dptr,#_f_rename_djo_65536_428
      0088E5 75 F0 00         [24]24339 	mov	b,#0x00
      0088E8 12r35rB8         [24]24340 	lcall	_follow_path
      0088EB AF 82            [24]24341 	mov	r7,dpl
      0088ED 90r02rC7         [24]24342 	mov	dptr,#_f_rename_res_65536_428
      0088F0 EF               [12]24343 	mov	a,r7
      0088F1 F0               [24]24344 	movx	@dptr,a
                                  24345 ;	ff15\source\ff.c:5159: if (res == FR_OK && (djo.fn[NSFLAG] & (NS_DOT | NS_NONAME))) res = FR_INVALID_NAME;	/* Check validity of name */
      0088F2 EF               [12]24346 	mov	a,r7
      0088F3 70 0F            [24]24347 	jnz	00102$
      0088F5 90r02rF4         [24]24348 	mov	dptr,#(_f_rename_djo_65536_428 + 0x0029)
      0088F8 E0               [24]24349 	movx	a,@dptr
      0088F9 FF               [12]24350 	mov	r7,a
      0088FA 54 A0            [12]24351 	anl	a,#0xa0
      0088FC 60 06            [24]24352 	jz	00102$
      0088FE 90r02rC7         [24]24353 	mov	dptr,#_f_rename_res_65536_428
      008901 74 06            [12]24354 	mov	a,#0x06
      008903 F0               [24]24355 	movx	@dptr,a
      008904                      24356 00102$:
                                  24357 ;	ff15\source\ff.c:5165: if (res == FR_OK) {					/* Object to be renamed is found */
      008904 90r02rC7         [24]24358 	mov	dptr,#_f_rename_res_65536_428
      008907 E0               [24]24359 	movx	a,@dptr
      008908 60 03            [24]24360 	jz	00206$
      00890A 02r8Cr27         [24]24361 	ljmp	00128$
      00890D                      24362 00206$:
                                  24363 ;	ff15\source\ff.c:5193: memcpy(buf, djo.dir, SZDIRE);			/* Save directory entry of the object */
      00890D 90r02rE6         [24]24364 	mov	dptr,#(_f_rename_djo_65536_428 + 0x001b)
      008910 E0               [24]24365 	movx	a,@dptr
      008911 FD               [12]24366 	mov	r5,a
      008912 A3               [24]24367 	inc	dptr
      008913 E0               [24]24368 	movx	a,@dptr
      008914 FE               [12]24369 	mov	r6,a
      008915 A3               [24]24370 	inc	dptr
      008916 E0               [24]24371 	movx	a,@dptr
      008917 FF               [12]24372 	mov	r7,a
      008918 90r00r00         [24]24373 	mov	dptr,#___memcpy_PARM_2
      00891B ED               [12]24374 	mov	a,r5
      00891C F0               [24]24375 	movx	@dptr,a
      00891D EE               [12]24376 	mov	a,r6
      00891E A3               [24]24377 	inc	dptr
      00891F F0               [24]24378 	movx	@dptr,a
      008920 EF               [12]24379 	mov	a,r7
      008921 A3               [24]24380 	inc	dptr
      008922 F0               [24]24381 	movx	@dptr,a
      008923 90r00r00         [24]24382 	mov	dptr,#___memcpy_PARM_3
      008926 74 20            [12]24383 	mov	a,#0x20
      008928 F0               [24]24384 	movx	@dptr,a
      008929 E4               [12]24385 	clr	a
      00892A A3               [24]24386 	inc	dptr
      00892B F0               [24]24387 	movx	@dptr,a
      00892C 90r03r1F         [24]24388 	mov	dptr,#_f_rename_buf_65536_428
      00892F 75 F0 00         [24]24389 	mov	b,#0x00
      008932 12r00r00         [24]24390 	lcall	___memcpy
                                  24391 ;	ff15\source\ff.c:5194: memcpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
      008935 90r00r00         [24]24392 	mov	dptr,#___memcpy_PARM_2
      008938 74rCB            [12]24393 	mov	a,#_f_rename_djo_65536_428
      00893A F0               [24]24394 	movx	@dptr,a
      00893B 74s02            [12]24395 	mov	a,#(_f_rename_djo_65536_428 >> 8)
      00893D A3               [24]24396 	inc	dptr
      00893E F0               [24]24397 	movx	@dptr,a
      00893F E4               [12]24398 	clr	a
      008940 A3               [24]24399 	inc	dptr
      008941 F0               [24]24400 	movx	@dptr,a
      008942 90r00r00         [24]24401 	mov	dptr,#___memcpy_PARM_3
      008945 74 2A            [12]24402 	mov	a,#0x2a
      008947 F0               [24]24403 	movx	@dptr,a
      008948 E4               [12]24404 	clr	a
      008949 A3               [24]24405 	inc	dptr
      00894A F0               [24]24406 	movx	@dptr,a
      00894B 90r02rF5         [24]24407 	mov	dptr,#_f_rename_djn_65536_428
      00894E 75 F0 00         [24]24408 	mov	b,#0x00
      008951 12r00r00         [24]24409 	lcall	___memcpy
                                  24410 ;	ff15\source\ff.c:5195: res = follow_path(&djn, path_new);		/* Make sure if new object name is not in use */
      008954 90r02rC1         [24]24411 	mov	dptr,#_f_rename_PARM_2
      008957 E0               [24]24412 	movx	a,@dptr
      008958 FD               [12]24413 	mov	r5,a
      008959 A3               [24]24414 	inc	dptr
      00895A E0               [24]24415 	movx	a,@dptr
      00895B FE               [12]24416 	mov	r6,a
      00895C A3               [24]24417 	inc	dptr
      00895D E0               [24]24418 	movx	a,@dptr
      00895E FF               [12]24419 	mov	r7,a
      00895F 90r00rC0         [24]24420 	mov	dptr,#_follow_path_PARM_2
      008962 ED               [12]24421 	mov	a,r5
      008963 F0               [24]24422 	movx	@dptr,a
      008964 EE               [12]24423 	mov	a,r6
      008965 A3               [24]24424 	inc	dptr
      008966 F0               [24]24425 	movx	@dptr,a
      008967 EF               [12]24426 	mov	a,r7
      008968 A3               [24]24427 	inc	dptr
      008969 F0               [24]24428 	movx	@dptr,a
      00896A 90r02rF5         [24]24429 	mov	dptr,#_f_rename_djn_65536_428
      00896D 75 F0 00         [24]24430 	mov	b,#0x00
      008970 12r35rB8         [24]24431 	lcall	_follow_path
      008973 AF 82            [24]24432 	mov	r7,dpl
      008975 90r02rC7         [24]24433 	mov	dptr,#_f_rename_res_65536_428
      008978 EF               [12]24434 	mov	a,r7
      008979 F0               [24]24435 	movx	@dptr,a
                                  24436 ;	ff15\source\ff.c:5196: if (res == FR_OK) {						/* Is new name already in use by any other object? */
      00897A EF               [12]24437 	mov	a,r7
      00897B 70 63            [24]24438 	jnz	00105$
                                  24439 ;	ff15\source\ff.c:5197: res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
      00897D 90r02rFC         [24]24440 	mov	dptr,#(_f_rename_djn_65536_428 + 0x0007)
      008980 E0               [24]24441 	movx	a,@dptr
      008981 FC               [12]24442 	mov	r4,a
      008982 A3               [24]24443 	inc	dptr
      008983 E0               [24]24444 	movx	a,@dptr
      008984 FD               [12]24445 	mov	r5,a
      008985 A3               [24]24446 	inc	dptr
      008986 E0               [24]24447 	movx	a,@dptr
      008987 FE               [12]24448 	mov	r6,a
      008988 A3               [24]24449 	inc	dptr
      008989 E0               [24]24450 	movx	a,@dptr
      00898A FF               [12]24451 	mov	r7,a
      00898B 90r02rD2         [24]24452 	mov	dptr,#(_f_rename_djo_65536_428 + 0x0007)
      00898E E0               [24]24453 	movx	a,@dptr
      00898F F8               [12]24454 	mov	r0,a
      008990 A3               [24]24455 	inc	dptr
      008991 E0               [24]24456 	movx	a,@dptr
      008992 F9               [12]24457 	mov	r1,a
      008993 A3               [24]24458 	inc	dptr
      008994 E0               [24]24459 	movx	a,@dptr
      008995 FA               [12]24460 	mov	r2,a
      008996 A3               [24]24461 	inc	dptr
      008997 E0               [24]24462 	movx	a,@dptr
      008998 FB               [12]24463 	mov	r3,a
      008999 EC               [12]24464 	mov	a,r4
      00899A B5 00 3C         [24]24465 	cjne	a,ar0,00131$
      00899D ED               [12]24466 	mov	a,r5
      00899E B5 01 38         [24]24467 	cjne	a,ar1,00131$
      0089A1 EE               [12]24468 	mov	a,r6
      0089A2 B5 02 34         [24]24469 	cjne	a,ar2,00131$
      0089A5 EF               [12]24470 	mov	a,r7
      0089A6 B5 03 30         [24]24471 	cjne	a,ar3,00131$
      0089A9 90r03r04         [24]24472 	mov	dptr,#(_f_rename_djn_65536_428 + 0x000f)
      0089AC E0               [24]24473 	movx	a,@dptr
      0089AD FC               [12]24474 	mov	r4,a
      0089AE A3               [24]24475 	inc	dptr
      0089AF E0               [24]24476 	movx	a,@dptr
      0089B0 FD               [12]24477 	mov	r5,a
      0089B1 A3               [24]24478 	inc	dptr
      0089B2 E0               [24]24479 	movx	a,@dptr
      0089B3 FE               [12]24480 	mov	r6,a
      0089B4 A3               [24]24481 	inc	dptr
      0089B5 E0               [24]24482 	movx	a,@dptr
      0089B6 FF               [12]24483 	mov	r7,a
      0089B7 90r02rDA         [24]24484 	mov	dptr,#(_f_rename_djo_65536_428 + 0x000f)
      0089BA E0               [24]24485 	movx	a,@dptr
      0089BB F8               [12]24486 	mov	r0,a
      0089BC A3               [24]24487 	inc	dptr
      0089BD E0               [24]24488 	movx	a,@dptr
      0089BE F9               [12]24489 	mov	r1,a
      0089BF A3               [24]24490 	inc	dptr
      0089C0 E0               [24]24491 	movx	a,@dptr
      0089C1 FA               [12]24492 	mov	r2,a
      0089C2 A3               [24]24493 	inc	dptr
      0089C3 E0               [24]24494 	movx	a,@dptr
      0089C4 FB               [12]24495 	mov	r3,a
      0089C5 EC               [12]24496 	mov	a,r4
      0089C6 B5 00 10         [24]24497 	cjne	a,ar0,00131$
      0089C9 ED               [12]24498 	mov	a,r5
      0089CA B5 01 0C         [24]24499 	cjne	a,ar1,00131$
      0089CD EE               [12]24500 	mov	a,r6
      0089CE B5 02 08         [24]24501 	cjne	a,ar2,00131$
      0089D1 EF               [12]24502 	mov	a,r7
      0089D2 B5 03 04         [24]24503 	cjne	a,ar3,00131$
      0089D5 7F 04            [12]24504 	mov	r7,#0x04
      0089D7 80 02            [24]24505 	sjmp	00132$
      0089D9                      24506 00131$:
      0089D9 7F 08            [12]24507 	mov	r7,#0x08
      0089DB                      24508 00132$:
      0089DB 90r02rC7         [24]24509 	mov	dptr,#_f_rename_res_65536_428
      0089DE EF               [12]24510 	mov	a,r7
      0089DF F0               [24]24511 	movx	@dptr,a
      0089E0                      24512 00105$:
                                  24513 ;	ff15\source\ff.c:5199: if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
      0089E0 90r02rC7         [24]24514 	mov	dptr,#_f_rename_res_65536_428
      0089E3 E0               [24]24515 	movx	a,@dptr
      0089E4 FF               [12]24516 	mov	r7,a
      0089E5 BF 04 02         [24]24517 	cjne	r7,#0x04,00212$
      0089E8 80 03            [24]24518 	sjmp	00213$
      0089EA                      24519 00212$:
      0089EA 02r8BrF5         [24]24520 	ljmp	00120$
      0089ED                      24521 00213$:
                                  24522 ;	ff15\source\ff.c:5200: res = dir_register(&djn);			/* Register the new entry */
      0089ED 90r02rF5         [24]24523 	mov	dptr,#_f_rename_djn_65536_428
      0089F0 75 F0 00         [24]24524 	mov	b,#0x00
      0089F3 12r2DrC3         [24]24525 	lcall	_dir_register
      0089F6 AF 82            [24]24526 	mov	r7,dpl
      0089F8 90r02rC7         [24]24527 	mov	dptr,#_f_rename_res_65536_428
      0089FB EF               [12]24528 	mov	a,r7
      0089FC F0               [24]24529 	movx	@dptr,a
                                  24530 ;	ff15\source\ff.c:5201: if (res == FR_OK) {
      0089FD EF               [12]24531 	mov	a,r7
      0089FE 60 03            [24]24532 	jz	00214$
      008A00 02r8BrF5         [24]24533 	ljmp	00120$
      008A03                      24534 00214$:
                                  24535 ;	ff15\source\ff.c:5202: dir = djn.dir;					/* Copy directory entry of the object except name */
      008A03 90r03r10         [24]24536 	mov	dptr,#(_f_rename_djn_65536_428 + 0x001b)
      008A06 E0               [24]24537 	movx	a,@dptr
      008A07 FD               [12]24538 	mov	r5,a
      008A08 A3               [24]24539 	inc	dptr
      008A09 E0               [24]24540 	movx	a,@dptr
      008A0A FE               [12]24541 	mov	r6,a
      008A0B A3               [24]24542 	inc	dptr
      008A0C E0               [24]24543 	movx	a,@dptr
      008A0D FF               [12]24544 	mov	r7,a
                                  24545 ;	ff15\source\ff.c:5203: memcpy(dir + 13, buf + 13, SZDIRE - 13);
      008A0E 74 0D            [12]24546 	mov	a,#0x0d
      008A10 2D               [12]24547 	add	a,r5
      008A11 FA               [12]24548 	mov	r2,a
      008A12 E4               [12]24549 	clr	a
      008A13 3E               [12]24550 	addc	a,r6
      008A14 FB               [12]24551 	mov	r3,a
      008A15 8F 04            [24]24552 	mov	ar4,r7
      008A17 90r00r00         [24]24553 	mov	dptr,#___memcpy_PARM_2
      008A1A 74r2C            [12]24554 	mov	a,#(_f_rename_buf_65536_428 + 0x000d)
      008A1C F0               [24]24555 	movx	@dptr,a
      008A1D 74s03            [12]24556 	mov	a,#((_f_rename_buf_65536_428 + 0x000d) >> 8)
      008A1F A3               [24]24557 	inc	dptr
      008A20 F0               [24]24558 	movx	@dptr,a
      008A21 E4               [12]24559 	clr	a
      008A22 A3               [24]24560 	inc	dptr
      008A23 F0               [24]24561 	movx	@dptr,a
      008A24 90r00r00         [24]24562 	mov	dptr,#___memcpy_PARM_3
      008A27 74 13            [12]24563 	mov	a,#0x13
      008A29 F0               [24]24564 	movx	@dptr,a
      008A2A E4               [12]24565 	clr	a
      008A2B A3               [24]24566 	inc	dptr
      008A2C F0               [24]24567 	movx	@dptr,a
      008A2D 8A 82            [24]24568 	mov	dpl,r2
      008A2F 8B 83            [24]24569 	mov	dph,r3
      008A31 8C F0            [24]24570 	mov	b,r4
      008A33 C0 07            [24]24571 	push	ar7
      008A35 C0 06            [24]24572 	push	ar6
      008A37 C0 05            [24]24573 	push	ar5
      008A39 12r00r00         [24]24574 	lcall	___memcpy
      008A3C D0 05            [24]24575 	pop	ar5
      008A3E D0 06            [24]24576 	pop	ar6
      008A40 D0 07            [24]24577 	pop	ar7
                                  24578 ;	ff15\source\ff.c:5204: dir[DIR_Attr] = buf[DIR_Attr];
      008A42 74 0B            [12]24579 	mov	a,#0x0b
      008A44 2D               [12]24580 	add	a,r5
      008A45 FA               [12]24581 	mov	r2,a
      008A46 E4               [12]24582 	clr	a
      008A47 3E               [12]24583 	addc	a,r6
      008A48 FB               [12]24584 	mov	r3,a
      008A49 8F 04            [24]24585 	mov	ar4,r7
      008A4B 90r03r2A         [24]24586 	mov	dptr,#(_f_rename_buf_65536_428 + 0x000b)
      008A4E E0               [24]24587 	movx	a,@dptr
      008A4F F9               [12]24588 	mov	r1,a
      008A50 8A 82            [24]24589 	mov	dpl,r2
      008A52 8B 83            [24]24590 	mov	dph,r3
      008A54 8C F0            [24]24591 	mov	b,r4
      008A56 12r00r00         [24]24592 	lcall	__gptrput
                                  24593 ;	ff15\source\ff.c:5205: if (!(dir[DIR_Attr] & AM_DIR)) dir[DIR_Attr] |= AM_ARC;	/* Set archive attribute if it is a file */
      008A59 8A 82            [24]24594 	mov	dpl,r2
      008A5B 8B 83            [24]24595 	mov	dph,r3
      008A5D 8C F0            [24]24596 	mov	b,r4
      008A5F 12r00r00         [24]24597 	lcall	__gptrget
      008A62 F8               [12]24598 	mov	r0,a
      008A63 E9               [12]24599 	mov	a,r1
      008A64 20 E4 0D         [24]24600 	jb	acc.4,00107$
      008A67 43 00 20         [24]24601 	orl	ar0,#0x20
      008A6A 8A 82            [24]24602 	mov	dpl,r2
      008A6C 8B 83            [24]24603 	mov	dph,r3
      008A6E 8C F0            [24]24604 	mov	b,r4
      008A70 E8               [12]24605 	mov	a,r0
      008A71 12r00r00         [24]24606 	lcall	__gptrput
      008A74                      24607 00107$:
                                  24608 ;	ff15\source\ff.c:5206: fs->wflag = 1;
      008A74 C0 05            [24]24609 	push	ar5
      008A76 C0 06            [24]24610 	push	ar6
      008A78 C0 07            [24]24611 	push	ar7
      008A7A 90r02rC8         [24]24612 	mov	dptr,#_f_rename_fs_65536_428
      008A7D E0               [24]24613 	movx	a,@dptr
      008A7E F8               [12]24614 	mov	r0,a
      008A7F A3               [24]24615 	inc	dptr
      008A80 E0               [24]24616 	movx	a,@dptr
      008A81 F9               [12]24617 	mov	r1,a
      008A82 A3               [24]24618 	inc	dptr
      008A83 E0               [24]24619 	movx	a,@dptr
      008A84 FF               [12]24620 	mov	r7,a
      008A85 74 04            [12]24621 	mov	a,#0x04
      008A87 28               [12]24622 	add	a,r0
      008A88 F8               [12]24623 	mov	r0,a
      008A89 E4               [12]24624 	clr	a
      008A8A 39               [12]24625 	addc	a,r1
      008A8B F9               [12]24626 	mov	r1,a
      008A8C 88 82            [24]24627 	mov	dpl,r0
      008A8E 89 83            [24]24628 	mov	dph,r1
      008A90 8F F0            [24]24629 	mov	b,r7
      008A92 74 01            [12]24630 	mov	a,#0x01
      008A94 12r00r00         [24]24631 	lcall	__gptrput
                                  24632 ;	ff15\source\ff.c:5207: if ((dir[DIR_Attr] & AM_DIR) && djo.obj.sclust != djn.obj.sclust) {	/* Update .. entry in the sub-directory if needed */
      008A97 8A 82            [24]24633 	mov	dpl,r2
      008A99 8B 83            [24]24634 	mov	dph,r3
      008A9B 8C F0            [24]24635 	mov	b,r4
      008A9D 12r00r00         [24]24636 	lcall	__gptrget
      008AA0 FA               [12]24637 	mov	r2,a
      008AA1 D0 07            [24]24638 	pop	ar7
      008AA3 D0 06            [24]24639 	pop	ar6
      008AA5 D0 05            [24]24640 	pop	ar5
      008AA7 20 E4 03         [24]24641 	jb	acc.4,00216$
      008AAA 02r8BrF5         [24]24642 	ljmp	00120$
      008AAD                      24643 00216$:
      008AAD C0 05            [24]24644 	push	ar5
      008AAF C0 06            [24]24645 	push	ar6
      008AB1 C0 07            [24]24646 	push	ar7
      008AB3 90r02rD2         [24]24647 	mov	dptr,#(_f_rename_djo_65536_428 + 0x0007)
      008AB6 E0               [24]24648 	movx	a,@dptr
      008AB7 F9               [12]24649 	mov	r1,a
      008AB8 A3               [24]24650 	inc	dptr
      008AB9 E0               [24]24651 	movx	a,@dptr
      008ABA FA               [12]24652 	mov	r2,a
      008ABB A3               [24]24653 	inc	dptr
      008ABC E0               [24]24654 	movx	a,@dptr
      008ABD FB               [12]24655 	mov	r3,a
      008ABE A3               [24]24656 	inc	dptr
      008ABF E0               [24]24657 	movx	a,@dptr
      008AC0 FC               [12]24658 	mov	r4,a
      008AC1 90r02rFC         [24]24659 	mov	dptr,#(_f_rename_djn_65536_428 + 0x0007)
      008AC4 E0               [24]24660 	movx	a,@dptr
      008AC5 F8               [12]24661 	mov	r0,a
      008AC6 A3               [24]24662 	inc	dptr
      008AC7 E0               [24]24663 	movx	a,@dptr
      008AC8 FD               [12]24664 	mov	r5,a
      008AC9 A3               [24]24665 	inc	dptr
      008ACA E0               [24]24666 	movx	a,@dptr
      008ACB FE               [12]24667 	mov	r6,a
      008ACC A3               [24]24668 	inc	dptr
      008ACD E0               [24]24669 	movx	a,@dptr
      008ACE FF               [12]24670 	mov	r7,a
      008ACF E9               [12]24671 	mov	a,r1
      008AD0 B5 00 15         [24]24672 	cjne	a,ar0,00217$
      008AD3 EA               [12]24673 	mov	a,r2
      008AD4 B5 05 11         [24]24674 	cjne	a,ar5,00217$
      008AD7 EB               [12]24675 	mov	a,r3
      008AD8 B5 06 0D         [24]24676 	cjne	a,ar6,00217$
      008ADB EC               [12]24677 	mov	a,r4
      008ADC B5 07 09         [24]24678 	cjne	a,ar7,00217$
      008ADF D0 07            [24]24679 	pop	ar7
      008AE1 D0 06            [24]24680 	pop	ar6
      008AE3 D0 05            [24]24681 	pop	ar5
      008AE5 02r8BrF5         [24]24682 	ljmp	00120$
      008AE8                      24683 00217$:
      008AE8 D0 07            [24]24684 	pop	ar7
      008AEA D0 06            [24]24685 	pop	ar6
      008AEC D0 05            [24]24686 	pop	ar5
                                  24687 ;	ff15\source\ff.c:5208: sect = clst2sect(fs, ld_clust(fs, dir));
      008AEE 90r02rC8         [24]24688 	mov	dptr,#_f_rename_fs_65536_428
      008AF1 E0               [24]24689 	movx	a,@dptr
      008AF2 FA               [12]24690 	mov	r2,a
      008AF3 A3               [24]24691 	inc	dptr
      008AF4 E0               [24]24692 	movx	a,@dptr
      008AF5 FB               [12]24693 	mov	r3,a
      008AF6 A3               [24]24694 	inc	dptr
      008AF7 E0               [24]24695 	movx	a,@dptr
      008AF8 FC               [12]24696 	mov	r4,a
      008AF9 90r00r85         [24]24697 	mov	dptr,#_ld_clust_PARM_2
      008AFC ED               [12]24698 	mov	a,r5
      008AFD F0               [24]24699 	movx	@dptr,a
      008AFE EE               [12]24700 	mov	a,r6
      008AFF A3               [24]24701 	inc	dptr
      008B00 F0               [24]24702 	movx	@dptr,a
      008B01 EF               [12]24703 	mov	a,r7
      008B02 A3               [24]24704 	inc	dptr
      008B03 F0               [24]24705 	movx	@dptr,a
      008B04 8A 82            [24]24706 	mov	dpl,r2
      008B06 8B 83            [24]24707 	mov	dph,r3
      008B08 8C F0            [24]24708 	mov	b,r4
      008B0A C0 04            [24]24709 	push	ar4
      008B0C C0 03            [24]24710 	push	ar3
      008B0E C0 02            [24]24711 	push	ar2
      008B10 12r28r70         [24]24712 	lcall	_ld_clust
      008B13 A9 82            [24]24713 	mov	r1,dpl
      008B15 AD 83            [24]24714 	mov	r5,dph
      008B17 AE F0            [24]24715 	mov	r6,b
      008B19 FF               [12]24716 	mov	r7,a
      008B1A D0 02            [24]24717 	pop	ar2
      008B1C D0 03            [24]24718 	pop	ar3
      008B1E D0 04            [24]24719 	pop	ar4
      008B20 90r00r29         [24]24720 	mov	dptr,#_clst2sect_PARM_2
      008B23 E9               [12]24721 	mov	a,r1
      008B24 F0               [24]24722 	movx	@dptr,a
      008B25 ED               [12]24723 	mov	a,r5
      008B26 A3               [24]24724 	inc	dptr
      008B27 F0               [24]24725 	movx	@dptr,a
      008B28 EE               [12]24726 	mov	a,r6
      008B29 A3               [24]24727 	inc	dptr
      008B2A F0               [24]24728 	movx	@dptr,a
      008B2B EF               [12]24729 	mov	a,r7
      008B2C A3               [24]24730 	inc	dptr
      008B2D F0               [24]24731 	movx	@dptr,a
      008B2E 8A 82            [24]24732 	mov	dpl,r2
      008B30 8B 83            [24]24733 	mov	dph,r3
      008B32 8C F0            [24]24734 	mov	b,r4
      008B34 12r08rDC         [24]24735 	lcall	_clst2sect
      008B37 AC 82            [24]24736 	mov	r4,dpl
      008B39 AD 83            [24]24737 	mov	r5,dph
      008B3B AE F0            [24]24738 	mov	r6,b
      008B3D FF               [12]24739 	mov	r7,a
                                  24740 ;	ff15\source\ff.c:5209: if (sect == 0) {
      008B3E EC               [12]24741 	mov	a,r4
      008B3F 4D               [12]24742 	orl	a,r5
      008B40 4E               [12]24743 	orl	a,r6
      008B41 4F               [12]24744 	orl	a,r7
      008B42 70 09            [24]24745 	jnz	00112$
                                  24746 ;	ff15\source\ff.c:5210: res = FR_INT_ERR;
      008B44 90r02rC7         [24]24747 	mov	dptr,#_f_rename_res_65536_428
      008B47 74 02            [12]24748 	mov	a,#0x02
      008B49 F0               [24]24749 	movx	@dptr,a
      008B4A 02r8BrF5         [24]24750 	ljmp	00120$
      008B4D                      24751 00112$:
                                  24752 ;	ff15\source\ff.c:5213: res = move_window(fs, sect);
      008B4D 90r02rC8         [24]24753 	mov	dptr,#_f_rename_fs_65536_428
      008B50 E0               [24]24754 	movx	a,@dptr
      008B51 F9               [12]24755 	mov	r1,a
      008B52 A3               [24]24756 	inc	dptr
      008B53 E0               [24]24757 	movx	a,@dptr
      008B54 FA               [12]24758 	mov	r2,a
      008B55 A3               [24]24759 	inc	dptr
      008B56 E0               [24]24760 	movx	a,@dptr
      008B57 FB               [12]24761 	mov	r3,a
      008B58 90r00r1D         [24]24762 	mov	dptr,#_move_window_PARM_2
      008B5B EC               [12]24763 	mov	a,r4
      008B5C F0               [24]24764 	movx	@dptr,a
      008B5D ED               [12]24765 	mov	a,r5
      008B5E A3               [24]24766 	inc	dptr
      008B5F F0               [24]24767 	movx	@dptr,a
      008B60 EE               [12]24768 	mov	a,r6
      008B61 A3               [24]24769 	inc	dptr
      008B62 F0               [24]24770 	movx	@dptr,a
      008B63 EF               [12]24771 	mov	a,r7
      008B64 A3               [24]24772 	inc	dptr
      008B65 F0               [24]24773 	movx	@dptr,a
      008B66 89 82            [24]24774 	mov	dpl,r1
      008B68 8A 83            [24]24775 	mov	dph,r2
      008B6A 8B F0            [24]24776 	mov	b,r3
      008B6C 12r05r18         [24]24777 	lcall	_move_window
      008B6F AF 82            [24]24778 	mov	r7,dpl
      008B71 90r02rC7         [24]24779 	mov	dptr,#_f_rename_res_65536_428
      008B74 EF               [12]24780 	mov	a,r7
      008B75 F0               [24]24781 	movx	@dptr,a
                                  24782 ;	ff15\source\ff.c:5214: dir = fs->win + SZDIRE * 1;	/* Ptr to .. entry */
      008B76 90r02rC8         [24]24783 	mov	dptr,#_f_rename_fs_65536_428
      008B79 E0               [24]24784 	movx	a,@dptr
      008B7A FC               [12]24785 	mov	r4,a
      008B7B A3               [24]24786 	inc	dptr
      008B7C E0               [24]24787 	movx	a,@dptr
      008B7D FD               [12]24788 	mov	r5,a
      008B7E A3               [24]24789 	inc	dptr
      008B7F E0               [24]24790 	movx	a,@dptr
      008B80 FE               [12]24791 	mov	r6,a
      008B81 74 50            [12]24792 	mov	a,#0x50
      008B83 2C               [12]24793 	add	a,r4
      008B84 F5*B0            [12]24794 	mov	_f_rename_sloc0_1_0,a
      008B86 E4               [12]24795 	clr	a
      008B87 3D               [12]24796 	addc	a,r5
      008B88 F5*B1            [12]24797 	mov	(_f_rename_sloc0_1_0 + 1),a
      008B8A 8E*B2            [24]24798 	mov	(_f_rename_sloc0_1_0 + 2),r6
                                  24799 ;	ff15\source\ff.c:5215: if (res == FR_OK && dir[1] == '.') {
      008B8C EF               [12]24800 	mov	a,r7
      008B8D 70 66            [24]24801 	jnz	00120$
      008B8F 74 51            [12]24802 	mov	a,#0x51
      008B91 2C               [12]24803 	add	a,r4
      008B92 F8               [12]24804 	mov	r0,a
      008B93 E4               [12]24805 	clr	a
      008B94 3D               [12]24806 	addc	a,r5
      008B95 FB               [12]24807 	mov	r3,a
      008B96 8E 07            [24]24808 	mov	ar7,r6
      008B98 88 82            [24]24809 	mov	dpl,r0
      008B9A 8B 83            [24]24810 	mov	dph,r3
      008B9C 8F F0            [24]24811 	mov	b,r7
      008B9E 12r00r00         [24]24812 	lcall	__gptrget
      008BA1 F8               [12]24813 	mov	r0,a
      008BA2 B8 2E 50         [24]24814 	cjne	r0,#0x2e,00120$
                                  24815 ;	ff15\source\ff.c:5216: st_clust(fs, dir, djn.obj.sclust);
      008BA5 90r02rFC         [24]24816 	mov	dptr,#(_f_rename_djn_65536_428 + 0x0007)
      008BA8 E0               [24]24817 	movx	a,@dptr
      008BA9 F8               [12]24818 	mov	r0,a
      008BAA A3               [24]24819 	inc	dptr
      008BAB E0               [24]24820 	movx	a,@dptr
      008BAC FA               [12]24821 	mov	r2,a
      008BAD A3               [24]24822 	inc	dptr
      008BAE E0               [24]24823 	movx	a,@dptr
      008BAF FB               [12]24824 	mov	r3,a
      008BB0 A3               [24]24825 	inc	dptr
      008BB1 E0               [24]24826 	movx	a,@dptr
      008BB2 FF               [12]24827 	mov	r7,a
      008BB3 90r00r8F         [24]24828 	mov	dptr,#_st_clust_PARM_2
      008BB6 E5*B0            [12]24829 	mov	a,_f_rename_sloc0_1_0
      008BB8 F0               [24]24830 	movx	@dptr,a
      008BB9 E5*B1            [12]24831 	mov	a,(_f_rename_sloc0_1_0 + 1)
      008BBB A3               [24]24832 	inc	dptr
      008BBC F0               [24]24833 	movx	@dptr,a
      008BBD E5*B2            [12]24834 	mov	a,(_f_rename_sloc0_1_0 + 2)
      008BBF A3               [24]24835 	inc	dptr
      008BC0 F0               [24]24836 	movx	@dptr,a
      008BC1 90r00r92         [24]24837 	mov	dptr,#_st_clust_PARM_3
      008BC4 E8               [12]24838 	mov	a,r0
      008BC5 F0               [24]24839 	movx	@dptr,a
      008BC6 EA               [12]24840 	mov	a,r2
      008BC7 A3               [24]24841 	inc	dptr
      008BC8 F0               [24]24842 	movx	@dptr,a
      008BC9 EB               [12]24843 	mov	a,r3
      008BCA A3               [24]24844 	inc	dptr
      008BCB F0               [24]24845 	movx	@dptr,a
      008BCC EF               [12]24846 	mov	a,r7
      008BCD A3               [24]24847 	inc	dptr
      008BCE F0               [24]24848 	movx	@dptr,a
      008BCF 8C 82            [24]24849 	mov	dpl,r4
      008BD1 8D 83            [24]24850 	mov	dph,r5
      008BD3 8E F0            [24]24851 	mov	b,r6
      008BD5 12r29r2E         [24]24852 	lcall	_st_clust
                                  24853 ;	ff15\source\ff.c:5217: fs->wflag = 1;
      008BD8 90r02rC8         [24]24854 	mov	dptr,#_f_rename_fs_65536_428
      008BDB E0               [24]24855 	movx	a,@dptr
      008BDC FD               [12]24856 	mov	r5,a
      008BDD A3               [24]24857 	inc	dptr
      008BDE E0               [24]24858 	movx	a,@dptr
      008BDF FE               [12]24859 	mov	r6,a
      008BE0 A3               [24]24860 	inc	dptr
      008BE1 E0               [24]24861 	movx	a,@dptr
      008BE2 FF               [12]24862 	mov	r7,a
      008BE3 74 04            [12]24863 	mov	a,#0x04
      008BE5 2D               [12]24864 	add	a,r5
      008BE6 FD               [12]24865 	mov	r5,a
      008BE7 E4               [12]24866 	clr	a
      008BE8 3E               [12]24867 	addc	a,r6
      008BE9 FE               [12]24868 	mov	r6,a
      008BEA 8D 82            [24]24869 	mov	dpl,r5
      008BEC 8E 83            [24]24870 	mov	dph,r6
      008BEE 8F F0            [24]24871 	mov	b,r7
      008BF0 74 01            [12]24872 	mov	a,#0x01
      008BF2 12r00r00         [24]24873 	lcall	__gptrput
      008BF5                      24874 00120$:
                                  24875 ;	ff15\source\ff.c:5224: if (res == FR_OK) {
      008BF5 90r02rC7         [24]24876 	mov	dptr,#_f_rename_res_65536_428
      008BF8 E0               [24]24877 	movx	a,@dptr
                                  24878 ;	ff15\source\ff.c:5225: res = dir_remove(&djo);		/* Remove old entry */
      008BF9 70 2C            [24]24879 	jnz	00128$
      008BFB 90r02rCB         [24]24880 	mov	dptr,#_f_rename_djo_65536_428
      008BFE F5 F0            [12]24881 	mov	b,a
      008C00 12r2Fr11         [24]24882 	lcall	_dir_remove
      008C03 AF 82            [24]24883 	mov	r7,dpl
      008C05 90r02rC7         [24]24884 	mov	dptr,#_f_rename_res_65536_428
      008C08 EF               [12]24885 	mov	a,r7
      008C09 F0               [24]24886 	movx	@dptr,a
                                  24887 ;	ff15\source\ff.c:5226: if (res == FR_OK) {
      008C0A EF               [12]24888 	mov	a,r7
      008C0B 70 1A            [24]24889 	jnz	00128$
                                  24890 ;	ff15\source\ff.c:5227: res = sync_fs(fs);
      008C0D 90r02rC8         [24]24891 	mov	dptr,#_f_rename_fs_65536_428
      008C10 E0               [24]24892 	movx	a,@dptr
      008C11 FD               [12]24893 	mov	r5,a
      008C12 A3               [24]24894 	inc	dptr
      008C13 E0               [24]24895 	movx	a,@dptr
      008C14 FE               [12]24896 	mov	r6,a
      008C15 A3               [24]24897 	inc	dptr
      008C16 E0               [24]24898 	movx	a,@dptr
      008C17 FF               [12]24899 	mov	r7,a
      008C18 8D 82            [24]24900 	mov	dpl,r5
      008C1A 8E 83            [24]24901 	mov	dph,r6
      008C1C 8F F0            [24]24902 	mov	b,r7
      008C1E 12r06r37         [24]24903 	lcall	_sync_fs
      008C21 E5 82            [12]24904 	mov	a,dpl
      008C23 90r02rC7         [24]24905 	mov	dptr,#_f_rename_res_65536_428
      008C26 F0               [24]24906 	movx	@dptr,a
      008C27                      24907 00128$:
                                  24908 ;	ff15\source\ff.c:5235: LEAVE_FF(fs, res);
      008C27 90r02rC7         [24]24909 	mov	dptr,#_f_rename_res_65536_428
      008C2A E0               [24]24910 	movx	a,@dptr
                                  24911 ;	ff15\source\ff.c:5236: }
      008C2B F5 82            [12]24912 	mov	dpl,a
      008C2D 22               [24]24913 	ret
                                  24914 	.area CSEG    (CODE)
                                  24915 	.area CONST   (CODE)
      000000                      24916 _DbcTbl:
      000000 81                   24917 	.db #0x81	; 129
      000001 9F                   24918 	.db #0x9f	; 159
      000002 E0                   24919 	.db #0xe0	; 224
      000003 FC                   24920 	.db #0xfc	; 252
      000004 40                   24921 	.db #0x40	; 64
      000005 7E                   24922 	.db #0x7e	; 126
      000006 80                   24923 	.db #0x80	; 128
      000007 FC                   24924 	.db #0xfc	; 252
      000008 00                   24925 	.db #0x00	; 0
      000009 00                   24926 	.db #0x00	; 0
                                  24927 	.area CONST   (CODE)
      00000A                      24928 ___str_0:
      00000A 2A 2B 2C 3A 3B 3C 3D 24929 	.ascii "*+,:;<=>[]|"
             3E 5B 5D 7C
      000015 22                   24930 	.db 0x22
      000016 3F                   24931 	.ascii "?"
      000017 7F                   24932 	.db 0x7f
      000018 00                   24933 	.db 0x00
                                  24934 	.area CSEG    (CODE)
                                  24935 	.area CONST   (CODE)
      000019                      24936 ___str_1:
      000019 46 41 54 33 32 20 20 24937 	.ascii "FAT32   "
             20
      000021 00                   24938 	.db 0x00
                                  24939 	.area CSEG    (CODE)
                                  24940 	.area XINIT   (CODE)
                                  24941 	.area CABS    (ABS,CODE)
